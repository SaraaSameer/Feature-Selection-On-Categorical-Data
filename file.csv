WebText,class
" 
CS414 Home Page



CS414: Systems Programming and Operating Systems

CS415 Practicum in Operating System

Kenneth P. Birman

CS414/415 News Group
Course Syllabus
Lecture Notes

Unix Filesystem Structure
Linking (Static and Dynamic)

Assignments

Homework 1
Homework 2
Homework 3
Homework 4
Homework 6

Assignment Solutions

Solution 1
Solution 2
Solution 4
Solution 5

Prelim 1 Solution

TAs

LiLi
     5162 Upson Hall
     Phone: 255-7421
     E-Mail: 
     lili@cs.cornell.edu
     Office Hours: Wednesday and Friday 3:30-5:00
Yi-Cheng Huang
     5151 Upson Hall
     Phone: 255-3042
     E-Mail: 
     ychuang@cs.cornell.edu
     Office Hours: Tuesday and Thursday 2:00-3:30
Mihai Budiu
     4132 Upson Hall
     Phone: 255-1179
     E-Mail: 
     budiu@cs.cornell.edu
     Office Hours: Wednesday 11:00-12:30 and Thursday 11:30-1:00




Last modified: Tue Nov 26 13:07:45 1996

 
",course
"


CS415 Home Page




CS414: Systems Programming and Operating Systems

CS415: Practicum in Operating Systems

Selections that display this symbol  correspond to postcript
documents. 

 
How to hand in phase 3 of HOCA






Course Information

 
Course Schedule (Last Changed: 9/14/95)
  
Groups 
 Handouts

 Handout 1 

 
GIF Format 
 
Postcript Format   

 
Penne ai Broccoli -- 9/4/95 

 
Questions and Answers (Last Changed: 10/23/95)

 The CHIP Computer System

 
Console Window Example
 
Using CHIP  
  Chip Console Tutorial  
 
Principles of Operation  
 
Configuration File

The HOCA Operating System


The HOCA Operating System Specifications  



This page is maintained by 
Lorenzo Alvisi  

",course
"CS-432 Home Page



CS-432


Database Systems and Information Retrieval


Department of Computer
Science,
Cornell University


Spring, 1996




Grades



Have a nice summer !!!


Introduction

This three credit course covers the fundamentals of database
systems and information retrieval. The course will be (roughly) two
thirds databases and one third information retrieval.

Topics to be covered in database systems
include the following: data modeling, entity-relationship model,
relational model, physical organization, indexing and hashing,
relational database design, database query languages, query
optimization, crash recovery, concurrency control, and transaction
processing.

The information retrieval part deals with how to find useful
information in large textual databases. This part of the course will
cover inverted file systems, the vector space model (the SMART
system), vector similarity, indexing, weighting, ranking, relevance
feedback, phrase generation, term relationships and thesaurus
construction, retrieval evaluation, and (if time permits) automatic
text structuring and summarization.



Link to Course Material
(class notes, homeworks, solutions, ...)
Class Times and Place
Tuesday, Thursday, 1:25-2:40pm (75 minutes), Thurston 205
Prerequisites
CS-211 (or CS-212) and CS-410. CS-314 is recommended.
Books

Database System Concepts by Korth and Silberschatz. McGraw
Hill, Second Edition, 1991, Required (see cover).
Fundamentals of Database Systems by Elmasri and
Navathe. Benjamin Cummings, Second Edition, 1994 (on reserve).
Principles of Database and Knowledge-Base Systems by
Ullman. Computer Science Press, 1988 (on reserve).
The information retrieval part of the course will use photocopied
material (from Salton's books and research papers).

Instructor Amit
Singhal, singhal@cs.cornell.edu, Upson
4142, 255-9211
Office hours: Tuesday 2:45-3:30pm, Thursday 3:30-4:30pm.
Teaching Assistants
 Sophia Georgiakaki, spg@cs.cornell.edu
 Office hours:Wednesday 2:00-4:00pm in Upson 343B, or by appointment (send mail).
 Marcos Aguilera, aguilera@cs.cornell.edu for
CS-433 only.
 Amith Yamasani, amith@cs.cornell.edu, Office
hours: only by appointment (send mail).


Grading

Exams: There will be two midterms, each worth 20% of
your final grade and a final exam, worth 35% of your
final grade.
Homeworks: There will be five homeworks in the semester,
each worth 5% of your final grade.

Homework Policies


You can work in groups of up to 3 people on a homework.
If you work in a group, clearly indicate the names of all the
group members on each homework. The entire group will receive the same
grade.
Homeworks will be available on the CS-432 home page on a Tuesday
and will be due in class on Thursday of the following week.
A solution set (along with a grading guide) will be available (of
course after the due date ) through
the course home page.
No late homeworks will be accepted.
Illegible homeworks are hard for your TAs to grade. Even though it
is not required, you are encouraged to type your homeworks. Use LaTeX
if possible, if you don't already know it, this will be a good
opportunity for you to learn LaTeX.


Homework Submission

Please attach a cover page to your homeworks with names of all the
group members (sorted alphabetically by the last name). Also write
""CS-432 Homework-X"" on the cover page.

For Example:
 Bill Clinton
 Bob Dole
 Ross Perot
 CS-432 Homework-2


Graded Homeworks

Graded homeworks will be returned in class, sorted
alphabetically by the last name of the first group member (from the
cover page). The grade will be listed on the first page
following the cover page.
If you do not want your homeworks returned in this way, please send
mail to the instructor.

Regrade Policy

All regrade requests should be submitted to the instructor in
writing within a week after you get back your graded homeworks.


Course Schedule


This is a tentative schedule for the course. All chapters refer
to Korth and Silberschatz.


Tuesday, January 23
Introduction, Entity-Relationship Model. Reading: Chapters 1 and 2

Thursday, January 25
Entity-Relationship Model, Relational Model. Reading: Chapters 2 and 3

Tuesday, January 30
Relational Algebra. Reading: Chapter 3
Homework 1 available
Thursday, February 1
Tuple Relational Calculus, Domain Relational Calculus. Reading: Chapter 3

Tuesday, February 6
SQL. Reading: Chapter 4

Thursday, February 8
Integrity Constraints, Relational database design. Reading:
Chapters 5 and 6
Homework 1 due
Tuesday, February 13
Relational database design. Reading: Chapter 6
Homework 2 available
Thursday, February 15
Relational database design. Reading: Chapter 6

Tuesday, February 20
File Structures. Reading: Chapter 7

Thursday, February 22
Indexing. Reading: Chapter 8
Homework 2 due
Tuesday, February 27
Query Optimization. Reading: Chapter 9

Thursday, February 29
Prelim 1
Tuesday, March 5
Query Optimization. Reading: Chapter 9
Homework 3 available
Thursday, March 7
Crash Recovery. Reading: Chapter 10

Tuesday, March 12
Crash Recovery, Concurrency Control. Reading: Chapters 10 and 11

Thursday, March 14
Concurrency Control. Reading: Chapter 11
Homework 3 due

!!! Spring Break !!!


Tuesday, March 26
Transaction Processing. Reading: Chapter 12
Homework 4 available
Thursday, March 28
Transaction Processing. Reading: Chapter 12

Tuesday, April 2
Introduction to Information Retrieval

Thursday, April 4
Vector Space Model
Homework 4 due
Tuesday, April 9
Term Weighting

Thursday, April 11
Prelim 2
Tuesday, April 16
Indexing
Homework 5 available
Thursday, April 18
Evaluation

Tuesday, April 23
Relevance Feedback

Thursday, April 25
Document Clustering
Homework 5 due
Tuesday, April 30
Advances in Information Retrieval

Thursday, May 2
Advances in Information Retrieval


",course
"

 CS401/501 Home Page 




 
CS401/501 Home Page



 Looking for ... 

 Admin handouts and information (incl.
	TA office hours)
     Lecture notes
 Assignment information
 Recitation information
 The Ethics, Professionalism, and Social
	Responsibility Page

or maybe ...

 Electronic Submission Procedure
 Group Performance Evaluations
 Web resources
 Quotes and other fun stuff.
 A collection of jokes has been started here.  Submit your own!
     Sumedh's office hours


Breaking News:

  No more recitations (after Nov 18).



Misc. Stuff

 Converting raw text to Postscript
    Some people have asked how to convert raw text to Postscript.  The
    simple way is to use the Unix program enscript.  Here are two suggested
    ways of doing this: 
     
    enscript -2r -G -pfile.ps file.txt
    enscript -G -pfile.ps file.txt 
    
    The first prints the files 2-up (good for source code).  The second
    prints them 1-up.  The -G gives a nice header.  This generate a
    Postscript file file.ps.  If you leave out the ""-pfile.ps"", it
    should just send the file to the printer.  



More to come!


Last modification: Wed Nov 27 17:12:46 EST 1996



",course
"CS 515




CS 515 - Practicum in Distributed Systems


or how to get your hands dirty doing some real work.

The course:
The practical aspects of distributed systems are studied 
through the design and implementation of a significant 
system.

CS 515 is the practicum for those students who also take 
CS 514, 
Practical Distributed Systems. The course offers
a variety in projects ranging from simple projects in internetworking
to complex projects in distributed systems. Students work in teams
of 3 or 4 persons and choose a project of their interest on which they
will work trough out the semester. Credits hours earned in this course range 
from 2 to 6, depending on the size and the complexity
of the project that is developed.

The course uses the Web for all offcial and informal interaction. On pages
linked to the CS 515 Information page you can find 
basic information, instructions, projects descriptions, design plans,
progress reports and final presentations.


Go to the CS 515
table of contents
page.



Comments to 
Werner Vogels 


",course
"


ECE 552 Home Page. 






 ECE 552 Intro to Computer Architecture  
 Fall 1996 
Professor Saluja  



NOTE: This page contains links to information for ECE 552, a course
 in the  Electrical and
Computer Engineering Department of the   University of Wisconsin -
Madison. Materials are intended solely  for the use of students
enrolled in this course for the Fall 96 semester. 
 Professor and TA:     Prof. Kewal Saluja 
 Mr. Dan Sorin 

      General
Information 
 
Course Outline  
Course Conduct

 A Midterm
Syllabus is now available.

  An old midterm
is now available. 


 Project specifications 
 are now available.

  
Homework Assignments  

 Fall 1996
   
 HW#1
Problem
Solution

 HW#2
Problem
Solution

 HW#3 (Part II solution is now available)
Problem
Solution to Part I
Solution to Part II

 HW#4 (Problem is now valid)
Problem
Solution



   MENTOR HELP  For the
project you need to use the Mentor Graphics Tools available on CAE
workstations.  Please refer to the course outline for the project due
dates.


The following literature on Mentor Tools will be of assistance to anyone who
may be having problems.  These manuals are available online through
bold_browser or may be checked out at CAE:   Getting
Started with Design Architect Training Workbook  pages 1-35 to
1-48 and 2-60 to 2-88  Getting Started with Quicksim II Training
Workbook   do the lab exersise  Additionally, these
documents contain references to other documents which may be of help.  



Click to send an email to    Professor: Kewal Saluja  TA: Dan Sorin   
 Surfing Links:  
UW Engineering Homepage CAE Announcements News group WiscINFO, The UW Gopher Site The UW
Engineering FTP server   
 This file last modified 9-September-96 9:00pm
CST.  
  Email questions and comments to  Dan Sorin.   
  
",course
"


CS 100A Homepage- Fall 1996








If you are running Netscape 2.0+ or IE 2.0+ click here


Links to individual pages (no frames)

Course info- general stuff, section info, Office hours...MOTW
Homeworks- downloads of homeworks
Handouts- info on class handouts
Syllabus- course syllabus
Exams- info on when exams will be
Requirements and Grading- criteria for grading and homework schedule
Other Links- C references on the web, other goofy stuff


Note: The preceding pages contain tables. If your browser is not able to handle tables then please email dwu@cs.cornell.edu

Page last updated 9/30/96


",course
"



CS212 Home Page



CS212
 Structure and Interpretation of Computer Programs
Computer Science Department
    Cornell University
    Fall 1996



 
Course Materials 
(Access to course materials requires a user-id and password which you can request by attempting to access the materials)

Course Info


Dylan Interpreter (New window)

Dylan Interpreter (This window)
                              
(Note, some Web browsers, including Netscape, do not correctly check for changed Java class files.  Thus when NOODLLE is changed you may see inconsistent behavior. Here's how to fix it.)

If you are working with a parter, link you directories with the PartnerJoin Utility.


Announcements

",course
"

Computer Science 212




Computer Science 212 Fall 1996


Course Information

August 29, 1996


CS212 is an introductory course covering a broad range of computer
science concepts and techniques, including data abstraction, recursion,
program correctness, generic functions, object oriented programming,
pattern matching, and languages and their evaluators.  We use
the Dylan language, an object oriented dynamic language developed
at Apple Computer, which is well suited for covering a broad range
of introductory computer science topics.  This is not a course
about the Dylan language, it just happens to be the ""notation""
that we have chosen for writing programs.  The major goals of
the course are to teach students how to think clearly about programs
and programming, and to provide a toolbox of modern programming
techniques that will be applicable in any language. 

What course to take: Students often wonder whether to take
CS211 or CS212.  CS211 focuses on programming skills in the object-oriented
language Java, whereas CS212 provides exposure to a broad range
of computational and programming problems, using a number of programming
paradigms including functional, object-oriented and imperative
programming techniques.  If you have a good CS background or good
formal skills (e.g., mathematics or physics) you should probably
take CS212. Transfers between CS211 and CS212 (in either direction)
are encouraged during the first two weeks.

Reaching Us 


The best way to reach the course staff is by posting questions
or comments using the CS212 Web site http://www.cs.cornell.edu/Info/Courses/Current/CS212/
 This site contains all course materials, and runs a CoNote server
which allows students and staff to post questions and answers
as ""annotations"" to the handouts and problem sets. 
In order to access the Web site you will need to request a user-id
and password for the CoNote system.  To do this, simply go to
the CS212 home page and follow the instructions.  Your user-id
and password will be created by Monday if you request them this
week.

You can also reach the course staff is by sending email to cs212@cs.cornell.edu
but this should not be used for asking questions about
problem sets or handouts (use the Web site).


Who We Are


Dan Huttenlocher, Professor, 4119 Upson 

Tobias Mayr, TA, 5148 Upson

James Hamblin, ugrad TA

Robert Szewczyk, ugrad TA

Justin Voskuhl, ugrad TA

Andras Ferencz, consultant

 Melissa Ho, consultant

When We Meet


Lectures are Tuesday and Thursday at 10:10, in B11 Kimball and
recitations are Monday and Wednesday at 1:25, 2:30 or 3:35.  Recitations
expand on the material in lecture, and provide more opportunity
to ask questions.


Consulting hours, for help with problem sets or other questions,
will be held from 7pm until midnight the two evenings before each
problem set is due (see schedule below).  Thus for problem sets
due on a Tuesday there will be consulting hours Sunday and Monday
evenings and for those due on a Thursday there will be consulting
hours Tuesday and Wednesday evenings. Consulting hours are in
the public Mac lab in B7 Upson.

Office hours are: James Hamblin TBA, Dan Huttenlocher T 1:00-2:00,
Tobias Mayr F 12:15-1:15, Robert Szewczyk TBA, Justin Voskuhl
TBA.

Course Materials


There is no textbook for this course.  There will be course handouts
and lecture notes, which will be available both in hardcopy and
on the course Web site.

The Dylan interpreter is available free on the course Web site,
and was developed by Justin Voskuhl for this class.  It is implemented
in Java, and thus will run under any Java capable Web browser.
 The best current browser (it changes almost weekly) is Netscape
3.0 for Windows95/NT, which has Borland's just-in-time Java compiler.
 There are also standalone versions available that you can download
onto your computer if you do not want to use the Web browser version.
 One word of warning: if you download a standalone Dylan onto
your machine, make sure that you are using the most recent
version by checking the web site.

Course Requirements


Students are responsible for all material in the assigned readings,
as well as that covered in lectures and in recitations.  There
will be six problem sets, two preliminary exams, and a final exam
(a schedule is given below).  Each problem set will be a combination
of written exercises and a programming assignment.  Course grades
will be based on a combination of the problem sets and exam scores.
 The problem sets will account for approximately one half of the
total grade. No late assignments will be accepted (we will
generally grade assignments immediately and return them the following
class period).

You should try to complete the programming assignments early,
as we will not accept late work. The best use of your time and
the machine's time is to think about the problems before sitting
down at the computer. [No matter how many times we say this,
it takes a long time to sink in; think about the problems before
sitting down at the computer.]

Policy on Joint Work


Much of the learning in this course comes from doing the programming
problems.  You may work jointly with one other person on the assignments
(no more than two people should work together).  However, if you
work together with someone, you must submit a single joint
assignment with both names on it.  Under no circumstances
may you hand in work done with (or by) someone else under your
own name.  If in doubt, credit the person(s) from whom you
got help.  You would be amazed at how easy it is to tell when
people work together on problem sets, so please don't make life
unpleasant for all of us by breaking these rules.

Public Lab Facilities


CIT and various colleges on campus provide public Macintosh and
PC facilities, you may use your own machine or the public ones.
 The CS department does not provide computer facilities for this
course. The course consultants will be available in the B7 Upson
Mac lab (see above).

Problem Set Due Dates and Exam Dates


All problem sets are due before 2am on the due date.  For example,
an assignment due Tuesday must be submitted electronically to
the course server by 2am on Tuesday (that is late Monday
night).  No late assignments are accepted, so make sure you submit
your final solution by the correct time and date.

[9/12] Assignment 1 

[9/24] Assignment 2 

[10/8] Assignment 3 

[10/17] Prelim 1, 7:30pm 

[10/29] Assignment 4 

[11/12] Assignment 5 

[11/19] Prelim 2, 7:30pm 

[12/5] Assignment 6 

[12/19] Final Exam -- see exam schedule 


Lecture Outline 

 [8/29] The Study of Computation, and an Introduction to Dylan


 [9/3] Function Abstraction and the Substitution Model of Evaluation


 [9/5] Procedures and Processes: Iteration, Recursion and Induction


 [9/10] Higher Order Procedures: Functional Arguments and Values


 [9/12] Analysis of Algorithms: Orders of Growth 

 [9/17] Data Abstraction: Structures, Contracts and Implementations


 [9/19] Hierarchical Data: Lists, Trees and the need for Quotation


 [9/24] Recursive List Processing and Reasoning about Lists 

 [9/26] Symbolic Differentiation: An Extended Example 

 [10/1] Generic Operations: Type Dispatching and Generic Functions


 [10/3] Generic Operations: Polynomial Arithmetic System 

 [10/8] Assignment and the Environment Model of Evaluation 

 [10/10] Assignment and Local State Variables 

 [10/17] Objects with State and Object Oriented Programming 

 [10/22] Object Oriented Programming and Inheritance 

 [10/24] Multimethods and More About Object Oriented Programming

 [10/29] Mutable Data: Stacks and Queues

 [10/31] Mutable Data: Heaps, Heapsort and Priority Queues

 [11/5] The Metacircular Evaluator: Dylan in Dylan

 [11/7] Variations on Expression Evaluation

 [11/12] Compilation and Optimization

 [11/14] Streams 

 [11/19] Infinite Streams

 [11/21] Nonlocal Exits: Catch and Throw

 [11/26] Garbage Collection and the Illusion of Infinite Memory

 [12/3] Topics in CS: Randomization and Quicksort 

 [12/5] Topics in CS: Computability 


",course
"


CS314 Home Page



 
Introduction to 
Digital Systems and 
Computer 
Organization
Thorsten von Eicken
Fall, 1997
Tue/Thu 1:25pm-2:40pm, Kimball B11

Topics include: representation of information; machine-assembly languages; 
processor organization; interrupts and I/O; memory hierarchies; combinatorial 
and sequential circuits; data path and control unit design; RTL; and 
microprogramming. 

HELP
If you have a problem related to a lecture, a homework set, or a project, the 
best way to get help is to add an annotation at the appropriate point in the 
course materials. This will allow you to get help not only from the course staff, but 
also from your class mates. Otherwise, you should send email to 
cs314@cs.cornell.edu or talk to one of the consultants. 

Course Materials

All course materials are on a separate web server (which you may want to 
bookmark) and uses CoNote to allow annotation of the Web documents. 
The course materials include lecture notes, section notes, homeworks, and 
project files.

Course Information (out of date)

For up-to-date information please check the course materials.
CoNote account requests posted before saturday 9pm have been 
processed. Please send me email if you encounter difficulties.
Read the course information for Homework 1. Follow the (hidden) 
instructions on how to sign up for the course materials. 
Sections start this monday (9/2)! 

CoNote registration list

list of who's made it through the registration process.


This page is maintained by Thorsten von Eicken


",course
"

 CS401/501 Home Page 




 
CS401/501 Home Page



 Looking for ... 

 Admin handouts and information (incl.
	TA office hours)
     Lecture notes
 Assignment information
 Recitation information
 The Ethics, Professionalism, and Social
	Responsibility Page

or maybe ...

 Electronic Submission Procedure
 Group Performance Evaluations
 Web resources
 Quotes and other fun stuff.
 A collection of jokes has been started here.  Submit your own!
     Sumedh's office hours


Breaking News:

 Recitation this Monday Nov. 18 will be held
    in the csuglab (3rd floor, Upson).  



Misc. Stuff

 Converting raw text to Postscript
    Some people have asked how to convert raw text to Postscript.  The
    simple way is to use the Unix program enscript.  Here are two suggested
    ways of doing this: 
     
    enscript -2r -G -pfile.ps file.txt
    enscript -G -pfile.ps file.txt 
    
    The first prints the files 2-up (good for source code).  The second
    prints them 1-up.  The -G gives a nice header.  This generate a
    Postscript file file.ps.  If you leave out the ""-pfile.ps"", it
    should just send the file to the printer.  



More to come!


Last modification: Wed Nov  6 09:26:11 EST 1996



",course
" 
CS414 Home Page



CS414: Systems Programming and Operating Systems

CS415 Practicum in Operating System

Kenneth P. Birman

CS414/415 News Group
Course Syllabus
Lecture Notes

Unix Filesystem Structure
Linking (Static and Dynamic)

Assignments

Assignment 1
Assignment 2
Assignment 3
Assignment 4

Assignment Solutions

Solution 1
Solution 2
Solution 4
Solution 5

Prelim 1 Solution

TAs

LiLi
     5162 Upson Hall
     Phone: 255-7421
     E-Mail: 
     lili@cs.cornell.edu
     Office Hours: Wednesday and Friday 3:30-5:00
Yi-Cheng Huang
     5151 Upson Hall
     Phone: 255-3042
     E-Mail: 
     ychuang@cs.cornell.edu
     Office Hours: Tuesday and Thursday 2:00-3:30
Mihai Budiu
     4132 Upson Hall
     Phone: 255-1179
     E-Mail: 
     budiu@cs.cornell.edu
     Office Hours: Wednesday 11:00-12:30 and Thursday 11:30-1:00




Last modified: Thu Nov 14 12:42:19 1996

 
",course
"
CS472 Home Page

CS472
Foundations of Artificial Intelligence 

Computer Science Department
    Cornell University
    Fall 1996

Welcome to CS472!



        Course Information for CS472 and CS473


        Course Materials for CS472 and CS473

Code of Academic Integrity (Please read!)


Announcements
(11/18, claire)
The due date for Program 3 has been moved to Monday, Nov 25 (at
the beginning of class. 
(11/14, scott)
Solution to Homework 4 is now 
here
(11/12, kevin)
The code on the PCs for programming assignment 3 is now all set.  Note
that a new file, ""rubix-operators.lsp"" needs to be loaded (all of the
functions are the same, but they have been rearranged slightly).  Also,
variables previously defined as constants were changed to parameters to 
appease the compiler (these vars are still bracketted by +'s).  Those of you
using the PC lab should use the files there.  Those using the cs machines
should use the files on Netscape.
(11/9, kevin)
Find-all-bindings.sbin can be found in at
/usr/u/ksaunder/find-all-bindings.sbin
for those with PC accounts.
(11/7, kevin)
For those of your using the PC lab, there is a serious gremlin in the code
for programming assignment 3.  You will still be able to look at the code and
get started on the assignment, but the planner will not successful run upon
completion of apply-operator-schemas.  Meanwhile, we'll be hunting.  Those
using the cs machines shouldn't have this problem.
(11/6, kevin)
Special Offer!  Limited Time Only!  Are you concerned about getting a zero
on the third program?  Worry no longer!  Just complete the assignment as
specified on the Course Materials page and a positive grade will result!
Guaranteed!  This offer available only through November 22.  Only one
assignment per group, please. 
(11/6 5:30 p.m., claire)
 There is a clarification to problem 4 in homework 4.  Unless otherwise specified, 
you can assume that either (1) the system adds the fact that JB is a 1973 Dodge Van
to the KB at query time, or (2) the fact that JB is a 1973 Dodge Van already exists in 
the KB. The postscript document has been modified to include this
clarification. 
(10/31, scott)
 The new homework is here!  The new
homework is here!  Its due 11/11.
(10/30, kevin)
 The solution to Programming Assignment 2 is now available on the Course
Materials page.
(10/28, claire)
 The solution to the midterm is available from the Homeworks and Solutions portion of 
the home page.  
(10/23, claire)
 Information about the CS473 status reports (due Tuesday 10/18) is now available in the
CS473 section of the home page.
(10/19, claire)
 Reminder: No class on Monday.
(10/16, scott)
 Solutions to Homework 3 are right 
here (in postscript).




Other CS course home pages

CS Department home page

",course
"

CS381/481 Fall 96 Home Page



CS381/481 Fall 1996
Automata and Computability Theory


Welcome to CS381/481!
Click to see:


Course Information | 
Lecture Notes |
Homework and Exams |
Study Guide

Announcements

9/1/96 Course notes available in hardcopy
9/1/96 Don't do the homework sets in the notes!
9/9/96 New TA office hours
9/12/96 Incorrect hw2 due date
9/23/96 Prelim 1
10/23/96 Prelim 2
10/31/96 Revised Homework 8
11/1/96 Homework 8 erratum
11/15/96 Change of room for Nikolay's office hours


Code of Academic Integrity (Please read!)

Other CS courses |
CS Department

",course
"


CS 537 - Advanced Database Systems



CS 537
Advanced Database Systems

        Time:                   8:40 -- 9:55 AM, Tuesday and Thursday
        Place:                  207 Upson
        Survey Proposal Due:    10/08 
        Project Proposal Due:   10/08
        Prelim Exam:            10/10 7:30-9p  UP 111/111A
        Paper Survey Due:       10/31 
        Mid-Project Evaluation: 11/26 
        Project Completion:     12/12 
        Final Exam:             12/19 9:00 AM, HO 206 

 Contents 

Lecture Schedule 
Prelims 

Sample
Questions & Answers (outside
firewall) 
Prelim Result Stats 

Project And Survey 

Project Info 
The PREDATOR
DBMS 
Current
Project/Survey Lists (outside
firewall) 
Reference Material List 

Handouts, Notes and Mail Archive 
Course Description 
Prerequisites 
TextBook 
C++ Information 
Grading 
Professor 
Teaching Assistants 



 Course
Description 
CS 537 is being offered for the first time in Fall 1996. It is intended
to give students a solid background in the design and development of database
management systems (DBMS's). Database systems are possibly the world's
largest pieces of software, and certainly among the most valuable pieces
of software. While a DBMS is in one sense a giant application program,
there are surprisingly many principles behind its development and use.
The database industry is growing and thriving, and the demand for knowledgeable
database engineers is much greater than the supply. The database research
community is also active, and there are always new problems to be addressed
because of the explosive amounts of data that people wish to access. This
course forms essential background for anyone who wants to (a) become a
systems engineer at a database development company, or (b) become an informed
user of database systems, or (c) become a database systems researcher,
or (d) develop systems in any domain that manipulate large amounts of data,
or (e) find out how a teller machine really works! 
A number of ""advanced fundamental"" DBMS concepts will be covered.
Although this is not intended to be an introductory course, it is a new
course and there may be students in the class with different backgrounds.
Consequently, the discussion of various topics will begin with a quick
review of basic material taught in CS 432. Click here
for a tentative list of topics to be covered. 
In terms of workload, here's what the course involves: 

There will be a midterm and a final examination. These will test a
breadth of basic concepts. 
Each student will have to do a survey paper on a specific advanced
topic. Here is a list of possible topics. The
purpose of this is to be aware that what is being taught in the course
is only a fraction of what is out there. This paper will be due three weeks
after the midterm, and should be complete with references. It will require
reading papers from journals and conference proceedings in the engineering
library. I will suggest initial references, and you will have to pursue
additional references from there. Click here for
information on reference material in the library. 
A development project involving C++ programming. Look here
for more information. 
There will be no written homework assignments. 
Students take turns writing lecture notes. Depending on enrollment,
this means each person will have to take notes once or twice in the semester.
Hopefully, this additional work will turn out to be useful around exam
time. Here are the details (in .ps).




 Development
Project 
The term project is an important part of the course, and will involve
a significant amount of C++ programming. You can choose whether you wish
to work alone or in teams of two. However, the two-person projects will
involve proportionally more work. The goal of the project is two-fold:
(a) to get hands-on experience at building some specific DBMS component,
(b) to get comfortable working with a large pre-existing code-base, and
modifying it in a modular manner. The second goal is as important as the
first one, because all database systems are huge software systems, and
rarely do you have the luxury of starting from scratch. This forces you
to write modular code, and also to understand the interaction between the
different system components when the inevitable bugs appear. 
There are two research DBMS prototypes that will be used in the projects.
One is MINIBASE, which is software associated with the textbook. It is
a simple single-user database system that provides all the components from
the SQL parser down to the disk manager. This should hopefully be available,
depending on our being able to compile and run it in our computing environment.
The important part of MINIBASE is the interface description of the various
system components. The actual code comes from class projects. Consequently,
projects using MINIBASE will involve writing a component (like the buffer
manager), based on a specification of its C++ interface. 
The other prototype is PREDATOR, which is a query processing engine
that I have been developing for my research. There are a number of possible
projects (some of which could lead to research topics) that can be built
on top of PREDATOR. The focus here is on the high-end functionality like
complex queries and new data types. 
If you are not familiar with C++, I recommend a MINIBASE project because
the amount of design needed is minimal. If you think you are interested
in database systems research, then you should do a PREDATOR project. If
you fall in neither category, then you should decide whether you want a
project at the lower-level DBMS (storage, access, buffer) areas, or the
higher-level (query processing, optimization) areas and choose between
MINIBASE (lower-level) and PREDATOR (higher-level). There are also some
general projects that involve neither system. If you have your own idea
on a suitable project, you should talk with me about it well in advance
of the project proposal date. 
Here is a tentative list of possible projects.
In all the projects, there will be certain steps that should be followed:


As part of the project proposal, you should (discuss with me) and submit
an ordered list of pieces of functionality that the project will produce.

There will be a mid-project review in which you meet with me to discuss
the progress that you have made towards completing the project. 
The code you write must follow the coding conventions of the particular
system that you are working on. A detailed coding conventions document
will be provided and should be followed closely. This is something that
I will be very picky on, and that will contribute to the grade you get
on the project. 
Project submission should include a demo and a reasonable amount of
test data. 

Some useful references are: 

Home page for PREDATOR. 
Home
page for MINIBASE. 



 Course
TextBook 
The primary text is a beta edition of a new book on database systems
: ""Database Management Systems"" by Raghu Ramakrishnan. This book
contains many more details than are in most other introductory database
books. It is also associated with free software for an instructional database
system ""MINIBASE"",
which we might use in class assignments. The textbook is available in the
campus store for $46. Here are other textbooks which could be used as references:


Korth & Silberschatz: Database System Concepts. McGraw-Hill, Second
Edition, 1991. 
This is the standard introductory database text, but lacks the detail to
be used in a graduate course. 
Michael Stonebraker: Readings in Database Systems. Morgan Kaufmann,
Second Edition, 1994.
This is a collection of relatively recent papers in the area, collected
and introduced by Stonebraker, who developed the Ingres, Postgres, and
Illustra database systems. Many of these are fundamental papers on core
areas. 
Elmasri & Navathe: Fundamentals of Database Systems. Benjamin-Cummings,
Second Edition, 1994. 
This is an alternative introductory database text. 
Gray & Reuter: Transaction Processing: Concepts and Techniques.
Morgan Kaufmann, 1993. 
This is the bible of transaction processing, 1000 pages long, and tells
you all there is to know (and a lot more) about transactions. It is a wonderful
reference to clear up confusing aspects of concurrency control, recovery,
transaction semantics, etc. 

Some reference material has also been placed in the library. Click here
for details. 

 C++
Information 
Here are some resources about C++ programming: 

C++
Tutorial 
CS
302's ""The C++ language"" (under construction) 
Debugging
with gdb 
GNU Make




 Grading
Policies 
The grades for the course will be assigned based on the following percentages:


Prelim (mid-term) exam : 25\% 
Final exam : 25\% 
Survey paper + Lecture Notes : 15\% 
Term project : 35\% 

The prelim exam will be on the evening of Oct 10th at 7:30pm in Upson
111/111A. It will be set to be comfortably finished in 1.5 hrs, but an
extra half hour will be provided for those who need it. Likewise for the
final exam. The final should be in exam period 16 (Thurs., Dec 19 9:00-11:30am),
but this again is tentative and needs to be confirmed. The final exam will
focus on material not tested in the mid-term, but the material covered
in the earlier part of the course may form background for some of the questions.


 Professor


Praveen Seshadri

        Office:        4108 Upson
        Phone:         255-1045
        E-Mail:        praveen@cs
        Office Hours:  10:00 -- 11:00 AM, Tuesday and Thursday

 Teaching
Assistants 

Wei
Tsang Ooi 
        Office:        5162 Upson Hall
        Phone:         5-7421
        E-Mail:        weitsang@cs
        Office Hours:  MWF 11:00 AM -- 12:00 noon 





",course
"
CS611:  Semantics of Programming Languages


 CS 611:  Semantics of Programming Languages
 Contents: 

Description, Texts, and Prerequisites
Handouts
Scribed Lecture Notes
Homework Assignments
Contact Information
Relevant Web Links


 Description: 


 Lectures:  MWF, 10:10-11:00am, Upson 211


Though CS611 is called ``Advanced Programming Languages'' in the course book,
it is better entitled ``Semantics of Programming Languages''.  The goal
of this course is not to conduct a broad survey of hi-tech programming
languages like C++, Java, or SML, nor to directly study implementation 
mechanisms for these languages (e.g., compressed dispatch tables for multiple
inheritance).  Rather, the goal of this course is to study 
the principles
of formal notation for describing computations, and tools for analyzing 
and proving properties of computations.  These concerns subsume the
study of specific programming languages or implementation mechanisms 
and hence lead to a deeper understanding of programming, specification,
logic, mathematics, and proof theory.  

For example, we will study notations for abstractly specifying how
programs compute (operational semantics), as well as
notations for describing what programs compute 
(denotational semantics).  In turn, the abstract but precise
realization of these notations will allow us to study techniques 
(induction, logical relations) for
formally proving interesting and relevant properties of 
programming languages (e.g., type safety or compiler correctness).  

Ideally, a student coming out of this course will have learned something
about how to make informal concepts and notation precise, and how to
manipulate the notation to demonstrate useful properties.  

 Textbooks: 


  Semantics of Programming Languages ,  Carl A. Gunter.
  ML for the Working Programmer (Second Edition) , Larry Paulson.

 Prerequisites: 

On the programming side, 
we assume experience with at least a Pascal- or C-like language.
Preferably, students will have some knowledge and experience working with
a functional language, such as Scheme, ML, or Haskell.  

On the theoretical side, we assume a basic proficiency in undergraduate
mathematics, logic, and computer science.  A basic knowledge of 
computability (e.g., turing machines, recursive functions) and
logic (e.g., predicate calculus), as well as some mathematical
maturity is required.  

This course is designed for PhD students in CS, Math,
OR, and EE.  It is not for MEng or undergraduate students.  If you are an
MEng or undergraduate student, you must talk to the instructor to find out if
the course is suitable for you.  


 Contact Information: 

 Newsgroup: cornell.class.cs611



 Instructor: Greg Morrisett, Upson 4105C, jgm@cs.cornell.edu, 5-3009
 Office Hours:  MF after class or by appointment.
 Admin. Assistant:  Linda Competillo, Upson 4115



 TA:  
     Úlfar 
     Erlingsson, Upson 4162, 
ulfar@cs.cornell.edu, 5-2219
 Office Hours: Tue 2-3pm, Thu 1:30-2:30pm


Relevant Web Links:

 Mark Leone's Resources for Programming Language Research.

Emacs mode for ML:

 ml.el
 comint.el (needed by ml.el)

The Fox project's on-line information about Standard ML.

Reference information for SML/NJ (postscript):

 User's guide
 Description of the base environment
 Description of the system environment
 Library documentation
 Documentation of available tools
 Reference indexDocumentation of available tools

A gentle introduction to SML,  Andrew Cumming .

MIT's info on SML/NJ.



",course
"
CS 631 Home Page


CS631
Multimedia Systems
Computer Science Department
 Cornell University
 Fall 1996 




 Course Staff
 Course Info
 Course Materials
 Students' Web Pages
 Project Web Pages
 Some useful links
 631 Newsgroup
 Anouncements 

 Newsgroup Access 
 Rivl bug







Comments or questions about this web page? Send mail to janosi@cs.cornell.edu.

",course
"
CS 631 Home Page


CS631
Multimedia Systems
Computer Science Department
 Cornell University
 Fall 1996 




 Final Project Presentation Schedule
 Course Staff
 Course Info
 Course Materials
 Students' Web Pages
 Project Web Pages
 Some useful links
 631 Newsgroup
 Anouncements 

 Newsgroup Access 
 Rivl bug







Comments or questions about this web page? Send mail to janosi@cs.cornell.edu.

",course
"

 681 The Design and Analysis of Algorithms: Homepage
 Instructor:  Ronitt Rubinfeld 
 TA: Evan Moran 
 Time: MWF 2:30-3:20 
 Location: Upson  111A 
 Text:  Kozen, The Design and Analysis of Algorithms, Springer-Verlag.


 Handouts:



Course announcement 
 


Syllabus
 

 Homeworks:



Homework 1 (last modified 9/5)
 


Homework 2 (last modified 9/11)
 


Homework 3 
 
(last modified 9/22)



Homework 4 
 
(last modified 9/27) 

***see addendum***
 
(last modified 10/2) 



Homework 5 
 
(last modified 10/11)

***see addendum***
 
(last modified 10/18) 



Homework 6 
 
***don't see addendum - see new copy of HW***



Homework 7 
 
(last modified 11/6)



Homework 8 
 
(last modified 11/13)



 Solutions:



Solution 1 
 


Solution 2 
 


Solution 3 
 


Solution 4 
 


Solution 5 
 


Solution 6 
 


Solution 7 
 



 Announcements:
There will be an exam on Thursday, Nov. 21 at 7 in
Upson 111/111A.  Talk to
me or Evan to reschedule if you cannot make it at that time.
You may refer to the Kozen text, an 8.5x11'' cheat sheet and your 
class notes/homeworks.


Rajeev Motwani's lecture notes on approximations
 

PET paper
 
",course
"
CS617 Home Page


Frontiers of Parallel Systems
Thorsten von Eicken
Fall, 1994


Location: 111 Upson, MWF 11:05am-12:00pm

Office hours: Mon 12:15pm-1:15pm, Thu 2pm-3pm


Course Description

Parallel machines are here to stay. This is underscored by the fact that 
all system manufacturers offer multiprocessors at the top of their product 
line. However, the debate on how the parallel machines of the future will 
look like has heated-up considerably in the past few months: the federal 
spending cuts are on their way to eradicate the performance-at-any-price 
massively parallel processor (MPP) manufacturers. Competitors having bet 
on glorified workstation farms are smiling: while their machines cannot 
offer the same level of performance or ease of use, their business has not 
suffered as much because these machines are more price competitive and can 
leverage the latest microprocessor developments more quickly. At the core 
of the technological debate lie a large number of systems issues: how to 
integrate a large number of off-the-shelf processors into a cost-effective 
system which can be easily programmed in high-level parallel programming 
languages and which can host a varied application workload.

This course is not about how to program parallel machines (although some 
of that will be the topic of the first few weeks). Parallel algorithms, 
languages and architectures have matured considerably over the last few 
years to the point where parallel machines are almost usable, if only the 
system support were adequate to allow general-purpose use. This course 
will focus on the architecture and operating system aspects required to 
support features taken for granted in sequential computing such as 
portable parallel programs, powerful debuggers, multi-user machine access, 
virtual memory, and fast I/O.

The first part of the course will examine two complete parallel systems: 
the CM-5 with Split-C and an ATM network of workstations with CC++. Using 
a ``vertical'' approach we will study the interactions between algorithmic 
models, languages, associated execution models, operating systems, 
architectures and hardware implementations, focussing on the support 
required for each of these layers. The second part of the course will 
focus on specific topics and slice ``horizontally'' across systems, 
selecting a few key issues for an analysis of the design alternatives. An 
in-depth study of the KSR and the DASH will provide some shared-memory 
contrast to the course.


Course Materials

Course format
Lecture Notes
Problem sets
Term projects



",course
"
CS314 Home Page


Introduction to Digital Systems and Computer Organization
Thorsten von Eicken
Fall, 1995
Tue/Thu 1:25pm-2:40pm, Kimball B11


Topics include: representation
of information; machine-assembly languages; processor organization;
interrupts and I/O; memory hierarchies; combinatorial and sequential
circuits; data path and control unit design; RTL; and
microprogramming.

HELP
If you have a problem related to a lecture, a homework set, or a
project, the best way to get help is to add an annotation at the
appropriate point in the course materials.  This will allow you to get
help not only from the course staff, but also from your class mates.
Otherwise, you should send email to cs314@cs.cornell.edu or talk to
one of the consultants.


Course Information
Course
Materials and Announcements

Announcements, lecture notes, lecture videos, and assignments.

This part uses CoNotes to allow annotation of the Web documents.
There's a small ""getting started""
document available in case you've never used CoNotes before.

C Tutorials Online

An Introduction to
C, by Marshall Brain. This is a great introduction for
people who know a procedural language like Pascal or Fortran.
Learn
C/C++ Today! is a guide to a lot of books, example programs
and online tutorials. Each reference is very well annotated.
The
Yahoo C/C++ Page. If you wish to surf the web in search of
more C material, this is the place to start!
The C Frequently Asked Questions page. Should be useful in
answering the common questions that come up while learning and using C.
Also contains a link to several online tutorials.
The C Newsgroup.


This page is maintained by Thorsten von
Eicken

",course
"
CS472 Home Page

CS472
Foundations of Artificial Intelligence 

Computer Science Department
    Cornell University
    Fall 1995

Welcome to CS472!



        Course Information for CS472 and CS473


        Course Materials for CS472 and CS473

Code of Academic Integrity (Please read!)


Announcements

(claire)
Final grades will be available sometime Saturday, Dec. 23.  I can send you your
grade via e-mail if you request me to do so via e-mail.
(claire)
Final exam is Dec 22, Upson B17, 9 a.m.  Alternate date is Dec 14, Upson B17, 9 a.m.




Other CS course home pages

CS Department home page

",course
"CS 401/501 Home Page

CS 401/501
Software Engineering: Technology and Techniques
Computer Science Department
    Cornell University
    Fall 1995

 Course Staff


       Samuel Weber, Professor,Upson 308,
       weber@cs.cornell.edu

Office Hours: MF 3-4, W 10-11
       


       Ioi Lam , TA, Upson 4162,ioi@cs.cornell.edu

Office Hours:T 3:30-4:30
       


       Vineet Buch, TA, Upson 4104,buch@cs.cornell.edu

Office Hours: Thursday, 10-11
       

Yaron Minsky, TA
       
Office Hours: None
       



 Course Materials 


       Course Overview (overview.ps)
 Course Handouts 
 Lecture Notes 

       Recitation Notes 

       Tcl/Tk On-Line Resources

       Assignment Grades and Remarks


 Other Stuff 

 
       C++ Frequently Asked Questions (From Borland)


samuel@cs.cornell.edu

Last modified Oct 21 21:26  

",course
"

 CS 314 Home Page 


 CS 314 Home Page 

  Brian Smith:  Your Tour Guide
  Course Information

 Homework Assignments 

  Assignment 1
  Assignment 2
  Assignment 3
  Assignment 4

 Projects 

  Project 1
  Project 2
  PS314 Spec

 Lectures 
  Table of Contents (postscript of slides are here)

  Introduction to Computer Systems
  CPU Organization 
  68000 Programming 
  Procedures, Recursion, and Stacks 
  Assemblers, Linkers, and Loaders 
  Interrupts and I/O 
  Introduction to Logic Design 



",course
"

 CS100 Home Page Spring 1996 



 CS100 Home Page 
 Spring 1996 


 Message of the Day 

Welcome to the CS100 Home Page.  Remember to check here frequently
for important information regarding the course. 

Prelim 3 is Tuesday, April 23.  The review session will be held on
Sunday, April 21 at 3:00pm in Baker 200.

 Course Information 

  Instructors 
  Teaching Assistants 
  Office Hours 
  Getting course materials from the
World Wide Web 
  CodeWarrior on your personal
Mac 

 Programs 

  Lecture Programs 
  Program 1 
  Program 2 
  Program 3 
  Program 4 
  Program 5 
  Program 6 

 Exams 

  Prelim 1 (Tues, February 13) 
  Prelim 2 (Thur, March 14) 
  Prelim 3 (Tues, April 23) 
  Final Exam (Mon, May 13) 


Last Updated: April 17, 1996




CS100 Spring 1996 
pierce@cs.cornell.edu


",course
" CS211 Spring 96 Home Page 

 CS211, Computers and Programming 


Computer Science Department  
Cornell University 
Spring 1996 


Question and problems will this page should be emailed to Jeff Foster,
 jfoster@cs.cornell.edu .
You may have trouble viewing the tables if you're using an early
version of NetScape.

 The CS211  contest . 
 The first prelim will be on Thursday, March 7.  We'll announce
times and places soon.   Topics covered in the
prelim.  
 The second prelim will be on Tuesday, April 23.  The rooms were
announced in lecture.   Topics covered in the
second prelim.  
 The final exam will be on Monday, May 13 at noon in Olin 155 (last
names G-Z) and Olin 165 (last names A-F).  The final exam will cover
everything in the course.   Additional topics
convered in the final.  
 Office hours 5/6-5/13 


DayWhenWhereWho
Monday11:00-12:30Upson 5148Dave
Tuesday11:30-1:00Upson 312Jeff
Wednesday11:00-12:30Upson 5148Dave
Thursday1:30-3:00Upson 310Hal
Friday1:30-3:00Upson 310Hal
Saturday3:00Upson B17Review session


 Consulting on 8/12: 3-6pm (Chris); 8-10pm (Jose).  Thanks to Chris
and Jose for taking the time out of their studying to do this!

 Course description 
 Course staff 
 CS211 lecture notes 
 CS211 handouts 
 CS211 code samples 
 Gofer 
 Enhance 
 Other Web Servers 

 Course description 

 COM S 211  Computers and Programming (also ENGRD 211) 

Fall, spring, summer.  3 credits.  Credit will not be granted for both
COM S 211 and 212.  Prerequisite: COM S 100 or equivalent programming
experience.


Intermediate programming in a high-level language and introduction to
computer science.  Topics include program development, proofs of
program correctness, program structure, recursion, abstract data
types, object-oriented programming, data structures, and analysis of
algorithms.  C++ is the principal programming language.



 Course staff and office hours 

 Instructor: 
Hal Perkins, 310 Upson, 255-2352. 
Office hours:  Thursday 1:30-3:00 and by appointment. 
Email  hal@cs.cornell.edu . 


 Teaching assistants: 


 Correction:  Office hours will be held in the TA's office 

 Jeff Foster, 312/314 Upson, 255-1099. 
Office hours: Tuesday 11:30-1:00. 
Email 
jfoster@cs.cornell.edu .  
 Alan Kwan, 4161 Upson, 255-6835. 
Email  kwan@cs.cornell.edu . 

 David Walker, 5148 Upson, 255-7416. 
Office hours:  Monday 11:30-1:00pm. 
Email  walker@cs.cornell.edu . 


 Sections: 


CS211 Spring 1996 Sections
DayTimeRoomInstructor
Tuesday2:30-3:20Upson 111AHal Perkins
Tuesday3:35-4:25Upson 111AHal Perkins
Wednesday12:20-1:10Hollister 372David Walker
Wednesday1:25-2:15Hollister 372David Walker
Wednesday3:35-4:25Upson 207David Walker
Thursday2:30-3:20Upson 211Jeff Foster
Friday3:35-4:25Hollister 372Jeff Foster


 Consulting: 

Consulting hours are in Upson 305.


The regular consulting schedule, in effect until the last day of
classes, is  

Sunday-Thursday, 1:25-6:00pm and 7:00-11:00pm 
Friday, 1:25-4:40pm 


CS211 Spring 1996 Consulting
SundayMondayTuesdayWednesdayThursdayFriday
1:25SteveEricKyleChrisJPKyle
2:30SteveEricKyleChrisJPVasantha
3:35JoseJoseKayJoseJPVasantha
4:40-6:00JoseJoseKayJoseJP(None)
7:00KayKyleSteveEricVasantha(None)
8:00KayKyleSteveEricVasantha(None)
9:00DanEricKayChrisDan(None)
10:00-11:00DanEricKayChrisDan(None)


 CS211 lecture notes 
 Lecture notes are available in three formats:
 Binhqx'ed MacBinary files that contain Microsoft Word files 
 Rich text format files (parseable by Microsoft Word and others) 
 Plain text 


The date listed next to the lecture is the date the lecture was
posted, not the date the lecture was given.

 Macintosh BINHQX 


1/23/96  Lectures 1&2:  Preliminaries, C++ 

2/2/96  Lectures 3&4:  Basic C++ Classes 


2/12/96  Lecture 5:  More Classes  

2/12/96  Lecture 6:  Pointers and Arrays 


2/12/96  Lecture 7:  Dynamic Storage Allocation
 

2/19/96  Lectures 8&9:  Classes with Dynamic
Data   

2/19/96  Lecture 10:  Fine Points of Classes
 

3/3/96  Lecture 11:  Introduction to OOP 


3/3/96  Lecture 12:  Derived Classes 


3/14/96  Lecture 13:  Program Correctness, Algorithmic Notation 


3/14/96  Lecture 14:  Triples and Assignments 


3/14/96  Lecture 15:  Assignments, Conditionals, and Loops 


3/14/96  Lecture 16:  Proving a Loop Correct 


4/4/96  Lecture 17:  Functional Programming 


4/4/96  Lecture 18:  Types in Gofer 


4/4/96  Lecture 19:  Currying, Map, and Filter 


4/4/96  Lecture 20:  Recursion vs. Iteration 


5/3/96  Lecture 21:  Application Architectures and Frameworks 


5/3/96  Lecture 22:  Linked Lists 


5/3/96  Lecture 23:  Algorithmic Analysis 


5/3/96  Lecture 24:  More Linked Lists 


5/3/96  Lecture 25:  Binary Trees 


5/3/96  Lecture 26:  Classes and Linked Data Structures 


5/3/96  Lecture 27:  Industrial Strength C++ 


5/3/96  Lecture 28:  Java 



BINHQX files can be processed by 
Stuffit Expander .  If you have a PC, see the http address for
Aladdin Systems, Inc. to find a Windows version.  (Thanks to Armando
Nunez for the tip.)

 Rich text 


1/23/96  Lectures 1&2:  Preliminaries, C++ 

2/2/96  Lectures 3&4:  Basic C++ Classes 


2/12/96  Lecture 5:  More Classes  

2/12/96  Lecture 6:  Pointers and Arrays  

2/12/96  Lecture 7:  Dynamic Storage Allocation
 

2/19/96  Lectures 8&9:  Classes with Dynamic
Data   

2/19/96  Lecture 10:  Fine Points of Classes
 

3/3/96  Lecture 11:  Introduction to OOP 


3/3/96  Lecture 12:  Derived Classes 


3/14/96  Lecture 13:  Program Correctness, Algorithmic Notation 


3/14/96  Lecture 14:  Triples and Assignments 


3/14/96  Lecture 15:  Assignments, Conditionals, and Loops 


3/14/96  Lecture 16:  Proving a Loop Correct 


4/4/96  Lecture 17:  Functional Programming 


4/4/96  Lecture 18:  Types in Gofer 


4/4/96  Lecture 19:  Currying, Map, and Filter 


4/4/96  Lecture 20:  Recursion vs. Iteration 


5/3/96  Lecture 21:  Application Architectures and Frameworks 


5/3/96  Lecture 22:  Linked Lists 


5/3/96  Lecture 23:  Algorithmic Analysis 


5/3/96  Lecture 24:  More Linked Lists 


5/3/96  Lecture 25:  Binary Trees 


5/3/96  Lecture 26:  Classes and Linked Data Structures 


5/3/96  Lecture 27:  Industrial Strength C++ 


5/3/96  Lecture 28:  Java 


 Plain text 


1/23/96  Lectures 1&2:  Preliminaries, C++ 

2/2/96  Lectures 3&4:  Basic C++ Classes 


2/12/96  Lecture 5:  More Classes  

2/12/96  Lecture 6:  Pointers and Arrays  

2/12/96  Lecture 7:  Dynamic Storage Allocation
 

2/19/96  Lectures 8&9:  Classes with Dynamic
Data   

2/19/96  Lecture 10:  Fine Points of Classes
 

3/3/96  Lecture 11:  Introduction to OOP 


3/3/96  Lecture 12:  Derived Classes 


3/14/96  Lecture 13:  Program Correctness, Algorithmic Notation 


3/14/96  Lecture 14:  Triples and Assignments 


3/14/96  Lecture 15:  Assignments, Conditionals, and Loops 


3/14/96  Lecture 16:  Proving a Loop Correct 


4/4/96  Lecture 17:  Functional Programming 


4/4/96  Lecture 18:  Types in Gofer 


4/4/96  Lecture 19:  Currying, Map, and Filter 


4/4/96  Lecture 20:  Recursion vs. Iteration 


5/3/96  Lecture 21:  Application Architectures and Frameworks 


5/3/96  Lecture 22:  Linked Lists 


5/3/96  Lecture 23:  Algorithmic Analysis 


5/3/96  Lecture 24:  More Linked Lists 


5/3/96  Lecture 25:  Binary Trees 


5/3/96  Lecture 26:  Classes and Linked Data Structures 


5/3/96  Lecture 27:  Industrial Strength C++ 


5/3/96  Lecture 28:  Java 



 CS211 handouts 

Handouts are in postscript format.  You can print them on almost any
laser printer.  If you want to view them, you need an application
like Ghostview.



1/23/96  Handout 1:  Preliminaries 


1/23/96  Handout 2:  Assignment 1 


1/26/96  Handout 3:
CodeWarrior Intro (section) 


2/23/96  Handout 4:  Assignment 2  

2/23/96  Handout 5:  Assignment 3  

3/4/96  Handout 6:  Assignment 4  


 Code samples 
2/6/96 Lecture 5:  Cell class 
2/6/96 Lecture 5:  Complex class 
2/6/96 Lecture 5:  Sets of characters 
2/19/96 Lectures 8&9:  Simple list class 
5/3/96 Lecture 26:  Dictionary class 

 Gofer 

There are there flavors of Gofer available.  MacGofer is available in
the public labs.

 MacGofer 
 PC Gofer 
 UNIX Gofer 


The FTP site for Gofer is


haskell.systemsz.cs.yale.edu/pub/haskell/gofer 

and the FTP site for MacGofer is

 ftp.dcs.gla.ac.uk 
.

Please  do not  ftp if you can help it.  If you find a piece of
Gofer you think is of general interest, let me know and I'll make it
available from here.  MacGofer sources and manuals are available on
the CS department ftp server

 ftp.cs.cornell.edu/pub/jfoster 
.


 Other Web Servers 


The final project for CS211 is on-line, available on the CS
department's ftp server.



 ftp.cs.cornell.edu/pub/cs211/Enhance_assignment.sea.bin 

 Other Web Servers 
 Computer Science Department
 
 CUINFO 
 Metrowerks (CodeWarrior) homepage 
 Aladdin Systems, Inc., makers of Stuffit Expander 

 CS211 home page / Comments or suggestions?  E-mail  Jeff Foster .  
",course
"CS212 S96 Home Page


CS 212

Structure and Interpretation
of Computer Programs

Computer Science Department
Cornell University
Spring 1996


 
Course Staff

Course Info


 
Course Materials
Announcements

1/23/96 Emacs and MacMarlais demos
2/02/96 Section Room Change
3/07/96 Prelim Time and Place
3/11/96 How to Make the Graders 
Happy
4/07/96 Bug fix in PS #6
4/16/96 General Exam Announcements
4/29/96 Extension of due date, PS6



Last Modified: 4/07/96 16:10 by JEH

",course
"
CS512:  Advanced Language Implementation


 CS 512:  Advanced Language Implementation 
 Contents 

Description
Handouts
Administrivia
Web Links


 Description: 

Modern programming languages, such as SML, Java, Haskell, and Dylan,
provide high-level features such as:

 objects and closures,
 polymorphism, abstract data types, and classes,
 garbage collection,
 exceptions and continuations,
 threads and synchronization constructs.
 
This class will survey modern techniques for efficient implementation
of these features.  Our focus will be on the implementation of
modern functional languages, but we will make connections
to other kinds of languages, notably object-oriented.  


Handouts:
Handouts are now on a separate page.


 Administrivia: 

 Instructor:  Greg Morrisett
 Office: Upson 4105C
 Email: jgm@cs.cornell.edu
 Phone: 5-3009
 Admin. Assistant:  Linda Competillo, Upson 4115
 Office Hours:  MWF, 3-4pm or send email for an appointment.



 TA:  Evan Moran
 Office:  Upson 4144
 Email: evan@cs.cornell.edu
 Phone: 5-1159
 Office Hours: Tuesday & Thursday, 3-4pm


Web Links:

 Mark Leone's Resources for Programming Language Research.

The Fox project's on-line information about Standard ML.

Reference information for SML/NJ (postscript):

 User's guide
 Description of the base environment
 Description of the system environment
 Library documentation
 Documentation of available tools
 Reference indexDocumentation of available tools

A gentle introduction to SML,  Andrew Cumming .

MIT's info on SML/NJ.



",course
"
CS514:  Practical Distributed Systems


Practical Distributed Systems (CS514)
Registration in CS514 is necessary for students taking

CS515.
General Information



Course Overview and Logistics.


Readings.

Homeworks



Homework 1
:  Due - 2/7, 8:00am 


Homework 2
:  Due - 2/21, 8:00am

(postscript)


Homework 3
:  Due - 4/3, 8:00am

Examinations



Midterm Examination
:  Due - 3/6, 8:00am

(postscript)


Final Examination
:  Due - 5/3, 8:00am

(postscript)

Annotated Bibliographies



Selected annotated bibliographies prepared by class


",course
"
CS516 Home Page

High-Performance Computer Systems
Thorsten von Eicken
Spring, 1996


Projects
Project reports
Project proposals
Initial project ideas
Course Materials

Homework 1

Homework 2

Please check out the CUCS SP-2 page
before starting to use Split-C on the machine.
You might also check out a sample program.
Homework 3

Homework 4

cs516-01 intro

cs516-02 now case

cs516-03 technology

cs516-04 caches

cs516-05 mpp nets

cs516-06 sp2

cs516-07 split-c

You can find more information on Split-C in the paper
``Parallel Programming
in Split-C''.
cs516-08 em3d

cs516-09 sorting

cs516-10 sp2am

cs516-11 msgpass

cs516-12 mpi

cs516-13 cachecoh

cs516-14 locks

cs516-15 threads

cs516-16 atm

cs516-17 u-net

cs516-2%

cs516-20 r4000

cs516-21 scoreboard

cs516-22 tomasulo

cs516-23 br pred

cs516-24 superscalar

cs516-25 io buses

cs516-26 pentium



Maintained by Thorsten von Eicken

",course
"
CS 664:  Machine Vision


 CS 664:  Machine Vision 
Course Staff:
Instructor: Ramin Zabih
Teaching Assistant: Justin Miller
Class Time and Place
 MWF, 3:35-4:35, Phillips 219
Project Suggestions

Problem Sets
 Problem Set 1
 Problem Set 2
Course Class Notes
 How to Scribe
 Week 1
 29 January - Regularization
 31 January - Simulated Annealing
 5 February - Computing Motion via Regularization
 7 February - Calculus of Variations
 12 February - Maximum Likelihood Estimation
 14 February - Markov Random Fields
 19 February - Snakes
 21 February - Stereo and Motion
 26 February - Introduction to Correlation
 28 February - Mestimation
 4 March - Non-parametric Methods
 6 March - Guest Lecture
 6 March - Non-parametric Transforms (Cont.)
 13 March - Correlation and Census Transform 
 18 March - No lecture(Cont.)
 27 March - Stereo Geometry (Cont.)
 29 April - 2D Geometrical Transforms
 1 April - Motion Segmentation
 8 April - Tracking
 10 April - Motion Tracking (Cont.)
 15 April - Edge Detection
 17 April - Continuation of Model Based Vision
 21 April - Hausdorff Distance
 23 April - Guest Lecture - Eigenhausdorff.
 30 April - Face Recognition

Section Notes
 The Optical Flow Constraint Equation
Other Sources
 Computer Vision Home Page
 History of Object Recognition
",course
"
CS674 Home Page

CS674
Introduction to Natural Language Understanding

Computer Science Department
    Cornell University
    Spring 1996

Welcome to CS674!



        Course Information for CS674


        Course Materials for CS674

Code of Academic Integrity (Please read!)


Announcements

Here is a list of resources available in
~cs674/project:

brill: directory for the Brill part of speech tagger
brown: directory for the Brown corpus (part-of-speech tagged)
muc4: directory for a small corpus annotated with
part-of-speech information (text is from the MUC4 corpus)
xwn: executable for WordNet
(be sure to set the environment variable WNSEARCHDIR to 
~nlp/Archive/wordnet/dict before you run xwn)
Finally, this site contains a description of
the contents of the Penn Treebank II
collection of annotated text. We have this here at Cornell. You can
use any part of it that you'd like for your projects. (Talk to Francis
about how to access it.)  

Other useful information for the project:

Database of  recent papers in Computational
Linguistics and NLP. 
 CMU's
AI Repository contains has pointers to code for various NLP system components.

Presentation Schedule
What to Turn in for the Project




Other CS course home pages

CS Department home page

",course
"

CS99 Course Home Page






 
CS 99 










[Info]
[Syllabus]
[Labs]
[Links]







Announcements




Room Update: Due to unforseen circumstances, we are still unable
to use Upson 215 for class.  Therefore, here are the following room 
assignments for Tuesday 7/9 and Wednesday 7/10:

Section #1: 10:00 - 11:00am in Philips 203
Section #2: 11:30 - 12:30am in Upson 211

Thursday's class (7/11) will meet in the MacLab, as usual.
Prelim #1: The first in-class prelim will be on Wednesday, 
7/10.
It is an in-class, closed book exam, that will cover all course material
covered through the first 4 lab assignments.
Labs #3 and Lab #4 are both due on Tuesday, (7/9).  
You do not need a computer to do Lab #4.



",course
"
CS 681  Fall 1995
CS 681 Fall 1995
Professor:  Monika Rauch Henzinger

Email: mhr@cs.cornell.edu





 Course Information




Homeworks:  1
 2
 3
 4
 5
 6





Solutions:  1
 2
 3
 4
 5





Lectures: 

 Lecture 1: Graph Exploration


 Lecture 2: Greedy Algorithms


 Lecture 3: Matroids


 Lecture 4: Matroids


 Lecture 5: Dijkstra's Algorithm


 Lecture 6: Bellman-Ford's Algorithm


 Lecture 7: Matrix Closure


 Lecture 8: 
Binomial Heaps


 Lecture 9: 
Binomial Heaps


 Lecture 10: 
Fibonacci Heaps


 Lecture 11: Treaps


 Lecture 12: Randomized
Search Trees


 Lecture 13: 
Union-Find


 Lecture 14: 
Union-Find


 Lecture 15: 
Union-Find


 Lecture 16: 
MaxFlow


 Lecture 17: 
MaxFlow MinCut Theorem


 Lecture 18: 
MaxFlow: Edmonds-Karp Algorithms


 Lecture 19: 
MaxFlow: Dinitz'Algorithm


 Lecture 20: 
MaxFlow: Preflow Push


 Lecture 21: 
MaxFlow: Preflow Push


 Lecture 22: 
MaxFlow: Dynamic Tree Implementations


",course
"
CS222:  Introduction to Scientific Computation



    CS222:  Introduction to Scientific Computation
Summer 1996

 Class Information
 Syllabus
 Source Code
 Handouts
 Problem Sets


An introduction to elementary numerical analysis and scientific
computation.  Topics include interpolation, quadrature, linear and
nonlinear equation solving, least-squares fitting, and ordinary
differential equations.  The Matlab computing environment is used.
Vectorization, efficiency, reliability, and stability are stressed.


Class Information
Staff

 
         Nikos Pitsianis, instructor 
       Office: 5159 Upson Hall 
nikos@cs.cornell.edu 
       Office Hours: M and W 2:30-3:30 and any other time by appointment.

   Ozan Hafizogullari, teaching assistant 
       Office: 4144 Upson Hall 
ozan@cs.cornell.edu 
       Office Hours: T and Th 4:00-5:00 and any other time by appointment.

Lectures
Class meets every day, M-F 1:00-2:15 in 205 Upson Hall.

Course Administration
Laurie Buck, 303 Upson, 255-3534. 
All the questions concerning grade recording, accounts should be addressed
to the course administrator.

Prerequisites
CS 100 and pre/corequisite of Math 221 or Math 293.

Course Materials
Text: Introduction to Scientific Computing:  A Matrix-Vector Approach
Using Matlab, by Charles Van Loan. It will be distributed in class. 
Software: MATLAB. You can purchase Student Matlab, for either
the MacIntosh or the PC version, though you do not have to.

Computer Labs
This course has been designated to use the three computer labs: 
B7 Upson, B8 Sibley, and G83 Martha Van Rensselaer.

Problem Sets

There will be 6 assignments which will be handed out in lecture or
from this page.  Extras will be available in rack outside Upson
303. Assignments will be collected in class.  All the computing
problems will be done in MATLAB. Return of graded work will be
handled in class.

An assignment is due at the beginning of the class on the due
date.  Late assignments won't be accepted for credit. The worst grade
from the six assignments will be ignored for the final grade.

Each assignment can be done alone or with at most one partner.  Print
your name (one copy with both names if working in pairs) on the first
page and include your student ID. No change or addition of partner
names after an assignment has been handed in.

Exams
There will be a midterm and a final exam. Days and times are listed below.

Grading
Your final total score will be computed as follows: 
Best 5 assignments 40%, Midterm 30%, Final 30%. Your final grade will be
assigned according to your relative ranking in the class based on
your final total scores.

Syllabus-Calendar


 June 24, M  Introduction		 A 1 out 
 June 25, T  Programming in MATLAB	 
 June 26, W  Errors			 
 June 27, T  Floating Point Numbers	 Registration Deadline
 June 28, F  Polynomial Interpolation 
 July 1, M  Vandermonde/Newton	A 1 due, 2 out
 July 2, T  Piecewise Interpolation	 
 July 3, W  Linear/Cubic Hermite	 
 July 4, T   No Class 
 July 5, F  Cubic Splines		 Add Course Deadline 
 July 8, M  Numerical Integration	 A 2 due, 3 out 
 July 9, T  Newton-Cotes		 
 July 10, W  Composite Rules  Change Credit/Grade Deadline
 July 11, T  Adaptive Quadrature	 
 July 12, F  Review	     A 3 due  Drop Course Deadline
 July 15, M Midterm Exam, at the classroom	 A 4 out 
 July 16, T  Matrices and Operations  
 July 17, W  Linear Systems	and LU	 
 July 18, T  Least Squares		 
 July 19, F  QR and Givens		 
 July 22, M  Cholesky		 A 4 due, 5 out 
 July 23, T  Finding Roots		 
 July 24, W  Minimize Function of One Variable	 
 July 25, T  Minimize Multivariate Functions 
 July 26, F  Solve Non-Linear Systems	 
 July 29, M  Initial Value Problems	 A 5 due, 6 out 
 July 30, T  Euler /Backward Euler	 
 July 31, W  Runge-Kutta Methods 	 
 Aug. 1, T  Adam Methods		 A 6 due 
 Aug. 2, F  Review			 
 Aug. 5, M   No Class   
 Aug. 6, T  Final Exam  10:30am at the classroom 


Source Code Examples from 
Introduction to Scientific Computing

At the Mac labs B-7 Upson, B-8 Sibley and G-83 Martha van Rennselaer
Hall, the source code is located at the folders:
/Applications/MATLAB 4.2c.1/CS 222/Chapter.[1-9]

If you plan to work on your own stand alone computer or at a lab other
than the assigned ones, here is the source code for the examples:


 
     For Mac (125KB SCMV.sit.hqx file).
 
     For other systems (MS-DOS or Unix 43KB SCMV.tar.gz).
     You uncompress and untar with the unix command:
 zcat SCMV.tar.gz | tar xfv - 
     It is highly recommended you get and use zcat.
 Or just browse through an 
     
     FTP session.


You need a postscript file viewer installed at your computer in order 
to see the files below.

 Handouts

 >> grades(randperm(length(grades))) 

ans = 30    45    56    31    55    39    48    50    38    49    53    43
      43    55    53    56    62    61    58    49    58    44    41    50
      47    52    39    49    49    41    58    57

      
 Problem Sets

 
	          Assignment 1.
           
	          Assignment 2.
           Assignment 4:

		P5.1.5, P5.2.2, P5.2.7, P6.1.3, P6.3.1 and P6.3.3.
           
	          Assignment 5.
      


",course
"
 CS414 Summer 96 Home Page 




 
CS414 Systems Programming and Operating Systems - Summer'96
 
 Prereq.: CS314 or  permission of instructor 
 Instructor:  

Induprakas Kodukula  <prakas@CS.Cornell.Edu>
 Teaching Assistant: Nawaaz Ahmed 
<nawaaz@CS.Cornell.Edu>

 
[
MOTD]
[
MOTD Archive]

 Subject Description

 Prerequsites
 Course Outline
 Textbooks

 Course Schedule
 Quizzes & Grading
 Policy Statement on Collaboration
 Office Hours
 Course Material
 Send Comments


1 Subject Description 
 CS414 Systems Programming and Operating Systems An
introduction to the logical design of systems programs, with emphasis
on multiprogrammed operating systems.  Topics include process
synchronization, deadlock, memory management, input-output methods,
information sharing, protection and security, and file systems.  The
impact of network and distributed computing environments on operating
systems is also discussed. This is a fast-paced subject requiring
constant attention.
1.1 Prerequsites

Complete familiarity with the material of CS314 is assumed. In
particular, a knowledge of computer architecture, assembly programming
language and program structure is required. I'll cover some of the
introductory material in class as required, but the purpose of that
will be to remind the audience of the material.

1.2 Course Outline

The course will be organized roughly as follows. I say roughly,
because depending on the feedback from the class, I may change the
order or the content of particular sections.

 We'll start off with an overview of concurrency issues. We'll
discuss synchronization issues - in particular, ensuring mutual
exclusion, deadlock detections and prevention algorithms. We'll
discuss multiprocessor issues as well. Next, we'll go on to memory
management. Here we'll discuss virtual memory and various methods used
to implement virtual memory, such as paging and segmentation. Next,
we'll cover file systems. Finally, we'll look at evolution of the
traditional operating systems and look at micro-kernels. If time
permits, we'll have a few lectures on advanced topics such as multi
threading and serverless file systems.

1.3 Textbooks

The principal text book for the class is the Operating System Concepts
book by Abraham Silberschatz and Peter Galvin. I'll also distribute
class notes which will cover the material completely. The class notes
will also be available on the world wide web from the class home page
at the end of each class.

2 Course Schedule   We will meet Monday
thru Thursday from 10:00AM-11:15AM during the weeks of 7/8 -
8/16. There will be two in-class quizzes. The first will be on 7/18
and the second will be on 8/1. The final will be on 8/16. In addition,
there will be weekly assignments for the first 5 weeks of class. These
will be handed out on Thursday and will be due the following Thursday
at the start of the class.  
3 Quizzes & Grading

Each of the homeworks will carry a weightage of 6% for a combined
weightage of 30%. The final will be worth 40% and there will be two
midterms worth 15% each. There will also be 4 surprise quizzes to
determine the understanding of the course material by the class.

4 Policy Statement on Collaboration

At most 3 people can form a group and collaborate on each
homework. Each such group will need to submit only one copy of the
homework. The quizzes and the final will be closed book and closed
notes.

5 Office Hours

 Induprakas Kodukula: Monday 1:30-3:00, ETC 710
 Nawaaz Ahmed: Tuesday, Wednesday, Thursday 1:30-3:00 Upson 5162


6 Course Material


7 Send Comments 



Maintained by  Induprakas
Kodukula 


",course
"
cs611
CS 611: Advanced Programming Languages
Fall 1995
MWF 10:10-11:00, Upson 211.
Instructor: 

Tom Henzinger

Upson 4105C, 255-3009, tah@cs.cornell.edu.
Office hours: after class, and by appointment.

Teaching assistant: Neal Glew

Upson 5162, 255-7421, glew@cs.cornell.edu.
Office hours: Tu 9:00-10:00, Th 2:30-3:30, and by appointment.

Handouts



Handout 0 
(September 1): Course Information


Handout 1 
(September 13): Getting Started with ML


Handout 2 
(October 2): Meta-Lambda

Homeworks



Homework 0 
(due September 13)
[
solutions]


Homework 1 
(due September 22)
[
solutions]


Homework 2 
(due October 2)
[
solutions]


Homework 3 
(due October 16)
[
solutions]


Homework 4 
(due November 10)
[
solutions]

Homeworks 5-6: Gries


Homework 7 
(due November 20)
[
solutions]


Homework 8 
(due December 1)
[
solutions]


Homework 9 
(due December 8)
[
solutions]

Raw Notes



Raw notes 0
(September 1)


Raw notes 1
(September 4,6)


Raw notes 2
(September 8)


Raw notes 3
(September 11)


Raw notes 4
(September 13)


Raw notes 5
(September 20,22)


Raw notes 6
(September 25)


Raw notes 7
(September 27,29)


Raw notes 8
(October 2)


Raw notes 9
(October 4)


Raw notes 10
(October 6)


Raw notes 11
(October 11)


Raw notes 12
(October 13)


Raw notes 13
(October 16)


Raw notes 14
(October 20)


Raw notes 15
(November 8,10)


Raw notes 16
(November 13,15)


Raw notes 17
(November 17)


Raw notes 18
(November 20,22)


Raw notes 19
(November 27,29)


Raw notes 20
(December 1,4)


Raw notes 21
(December 6)

Scribe Notes



Lecture 0
(September 1)


Lecture 1
(September 4)


Lecture 2
(September 6)


Lecture 3
(September 8)


Lecture 4
(September 11)


Lecture 5
(September 13)

Lecture 6: Introduction to ML


Lecture 7
(September 18)


Lecture 8
(September 20)


Lecture 9
(September 22)


Lecture 10
(September 25)


Lecture 11
(September 27)


Lecture 12
(September 29)


Lecture 13
(October 2)


Lecture 14
(October 4)


Lecture 15
(October 6)

Lecture 16
(October 11)


Lecture 17
(October 13)


Lecture 18
(October 16)


Midterm
(October 18)
[
solutions]


Lecture 19
(October 20)


Lecture 20
(October 23)

Lectures 21-26: Gries


Lecture 27
(November 8)


Lecture 28
(November 10)


Lecture 29
(November 13)


Lecture 30
(November 15)


Lecture 31
(November 17)


Lecture 32
(November 20)


Lecture 33
(November 22)

Lecture 34
(November 27)


Lecture 35
(November 29)


Lecture 36
(December 1)


Lecture 37
(December 4)


Lecture 38
(December 6)

Lecture 39
(December 8)

",course
"
CS 611 Fall 1994

 Advanced Programming Languages - Fall 1994 


 Faculty :
  Prof. Robert Constable  , 
 rc@cs, 4147 Upson.  
 Office Hours : Monday 4.00-5.00 .



 Teaching Assistant :
 S Ravi Kumar, ravi@cs, 4138 Upson.  
 Office Hours : Thurs 2.00-4.00 .





 Fall 94 Notes 
 Fall 94 Assignments 
 Fall 93 Notes 
 Fall 92 Notes 
  Fall 91 Notes  
 Nuprl
 Classic ML  

 
Comments, Questions, Suggestions on CS611 Web page? Please e-mail pavel@cs.cornell.edu


",course
"


CS 336: Analysis of Programs


CS 336: Analysis of Programs
Fall 1996  |  Instructor: Vicki L. Almstrum  | TA: Linyuan Yang



 Syllabus
 Announcements
 Homework assignments
 Handouts
 Some
	interesting tutorials
 News (utexas.class.cs336a)
 Instructor Almstrum's 
	homepage





  Last updated 8/29/96
  Page prepared by Vicki L. Almstrum.  Any suggestions, comments welcome.

  Click to send e-mail to 
  almstrum@cs.utexas.edu or 
  linyuan@cs.utexas.edu

Department of Computer Sciences
  at  UT Austin 


",course
"

CS 395T and PHL 391


CS 395T and PHL 391, Spring 1996, Foundations of
Mathematics, TT 2:00-3:30, Taylor 3.144

 Course blurb: There are many approaches to formal reasoning.  The
objective of specifying computer programs, including the formalization
of worlds with which programs are to interact, has led to the creation
of numerous tools for formal reasoning.  We will examine some systems
for formal reasoning while examining a number of mechanical formal
methods tools that support these different systems.  Examples of such
system/tool pairs are: 

 

 System                           Tool
				
 Primitive Recursive Arithmetic   Boyer-Moore Prover, ACL2
 First Order Logic                Otter, Nelson's qed
 Higher Order Logic               HOL, IMPS
 Equational Reasoning             OBJ
 Set Theory                       Mizar, Quaife/Otter, PVS
 Type Theory                      NuPrl, Lego, Coq



Students will choose, with the help of the instructor, a system and/or
tool to examine and the grade will be based upon presentations about
these.

 The QED Project


HTML Version of the
QED Manifesto
Plain text version of the QED
Manifesto


Bowen' Formal Methods Web Page and a 
backup copy.



The chief assignment.  Select a formal methods system, e.g.,
from Bowen's Formal Methods Web Page above, and report via in-class,
oral presentations on either its logical foundations or upon its use.
Many of these systems have good, freely available implementations.
Consult with me before making a final choice.

No tests, no final.  Only the presentation(s).

I hope to have a number of guest presentations from the local
formal methods community.


*Very* Tentative Schedule


 April 16 -- Rick Tanney  -- Coq continued

 April 18 -- Trevor Hicks -- Otter

 April 23 -- Ruben Gamboa on ACL2 and Square root of 2

 April 25 -- Samuel Guyer -- Circal and process algebras

 April 30 -- Sawada -- PVS

 May 2 -- Russell Turpin (SES) -- Galois


",course
"


CS382M: Advanced Computer Architecture



CS382M: Advanced Computer Architecture
This course focuses on the techniques of quantitative analysis and evaluation
of modern computing systems, such as the selection of appropriate benchmarks
to reveal and compare the performance of alternative design choices in
system design. The emphasis is on the major component subsystems of high
performance computers: pipelining, instruction level parallelism, memory
hierarchies, input/output, and network-oriented interconnections. Students
will undertake a major computing system analysis and design project of
their own choosing.


Administrative Information

Unique Number: 47315
Meeting Place: MWF 2-3, WEL 2.304
Instructor: Mike
Dahlin
Office Hours: MW 3-4 or by appointment, TAY 4.136
TA: TBD
TA Office Hours: TBD


Readings
Textbook: Hennessy and Patteson Computer
Architecture: A Quantitative Approach, Second Edition 

Note that the 2nd edition is significantly different than the 1st
edition, and it is not recommended that you attempt to use the 1st
edition as a textbook for this course. 
Errata Sheet
for Hennessy & Patterson

In addition, we will read current papers on various aspects of current
computer architecture research. Watch this space for a pointer to the reading
list. 

Grading

10% Class Participation
30% Homework (Work in pairs)
30% Exams (2 midterms)
30% Project (Work in pairs)



Course Schedule


Week
Date
Topic
Reading
Due


1
Jan 13
Intro, Admin, Review: Perf/Cost, Amdahl's Law, Tech Trends
Ch 1



2
Jan 20
Caching and Memory, ISAs, Pipelining, Hazards and Branch Prediction
Ch 2
M: MLK Holiday
F: HW 1



3
Jan 27
Pipelining, Hazards, and Static Branch Prediction
Ch 3
F: Project Proposal


4
Feb 3
ILP: Scoreboarding, Tomasulu, Speculation
Ch 4
F: HW 2


5
Feb 10
ILP: Dynamic Prediction, Limits of ILP, Vector Processors
Ch D



6
Feb 17
Memory Hierarchy
Ch 5
F: Project Survey


7
Feb 24
Memory DRAM, VM, and Banks

F: HW 3


8
Mar 3
Memory and Review

W: Midterm 1


9
Mar 10
Spring Break

M-F: Spring Break


10
Mar 17
I/O: Metrics, Queuing, Busses, Disks, RAID
Ch 6



11
Mar 24
I/O: Tertiary, Networks

F: HW 4


12
Mar 31
Networks
Ch 7
F: Project Checkpoint


13
Apr 7
Networks, Parallel Architectures

F: HW 5


14
Apr 14
MPPs
Ch 8



15
Apr 21
MPPs, Review

W: Midterm 2


16
Apr 28
Project Preseantations

M/W/F: Project Presentations
Fri: Last Day of Classes







M: Project Written Report




Additional Resources

Course Pages 
Products and Research 
Conferences, Bibliographies, and Tech Reports

Yahoo: Business
and Economy:Companies:Computers:Systems



",course
"


CS 395T: Web Operating Systems




CS 395T: Web Operating Systems
unique no. 47928 MWF 1:00-2:00 TAY 3.144 
The recent explosion of interest in the world wide web has resulted
in an evolving set of protocols for using it. These protocols address the
traditional concerns of operating systems -- interprocess communication,
resource allocation, security, etc. -- but do so in the more general context
of the Internet. The goal of this class is to provide an understanding
of the current state of the art in web operating systems and also to address
problems that must be solved to provide a mature, general-purpose web operating
system. 
A key hypothesis behind the design of this class is that many of the
issues now being addressed in the context of the web also have been addressed
in other, more traditional, areas of operating systems. We will occasionally
read non-web related papers that may have some bearing on understanding
current web problems. 

Class Project Reports

Pointers to Internet research and references.


Information about the class: 

syllabus 
reading list  
and schedule
(and a longer, less organized list of papers)

Class roster
Handout: Verification of SSL Protocol (Proof
sketch)
Guidelines for final project talk and report.




",course
" CS310 Fall 1996 


 Computer Organization and Programming  
CS310 (Fall 1996) 

 This page is constantly under construction:
Last Update on
Mon Dec  9 14:22:23 CST 1996



<!-- ----------------------------------------------------------------------
  --
  -- 	Title : CS310
  --
  -- ---------------------------------------------------------------------- --!>




 Course   CS310 
 
 Title   Computer Organization and Programming 

 Prerequisite  CS315 with a grade of at least C 

 Professor  Chris Edmondson-Yurkanan (dragon@cs.utexas.edu)






<!-- ----------------------------------------------------------------------
  --
  -- 	What's new
  --
  -- ---------------------------------------------------------------------- --!>

 Important Dates  
12/17 FINAL EXAM (10am lecture): WED 12/11 9-noon ** TAY 2.106 **, 
TUES 12/17 in ** TAY 2.106 **. 
See  handout #40  
............................................. 
12/11 FINAL EXAM (9am lecture): WED 12/11 9-noon WEL 2.246 
See  handout #40 
............................................. 
 News  
............................................. 
12/9  Program #5 Example solution posted: 
  see the Program Solution section 
............................................. 

12/6  Exam objectives (for the final) :  Handout 40
: check out the extra office hours. 
............................................. 
11/15 Fantasm page is up : visit now!
............................................. 
11/10 Fantasm FAQ: V1.2 : updated version (11/10/96)
  
............................................. 



<!-- ----------------------------------------------------------------------
  --
  -- 	Contents
  --
  -- ---------------------------------------------------------------------- --!>

 Contents 

 Class Info
	  
  Meeting Time and Place (lectures and 
		discussion sessions)
  Professor 
  TAs 
 Course Operations (info, syllabus & grading info.)
	  
 Calendar 

 Important Dates
  Lecture, homework, test schedule at a glance 

 Lectures 
 Handouts (Class notes, Homeworks, 
		Programming Assignments)
	 Discussion Sessions
 Resources
	  
  utexas.class.cs310  
		newsgroup
	   Homework Solutions
 Programming Solutions
 Tests and Solutions 
 Programming Resources
  Old Exams and Study Guide



<!-- ----------------------------------------------------------------------
  --
  -- 	Meeting
  --
  -- ---------------------------------------------------------------------- --!>


 Meeting Time and Place (lectures and discussion sessions) 



 Time  Place
Unique Discussion Session
TA
 
 MWF 9am-10am TAY 2.006
 47465   TH 930-1030 ECJ 1.214
Yoonsuck Choe
 
   
 47470   TH 930-1030 PAI 3.14
Ge Zhang
 
   
 47475   TH 1100-1200 PAI 3.14
Ge Zhang
 
   
 47480   TH 1230-130p PAI 3.14
Deepa Ramani
 
 MWF 10am-11am TAY 2.006
 47485   TH 1230-130p RLM 5.216
Cynthia He
 
   
 47490   TH 200-300p PAI 3.14
Yoonsuck Choe
 
   
 47495   TH 330-430p PAI 3.14
Deepa Ramani
 
   
 47500   TH 500-600p PAI 3.14
Cynthia He




|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	Professor
  --
  -- ---------------------------------------------------------------------- --!>

 Professor



Professor  Chris Edmondson-Yurkanan (your-cannon)  

Office  TAY 3.148; 471-9546 

email dragon@cs.utexas.edu 

office hours  TU 1030-1200p, TH 1030-1130p 


|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	TAs
  --
  -- ---------------------------------------------------------------------- --!>

 TAs 

	All TA office hours are located in PAI 3.04N. You may go to ANY of the
	TA office hours.  There are no TA office hours on Thursday.
	Attend the discussion sections you are registered for.
	


TA email office hours (& place)


Yoonsuck Choe yschoe@cs.utexas.edu
M 1230-130p, TU 230-4p (PAI 3.04N) 

Cynthia He cxh@cs.utexas.edu
M 330-500p, TU 1230-130p (PAI 3.04N) 

Deepa Ramani dparam@cs.utexas.edu
W 300-430p, F 1200-100p (PAI 3.04N) 

Ge Zhang gzhang@cs.utexas.edu
F 100-330p (PAI 3.04N) 


	For discussion sessions conducted by each TA, please go 
	to  ""Meeting Time and Place"" .

|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	Calendar
  --
  -- ---------------------------------------------------------------------- --!>

 Calendar 


 Important Dates 

 9/2 : Labor day holiday
		 9/3 : Last day to add using TeX
		 9/13: 12th class day : last day to drop using TeX,
		last day to drop with a refund, last day to add w/o rare or
		extenuating circumstances.
		 9/14 : Automatic Q drop period begins
		 9/25 : Last day to drop a course w/o academic penalty,
		Q/F period starts
		 10/23 : Last day to drop a course for academic reasons,
		Last day to withdraw from the University, Last day to change 
		registration in a course to or from pass/fail, Deadline to 
		apply for graduation.
		 11/28-30 : Thanksgiving holiday
		 12/6 : Last class day, last day to appeal for a
		non-academic drop or withdrawal.
	

 Lecture, homework, test schedule at a glance

 9/4 :  Homework #1 (correct version) due by 9/9 
		Monday 10am 
 Typo in HW#1 : 2-(d) (2)&(4), 4-(2)&(4) : 
		It has 9 bits in all, so remove the rightmost bit to make 
		it 8 bits.
		 9/11 :  Homework #2 due by 9/16 
		Monday 10am 
		 9/16 :  Program #1(part 1) 
		due by 9/25 Wednesday 10am. Early date 9/24 Tues TAY 3.148 
		11am (5% bonus)
		 9/18 :  Program #1(part 2)
 9/25 :  Program #2(part 1) 
		due by 10/4 Friday 10am. Early date 10/3 Thursday , 
		Late date 10/5 Saturday : TAY 3.148 
		 9/27 :  Program #2(part 2)
 9/27 :  Homework #3 
		due by 10/2 Wednesday 10am.
		 10/2 :  Program #2 and Exam 1 
		Objectives 
 10/3 :  Homework #3 Solution 
 10/4 :  Practice Problems 
 10/8 :  NIGHT EXAM 1 : 7-9pm WEL 2.224 
 10/11 :  Program #3(part 1) 
		due by 10/21 Monday 10am. Late due : 10/22 11am TAY3.148(-15%)
		 10/16 :  Exam#1 Solution 
 10/16 :  Program #3 Announcements
		 : Due date changed to 10/24(Thu) 11am,
		TAY 3.148 (slide it under the door).
		Early date (+5%) 10/23(Wed) 10am, TAY 2.006. 
		Late date(-15%) 10/25(Fri) 10am TAY 2.006. 
		Late date(-30%) 10/28(Mon) 10am TAY 2.006. 
 10/21 : 
		Program #3 Testing/Turn-in procudure 
 10/25 : 
		Program #4 
		Wed Nov 6th 10a.m. 100%, Thurs Nov 7th 11a.m. 90%,
		Fri Nov 8th 10a.m. 80%.
		 11/8 :  Exam 2 (11/13 Wednesday
		7-9pm, WEL 2.224) objectives 
 11/8 : Exam 2 practice problems : not available 
			electroncally
		 11/20: 
			Program #5 : 
			Wed Dec 4th (early) 10am TAY 2.006, 
			Thu Dec 5th (100%) 11am TAY 3.148,
			Fri Dec 6th (90%) 10am TAY 2.006.
		 12/11: Final Exam 9-noon : see  
			Exam objectives . 
			9am lecture - WEL 2.246, 10am lecture - TAY 2.106.
		 12/17: Final Exam 9-noon : see 
			Exam objectives .
			TAY 2.106

	

|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	Lectures
  --
  -- ---------------------------------------------------------------------- --!>

 Lectures
 
	See Handouts. 

|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	Handouts
  --
  -- ---------------------------------------------------------------------- --!>

 Handouts (class notes, homeworks, and programming assignments)
 
If handouts are not available electronically, please check the box
in front of Prof. Yurkanan's office (TAY 3.148). 
 Class Handouts 

 8/28 Handout 0: Letter to students
 8/28 Handout 1: Overview description of 
		the course topics 
 8/28 Handout 2: Course operations
 8/30 Lecture note: Day3, slides 1 - 12 (single page).
	 8/30 Ascii code chart
	 9/4  Handout 3: Home Work#1: due by 
		Monday 9/9 10am in class 
 Typo in HW#1 : 2-(d) (2)&(4), 4-(2)&(4) : 
		It has 9 bits in all, so remove the rightmost bit to make 
		it 8 bits.
	 9/9  Handout 4:  Class Info: Office Hours
		and Discussion Sections 
 9/11 Handout 5:  Homework #2 : due 
		by 9/16 Monday 10am.
	 9/13 Handout 6: Endianess & Memory Hierarchy (not available electronically. Pick it up from
		the box in front of TAY 3.148)
	 9/16 Handout 7:
		 Program #1(part 1) 
		due by 9/25 Wednesday 10am. Early date 9/24 Tues TAY 3.148 
		11am (5% bonus)
	 9/18 Handout 8:
		 Program #1(part 2)
 9/25 Handout 9:  Program #2(part 1) 
		due by 10/4 Friday 10am. Early date 10/3 Thursday TAY 3.148 
		11am (5% bonus), Late date 10/5 Saturday 4pm TAY 3.148: 
		SUBMIT WHAT YOU HAVE!!!
	 9/27 Handout 10: Program #2(part 2)
 9/27 Handout 11: Homework #3 
		due by 10/2 Wednesday 10am.
	 10/2 Handout 12:  Program #2 and Exam 1 
		Objectives 
 10/3 Handout 13:  Homework #3 Solution
	
 10/4 Handout 14:  Practice Problems 
 10/11 Handout 15:   
	Program #3(part 1) due by 10/21 Monday 10am. Late due : 
	10/22 11am TAY3.148(-15%)
	 10/16 Handout 16:  Exam#1 Solution 
 10/16 Handout 17:  
	Program #3 Announcements  : Due date changed to 10/24(Thu) 11am,
		TAY 3.148 (slide it under the door).
		Early date (+5%) 10/23(Wed) 10am, TAY 2.006. 
		Late date(-15%) 10/25(Fri) 10am TAY 2.006. 
		Late date(-30%) 10/28(Mon) 10am TAY 2.006. 
 10/21 Handout 18: 
		Program #3 Testing/Turn-in procudure 
 10/24 Handout 19: 
		Fantasm User's Manual : also available in the 
		[System Disk]->[Fantasm]->[f96.io.v1.0], documents folder
		in the PAI Powermacs (not the old Quadras).
	 10/24 Handout 20:  Fantasm
		program example: also available on the PAI macs: start.s and
		P4_globals.s
	 10/25 Handout 21: 
		Program #4 
		Wed Nov 6th 10a.m. 100%, Thurs Nov 7th 11a.m. 90%,
		Fri Nov 8th 10a.m. 80%.
	 10/28 Handout 22: Class note - pick up from TAY 3.148
	 10/30 Handout 23: Class note - Passing parameters (using registers
		and stack), Function : not available electronically. Pick
		it up from TAY 3.148.
	 10/30 Handout 24: 
		Examples of Parameter passing 
 10/31 Handout 25: (discussion section) 
		Macsbug Instructions
 11/1 Handout 26: 
		 IMPORTANT FANTASM INFO and TURN-IN Requirements
 11/8 Handout 27: Comments on Real Compilers and Proc/Func calls:
		Class note - pick up from TAY 3.148
	 11/8 Handout 28: Example of how a compiler might use 
		32 registers (in a RISC architecture) including some 
		for call by value parameter passing:
		Class note - pick up from TAY 3.148
	 11/8 Handout 29:  Exam 2 (11/13 Wednesday
		7-9pm, WEL 2.224) objectives 
 11/8 Handout 30: Exam 2 practice problems : 
			not available 
			electroncally - pick up from TAY 3.148
	 11/8 Handout 31: Exam 2 practive problems - solution: 
			not available 
			electroncally - pick up from TAY 3.148
	 11/18 Handout 32:  Program #5  : obsolete - 
		see Handout 33.
	 11/20 Handout 33: 
			Program #5 Spec and Turnin procedure: 
			Wed Dec 4th (early) 10am TAY 2.006, 
			Thu Dec 5th (100%) 11am TAY 3.148,
			Fri Dec 6th (90%) 10am TAY 2.006.
	 11/xx Handout 34: ??
	 11/xx Handout 35: ??
	 11/25 Handout 36: Programming model for a generic disk DMA
		interface. Not available electoronically - pick up from 
			TAY 3.148.
	 11/25 Handout 37: Problem with the character oriented model.
		Not available electoronically - pick up from 
			TAY 3.148.
	 12/4 Handout 38: Exam #2 solution.
		Not available electoronically - pick up from 
			TAY 3.148.
	 12/11 Handout 40: 
			Exam objectives .  12/11 9-noon: 
			9am lecture - WEL 2.246, 10am lecture - TAY 2.106.
			 12/17 9-noon: TAY 2.106


 Discussion Session Handouts 

 8/29 Cheating Policy 
	 8/29 Questionaire
 10/3 Handout 13:  Homework #3 Solution
 10/24 Fantasm User's Manual: 
		User's Manual : also available in the 
		[System Disk]->[Fantasm]->[f96.io.v1.0], documents folder
		in the PAI Powermacs (not the old Quadras).
	 10/24 Example program: 
		also available on the PAI macs: start.s and
		P4_globals.s
	 10/31  Macsbug Instructions



|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	Discussion Sessions
  --
  -- ---------------------------------------------------------------------- --!>

 Discussion Sessions 

	You must go to the discussion sessions you are officially registered
	for. No exceptions other than going to other discussion sessions
	held by the same TA who you are registered for.
	
	See the meeting time & place and
	 Handout 4 for more info.

|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  --
  -- 	Resources ! 
  --
  --
  -- ---------------------------------------------------------------------- --!>
<!-- ----------------------------------------------------------------------
  --
  -- 	newsgroup
  --
  -- ---------------------------------------------------------------------- --!>
 utexas.class.cs310 Newsgroup
 The class newsgroup is at
 utexas.class.cs310


|Back to Contents|
<!-- ----------------------------------------------------------------------
  --
  -- 	Homework Solutions
  --
  -- ---------------------------------------------------------------------- --!>

 Homework Solutions


  Homework #1 Solution 
  Homework #2 Solution 
  Homework #3 Solution 


|Back to Contents|
<!-- ----------------------------------------------------------------------
  --
  -- 	Programming Solutions 
  --
  -- ---------------------------------------------------------------------- --!>

 Programming Solutions

	You are free to use these solutions towards your next 
	programming assignment.
	
 Program #1 example solution (Thanks to Brett James): 
 Pascal source, 
 Output (test #1), 
			
 Test #2 data, and
			
 Output (test #2).
		 Program #2 example solution: 
 Pascal Source,
 
			Test #2 output 
NEW :  
			C++ Source 
 Program #4 example solution:
 
			4.1 P4_globals.s,	
			
			4.1 start.s 
 
			4.2 P4_globals.s,	
			
			4.2 start.s 
 
			4.3 P4_globals.s,	
			
			4.3 start.s 
 Program #5 example solution:

			5.1 P4_globals.s 
			 

			5.1 start.s
			 

			5.1 macsbug log
			 

			5.2 P4_globals.s
			 

			5.2 TB.bcf
			 

			5.2 start.s
			 

			5.2 subroutine_file.s
			 

			5.2 exception_file.s
			 


|Back to Contents|
<!-- ----------------------------------------------------------------------
  --
  -- 	Tests and solutions! 
  --
  -- ---------------------------------------------------------------------- --!>

 Tests and Solutions


 Exam #1 Solution
 Exam #2 Solution: See handout #38 - not avaliable 
			electronically: pick up from TAY 3.148.
	

|Back to Contents|
<!-- ----------------------------------------------------------------------
  --
  -- 	Programming resources
  --
  -- ---------------------------------------------------------------------- --!>
 Programming Resources

	Check out the new Fantasm Page.

|Back to Contents|
<!-- ----------------------------------------------------------------------
  --
  -- 	Old exam and study guide
  --
  -- ---------------------------------------------------------------------- --!>

 Old Exams and Study Guide


 Check out  Handout #12:Exam Objectives 
		(Exam 1)  and 
	Handout #14: Practice Problems.
	  Handout #29: Exam Objectives (Exam 2)
		, Handout #30: Practice problems (not available electronically)
	 Handout #40: Exam Objectives (Exam 3)


|Back to Contents|

<!-- ----------------------------------------------------------------------
  --
  -- 	Okay, the trailer goes here.
  --
  -- ---------------------------------------------------------------------- --!>
This page is maintained by 
Yoonsuck Choe (yschoe@cs.utexas.edu)

| UT Austin 
| UTCS
| 

",course
"



CS304P(Porter) Homepage







Important Announcements 

 
I am taking off today (12/11) for home. So I will be unable to maintain this page for
these last couple of days. However, I am putting this  link  to Dr.
Porter's page and all class related announcement (if any) will be available by following it. Good Luck
for the Finals! 

Next week, there will be special classes for reviewing some of the important topics
 covered in class. All classes will be held in Painter hall. The exact location will depend
on room availibity. However, notes will be posted on doors and the office and there
will be someone in the office (PAI 3.06) to inform you. The timing are posted below. Moreover, there will be almost
 total coverage for next week by office hrs. of TAs and Dr. Porter, right upto
the time of the final exam. So, if you need any help, feel free to come by and ask
 one of us; we will be glad to help. Good Luck for the Finals! 

Special REVIEW for next week:
 Mon 11:00-12:00               AI (Resolutio + other topics) BRUCE PORTER
                               COmplexity Theory             NIMAR ARORA

 Tue 10:00-11:00               Parallel processing           DWIP BANERJEE
                               Boolean Circuits              BRUCE PORTER

Question #7 on the review sheet (the one on rotating bits) can be disregarded; it is 
somewhat beyond the scope of what we covered in class. 
The slides presented in lecture on December 5th (summarizing the
contents of the whole semester) are available at the reserve desk at
UGL. We hope to post them on the webpage soon, but we are experiencing 
some technical difficulties caused by the length of the file.

Click here for the schedule of office hrs. for the final week. 
Also, please check the room assignment posted below.
Click here for the addendum to review questions (AI questions) for the final. 
Here are the Review questions : (html version)  and the  (postscript version) for the final exam. Some more questions will be added to the set; so
stay tuned. 
Last  programming assignment (#11)  is now available. 
You can download the  tutorial on Prolog programming  here. 
Dr. Porter's Lecture for the week of Nov. 14 is now available. 



CS304P(Porter) : COMPUTER SCIENCE I






Instructor


Bruce Porter (porter@cs.utexas.edu) 
office hrs. Monday 1:00-2:00 p.m. & Wednesday 2:00-3:00 p.m. 
Taylor Hall, room 4.124 
phone: 471-9565; email: porter@cs.utexas.edu 

TAs

Office Hours
Lab and Discussion Section Schedule






CS 304P (Porter) 


Final Exam: 
Thursday, December 12 
7:00 - 10:00pm 

Room Assignments 

Exam Room 
Unique Number 


WELCH   2.224 
47365   47370  47375  47380  47385  47390 


WELCH   1.308 
47395 47400 47405   47410 


WELCH   1.316 
47415  47420   47425  47430  







Course Description
Class Schedule
Class Lectures (notes from Dr. Porter's class)
Discussion Sessions (includes notes from lab/discussion)
Important News Articles
Class Newsgroup
Programming Assignments


Midterm Test I
Solution to Midterm I 
Midterm Test II : html version  and postscript version 
Review Questions for Midterm II 
Review questions : (html version)  and the  (postscript version) for the final exam and also the  addendum .



Some Useful Links :  

Pascal 


A Pascal
Tutorial in text format.
ANSI-ISO Pascal FAQ

You can get some 

Sample Pascal Programs from here.

TP Programmers page.

Generic Turbo Pascal programming language material.

Frequently asked questions about Turbo Pascal .

TURBO PASCAL 7.0 .
Get a ziped 
Turbo Pascal(TP) tutorial.

Programming Concepts and Structures (Pascal based).


Newsgroups (Pascal related newgroups you might be interested in)


comp.lang.pascal.ansi-iso
comp.lang.pascal.mac
comp.lang.pascal.borland
comp.lang.pascal.misc
comp.lang.pascal.delphi.misc
fj.lang.pascal


 Remember: to access newsgroups from the Dell Lab, you need to set the News server
to news.cc.utexas.edu in the Mail and News Preferences item of the Options menu.

 Take a look in the Important News Articles link. It will usually lead to impor
tant
stuff. 





[ home|
TAs|
description|
discussion sessions|
news articles|
newsgroup|
programming assignments|



Send comments, criticisms, suggestions, additions, useful links to 
Dwip 
(dwip@cs.utexas.edu )



",course
"
CS354 - Computer Graphics - Spring 1996



CS354
Computer Graphics
Spring 1996




Instructor:  Donald S. Fussell 




 General Course Information 


  Course Description 
  Course Syllabus 




 MESA Graphics Library 

This year we are using the Mesa graphics library, which provides an
OpenGL-like API, as the platform for the course.  This library has
been installed on all the public workstations in the Computer Sciences
department. 


  Instructions 
for using Mesa libraries at UTCS
 Sample  makefile  for Mesa on UTCS machines
 
OpenGL man pages 
 The 
OpenGL Specification 
 The 
Mesa Home Page 
 The 
OpenGL WWW Center 




 TCL/TK Information  


 
General references 
 
Manual pages 
 
Ousterhout's Book 
 
Welch's Book 




 Assignments 


  Turning in your assignments 
  Assignment 1 
  Assignment 2 
  Assignment 3 
 NOTE - Assignment 3 is now an option for the second exam.  Only one
or the other is required.  Students who don't show up for the second exam
will be required to submit assignment 3.  Students who wish to do both
may do so, and only the higher of the two scores (after the curve) will
count.




 Examples 


  Xlib example code 
 (Updated 2/18/96)
  Tcl/tk example code 

 (Updated 2/23/96)
  Tcl/tk example driver 

 (Updated 2/23/96)
  billthecat.xbm 
(copy this file to the directory containing slate.tcl)
 (2/25/96)






",course
"
CS384G - Computer Graphics - Fall 1995



{CS,CAM}384G
Computer Graphics
Fall 1995




Instructor:  Donald S. Fussell 




 General Course Information 


  Course Description 
  Course Syllabus 
  Lab Information 




 MESA Graphics Library 

This year we are using the Mesa graphics library, which provides an
OpenGL-like API, as the platform for the course.  This library has
been installed on all the public workstations in the Computer Sciences
department. 


  Instructions 
for using Mesa libraries at UTCS
 Sample  makefile  for Mesa on UTCS machines
 
OpenGL man pages 
 The 
OpenGL Specification 
 The 
Mesa Home Page 
 The 
OpenGL WWW Center 




 TCL/TK Information  


 
General references 
 
Manual pages 
 
Ousterhout's book 
 
Welch's book 
 
Program examples from Welch's book 




 Assignments 


  Turning in your assignments 
  Assignment 1 
  Assignment 2 
  Assignment 3 




 Examples 


  Xlib example code 
  Tcl/tk example code 
  Tcl/tk example driver 
  billthecat.xbm 
(copy this file to the directory containing slate.tcl)




 News 


 Turnin now works on the graphics lab machines (10/04/96)
 libtcl7.4.a and libtk4.0.a reinstalled in the lab in /p/lib (10/04/96)
 tclsh and wish reinstalled in the lab in /p/bin (10/04/96)
  Compiling the walker demo 
on the graphics lab machines (11/07/96)
  Repaired walker.c source 






",course
"
  CS378 

 
 CS378: Cryptography 
 
 Professor:  
          David Zuckerman  
 Office hours:  Taylor 3.126, TTH 5-6:00 pm 
 Email:  diz@cs.utexas.edu 
 TA: 
    Huiqun Liu  
 Office hours:  
 MW 12:00-1:00pm, Station #2 (Taylor Hall basement) 

 Email:  hqliu@cs.utexas.edu 
 

  Syllabus   
  Mathematical Background 
        
 Homeworks 

  Homework 1  - If you 
        don't have the textbook yet, here is the   
        ciphertext for problem 10  .   Notice:  the answer to the 
        last problem is in French .  You should be able to recognize the 
        French as the word  ""Canada""  appears.  The frequency of
        the most common letters in French should not change too 
        drastically from English; however, digrams like ""th"" will not 
        appear. 

  



This page is last modified: September 4, 1996. 
For comments, you are welcome to send email to: hqliu@cs.utexas.edu 


",course
"

CS 380D : Distributed Computing I




CS 380D : Distributed Computing I
Spring 1996


Instructor : Lorenzo Alvisi
Teaching Assistant : Rajeev Joshi

Contents

 Office Hours & Locations
 Mechanics
 Required Textbook
 Course Content
 Grading
 Problem Sets
 Information pertaining to the final exam
 Suggested Solutions to the Midterm Exam
 Newsgroup
	    (utexas.class.cs380d)


Instructional Staff
Lorenzo Alvisi, Taylor Hall 4.122, Phone: 471-9792 
Office Hours: Tuesdays, 10:00-12:00
 
Rajeev Joshi, UA-9 #4.108D , Phone: 471-9756
Office Hours: Mondays and Thursdays, 2:00-4:00 pm.

Other meetings with Lorenzo and Rajeev can be arranged by appointment.


Mechanics

I expect that 2/3 of the classes will cover material from the required
textbook; the remainder will come from other sources (i.e. papers,
other textbooks). References to such sources will be given in class
at the appropriate time.

Lectures: 9:00-10:30 Monday and Wednesday, in Robert Lee Moore Hall
5.124.

The newsgroup for the class is
utexas.class.cs380d.


Required Textbook

 Distributed Systems, Second Edition, S. Mullender (editor), ACM
Press, Addison-Wesley Publishing Company, Reading MA, 1994.


Course Content

CS380 covers abstractions that have proved useful or are expected to
be useful for designing and building tomorrow's distributed
systems. These include:
 global states (cuts, logical and vector clocks, causal message
delivery, global property detection)
 message logging and checkpointing
 replication management (state machine approach, primary backup
approach)
 agreement protocols (Byzantine agreement, ordered multicast)
 group programming (techniques and applications)
 distributed file systems (caching, disconnected operations)
 time services (Byzantine clock synchronization, NTP)
 security (encryption, authentication, security in group programming)


We will integrate the discussion of the general principles with the
presentation of case studies that exemplify how such principles
have been used to design and implement  real systems.
Other topics, depending on time and interest, will be presented by me
or by some of you (the size of the class does not allow all of you to give a
presentation). Such topics  may include:
 distributed shared memory
 distributed objects
 kernel support for distributed systems
 weak consistency for replica management
 protocols for electronic commerce
 protocols for wide-area networks


Grading

There will be 4 or 5 written homework assignment. Solutions will be
graded F, B, or A. Any solution that demonstrates a credible effort on
behalf of its authors (whether the solution is right or wrong) will
receive a B or better.

Collaboration on homework assignment by up to three students is
permitted and encouraged, but not required. When there is such a
collaboration, a single solution should be submitted for
grading, with the names of the collaborators. Other collaborations
will be considered violations of Academic Integrity.

There will be a written, take-home midterm examination, for which no
collaboration will be allowed.

There will be no final exam. Each student however will be required to
write a final paper (about 20 pages) that surveys one of the issues
that we have discussed in class. A list of suggested topics will be
distributed in class on Monday 4/8. The paper is due at the start of
the last class, Wednesday 5/1: hence, you will have 4 weeks to
complete the paper.

You can also team up with a colleague and prepare one or two
lectures on a topic not previously covered in class. If you choose
this option, you and your colleague will only be required to write a
single survey paper of about 20 pages. I warmly encourage you to
consider volunteering for a presentation: it will give you an excellent
opportunity to improve your communication skills.


Problem Sets

In this and all subsequent problem sets, you should
conform to the following general guidelines:
 ``Prove'' and ``show'' are synonymous. A precise proof is
required when you are asked to ``prove'' or ``show'' something.
 To show that something is impossible, you have to give a proof that
makes it clear that the problem cannot be solved, no matter what the algorithm
is. It is insufficient to show that a particular algorithm does not work.
 Any algorithm that you develop must be accompanied by a proof of
correctness, unless you explicitly told otherwise.



 Due: Mon, 5 Feb 1996
Problem 1
 The snapshot protocols discussed in class and in the
textbook assume that communication channels are FIFO. Derive a
snapshot protocol for an asynchronous system that does not depend on
the FIFO assumption, and prove it correct (i.e. prove that the
protocol produces a consistent global state). You may assume that at
most one snapshot is being computed at any point during a run. 
 Note: The book contains a reference to a paper by Mattern that
contains a solution to the problem. I urge you to resist the
temptation to solve the problem by visiting the library...

Problem 2
 Taking the snapshot of a distributed computation is a
general technique for computing stable global predicates. More
efficient protocols can be derived for computing specific predicates,
that are often conceptually simpler and more efficient (in terms of
the number of messages they exchange) than a snapshot-based solution.

In this problem you are required to derive such a ``specialized''
protocol for detecting a deadlock in an asynchronous distributed
system. Ideally, your protocol would not need a centralized monitor
process, and would have a message cost of O(n), where n
is the number of processes in the distributed system (a monitor-based
snapshot protocol for detecting deadlock has a cost of O(n*n)).

The suggested solutions to these problems are now
online.  This link points to the postscript file.

 Due: Wed, 28 Feb 1996, 0900
This link points to the postscript file
describing the second homework assignment.

The final exam
The assignment constituting the final exam is due by 5 p.m., Friday
May 3, 1996. 
This link points to the
Postscript file describing the assignment.

If you have questions, feel free
to send email to   Lorenzo or to
  Rajeev .





If you have ideas on improving this page, please send your
suggestions to

  joshi@cs.utexas.edu

Rajeev Joshi, last updated 11 Apr 1996


",course
"
CS 105 C++ Fall 1995
CS 105 C++ Fall 1995

Note that this page reflects CS 105 C++ as it was taught in the Fall of
1995. The current version of the class may differ in content and in scope.

Welcome to the homepage for CS105 C++ at UT Austin. The class is taught by
Will Adams and Jacob Kornerup. For practical information
about the course look at the syllabus.

Available on-line


A technical note on how to compile programs and turn in
homeworks electronically.

Homeworks and solutions (in due time)

A crude interface to the newsgroup
utexas.class.cs105.c++ where most correspondence out off class takes
place.

Most examples from the textbook ""C++ for Pascal
Programmers"", organized by chapter.

Further readings on C++
and a link to a C++
home page (not required reading).

Jacob Kornerup's overheads are available for viewing

Information about the class project

How to find Jacob Kornerup's office.

To study for the midterm here is an old midterm exam
and the answer key.


",course
"

CS 378 Course Description


CS 378: Object-Oriented Design and Programming
Last updated 09/25/96.

Professor: Greg Lavender <lavender@cs.utexas.edu>

Office Hours: After class and by appt.


TA: Gokul Rajaram <gokul@cs.utexas.edu>

Office Hours: 3:30-5 pm Mondays,  9:30-11 am Wednesdays, TA Station #1

When: TTh 5-6:30 p.m.

Where: ESB 223

Newsgroup: utexas.class.cs378-lavender

Course Info
Course Syllabus

Announcements

Lecture Notes

Homework Solutions

Programming Assignments

GNU Manuals

Standard Template Library Manual and Source Code

Socket++ Source Code and Manual

Description 
This course is intended for students that have already had an
introductory C++ programming course, such as that offered in CS 105 -
Introduction to C++.  

The objective of the course is to give the student an opportunity 
to think about solutions to computational problems in an 
 object-oriented  manner, capture  reusable
patterns of design  by constructing  polymorphic type
hierarchies  and write programs proficiently and professionally
using C++. The student will have to opportunity to program solutions 
to challenging problems using C++ and Java.

 Course Texts  
The following texts, available from the UT COOP Bookstore, are to be used during the course:

Cay S. Horstmann. Mastering Object-Oriented Design in C++, John Wiley & Sons,1994.
David Flanagan. Java in a Nutshell, O'Reilly & Associates, 1996.


Related Material
I have drawn some of my lecture material from the following sources.

 B. Stroustrup. The C++ Programming Language, 2nd Edition. Addison-Wesley, 1991.
 M. Ellis and B. Stroustrup. The Annotated C++ Reference Manual, Addison-Wesley, 1990.
 B. Stroustrup. The Design and Evolution of C++, Addison-Wesley, 1993.
 T. Cargill. C++ Programming Style, Addison-Wesley, 1992.
 M. Cline and G. Lomow. C++ FAQs, Addison-Wesley, 1994.
 J. O. Coplien. Advanced C++: Programming Styles and Idioms, Addison-Wesley, 1992.
 P. J. Plauger. The Draft Standard C++ Library, Prentice-Hall, 1995.
 E. Gamma, R. Helm, R.Johnson, and J. Vlissides. Design Patterns: Elements of Reusable Object-Oriented Software, Addison-Wesley, 1994.


 Newsgroups  
A course newsgroup is setup as a forum for open discussion and announcements
about the course. I strongly encourage you to participate in the on-line
discussions with your fellow classmates. 	

  
utexas.class.cs378-lavender


You may also be interested in the following newsgroups on Usenet.
C++ Newsgroups

 comp.lang.c++
 comp.std.c++
 gnu.g++.help

Java Newsgroups

  alt.www.hotjava 
  comp.lang.java.advocacy 
  comp.lang.java.api 
  comp.lang.java.misc 
  comp.lang.java.programmer 
  comp.lang.java.security
  comp.lang.java.setup 
  comp.lang.java.tech  
  comp.lang.javascript 
  fj.lang.java 


Internet Information on C++, Java, and OOP
The links here should all be up-to-date. Please let me know if a link is dead.
C++ Related Web Sites

 ANSI Draft C++ Standard
 The Standard Template Library (STL)

 The STL Manual in PostScript or PDF
 STL Home Page
 STL source code from HP Labs
 STL source code from Rensselaer Polytechnic Institute
 STL product info from ObjectSpace

 GNU C++ Compiler (g++) and Libraries (libg++ and libstdc++)

GNU FTP server at MIT
GNU FTP server at Cygnus
GNU C++ FAQ (postscript document) 
Doug Lea's GNU C++ Library (libg++) Page

C++ FAQs compiled by comp.lang.c++

 GWU mirror

 A list of C++ libraries available for FTP
Object-Oriented System Development
Index of C++ Programming Libraries
The C++ Virtual Library

Index to Object-Oriented Information Sources
The Taligent OO Framework

Java Related Web Sites 

 JavaSoft  : The home of Java.
 Gamelan  :  A Huge Registry of Java Applets. 
 Digital Espresso  : A good summary of current information on Java.
 The Java Centre  : Information on Java applets, news and events.
 JARS  : Rates Java Applets on the Web.

Java FAQs 

  Java and Hot Java FAQ 
  Java FAQ Archives 

Other OOP/C++ Courses 

Dennis Kafura's OOP course at Virginia Tech
Doug Schmidt's course notes from UC Irvine and Washington University
Doug Lea's C++ course notes from SUNY
Introductory C++ course at the University of Groningen




",course
"



CS395T: Parallel Languages and Compilers





CS395T:Parallel Languages and Compilers
Fall 1996 

 Lecture: Tuesday and Thursday 12:00 - 2:00, ENS 145.
 Instructor: Calvin Lin

 Office: Taylor 4.138
 Phone: 471-9560
 Email: 
lin@cs.utexas.edu
 Office hours: Tuesday 4:00 - 5:00, Thursday 4:00 - 5:00.






Handouts:

 General Information
 The Case for NOW
 The Tera Computer (Copyright ACM)
 Programming Assignment 1
 New POSIX Threads Skeleton Code
 Programming Assignment 2
 MPI Tutorial
 MPI Example: ""hello, world""
 MPI Communication example
 Ironman Communication Interface
 Online MPI Manual
 MPI Manual in PostScript
 LogP paper
 Where is Time Spent in Message-Passing and Shared
	      Memory Programs?
 Programming Assignment 3
 Foundations of Practical Parallel Programming 
			  Languages
 On Partitioning Dynamic Adaptive Grid Hierarchies




Last modified: December 3, 1996
Calvin Lin
lin@cs.utexas.edu



",course
"
CS372 Home Page














CS372
Introduction to Operating Systems




 Class Information


 Handouts


 Assignments


 Readings


 Project Information


Groups

 Send Mail to the Prof


 Send Mail to the TA


Newsgroup





",course
"

 CS 395T Reading List (Fall 96)















CS 395T
Hot  Topics in Distributed Systems




File Systems

Topology in Distributed Systems

Electronic Commenrce

Failure Detectors

Distributed Objects

Consistency

Secure
Group Communication


Languages and Systems for DSM


Mobile Computing




",course
"


 CS395T, Mining and Monitoring Databases 



CS395T: Mining and Monitoring Databases

Prof. Daniel P. Miranker


New: 

Seminar
Schedule 
Term Project Material 



Old:

Overview

Tentative
Reading List 
Homework

Projects




",course
"CS 395T: Introduction to Artificial Intelligence II

Instructor
 Raymond J. Mooney
Time and Place

Spring 1997, TuTh 11:00 -- 12:30, Taylor Hall 3.144

Course Information

Click here for the course information sheet
and the course syllabus
(from last year, to be updated).


See the files in /u/mooney/ai2-code on the department network
for code and traces.

Assignments


",course
"CS 351: LISP and Symbolic Programming

Instructor
 Raymond J. Mooney
Teaching Assistant
 Sowmya Ramachandran
Time and Place

Tu-Th 12:30-2:00, GEO 112

Course Information

Click here for the course information sheet
,the course syllabus, and information
on how to use Lisp (see also
UT Allegro info page).

Text

Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp
Assignments

See the files in /u/mooney/cs351-code on the department network
for code and traces.


 Homework 1
 Homework 2
 Homework 3
 Homework 4

Old Tests

 Test 1
 Test 2

",course
"CS 395T: Machine Learning

Instructor
 Raymond J. Mooney
Time and Place

Tu-Th 2:00-3:30, PAI 5.60

Course Information

Click here for the course information sheet
and the course syllabus.

Text
Machine
Learning
Lecture Slides

 Introduction to Machine Learning
 Concept Learning and Generality Ordering
 Decision-Tree Learning
 Experimental Evaluation
 Computational Learning Theory
  Rule Learning and Inductive Logic Programming
  Neural Network Learning
  Clustering and Unsupervised Learning
 Bayesian Learning
 Instance-Based Learning
 Explanation-Based Learning

Assignments

See the files in /u/mooney/ml-code on the department network
for code and traces.


 Homework 1
 Homework 2
 Homework 3
 Homework 4
 Homework 5

Final Project

 Project Suggestions (from Spring 95)
 Paper Format Outline (Talk Version)

",course
"


CS 304P: Foundations of Computer Science


CS 304P: Foundations of Computer Science


CS 304P is an introduction to Computer Science and programming.

This section of CS 304P is intended for CS majors who have had at
least a semester of programming in high school; the course number will
be changed to CS 306 next year.  If you have never taken a programming
course before, you should take Porter's section of CS 304P instead.
A strong math background, at least through precalculus, is required.

We will use the programming language Scheme, a dialect of Lisp.  The
Scheme implementation we will use is called Gambit and runs on Macintosh
computers.

This course will move faster than the previous CS 304P courses
and will emphasize CS concepts more than programming language syntax.
We will do a lot of programming and work hard, while hopefully learning
a lot and having fun.

Syllabus

       FTP Directory for Software and Scheme Tutor
Copying Scheme for Your PC
Assignment 1: Machine Language Simulation
Assignment 2: Surfing the Web
Assignment 3: Basic Scheme
Assignment 4: Playing Peano and Gambling
Assignment 5: Turtle Graphics
Assignment 6: Snow and Trees
Assignment 7: List Manipulation
Study Guide for Exam 1: Oct. 4
Vocabulary for Exam 1: Oct. 4
Assignment 8: The Plot Thickens
Assignment 9: Treasure Hunt
Assignment 10: Symbolic Algebra
Assignment 11: Data Abstraction and Matrices
Study Guide for Exam 2: Nov. 11
Assignment 12: Drawing Trees
Assignment 13: Expression Unparsing
Assignment 14: Language Translation
Study Guide for Final Exam:
  Thurs., Dec. 12, 9-12 in TAY 2.106



Gordon S. Novak Jr.


",course
"


CS 375: Compilers


CS 375: Compilers


CS 375 covers the design and construction of compilers for programming
languages.  Each student writes a compiler for most of Pascal; code
is generated for the PowerPC processor and is run on an IBM RS/6000
server that incorporates the PowerPC chip.

This course has a heavy programming workload, especially in the summer.
Students planning to take the course in summer should expect to dedicate
their lives to this course for five weeks.

Syllabus
Programming Assignments
Program File Descriptions

       FTP directory for Program Files.
Program Submission and Grading
Midterm Study Guide
Final Exam Study Guide


Gordon S. Novak Jr.

",course
"


CS 381K: Artificial Intelligence


CS 381K: Artificial Intelligence


Artificial Intelligence (AI) may be defined as the study of the
computations required for intelligent behavior and the attempt to
duplicate such computations using computers.  Intelligence connects
perception of the environment to actions appropriate to achieve the
goals of the actor.


This course surveys major topics of AI, including Search, Logic and
Knowledge Representation, and Natural Language Processing, with
brief coverage of the Brain and Machine Vision.

Syllabus
Programming Assignments
Program File Descriptions
Midterm Study Guide
Final Exam Study Guide
Predicate Calculus Story Problems
Solutions to Selected Story Problems
Notes and Bibliography on the Human Brain


Gordon S. Novak Jr.

",course
"


CS 395T: Automatic Programming


CS 395T: Automatic Programming

Automatic Programming is the generation of executable programs
from specifications that are higher-level than ordinary programming languages.

The course will consist of lectures for the first two-thirds of the semester.
Homework problems and programming assignments will be given to illustrate
the lecture material.  The programs will not be long, but will require
learning to use several kinds of programming systems.  The latter part
of the semester will cover readings in the research literature.
Students will be expected to present one or two papers to the class.

Syllabus
Bibliography
Assignments:

Compiler Optimization, done by hand
Pattern Matching
Object-Oriented Programming
Introduction to GLISP
Views and Graphical Programming



Gordon S. Novak Jr.

",course
"


CS195T: Introduction to Graduate Computer Science





CS195T:Introduction to Graduate Computer Science
Fall 1996 (47865)

 Lecture: Monday, 12:00 - 1:00, in TAY 2.106.
 Instructor: Robert Blumofe

 Office: Taylor 4.118
 Phone: 471-9557
 Email: rdb@cs.utexas.edu
 Office hours: Thursday 1:30 - 3:30,
but feel free to stop by any time.






This is a one-semester seminar course that can only be taken on a
pass/fail basis. For graduate students, the course is CS 195T:
Introduction to Graduate Computer Science. For undergraduates,
the course is CS 178: Undergraduate Topics in Computer Science
(Honors) (47730).  To receive credit for the course, a student must be
registered for the course, and attend at least 11 of the 13 lectures.



Schedule


Speaker
Title


September 9
Dan Miranker
Alamo: The Net as a Data Warehouse


September 16
Ben Kuipers
The Spatial Semantic Hierarchy for Human
and Robot Cognitive Maps


September 23
Robert Blumofe
Cilk and Cilk-NOW: Adaptive and Reliable
Parallel Computing on Networks of Workstations


September 30
Risto Miikkulainen
Learning Sequential Decision Tasks Through
Symbiotic Evolution of Neural Networks


October 7
Vladimir Lifschitz
Mathematical Principles of Logic Programming


October 14
Paul Wilson
Extensible Languages, Open Compilers,
and Reflection


October 21
Ray Mooney
Learning to Process Natural Language Using
Inductive Logic Programming


October 28
Mike Dahlin
Distributed I/O: from Clusters to Internets


November 4
Gordon Novak
Software Reuse by Specialization of Generic
Procedures through Views


November 11
Vijaya Ramachandran
The Design and Evaluation of Parallel
Algorithms


November 18
Lorenzo Alvisi
Lighweight fault-tolerance


November 25
Calvin Lin
Adaptive Libraries and High Level Optimization


December 2

Greg Plaxton
Analysis of Algorithms





Lighweight fault-tolerance
Lorenzo Alvisi
Distributed systems have moved beyond the confines of academia and
research labs and are revolutionizing the way in which businesses,
governmental organizations, and simple citizens are processing and
collecting information. Current technological trends promise to
dramatically increase the pace of this revolution by enabling the
design of highly cooperative distributed applications that go beyond
the client-server paradigm to harness the computational power of
distributed systems.
In this new environment, the scope and emphasis of fault-tolerant
techniques are about to undergo dramatic changes. Fault-tolerance will
cease to be an expensive feature required by a handful of applications
to tolerate exotic failures.  To the users of a highly distributed
information infrastructure, fault-tolerance will translate to a
competitive advantage, guaranteeing reliable access to critical
information.
In this talk we will explore a new way to design and engineer
fault-tolerant solutions, which we call lightweight fault-tolerance.
The goals of lightweight fault-tolerance are:

To require few dedicated resources and have a negligible
impact on performance during failure-free executions.
To scale its cost depending on the severity and number of
failures that need to be tolerated.
To integrate with applications in a way transparent to the
application programmer.
To enable and support emerging applications that will communicate
through messages as well as files.
To address software-generated faults effectively.



Cilk and Cilk-NOW: Adaptive and Reliable Parallel Computing on
Networks of Workstations
Robert Blumofe
This presentation overviews Cilk (pronounced
""silk""), an algorithmic parallel multithreaded language, and
Cilk-NOW, a runtime system that supports a functional
subset of Cilk on networks of workstations.  Cilk-NOW provides
""adaptive parallelism"" and fault tolerance tranparently to
user programs.  Adaptive parallelism means that the set of
workstations on which a Cilk program runs can grow and shrink
dynamically depending on the availability of idle workstations and on
the amount of parallelism within the program.  In addition, a Cilk
program can continue execution even if one or more of its workstations
crashes, because the Cilk-NOW runtime system automatically detects and
recovers from such failures.  The presentation includes a live
demonstration.


Distributed I/O: from Clusters to Internets
Mike Dahlin
This presentation gives an overview of current issues in
distributed file system I/O. Technology trends and new applications
motivate more aggressive cluster and wide area network I/O systems. In
clusters, fast networks allow machines to cooperate closely to service
I/O requests. The xFS file system uses close cooperation among nodes
to provide better performance and availability than a single central
server. In wide area networks, the challenge is to provide good
performance, availability, and consistency despite limited network
performance and node or network failures. The wFS file system project
will explore these issues.


The Spatial Semantic Hierarchy for Human and Robot Cognitive Maps

Benjamin Kuipers
Human cognitive maps rely on several different representations for
large-scale space, each with its own ontology.  Similarly, a variety
of different approaches have been proposed for robot exploration and
mapping of unknown environments.  We cast these diverse
representations into a natural structure that we call the Spatial
Semantic Hierarchy (SSH), in which the objects, relations, and
assumptions at each level are abstracted from the levels below.
Each level of the SSH has its own mathematical foundation.  The
control level allows the robot and its environment to be formalized as
a continuous dynamical system, whose stable equilibrium points can be
abstracted to a discrete set of ""distinctive states.""
Trajectories linking these states can be abstracted to actions, giving
a discrete causal graph representation of the state space.  The causal
graph of states and actions can in turn be abstracted to a topological
network of places and paths.  Local metrical models, such as occupancy
grids, of neighborhoods of places and paths can then be built on the
framework of the topological network without their usual problems of
global consistency.


Mathematical Principles of Logic Programming
Vladimir Lifschitz
Logic programming, as well as its sister approach, functional
programming, is based on the view that a computer program does not
need to contain any explicit operational instructions.  Instead, it
can simply provide a set of facts about the problem that is sufficient
to solve it.  Such a ""declarative"" program can be executed
using methods of automated reasoning.  Prolog is the best known logic
programming language.
The mathematical theory of logic programming is concerned with
defining the semantics of logic programming languages, describing the
reasoning algorithms used to implement them, and investigating the
soundness of these algorithms.


Adaptive Libraries and High Level Optimization
Calvin Lin
This talk describes a new approach to building software libraries.
By making libraries that can adapt---in both their implementation and
their interfaces---to different application needs and different
hardware platforms, we can produce libraries that are more efficient
and more widely usable.  We describe a new framework for building such
libraries, we describe three planned experiments that apply these
techniques to libraries for parallel scientific computation, and we
explain how our approach facilitates high level optimizations.


Learning Sequential Decision Tasks Through Symbiotic Evolution of
Neural Networks
Risto Miikkulainen
A novel reinforcement learning method called SANE
(Symbiotic, Adaptive Neuro-Evolution) evolves a population of neurons
through genetic algorithms to form a neural network for a given task.
Symbiotic evolution promotes both cooperation and specialization in
the population, which results in a fast, efficient genetic search and
discourages convergence to suboptimal solutions.  SANE is able to
extract domain-specific information even under sparse reinforcement,
which makes it an effective approach to a broad range of sequential
decision tasks such as robot control, game playing, and resource
management.


Alamo: The Net as a Data Warehouse
Dan Miranker
The Alamo effort is directed at intra-net development, and
inter-net users who can enumerate interesting sites and data
sources. The goal is to integrate the data sources and provide the
user with the illusion of a single virtual database, followed by
query, analysis and presentation tools.
Central to the Alamo architecture is a software bus called the
Abstract Search Machine (ASM). The ASM is a CORBA compliant interface
that provides a uniform interface to heterogeneous data
sources. Beyond simple data access, the ASM embodies a higher level of
abstraction enabling the efficient coding of clever search algorithms
and separating and isolating system concerns, including buffering and
data prefetch.
The broad claim is that high performance, often optimal,
implementations of advanced database facilities such as an
object-oriented query engine, a deductive inference engine, an active
database engine and data mining facilities can all be constructed
using the ASM as a common interface.
Finally, since the output of each of these advanced database
facilities can themselves serve as data sources, the components of the
Alamo architecture can be composed to resolve higher level data
integration problems. In particular we anticipate using the elements
of Alamo itself to represent meta-data and resolve both structural and
semantic conflicts among the data sources. Ultimately, further
compositions will embody complex knowledge-bases and be able to answer
high-level queries.


Learning to Process Natural Language Using Inductive Logic
Programming
Raymond J. Mooney
Inductive Logic Programming (ILP) addresses the problem of learning
Prolog programs from examples.  The representational power of
first-order logic offers advantages over standard machine learning
methods constrained to use fixed-length feature vectors.  We are
applying ILP methods to natural-language learning where we believe
this richer representation offers important advantages.  We have
developed an ILP system, CHILL, for learning deterministic parsers
from a corpus of parsed sentences. CHILL obtains superior results on
several artificial corpora previously used to test neural-network
methods, and encouraging results on the more realistic ATIS corpus of
airline queries.  CHILL has also been used to the automatically
develop a complete natural-language interface that translates English
database queries into executable Prolog form, producing a more
accurate parser than a hand-built system for querying a small
geographic database.  We have also developed an ILP system, FOIDL,
which has been applied to learning the past tense of English,
surpassing the previous results of neural-network and decision-tree
methods on this problem.


Software Reuse by Specialization of Generic Procedures through
Views
Gordon S. Novak Jr.
Software reuse is clearly a good idea, but it is difficult to
achieve in practice: if your data does not fit the assumptions of the
software, reusing the software will be difficult.  In our approach,
views describe how application data types implement the abstract types
used in generic procedures.  A compilation process can specialize a
generic procedure to produce a version that is customized for the
application data.  Graphical user interfaces make it easy to specify
views.  An Automatic Programming Server has been implemented on the
World Wide Web; it will write specialized programs for the user, in a
desired language, and serve the source code to the user as a file.


Analysis of Algorithms

Greg Plaxton
A major focus of theoretical computer science is the design and
analysis of asymptotically efficient algorithms
(sequential/parallel/distributed, deterministic/randomized) for
specific computational problems.  In this research area, it is not
uncommon to come across well-written papers in which, informally: (i)
the main underlying ideas are conceptually straightforward, (ii) the
formal presentation is surprisingly lengthy, and (iii) most of the
formalism deals with minor side-issues and special cases that have
little or nothing to do with the main underlying ideas.  In such
papers, there seems to be a significant gap between the conceptual and
formal difficulty of the algorithm being presented.  Are such gaps
inherent, or is conventional mathematical notation simply inadequate
for succinctly formalizing certain conceptually straightforward
algorithmic ideas?
In this talk, I will describe a notation for asymptotic analysis,
called $O_i$-notation, that significantly reduces the
""conceptual-to-formal gap"" associated with a non-trivial
class of algorithms.  As a concrete example, I consider the analysis
of the well-known linear-time selection algorithm due to Blum, Floyd,
Pratt, Rivest, and Tarjan.


The Design and Evaluation of Parallel Algorithms
Vijaya Ramachandran
The design and analysis of efficient parallel algorithms for
combinatorial problems has been an area of extensive study in recent
years, and a large number of algorithms have been developed on the
abstract PRAM model of parallel computation.  In this talk we will
describe some of our work in the design of efficient parallel
algorithms, and our experience with implementing and evaluating these
algorithms on a massively parallel machine (Maspar MP-1). We will then
describe a ""queuing"" variant of the PRAM model, which we
propose as a more appropriate model for currently available parallel
shared-memory machines than traditional PRAM models.


Extensible Languages, Open Compilers, and Reflection
Paul Wilson
Extensible languages allow interesting new features to be added to
a language portably, from within the language itself.
Open compilers allow fairly easy modification of compilers to add
new features, analyses, and optimizations.
Reflection allows a program to examine a representation of
interesting parts of itself, and affect its own structure
accordingly.
I'll discuss these things, why they're useful for building modular,
portable, and adapatable software.  I'll also discuss our recent work
on the RScheme compiler, an open compiler for an extensible
language.



Last modified: November 15, 1996
Robert Blumofe
rdb@cs.utexas.edu



",course
"


CS372: Introduction to Operating Systems





CS372:Introduction to Operating Systems
Fall 1996 (47700)

 Lecture: Monday and Wednesday, 4:00 - 5:30, in GEO 112.
 Instructor: Robert Blumofe

 Office: Taylor 4.118
 Phone: 471-9557
 Email: 
rdb@cs.utexas.edu
 Office hours: Thursday 1:30 - 3:30,
but feel free to stop by any time.

 Teaching assistant: Subramanyam A. Gooty

 Office: UA-9 4.116
 Phone: 469-6050
 Email: 
gooty@cs.utexas.edu
 Office hours: Tuesday and Thursday, 3:30 - 5:00 at TA station #1.




An example solution to the programming assignment for Solaris can
be found in crypt.H and crypt.C.  This implementation does support multiple
mappings, but it assumes that mapped files are at least as long as the
mapping.  Example test programs can be found in encrypt.C and decrypt.C.


Assignments:

 Problem Set 1
 Problem Set 2
 Problem Set 3
 Programming Assignment 1
 Problem Set 4



Handouts:

 General Information
 Problem Set 1
 Problem Set 2
 Problem Set 1 Solutions
 Problem Set 2 Solutions
 Topics to be Covered in Midterm Exam
 Midterm Exam Solutions
 Problem Set 3
 Programming Assignment 1
 Problem Set 3 Solutions
 Problem Set 4
 Topics to be Covered in Final Exam
 Problem Set 4 Solutions



Reading:



Book Chapter(s)
Lecture Date(s)


Chapters 1-3
September 4


Chapter 4, except 4.4 and 4.6
September 9 and 11


Chapter 5, except 5.4, 5.5 and 5.6
September 16 and 23


Chapter 6, except 6.9
September 23 through October 7


Chapter 7, except 7.5, 7.7, and 7.8
October 9


Chapter 8
October 14 through 30


Chapter 9
October 30 through November 6


Chapters 10-12
November 13 through 20


Chapter 19, except 19.9
November 20 and 25


Chapter 13, except 13.5, 13.6, and 13.7
December 2






Last modified: December 18, 1996
Robert Blumofe
rdb@cs.utexas.edu



",course
"


CS378 Neural Networks, Fall 1996






 CS378  Neural Networks
Fall 1996, TTh 5-6:30pm, WAG 208, Unique number 47755

Instructor:

 Risto Miikkulainen 
risto@cs.utexas.edu, 471-9571 
Office hrs: TTh 6:30-7:30pm, TAY 4.142A

TA:

 Jim Bednar 
jbednar@cs.utexas.edu 
Office hrs: TTh 2:15pm - 3:15pm TA station #4

Texts:
- Laurene Fausett (1994). Fundamentals of
Neural Networks: Architectures, Algorithms and Applications.
Englewood Cliffs, NJ: Prentice
Hall
- Selected papers. 
- Class notes (copies of slides used in the lectures).

Grading:

35% Homework
25% Midterm (10/10/96, 5-6:30pm)
40% Final (12/12/96, 7-10pm)

More details:
What are neural networks?
Class Schedule
Homework assignments
Exams
Class Resources
A postscript version
of the syllabus



risto@cs.utexas.edu
Sun Sep  1 19:20:24 CDT 1996


",course
"


Introduction to Cognitive Science, Fall 1996






 Introduction to Cognitive Science
Fall 1996, TT 3:30-4:45pm, RAS 312

INSTRUCTORS:

 Nicholas M. Asher 
Psy 394U (38715), CGS 380 (27310), 
Phl 383 (37715), Lin 392 (35485)
Philosophy Dept.
403A Waggener Hall 
471-5433 
nasher@bertie.la.utexas.edu 
Office hours: TTh 2-3pm & by appt.

 Risto Miikkulainen 
CS 395T (47880)
Dept. of Computer Science 
4.142A Taylor Hall 
471-9571 
risto@cs.utexas.edu 
Office hours: TTh 6:30-7:30pm & by appt.

TEXTS:
 M. I. Posner
(Ed.), Foundations of Cognitive Science (MIT
Press), and a packet of readings.

REQUIREMENTS:
 Students will, at regular intervals, submit discussion notes
(short, 2-page critical commentaries) on the readings. In collaboration with
another student, you will also write a short paper (approximately
5-7 pages) discussing a significant research on topic you find of
interest.  Discussion notes count 60% towards the final grade and the
paper 40%. Class attendance and participation, and readings are also
required.

MORE DETAILS:
Course Description
Course Schedule
Discussion Notes
Personal Ads
Collaborative Paper
Class Resources
Student Questionnaire

USEFUL LINKS: 
The UT Cognitive Science Center has e.g. a list of cognitive science
faculty at UT, and pointers to Cognitive Science resources in general.




risto@cs.utexas.edu
Sun Sep  1 21:37:10 CDT 1996


",course
"
CS304P - Pascal Programming



CS304P: Pascal
Introductory Computer Programming
Instructor: Suzy Gallagher



Welcome to Pascal!


Programming is a fun and exciting intellectual challenge.
CS304P
is designed to give you a firm foundation in Pascal programming, and
so you will need to put some effort into it.  Read this page and the
Course Syllabus carefully.

This page is only a summary of the Course Syllabus,
which contains all the details of the assignments and other requirements as well
as important policies, and the schedules of due dates, exams and other
deadlines.
YOU ARE RESPONSIBLE FOR EVERYTHING IN THE
SYLLABUS!
Get one without delay.
Available at Jenn's Copies, 2200 Guadalupe.

Hundreds of students take
this course
each semester, so it is highly structured.  You are responsible for
all the details.  Monitor this page and the
newsgroup (utexas.class.cs304p)
frequently for updates.

This course may take more work than you are expecting, depending on how
well prepared you are.
In any event, this course can become extremely difficult if you get behind.
Due to the grading procedures, it is very risky to wait until near a deadline
to take a quiz or turn in a program.
A late quiz or program gets only HALF credit!
Waiting lines can become very long, hours before a deadline.
You have been warned.

Unfortunately, this Web Page is under construction this semester.
Many of the links go nowhere.
Our apologies.


 Everyone attends the lecture by Suzy Gallagher every Thursday
evening from 5:00 pm to 6:30 pm in Welch 2.224.

On Mondays and Wednesdays you will break out into
small group sections for discussion of
the material with a
Teaching Assistant.

 You will have nine 
  programming assignments 
that are written, debugged and graded in the
Programming Laboratory.  Note that
laboratory hours are limited, and that
grading hours are even less, and
you are responsible for scheduling your work to fit within those limits.

 You will take eight  quizzes  in the
Testing Room.  Note that
Testing Room hours are limited
and you are responsible for taking your quizzes before the deadlines.


 WARNING!  There are often long waits for
available proctors to grade assignments and quizzes for several hours
before a deadline.  You are responsible for submitting your programs and
quizzes early enough to be graded.


There are three exams which must be
taken at the prescribed times.  There are NO make-up exams!

As soon as possible at the beginning of the semester, you need to go to the
Test Room to get a file opened
for you, and a unique identifier assigned as your
Student Access Key, or
SAK.

The required
textbook is Pascal by Dale & Weems.  We
will cover Chapters 1 through 14.

Individual students' backgrounds vary considerably, so this
course is partially self-paced.  If you feel you are well prepared,
you may click here for details.  However,
you are still liable for ALL requirements in the syllabus.

You can use the
newsgroup (utexas.class.cs304p)
to communicate with the other students in the class.
For example, you could form study groups.
Many students also use it to gripe about this course.
Thoughtful articles of general interest may elicit a reply from the staff.



(Updated 3/18/96 phm)


",course
"CS 387H Database System Implementation


CS 387H - Database System Implementation
  Fall 1996
Professor : Don Batory 
  TA        : Tong Wang



 Syllabus
     Homeworks

 Problem Set #1 & Solution
 Problem Set #2 & Solution
 Problem Set #3 & Solution

 PROJECT ( Please read this first )
	     
 Test DML Files for Project #4 
 	          
  retrieve.dml 
			&  sample output 
  ret_into.dml 
                        &  sample output 
  replace.dml 
                        &  sample output 
  append.dml 
                        &  sample output 
  delete.dml 
                        &  sample output 

 DML Test Files for Project #5 
		  
 recovery1.dml
 recovery2.dml
 recovery3.dml
 recovery4.dml

 Raw Data Files for Project #4 and #5
                  
  emp.data
  dept.data
  student.data


 CONTEST
         In this contest, I run all MDBs on my benchmark ( a DML script and
         3 raw data files: emp.data, 
         student.data, 
	 dept.data ). 
         /usr/bin/time was used to measure the running time.
         Since the order of tuples and attributes in each tuple may be
	 different from one output to another, I wrote a 
         Perl script to
	 transform different outputs into the same order so that I can compare 
         (/usr/bin/diff) them. It turns out that 
         10 programs passed the
	 benchmark without any error. Other programs failed to pass for
	 some reasons. You can test it by yourself, here's a 
         sample output.
 



 Please email 
     your suggestions or comments to me
Dec 96,   Tong Wang

",course
"


CS Courses




CS Courses


 Fall 96
 Spring 97


Additional course information may be maintained by the individual
faculty members.
Consult the 
CS class web pages.
For additional information contact
gloria@cs.utexas.edu
",course
"
CS380L: Advanced Operating Systems 



CS380L: Advanced Operating Systems 

Instructor:  Harrick M. Vin 




 Table of Contents 


  Course Description

  General Information
  Prerequisite
  Synopsis
  Textbook(s)
  Course Requirements

  Reading List: Fall 1994

  Early Ideas and Systems
  Distributed File/OPerating Systems
  Real-time Operating Systems
  System Support for Wireless/Mobile Computing





 Course Description


 General Information

 Course Title:  CS380L: Advanced Operating Systems 
 Instructor: bf Professor Harrick Vin  
 Last Offered:  Fall 1994


 Prerequisite

Graduate standing and an undergraduate course in operating systems
such as CS 372. Students are expected to be familiar with the material
in chapters 1-12 of ""Operating Systems Concepts"" by Peterson and
Silberschatz.


 Synopsis

CS 380L is a breadth course in advanced operating systems covering
both theoretical and practical issues in operating system
design. Topics to be covered include design and implementation of
distributed and real-time operating systems, system support for
mobile/wireless computing environments, and some case studies. An
emphasis will be placed on current design issues and research topics.


 Textbook(s)

A collection of research articles will be made available by the
instructor.


 Course Requirements

Students will be required to read a number of papers in the area and
discuss them. Grades will be determined by two examinations (50%), a
term project (40%), and project presentation (10%).



 Reading List: Fall 1994


 Early Ideas and Systems


Fernando J. Corbato, Marjorie Merwin-Daggett, and Robert C. Daley ``An
Experimental Time-Sharing System'', AFIPS Proceedings of the 1962
Spring Joint Computer Conference, Pages 335-344, 1962

Per Brinch Hansen, ``The Nucleus of a Multiprogramming System,''
Communications of the ACM, 13, 4, Pages 238-250, April 1970

A. Bensoussan, C.T. Clingen, and R.C.  Daley, ``The Multics Virtual
Memory: Concepts and Design,'' Communications of the ACM, 15, 5, Pages
308-318, May 1972

Dennis M. Ritchie and Ken Thompson, ``The UNIX Time-Sharing System'',
Communications of the ACM, Vol. 17, No. 7, Pages 365-375, July 1974
 
 Distributed File/Operating Systems


 Overview Papers:

Andrew S. Tannenbaum and Robbert van Renesse, ``Distributed Operating
Systems'', Computing Surveys, Vol. 17, No. 4, Pages 419-470, December
1985 

E. Levy and A. Silberschatz, ``Distributed File Systems: Concepts and
Examples'', ACM Computing Surveys, Vol. 22, No. 4, Pages 321-374,
December 1990


 Process and Thread Management

A. Tucker and A. Gupta, ""Process Control and Scheduling Issues for
Multiprogrammed Shared-Memory Multiprocessors,"" Proceedings of the
12th SOSP, Operating Systems Review, 23, 5, Pages 159-166, December
1989.

Thomas E. Anderson, Edward D. Lazowska, and Henry M. Levy, ``The
Performance Implications of Thread Management Alternatives for
Shared-Memory Multiprocessors'', IEEE Transactions on Computers, Vol.
38, No. 12, Pages 1631-1644, December 1989


 Scheduling

R. B. Bunt, ""Scheduling  Techniques  for  Operating Systems,"" IEEE Computer,
9, 10, Pages 10-17, October 1976.

D. L. Black, ""Scheduling Support for Concurrency and Parallelism in
the Mach Operating System,"" IEEE Computer, 23, 5, Pages 35-43, May 1990.


 Inter-Process Communication

J.S. Barrera, ``A Fast Mach Network IPC Implementation'', In
Proceedings of the Usenix Mach Symposium, November 1991

D.R. Cheriton, ``Distributed Process Groups in V kernel'', ACM
Transactions on Computer Systems, Vol. 2, No. 2, Pages 77-107, May 1985


 Remote Procedure Call:

Andrew Birell and Bruce Nelson, Implementing RPCs, ACM Transactions on
Computer Systems, Vol. 2, No. 1, Pages 39-59, February 1984.

B. Bershad, T. Anderson, E. Lazowska, and H. Levy, ``Lightweight
Remote Procedure Call'', Proceedings of the 12th ACM Symposium on
Operating Systems Principles, Operating Systems Review, Vol. 23, No. 5,
Pages 12-113, December 1989 


 Process Migration

F. Douglis and J. Ousterhout, ``Process Migration in the Sprite
Operating System'', In Proceedings of the IEEE International
Conference on Distributed Computing Systems, Berlin, Germany, Pages
18-25, September 1987

M.Theimer, K.Lantz, D.Cheriton, ``Preemptable Remote Execution'',
Proceedings of the 10th SOSP, Operating Systems Review, Vol. 19, No.
5, Pages 2-12, December 1985


 Fault Tolerance

F. Cristian, ``Basic Concepts and Issues in Fault-Tolerant Distributed
Systems'', In International Workshop on Operating Systems of the 90s
and Beyond, A. Karshmer and J. Nehmer (Eds), Springer-Verlag, 1991

K. Birman and T. Joseph, ``Reliable Communication in the Presence of
Failures'', ACM Transactions on Computer Systems, Vol. 5, No. 1, Pages
47-76, February 1987 


 File Systems

R. Sandberg, D. Goldberg, S. Kleiman, ""Design and Implementation of
Sun NFS,"" Proceedings of Summer 1985 USENIX Conference, Pages 119-130,
June 1985

M.K McKusick, W. N. Joy, S. J. Leffler, and R.  S.  Fabry, ""A Fast
File System for UNIX,"" ACM Transactions on Computer Systems, Vol. 2,
No. 3, Pages 181-197, August 1984

M. Rosenblum and J. Ousterhout, ""The Design and Implementation of a
Log-Structured File System,"" Proceedings of the 13th SOSP, Operating
Systems Review, November 1991.


 Caching in Distributed Systems

M. Schroeder, D. Gifford, and R. Needham, `` A caching file system for
a programmer's workstation'', Proceedings of the 10th SOSP, Pages
25-34, 1985

D.B. Terry, `` Caching Hints in Distributed Systems'', IEEE
Transactions on Software Engineering, SE-13, Vol. 1, Pages
48-54,January 1987


 Protection and Security

R. Needham and M. Schroeder, ""Using encryption for authentication in
large networks of computers,"" Communications of the ACM, Vol. 21, No.
12, Pages 993-999, December 1978.

Butler Lampson, ""Protection,"" Operating Systems Review, 8, 1, Pages
18-24, January 1974.  Originally in Proc. 5th Princeton Symposium on
Information Sciences and Systems,Systems, Princeton, March 1971.


 Kernels:

D. Cheriton, ``The V Distributed System'', Communications of the ACM,
Vol. 31, No. 3, Pages 314-333, March 1988

M. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevanian,
and M. Young, ``Mach: A New Kernel Foundation for UNIX Development'',
In Proceedings of the USENIX Summer Conference, Pages 81-92, June 1986 

 
 Real-time Operating Systems


H. Kopetz, ``Event-Triggered versus Time-Triggered Real-Time
Systems'', In the Proceedings of the International Workshop on
Operating Systems of the 90s and Beyond, Germany, A. Karshmer and J.
Nehmer (Eds), Springer-Verlag, Pages 87-101, 1991

C. L. Liu and J. W. Layland, ``Scheduling Algorithms for
Multiprogramming in a Hard-Real-Time Environment'', Journal of the
ACM, Vol. 20, No. 1, Pages 46-61, January 1973

W. Zhao, K. Ramamritham, and J. Stankovic, ``Preemptive Scheduling
Under Time and Resource Constraints'', IEEE Transactions on Computers,
Vol. C-36, No. 8, Pages 949-960, August 1987

H. Tokuda and C. Mercer, ``ARTS: A Distributed Real-Time Kernel'',
Operating Systems Review, Vol. 23, No. 3, Pages 29-53, July 1989
 
 System Support for Wireless/Mobile Computing


B.R. Badrinath, A. Acharya, and T. Imielinski, ``Impact of Mobility on
Distributed Computations'', Operating Systems Review, Vol. 27, No. 2,
Pages 15-20, April 1993

M. Satyanarayanan, J. Kistler, P. Kumar, M. Okasaki, E. Siegel, and D.
Steer, ``Coda: A Highly Available File System for a Distributed
Workstation Environment'', IEEE Transactions on Computers, Vol. c-39,
No. 4, Pages 447-459, April 1990



Harrick Vin 
Thu Sep 14 9:37:26 CDT 1995



",course
"
CS384M: Multimedia Systems 



CS384M: Multimedia Systems 

Instructor:  Harrick M. Vin 




 Table of Contents 


  Course Description

  General Information
  Prerequisites
  Synopsis
  Textbook(s)
  Course Requirements
  Office Hours 
  Teaching Assistant 

  Reading List: Spring 1995

  Overview of Technology, Trends, and Prob
lems
  Media Compression
  Multimedia Storage Servers
  Network Architectures and Multimedia
  Application Protocols
  Operating System Support for Multimedia
  Multimedia Databases

 Class Handouts and Notes (postscript format)

  Course Description and Reading List 
  Overview of Technology, Trends, and Problems (September 4, 1996)
  Video Compression Fundamentals (September 9, 1996)
  JPEG and MPEG Compression Algorithms (September 11-16, 1996)
  Scalable Compression Algorithms (September 18, 1996)
  Multimedia Servers: Design Issues (September 23, 1996)
  Placement Issues in Multimedia Server Design (September 25-30, 1996)
  Retrieval Issues in Multimedia Server Design (October 2-9, 1996)
  List of Possible Projects (October 9, 1996)
  Caching and Batching Techniques (October 14-16, 1996)
  Integrated Services Networks: An Introduction (November 4, 1996)
  Algorithm for Real-time Channel Establishment (November 6, 1996)
  Packet Scheduling Algorithms and Analysis (November 13, 1996)
  Operating System Support for Multimedia (November 18, 1996)
  Processor Scheduling Techniques (November 20, 1996)
  Transport Protocol Issues (December 2, 1996)



Course Description

General Information

Course Title: CS384M: Multimedia Systems 
Instructor: Professor Harrick M. Vin 
Course Details: Offered in Fall 1996, Unique number: 47815 
Time and Place: MW 5:00 - 6:30, Taylor Hall 2.106


Prerequisites

Graduate standing and familiarity with basic concepts in
computer networks and operating system design.


Synopsis

CS 384M is a course in advanced systems covering both
theoretical and practical issues in designing multimedia
systems. Topics to be covered include introduction to multimedia
systems, digital video compression techniques, operating system
support for digital audio and video, as well as network and transport
protocols for multimedia. An emphasis will be placed on current design
issues and research topics.


Textbook

A collection of recent research articles will be made
available by the instructor.


Course Requirements

The instructor will introduce basic concepts on each of the
topics. This will be followed by in-class discussions on related
papers in a question-answer format. Students will be expected to
understand, describe, and critique the research contributions of
papers. Additionally, each student will be expected to carry out a
semester-long implementation project.

Grades will be determined by a project, examinations, and
class participation.


Office Hours for Harrick Vin

Tuesday 4:00 - 5:30, TAY 4.115B 
By appointment: Phone: 471-9732, E-mail: vin@cs.utexas.edu
 
Teaching Assistant

Mr. Prashant J. Shenoy 
Office Hours: W 3:30 - 5:00, TAY 2.148  
By appointment: E-mail: shenoy@cs.utexas.edu


Reading List: Fall 1996




The course packet cntaining a copy of all the papers in the
reading list will be available from  Monday, September 9, 1996 
from  Speedway Copying , located in Dobie Mall, 2025 Guadalupe,
Austin, TX 78705. Their phone number is (512) 478-3334. Please call
them to make sure that the package is ready before you go over.


Video Compression


R. Steinmetz, ``Data Compression Techniques in Multimedia computing
- Principles and Techniques'', ACM Multimedia Systems, Vol. 1, Pages
166-172, 187-204, 1994
G.K. Wallace, ``The JPEG Still Picture Compression Standard'',
Communications of the ACM, Vol. 34, No. 4, Pages 31-44, April 1991.
D. Le Gall, ``MPEG: A Video Compression Standard for Multimedia
Applications'', Communications of the ACM, Vol. 34, No. 4, Pages
46-58, April 1991.
T. Chiang and D. Anastassiou, ``Hierarchical Coding of Digital
Television'', IEEE Communications Magazine, Vol. 32, pp. 38-45, May
1994


 
Multimedia Storage Servers


Overview:

P. Shenoy, P. Goyal, and H.M. Vin, ``Issues in Multimedia Server
Design'', ACM Computing Surveys, Vol. 27, No. 4, Pages 636-639,
December 1995
D.J. Gemmell, H. M. Vin, D.D. Kandlur, P. Venkat Rangan and L. Rowe,
``Multimedia Storage Servers: A Tutorial and Survey'', IEEE Computer,
Vol.  28, No. 5, Pages 40-49, May 1995

Efficient Placement Techniques:

H. M. Vin, S. Rao and P. Goyal, ``Optimizing the Placement of
Multimedia Objects on Disk Arrays'', In Proceedings of the IEEE
International Conference on Multimedia Computing and Systems
(ICMCS'95), Washington, D.C., Pages 158-165, May 1995
H. M. Vin, P.J. Shenoy, and S. Rao, ``Efficient Failure Recovery in
Multi-Disk Multimedia Servers'', In Proceedings of the 25th Annual
International Symposium on Fault Tolerant Computing (FTCS-25),
Pasadena, California, Pages 12-21, June 1995
T. Chiueh and R.H. Katz, ``Multi-Resolution Video Representation for
Parallel Disk Arrays'', Proceedings of ACM Multimedia'93, Anaheim, CA,
Pages 401-410, August 1993

Retrieval Techniques and Admission Control Algorithms:

P. Yu, M.S. Chen, and D.D. Kandlur, ``Design and Analysis of a Grouped
Sweeping Scheme for Multimedia Storage Management'', In Proceedings of
Third International Workshop on Network and Operating System Support
for Digital Audio and Video, San Diego, Pages 38-49, November 1993
A.L. Narasimha Reddy and J. Wyllie, ``Disk Scheduling in Multimedia
I/O System'', In Proceedings of ACM Multimedia'93, Anaheim, CA, Pages
225-234, August 1993
H.M. Vin, P. Goyal, A. Goyal and A. Goyal, ``A Statistical Admission
Control Algorithm for Multimedia Servers'', In Proceedings of the ACM
Multimedia'94, San Francisco, Pages 33-40, October 1994
H. M. Vin, A. Goyal and P. Goyal, ``Algorithms for Designing
Large-Scale Multimedia Servers'', Computer Communications, Vol. 18,
No. 3, Pages 192-203, March 1995
P.J. Shenoy and H.M. Vin, ``Efficient Support for Scan Operations in
Multimedia Servers'', In Proceedings of the ACM Multimedia'95, San
Francisco, CA, Pages 131-140, November 1995
M.S. Chen and D.D. Kandlur, ``Stream Conversion to Support Interactive
Video Playout'', IEEE Multimedia Magazine, Vol. 3, No. 2, Pages 51-58,
Summer 1996

Buffer Space Management and Caching:

A. Dan, D. Sitaram and P. Shahabuddin, ``Dynamic Batching Policies for
an On-Demand Video Server'', ACM Multimedia Systems, Vol. 4, No. 3,
Pages 112-121, June 1996
A. Dan and D. Sitaram, ``Buffer Management Policy for an On-Demand
Video Server'', IBM Research Report RC 19347, October 1994
C.H. Papadimitriou, S. Ramanathan, and P. Venkat Rangan, ``Information
Caching for Delivery of Personalized Video Programs on Home
Entertainment Channels'', In Proceedings of the International
Conference on Multimedia Computing and Systems (ICMCS'94), Boston,
Pages 214-223, May 1994



Network Architectures For Multimedia


Network Layer Issues for Multimedia:

S. Shenker, ``Fundamental Design Issues for the Future Internet'',
IEEE Journal of Selected Areas in Communications, Vol. 13, Pages
1176-1188, September 1995
D. Ferrari and D. C. Verma, ``A Scheme for Real-Time Channel
Establishment in Wide-Area Networks'', IEEE Journal on Selected Areas
in Communications, Vol. 8, No. 3, Pages 368-379, April 1990.
H. Zhang and S. Keshav, ``Comparison of Rate-Based Service
Disciplines'', In Proceedings of ACM SIGCOMM'91, August 1991.
P. Goyal, S.S. Lam, and H.M. Vin, ``Determining End-to-End Delay
Bounds In Heterogeneous Networks'', ACM Multimedia Systems (to
appear), 1996 (Also in Proceedings of the 5th International Workshop
on Network and Operating System Support for Digital Audio and Video
(NOSSDAV'95), Durham, New Hampshire, Pages 287-298, April 1995
S.S. Lam, S. Chow, and D.K.Y. Yau, ``An Algorithm for Lossless
Smoothing of MPEG Video'', In Proceedings of ACM SIGCOMM'94, London,
September 1994
J. Salehi, Z. Zhang, J. Kurose, and D. Towsley, ``Supporting Stored
Video: Reducing Rate Variability and End-to-End Resource Requirements
through Optimal Smoothing'', In Proceedings of ACM SIGMETRICS'96,
Philadelphia, PA, May 1996
M. Grossglauser, S. Keshav, and D. Tse, ``RCBR: A Simple and Efficient
Service for Multiple Time-Scale Traffic'', In Proceedings of ACM
SIGCOMM'95, Pages 219-230, August 1995
H. Kanakia, P.P. Misra, and A. Reibman, ``An Adaptive Congestion
Control Scheme for Real-Time Packet Video Transport'', In Proceedings
of ACM SIGCOMM'93, Computer Communications Review, Vol. 23, No. 4, Pages
20-32, October 1993

Multimedia Transport Protocols:

D. Clark and D. Tennenhouse, ``Architectural Consideration for a New
Generation of Protocols'', In Proceedings of the ACM SIGCOMM'90, 1990
A. Campbell, G. Coulson, and D. Hutchison, ``A Quality of Service
Architecture'', Computer Communication Review, Vol. 24, No. 2, Pages
6-27, April 1994
C.J. Turner and L. Peterson, ``Image Transfer: An End-to-End Design'',
In Proceedings of SIGCOMM'92, Computer Communications Review, Vol. 22,
No. 4, Pages 258-268, October 1992
S. Floyd, V. Jacobson, S. McCanne, L. Zhang, and C. Liu, ``A Reliable
Multicast Framework for Light-weight Sessions and Application Level
Framing'', In Proceedings of ACM SIGCOMM'95, Boston, MA., Pages
342-356, August 1995
I. Busse, B. Deffner, and H. Schulzrinne, ``Dynamic QoS Control of
Multimedia Applications based on RTP'', Computer Communications,
January 1996
G. Blakowski and R. Steinmetz, ``A Media Synchronization Survey:
Reference Model, Specification, and Case Studies'', IEEE Journal on
Selected Areas in Communications, Vol. 4, No. 1, Pages 5-35, January
1996



Operating System Support For Multimedia


G. Coulson, A. Campbell, P. Robin, G. Blair, M. Papathomas, and
D. Shepherd, ``The Design of a QoS-Controlled ATM-Based
Communications System in Chorus, IEEE Journal on Selected Areas in
Communications, Vol. 13, No. 4, Pages 686-699, May 1995 
P. Druschel, M.B. Abbott, M. Pagels, and L. Peterson, ``Analysis of
I/O Subsystem Design for Multimedia Workstation'', In Proceedings of
the Third International Workshop on Network and Operating Systems
Support for Digital Video and Audio, San Diego, Pages 289-301,
November 1992.
R. Govindan and D.P. Anderson, ``Scheduling and IPC Mechanisms for
Continuous Media'', Proceedings of 13th ACM Symposium on Operating
Systems Principles, Pacific Grove, CA, Pages 68-80, October 1991
P. Goyal, X. Guo, and H.M. Vin, ``A Hierarchical CPU Scheduler for
Multimedia Operating Systems'', In Proceedings of the Second Symposium
on Operating Systems Design and Implementations (OSDI'96), Seattle,
Washington, October 1996


 
Application: Multimedia Conferencing


H.M. Vin, P. T. Zellweger, D. C. Swinehart, and P. Venkat
Rangan, ``Multimedia Conferencing in the Etherphone Environment'',
IEEE Computer, Vol. 24, No. 10, Pages 69-79, October 1991
S. McCanne and V. Jacobson, ``vic: A Flexible Framework for Packet
Video'', In Proceedings of the ACM Multimedia'95, San Francisco, CA.,
Pages 511-522, November 1995



Harrick Vin 
Sun Sep  8 13:47:47 CDT 1996



",course
"
CS395T: Multimedia Communication and Databases 



CS395T: Multimedia Communication and Databases 
Fall 1995

Instructor:  Harrick M. Vin 




 Table of Contents 


  Course Description

  General Information
  Prerequisites
  Synopsis
  Textbook(s)
  Course Requirements
  Office Hours

  Reading List

  Multimedia Conferencing
  Routing and Multicasting
  Internet Services
  Processor Scheduling and OS Support
  Multimedia Databases

 

 Course Description

 General Information

 Course Title:   CS395T: Multimedia Communication and Databases  
 Instructor:   Professor Harrick M. Vin  
 Semester:   Fall 1995  
 Meeting Time:   Friday 10:00 - 1:00, TAY 3.144  
 Prerequisites

Graduate standing, familiarity with basic concepts in network
protocols and operating system design, and the CS395T: Multimedia
Systems course.

 Synopsis

This is an advanced course in multimedia systems. Topics to be
discussed in this course include: transport protocol design for
multimedia, routing and multicasting, mobile networking and
multimedia, operating system support for multimedia, and multimedia
databases. An emphasis will be placed on current design issues and
research topics.

 Textbook(s)

A collection of research articles will be made available by the
instructor.

 Course Requirements

Students will be required to read a number of papers in the area as
well as present and discuss them in class. Grades will be determined
based on paper presentations and class participation. Students
enrolling for a letter grade will be required to submit a paper and/or
carry out a project.

 Office Hours


Friday 2:00 - 3:00, TAY 4.115B 
 By appointment:  Phone: 471-9732, E-mail: vin@cs.utexas.edu 

 Reading List

 Multimedia Conferencing


S. McCanne and V. Jacobson,  ``vic: A Flexible
Framework for Packet Video'', In  Proceedings of the ACM
Multimedia'95, San Francisco, CA., November 1995

M. Handley, I. Wakeman, and J. Crowcroft, ``The Conference Control
Channel Protocol (CCCP): A Scalable Base for Building Conference
Control Applications'', In  Proceedings of ACM SIGCOMM'95,
Boston, MA., 1995

H. Gajewska, J. Kistler, M. Manasse, and D. Redell, ``Argo: A System
for Distributed Collaborations'', In  Proceedings of the ACM
Multimedia'94, San Francisco, CA., November 1994

F. Gong, ``Multipoint Audio and Video Control for Packet-based
Multimedia Conferencing'', In  Proceedings of the ACM
Multimedia'94, San Francisco, CA., November 1994

H.M. Vin, P.T. Zellweger, D.C. Swinehart, and P. Venkat Rangan,
``Multimedia Conferencing in the Etherphone Environment'',  IEEE
Computer, Vol. 24, No. 10, October 1991

 Routing and Multicasting


S. Deering and D. Cheriton, ``Multicast Routing in Datagram
Internetworks and Extended LANS'',  ACM Transactions on Computer
Systems, Vol. 8, No. 2, Pages 85-110, May 1990

T. Ballardie, P. Francis, and J. Crowcroft, ``Core Based Trees
(CBT): An Architecture for Scalable Inter-Domain Multicast Routing'',
In  Proceedings of SIGCOMM'93 , Pages 85-95, 1993

A. Thyagarajan and S. E. Deering, 
``Hierarchical Distance Vector Multicast Routing for the MBone'',
In  Proceedings of ACM SIGCOMM'95, Boston, MA., 1995

R. Widyono,  ``The Design and
Evaluation of Routing Algorithms for Real-time Channels'', MS
Thesis, UC Berkeley, 1994 

V. Kompella, J C. Pasquale, and G C. Polyzos,  ``Multicast Routing for Multimedia
Communication'', Technical Report, University of California 
at San Diego, 1994

S. Floyd, V. Jacobson, S. McCanne, L. Zhang, and C. Liu,  ``A Reliable Multicast Framework for Light-weight
Sessions and Application Level Framing'', In  Proceedings of
ACM SIGCOMM'95, Boston, MA., 1995

H. W. Holbrook, S. K. Singhal and D. R. Cheriton,  ``Log-Based Receiver-Reliable Multicast for
Distributed Interactive Simulation'', In  Proceedings of the
ACM SIGCOMM'95, Boston, MA., 1995

S. Herzog, D. Estrin and S. Shenker, 
``Sharing the Cost of Multicast Trees: An Axiomatic Analysis'', In
 Proceedings of ACM SIGCOMM'95, Boston, MA., 1995

A. Gupta, W. Howe, M. Moran, and Q. Nguyen,  ``Resource Sharing for multi-party real-time
communication'', In  Proceedings of Infocom'95. , 1995

 Internet Services


J. D. Guyton and M. F. Schwartz, 
``Locating Nearby Copies of Replicated Internet Servers'', In 
Proceedings of ACM SIGCOMM'95,  1995

J. C. Mogul,  ``The Case for
Persistent-Connection HTTP'', In  Proceedings of ACM
SIGCOMM'95,  1995

 Processor Scheduling and OS Support


C. Warldersburg and W. E. Weihl,  ``Lottery Scheduling: Efficient, Flexible
Proportional Share Resource Mangement'', In  Proceedings of
Operating System Design and Implementation (OSDI), 1994

C. Warldersburg and W. E. Weihl,  ``Stride
Scheduling: Deterministic Proportional-Share Resource
Management'', Technical Report MIT/LCS/TM-528, 1995

S.J. Golestani, ``A Self-Clocked Fair Queueing Scheme for High Speed
Applications'', In  Proceedings of INFOCOM'94, 1994

R. Govindan and D.P. Anderson, ``Scheduling and IPC Mechanisms for
Continuous Media'', In  Proceedings of the ACM Symposium on
Operating Systems Principles (SOSP), Monterey, CA., 1991

K. Jeffay,  ``The Real-Time
Producer/Consumer Paradigm: A paradigm for the construction of
efficient, predictable real-time systems'', In  Proceedings of
the ACM/SIGAPP Symposium on Applied Computing, 1993

K. Jeffay, ``On latency Management in
Time-Shared Operating Systems'', In  11th Workshop on Real-Time
Operating Systems and Software, Seattle, May 1994

 Multimedia Databases


W. Niblack et al., ``The QBIC Project: Querying Images by Content
Using Color, Texture, and Shape'', IBM Technical Report, February 1993

A. Cawkell, ``Picture Queries and Picture Databases'', Journal of
Information Science, Vol. 19, Pages 409-423, 1993

J.R. Bach, S. Paul, and R. Jain, ``An Interactive Image Management
System for Face Information Retrieval'', IEEE Transaction on Knowledge
and Data Engineering, Vol. 5, No. 4, Pages 619-628, August 1993.

A. Gupta, T. Weymouth, and R. Jain, ``Semantic Queries with Pictures:
VIMSYS Model'', In Proceedings of 17th International Conference on
Very Large Databases, 1991



Harrick Vin 
Thu Sep 14 10:37:26 CDT 1995



",course
"CS388G: Algorithms: Techniques and Theory, Fall 1996
 CS388G: Algorithms: Techniques and Theory, Fall 1996

Instructor: Vijaya Ramachandran

Unique Number: 47840 



 Course Description (Course Handout 1)

 Course Handout 2

 Home Work 1

 Home Work 2

 Home Work 3

 Home Work 4

 Home Work 5

 Home Work 6

 Final Exam Instructions

 
.

 FINAL EXAM UPDATES:


Here are my responses to all questions I have received so far.
(The questions posed are in quotes.)




``Problem 1 a) the last sentence "" ... takes more time on sigma' than on
sigma."" What does the word ""time"" refer? Amortized time ot Total time or
others?''


ANSWER: Total time.



``Problem 1 ) well-known faces: 
Any data structure for disjoint sets requires Big-Omega(ma(m,n)) time in
the worst case, but in our text book it is Big-O, not Big-Omega, is
there any difference?''


 ANSWER: I meant Big-Omega (see the first sentence of the second paragraph
of the Chapter notes on p. 461).



``Problem 4) the last sentence: ""... no two vertices on the cycle contain
distinct labels from the same Li?"" , so two vertices on the cycle can
contain same labels , right?''


 ANSWER: Right.



``I think the problem 3 in the final exam is a little unclear. 
Does f(X) denote the size of the largest true k x k submatrix or the 
size of the largest true l x m submatrix of X, where l does not have 
to equal to m?''


 ANSWER: A submatrix of X is ""true"" only if it is k x k for some
k and all of its k^2 entries are true. 




.


 Updated on Friday, December 6.

 New Update on Monday, December 9: 

 I have received some questions on the final exam, but I will not be
posting either the questions or answers to the questions. If you
have sent me a question, please address it yourself using your
best judgment.



",course
"CS 345 (Wilson)---Class Page
CS 345, Programming Languages (Wilson)---Class Page

This is the home page for  Paul
Wilson's CS345 class.


THIS PAGE IS UNDER CONSTRUCTION.  Things are subject to change.

BECAUSE THINGS MAY CHANGE, you should hit the RELOAD BUTTON in your
browser when you come to this page, to make sure you're seeing the most
recent version.

 Online Course Readings and Reference Material 



Syllabus 

 Lecture Notes on

Declarative Programming .



Course Notes on Scheme and its Implementation in html for web browsing.


These notes are under construction.  Only the first few sections are
reasonably well indexed for browsing, and the later sections will
change as the course goes along.  Reading far ahead of the class is
likely to be an adventure.


I suggest that you use this web page with a browser while using
a Scheme system interactively.  (Especially while working through
chapter 3, the tutorial.)  This will allow you to cut text out
of the document and paste it into a running Scheme system.


THERE ARE ERRORS IN THIS TEXT, especially the later chapters.  That's
another reason to read the html version with a browser, rather than
printing out a hardcopy.  I'll correct most of the errors before we
get to those chapters.



The R4RS (Scheme language definition)  in html format for online
browsing.  This lists all of the standard features of Scheme and (tersely)
describes what they do.  For most stuff in this course, my Scheme course
notes will be more helpful, but if you want to know about miscellanous
functions and exactly what they do, this is the authority.

 First set of 

Practice Questions .  There's also a version with 

answers . 

 Second set of 

Practice Questions .  There's also a version with 

answers . 



Quiz 1 (with answers) . 

 Third set of 

Practice Questions .  There's also a version with 

answers . 



Notes on naming conventions and indenting for Scheme, which you should
consult when doing homework so that I can read your code and grade it
sensibly, and

notes on drawing data structures.



Homework assignment on writing merge sort in Scheme, and 

my solutions to the first three problems.  (Commented Scheme code.)



Notes on a simple reader, including regular expressions, BNF grammar,
and the actual code in Scheme.



Scheme code for a simple backward-chaining propositional calculus theorem
prover, which is essentially a little subset of Prolog, and a set
of

rules for classifying animals, i.e., a logic program about kinds of
animals, to play with using the theorem prover.



A picture of some class objects and instances  to illustrate the simple
object system from the Scheme notes, and 

another picture showing class objects and the metaclass object,
illustrating the circularity that makes the latter self-describing.



Scheme code for a simple object-based programming system  based on
classes and generic procedures (inheritance not implemented yet).



Notes on type systems, including inheritance and subtyping.



Take-Home Quiz and the 

answers (and some explanations).



Test 2 and a version of 

Test 2 with Answers (and some explanations).



The main language we'll be using in this course is  Scheme ,
and by default the implementation to use is  RScheme , which
is installed on the public cs SPARCs (running Solaris) and RS6000's
(running AIX).  On the CS machine, you run RScheme with the command
 /p/bin/runscheme .


If you use your own machine, and you're running Linux or Solaris or
any of several other implementations of UNIX, you can get RScheme and
install it on your machine---it's free.  You can find it
from 
Donovan Kolbly's Home Page .  Be sure to get version 0.7 or later,
and ask the TA (Zhu Qing) for a patch to make it friendlier for
newbies.


If you're using your own machine, and it's a Mac, I recommend getting
Gambit, Marc Feeley's implementation of Scheme.  It's free too.  You
can get it from the Scheme Repository (see below).


If you're using a PC running Windows or DOS, I'm not sure what the best
Scheme to get is.  There are a bunch available at the Scheme Repository.
 do not  use MIT Scheme or Guile---they're not standard Scheme.
You might try Gambit-C by Mark Feeley, or MzScheme, from Rice.


If you use something besides RScheme, I recommend getting the Meroon 
(version 3) object system from the Scheme Repository when we start doing
object-oriented programming.  For a few assignments, you may have to
use RScheme under UNIX to take advantage of RScheme's object system,
but for most things you should be able to use Meroon.

 The Scheme Repository 

The 
Scheme Repository  at the University of Indiana has lots of free
implementations of Scheme, and various documents on Scheme.  If you get
interested in learning more about Scheme than we cover in this class,
that's the place to look.

 comp.lang.scheme 

There is an internet newsgroup devoted to Scheme, comp.lang.scheme.



The main language we'll be using in this course is  Scheme ,
and by default the implementation to use is  RScheme , which
is installed on the public cs SPARCs (running Solaris) and RS6000's
(running AIX).  On the CS machine, you run RScheme with the command
 /p/bin/runscheme .


If you use your own machine, and you're running Linux or Solaris or
any of several other implementations of UNIX, you can get RScheme and
install it on your machine---it's free.  You can find it
from 
Donovan Kolbly's Home Page .  Be sure to get version 0.7 or later,
and ask the TA (Zhu Qing) for a patch to make it friendlier for
newbies.


If you're using your own machine, and it's a Mac, I recommend getting
Gambit, Marc Feeley's implementation of Scheme.  It's free too.  You
can get it from the Scheme Repository (see below).


If you're using a PC running Windows or DOS, I'm not sure what the best
Scheme to get is.  There are a bunch available at the Scheme Repository.
 do not  use MIT Scheme or Guile---they're not standard Scheme.
You might try Gambit-C by Mark Feeley, or MzScheme, from Rice.


If you use something besides RScheme, I recommend getting the Meroon 
(version 3) object system from the Scheme Repository when we start doing
object-oriented programming.  For a few assignments, you may have to
use RScheme under UNIX to take advantage of RScheme's object system,
but for most things you should be able to use Meroon.

 The Scheme Repository 

The 
Scheme Repository  at the University of Indiana has lots of free
implementations of Scheme, and various documents on Scheme.  If you get
interested in learning more about Scheme than we cover in this class,
that's the place to look.

 comp.lang.scheme 

There is an internet newsgroup devoted to Scheme, comp.lang.scheme.

",course
"

CS 105 C++ Fall 1996




CS 105 - Computer Programming: C++ 
Fall 1996


Welcome to the homepage for CS105 C++ at UT Austin. 
   The class is taught by Will Adams and 
   Ajit George. 


Course Announcement

 The final is over now! If it's a surprise to you, contact Xun
NOW for the make up test. -- Most likely it will be on 12/7.
    
Solution for all the homeworks
Review sessions' slides
The slides for the second half of the semester. Please view them online
if possible. Only print out those really need to be printed.
Files for hw10 can be found on web now - UPDATED
Homework 9 source file
Midterm solution is on web



TA Information & Weekly Timetable


TA 
Section 
Office Hour 
Location 
Contact 



Guana Kumar Natarajan


12 / 13
47435 / 47440


Tuesday 13:30-15:00
Thursday 15:00-16:30


TA Station 3


ngk@cs.utexas.edu




Xun Feng


14 / 15
47445 / 47450


Tuesday 11:00-12:30
Thursday 10:00-11:30


TA Station 1



xfeng@cs.utexas.edu




 See a detailed weekly 
    time table of this course. 

Course Guide


    A news group has been set up for this class: 
    news:utexas.class.cs105.c++ 
 
    Some notes for     
    
    class on 8/30 
    and this is Homework 1 (due 9/6/96),
    also 
    tips for HW1.

 
    Postscript file of Homework 2 (due this Friday)

 
    Here are the two files for Homework 3


Homework 3 PS file 
 
    Download files for 
    Homework 4 

Homework 1 solution and  how it was scored  

Homework 2 solution

Homework 3 solution

Model solution Homework 4
    by Will 
 
    As required by some of you, here is 
    wordlist.o on linux,
    provided by Warren Wang,
    wwang@cs.utexas.edu 

Notes of the midterm test


Xun's notes of the review session and 
    answer to some of the exercises 

Kumar's notes of the review session 

Model solution of hw5 by Xun (I
    made some modifications on it Monday afternoon.) 

Postscript file of model solution of hw6
    by Ajit 

Postscript file of Hw7
    
 
    Postscript file of
    Midterm solution
    

hw9.cc
     for homework 9
 
    Files for HW 10
    DecimalInteger.cc ,
    DecimalInteger.hh ,
    HexInteger.cc ,
    HexInteger.hh ,
    OctalInteger.cc ,
    OctalInteger.hh ,
    

slides for section 12 and 13  
    in postscript format
 
    slides for section 14 and 15. 
     Oct. 18 , 
     Oct. 25 , 
     Nov. 01 , 
     Nov. 08 , 
     Nov. 15 
    in postscript format

Homework 10 assignment 
    in postscript format

Kumar's review session 
     and 
    Xun's review session


Homework 7 solution
     by Xun

Homework 8 solution
     by Kumar

Homework 9 solution
    

Homework 10 solution 
    by Kumar, and 
    Homework 11 solution 
    by Xun 



Maintained by Xun Feng, xfeng@cs.utexas.edu
Department of Computer Sciences
University of Texas at Austin 




",course
"


 CS352 



CS352: Computer Systems Architecture 

Fall 1996


 

 
  Instructor: 
Dr. Herb Schwetman, Mesquite Software, Inc. 
Office Hours:  Before or after class or by appointment
Contact:  305-0080, hds@mesquite.com 
 
  TA: 
Rui Liu 
Office hours: T 6:30-8:00PM, TH 6:30-8:00PM, TA Station 5 
Contact:  rui@cs.utexas.edu 
 
  TA: 
Yang Yang 
Office hours: W 1:00-1:50PM, F 3:05-5:00PM, TA Station 5  
Contact:  yangyang@cs.utexas.edu 
 




Syllabus  
Assignments  

 
  Assignment 1--- Solution---
Solution in PS file (for print)--- Statistics

  Program 1--- Solution--- Statistics

  Program 2--- Statistics

Assignment 4--- Solution---
Solution in PS file (for print)--- Statistics

  Program 3--- Asg1a.out---Statistics 
Assignment 6--- Solution---Statistics

Your final gradeSection 3:00,
Section 5:00

MicroSPARC I Datasheet
Online Resources  
My Classmates  
Email to Dr. Schwetman, Rui
Liu, Yang Yang, or post
message to cs352 news group 


 This page
is created on: August 30, 1996 
For comments, you are welcome to send email to: yangyang@cs.utexas.edu
 


",course
"
cs378net


 cs378net   Network Protocols and Implementation





General Information



        Professor 
        Office Hours: Tuesday 10:30-12:00 /Thursday 10:30 - 11:30 Tay3.148
         
        Teaching Assistant 
        Office Hours: Monday/Wensday 12:30 - 2:00  TA station#8
         
             Class Description
 
	     Texts and Background Readings
 Newsgroup:
              
	     utexas.class.cs378-net
 
	     Prerequisites
 
	     Grading







References



             RFC draft on Multicast Routing Protocols

             New IP MIB

             Texas Internet Platform ( NetSim )

             corejava.tar.gz

             MD5 Class

             Mobility Support in IPv6

             IPv6 Specification

             IPv6 Address Allocation Management

             IPv6 MIB

             TCP/IP Tutorials

             Draft of Http1.1

             Http Digest Access Authentication
 TCP/IP Newsgroup:
              comp.protocols.tcp-ip FAQ

             Java







Schedule of Presentations



             Schedule

             Individual Papers







Handouts


 
             Handout#0

             Handout#1

             Handout#2

             Handout#3

             Handout#6

             Handout#10

             Handout#18

             Handout#20

             Handout#23

             Handout#24

             Handout#25

             Handout#26








Homeworks



             How to Turn in Homeworks

             Homework#1

             Sample Solutions of Homework#1

             Homework#2

             Homework#3

             Group Project 1

             Project info

             Group Project 2

             Configuration Files for Group Project 2





 Please read the note first!  (9/15)



Yu Feng
<yufeng@cs.utexas.edu>
Finger me!
 Add My PGP Public Key to Your ""Ring""! 

 Last modified: Wed Sep 25 04:05:15 CDT 1996




",course
"

CSE 135 Home Page


Click here for help.



CSE 135: Computational Techniques
1995 Spring Quarter

Welcome to the CSE/135 Home Page!

This is the World Wide Web hypermedia document for CSE/135, which
contains a bounty of information about the class.  Keep in mind that
this document is not static, and that new information will be added
frequently.  

If you have any problems with this document, send mail to weld@cs.
You may click on any highlighted item for more information.




About the class:

Personnel (Professor and TAs)
Course syllabus
Reading assignments
Homework policy
Computing Lab

Announcements

Check this regularly!
Last changed:  31 May 95

Handouts:

Lecture notes
Homework assignments and grades

Other useful links:

Official Mathematica Page
MVis home
    page (visitor and room scheduling)
 The 
     Computer Science and Engineering Department,
 The 
    
    Computer Science degree program (offered through the College
    of Arts and Sciences),
   The 
    
    Computer Engineering degree program (offered through the College
    of Engineering),
and 

Mosaic help:
Help is available on the following topics:

 Basic information about Mosaic.
 Information about the HyperText Markup Language
(HTML)
 Uniform Resource Locators
(URL)
 How to read the web from home using
Lynx,
a character-based web browser



Portions of the CSE/ENGR 135 Web may be reprinted or adapted for
academic nonprofit purposes, providing the source is accurately quoted
and duly credited.  The CSE/ENGR 135 Web: Copyright 1995, Department
of Computer Science and Engineering, University of Washington.






",course
"

CSE/ENGR 142 Home Page (Autumn 95)







    CSE/ENGR 142: Computer Programming I
  

    Ben Dugan and Martin Tompa, Autumn 1995
  




Welcome to the 142 Home Page!

This is the World Wide Web (""the Web"" for short) hypermedia document
for CSE/ENGR 142 and contains a bounty of information about the
class.  Keep in mind that this document is not static, and that new
information (especially class messages) will be added frequently.
If you have any problems with this document, send mail to 
cse142-webmaster@cs.
You may click on any highlighted item for more information.
Click here for help.


Class Messages

        Check Class Messages frequently.
        (Last update:
           
          
          12/15/95 at 09AM.)
        
Course Syllabus
Lab & Office Hours
The Staff
Lecture Slides
Homework
Midterm Exam:
Study Guide,
    Exam,
    Solution
Final Exam:
Study Guide,
    Exam,
    Solution
Tips on:

Macs & the Lab, 
    
C & Think C, 
    
The Think Debugger, and 
    
Netscape.
  Help Bulletin Boards
Computing at Home
Textbook Code
References
Final Exam:

NOT AT REGULARLY SCHEDULED TIME / PLACE
Special Demos
Rainy Day Activities


    Course webs from earlier quarters should be intact (more or
    less; if you notice problems, for instance links that don't
    work, please send mail to cse142-webmaster@cs.washington.edu).
    You might like to see assignments, tests, and the like that were
    used previously.  
    




Autumn 1994
Winter 1995
Spring 1995
Summer 1995










    Search the 142 Web 
    
Autumn `95, all pages
        Previous quarters, too
        Tips
        Miscellaneous Info
        Rainy Day Activities
    
 Case insensitive
    

    For: 
 Match whole word


    





Other information is available about 

 the 
     University of Washington,
 the 
     Computer Science and Engineering Department,
 the 
    
    Computer Science degree program (offered through the College
    of Arts and Sciences),
   the 
    
    Computer Engineering degree program (offered through the College
    of Engineering),
and 
   related courses,
    for both majors and nonmajors.

If you're considering taking CSE 143, here's a 
preview.


Netscape Help:
If you're running Netscape on a Mac, you can find some help items
under the Mac Balloon Help menu, in particular the online
  Handbook.



Portions of the CSE/ENGR 142 Web may be reprinted or adapted for
academic nonprofit purposes, providing the source is accurately quoted
and duly credited.  The CSE/ENGR 142 Web: Copyright 1995, Department
of Computer Science and Engineering, University of Washington.




  Comments to: 
  

cse142-webmaster@cs.washington.edu
  
(Last Update: 
  
  01/02/96
)




",course
"


CSE/ENGR 142 Home Page (Autumn 1996)







CSE/ENGR 142: 
Computer Programming I 
Martin Dickey
& Richard Ladner,
Autumn 1996 


Welcome to the 142 Home Page! 


This is the World Wide Web (""the Web"" for short) hypermedia
document for CSE/ENGR 142 and will contain a bounty of information
about the class. You can click on any highlighted item for more
information.


Class Messages - check frequently!
Course Syllabus 
All sorts of schedules
The week at a glance
Week-by-week activity schedule
Computing labs (including
lab hours). Watch for lab hour changes!
The Staff (including instructor and
TA office hours)
Lecture slides 
Lecture slides with audio
from Summer 1996 
Homework.
Examinations: Midterm
and Final (not at originally
scheduled place and time!).  Study guides, old tests, place and
time, etc.
All kinds of tips on using
the compiler, for both PC and Macintosh users.
Computing at Home 
Textbook Code
References
Tutorials and special demos



Course webs from earlier quarters should be more or less intact
and you are invited to browse them. (If you notice problems, for
instance links that don't work, please send mail the Webmaster
(see below). You might like to look at assignments, tests, and
the like that were used previously. 


Autumn 1995 
Winter 1996
Spring 1996
Summer 1996




Other information 

is available about 

the University of Washington,
the Computer Science and Engineering Department,
the Computer Science degree program
(College of Arts and Sciences), 
the Computer Engineering degree program
(College of Engineering), and
related courses,
for both majors and nonmajors. 


Comments to: 
cse142-webmaster@cs.washington.edu

(Last Update: 11/19/96
) 



",course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",course
"
CSE 321, Autumn '96

 CSE 321 Discrete Structures 
Autumn 1996 
Instructor

Paul Beame,
beame@cs.washington.edu

Lectures MWF 10:30am - 11:20pm in EEB 108
Office Sieg 416
Phone 543-5114
Office Hours M 1:00-1:30, W 1:30-2:00, Thursday 11:00-12:00,
F 3:00-3:30 or by appointment.

Teaching Assistant

Jonathan Nowitz,
nowitz@cs.washington.edu

Section A Thursday, 1:30-2:20 in Johnson 437
Section B Thursday, 2:30-3:20 in Loew 216
Office Hours Tuesdays 2:30-3:20 in Sieg 326A, Wednesdays 3:30-4:20
in Sieg 326D

 Handouts 

  Syllabus
 Induction for recursively defined sets 
Postscript  or  Acrobat 
(To get Acrobat Reader go  here if you don't have it as part of
your browser.)

 Midterm 
Wednesday November 6 in class

  Sample questions from old midterms 

 Homework Assignments 

  Assignment #1 
  Assignment #2 
  Assignment #3 
  Assignment #4 
  Assignment #5 
  Assignment #6 
  Assignment #7 

 Previous 321 Course Webs:

            Fall 1995 (Karp)    
          Spring 1995 (Ruzzo)    
          Winter 1995 (Leveson) 
          Spring 1996 (Beame) 





Computer Science & Engineering Department, 

University of Washington, 
PO Box 352350 
Seattle, WA
98195-2350 USA 

beame@cs.washington.edu
Last modified: 


",course
"

CSE 322, Winter 1996






CSE 322: Intro. to Formal Models  Winter 1996
Richard Ladner

Class Messages: 
      (Check this or your email frequently.
       Last update:
           
          
          03/18/96 at 01PM.)


Handouts:


Course Syllabus
		(LaTeX, PS)

Handout 1
	(LaTeX, PS)
	on constructing regular grammars from regular expressions

Midterm Extra
	(LaTeX, PS)
	some ramblings from the TA regarding Question 5 on the exam

Handout 2
	(LaTeX, PS)
	construcing a PDA that does top-down parsing of a grammar

Handout 3
	(LaTeX, PS)
	what to review for the final exam

Handout 4
	(LaTeX, PS)
	proof that the halting problem is undecidable

Exams:


Midterm Exam
		(LaTeX, PS),
	Solutions
		(LaTeX, PS)

Final Exam
		(LaTeX, PS),


Homework:


Homework 1
		(LaTeX, PS),
	due 1/8/96,
	Solutions
		(LaTeX, PS)

Homework 2
		(LaTeX, PS)
	due 1/12/96
Solutions
		(LaTeX, PS)

Homework 3
		(LaTeX, PS)
	due 1/19/96
Solutions
		(LaTeX, PS)with some comments on set notation.

Homework 4
		(LaTeX, PS)
	due 1/26/96
Solutions
		(LaTeX, PS)

Homework 5
		(LaTeX, PS)
	due 2/2/96
Solutions
		(LaTeX, PS)

Homework 6
		(LaTeX, PS)
	due 2/9/96
Solutions
		(text LaTeX, text PS, state diagram PS)

Homework 7
		(LaTeX, PS)
	due 2/16/96
Solutions
		(text LaTeX, text PS, state diagram PS)

Homework 8
		(LaTeX, PS)
	due 2/23/96
Solutions
		(text LaTeX, text PS, state diagram PS)

Homework 9
	(LaTeX, PS)
	due 3/1/96
Solutions
		(LaTeX, PS)

Homework 10
	(LaTeX, PS)
	due 3/8/96
Solutions
		(LaTeX, text PS, PDA PS, TM PS)



About file formats:  Most of the course 
materials above are provided in three formats:





HTML:
    HyperText Markup Language (HTML) is the document format handled by 
    WWW browsers, in fact you are currently looking viewing an HTML 
    document.  Many of the handouts we've provided were originally LaTeX 
    documents that have been converted to HTML using 
    LaTeX2HTML, 
    which is why they can be a bit strange.
  LaTeX:
    Plain ASCII text including formating commands.
    Simple things (e.g. assignments) are generally quite legible in
    this format.  For figures and complex math stuff, these are
    hard-to-impossible to read.
  PostScript:
    The 
    Ghostscript Home Page
    has free viewers (Mac, Windows, OS/2, Linux, ...)





322 Webs From Previous Quarters



 Autumn 1995 
 Winter 1995 
 Autumn 1994 
 Autumn 1993 







ladner@cs.washington.edu

fix@cs.washington.edu

(Last Update: January 3, 1996)


",course
"


CSE322: Introduction to Formal Models, Fall 1996






CSE 322: Intro. to Formal Models  Fall 1996
 Anne Condon 

 Welcome to the CSE 322 home page! Check this page regularly to find
homeworks, solution sets, pointers to upcoming lectures, and exams.


Class Messages: 

Messages sent to the class mailing list will
be logged here on the web. To subscribe to the mailing list,
send mail to ""majordomo@cs"" and include the message:
""subscribe cse322 your-userid"".
Check this or your email frequently.
(       Last update:
           
          
          11/20/96 at 10AM.)

   Homeworks  
   Handouts  
   Upcoming Lectures  
   List of Contents of Previous Lectures  
322 Webs From Previous Quarters



 Winter 1996 
 Autumn 1995 
 Winter 1995 
 Autumn 1994 
 Autumn 1993 







condon@cs.washington.edu

kayee@cs.washington.edu

(Last Update: September 27, 1996)


",course
"

CSE 326, Autumn 1996





CSE 326: Data Structures Autumn 1996 Martin Tompa

Class Messages
      (Check this or your mail frequently.
       Last update:
           
          
          11/21/96 at 09AM.)

Course Information
Lab tech
notes (e.g., Unix) 

Questionnaire
Locatives in C
DeleteMin Algorithm for AVL Trees
Homework:
 #1,
 #2,
 #3,
 #4,
 #5,
 #6,

326 Webs From Previous Quarters:



 Winter 1995
 Spring 1995
 Autumn 1995
 Winter 1996
 Spring 1996







cse326-request@cs.washington.edu

(Last Update: 
  
  11/18/96
)


",course
"


CSE 326, Spring 1995,  Home Page


CSE 326, Spring 1995: Data Structures
Richard Ladner, Instructor
Dan Fasulo, Teaching Assistant


This is the World Wide Web (""the Web"" for short) hypermedia document
for CSE 326 and contains information about the
class taught in Spring 1995.  
Keep in mind that this document is not static, and that new
information (especially class messages) will be added frequently.

Click here for help.



Class Messages

      Check these frequently!
      

  Office Hours
Suggested Reading
Projects
Homework
Exams
Lecture Overheads



Portions of the CSE 326 Web may be reprinted or adapted for
academic nonprofit purposes, providing the source is accurately quoted
and duly credited.  The CSE 326 Web: Copyright 1995, Department
of Computer Science and Engineering, University of Washington,
Seattle, WA, 98195.






ladner@cs.washington.edu	(Last Update: 03/28/95)



",course
"

CSE 341 Home Page


CSE 341: Programming Languages
Fall Quarter, 1996

 Current Offering Home Page (Autumn 96) 
Other information

The Language List
Info about just about every programming language.

Programming Language Research Page

Home page for Spring1996 offering of
CSE 341
Home page for Winter 1996 offering of
CSE 341
Home page for Autumn 1995 offering of
CSE 341
Home page for Spring 1995 offering of
CSE 341
Home page for Winter 1995 offering of
CSE 341

Home page for the Department of Computer
Science and Engineering




Portions of the CSE 341 Web may be reprinted or adapted for academic
nonprofit purposes, providing the source is accurately quoted and duly
credited.  The CSE 341 Web: Copyright 1995-96, Department of Computer Science
and Engineering, University of Washington.



cse341-webmaster@cs.washington.edu



",course
"


CSE 341 Home Page


CSE 341: Programming Languages
Spring Quarter, 1996


Lectures: MWF 12:30-1:20 (EEB 108)
Sections: TTh 8:30-9:20 (Sieg 225) or TTh 9:30-10:20 (Sieg 225)
 Final Exam Review Sessions:

 Monday June 3, 12:30--1:20, Sieg 229.
    Tuesday June 4, 12:30--1:20, Sieg 231. 
  
 Final Exam: Thursday June 6, 8:30--10:20, EEB 108.


Instructors:

Steve Hanks


e-mail: <hanks@cs.washington.edu>
Office: Sieg 210
Office Hours: M 1:30-2:30 and W 1:30-2:30

Dave Grove


e-mail: <grove@cs.washington.edu>
Office: Sieg 326a (W) 326d (F) 
Office Hours: W 11:30-12:30 and F 2:00-3:00



Administrative

 Course Syllabus
 Course Overview
Course Newsgroup


Help Documents
General

Introduction to News (using Netscape)
(Last update:
           
          
          03/21/96 at 02PM.)

Using UNIX
(Last update:
           
          
          03/22/96 at 02PM.)

Using turnin  (Electronic submission of homework assignments)
(Last update:
           
          
          04/06/96 at 12AM.)

Using Emacs
(Last update:
           
          
          03/22/96 at 02PM.)

Emacs Clip 'n' Save
(Last update:
           
          
          03/21/96 at 02PM.)

Lisp-related

Running Lisp in Emacs 
(Last update:
           
          
          03/22/96 at 02PM.)

Reasons why Dave Grove will do bad things to you 
(Last update:
           
          
          04/16/96 at 01PM.)



Smalltalk-related

 Using Smalltalk in the PC Lab (Last update:
           
          
          04/26/96 at 10AM.)



Assignments

 LISP assignment #0 
(html)
(postscript)
(Last update:
           
          
          07/16/96 at 10AM.)
 LISP assignment #1 (Due 4/15) 
(html)
(postscript)
Sample solution(Last update:
           
          
          04/04/96 at 07PM.)
 LISP assignment #2 (Due 4/26) 
(html)
(postscript)
(Last update:
           
          
          04/17/96 at 09AM.)
 SMALLTALK assignment #0 (Done in Section 4/25) 
(html)
(postscript)
(Last update:
           
          
          04/24/96 at 02PM.)
 SMALLTALK assignment #1 (Due 5/13) 
(html)
(postscript)
(Last update:
           
          
          05/01/96 at 09AM.)
 SMALLTALK assignment #2 (Due 5/24) 
(html)
(postscript)
(Last update:
           
          
          05/10/96 at 03PM.)
 PROLOG assignment #0 (Assigned 5/20;  not handed in) 
(html)
(postscript)
(Last update:
           
          
          05/20/96 at 05PM.)
 PROLOG assignment #1 (Assigned 5/22;  due 5/31) 
HTML but missing a figure.
Postscript (includes figure).
Partial solution.
(Last update:
           
          
          05/22/96 at 09AM.)


Quizes and Tests

 The LISP quiz (html
postscript) and a sample solution.
 The Smalltalk quiz (html
postscript) and a sample solution.



Daily class notes

 notes, 
     code, 
     transcript for March 27.
 notes, 
     code, 
     transcript for March 29.
 notes, 
     code, 
     transcript
suggested reading 
     for April 1.
 notes, 
     code, 
     transcript
suggested reading 
     for April 3.
 notes, 
     code, 
     transcript
suggested reading 
     for April 5.
 notes, 
     code, 
     transcript
suggested reading 
     for April 8.
 notes, 
     code, 
     transcript
suggested reading 
     for April 10.
 notes, 
     code 
     for April 12.
 notes, 
     code, 
     transcript
suggested reading 
     for April 15.
 notes, 
     code, 
     transcript
suggested reading 
     for April 17.
 notes
     for April 19.
 notes
     for April 22.
 Smalltalk transcipt and notes
     for April 24.
 Smalltalk transcipt and notes
     for April 26.
 Smalltalk transcipt and notes
     for April 29.
 Smalltalk transcipt and notes
     for May 1.
 Suggested Smalltalk readings
     (May 1).
 Notes
     for May 3.
 Notes
     for May 6.
 Notes
     for May 10 (Full notes on Interface Building.)
 Notes and code on Prolog Databases:
  
 Method 1: Notes
 Method 1: Code
 Method 2: Notes
 Method 1: Code

 Suggested Prolog readings
 Prolog code for May 24. (Employees #2)


Other information

The Language List
Info about just about every programming language.

Programming Language Research Page

Home page for Winter 1996 offering of
CSE 341
Home page for Autumn 1995 offering of
CSE 341
Home page for Spring 1995 offering of
CSE 341
Home page for Winter 1995 offering of
CSE 341

Home page for the Department of Computer
Science and Engineering




Portions of the CSE 341 Web may be reprinted or adapted for academic
nonprofit purposes, providing the source is accurately quoted and duly
credited.  The CSE 341 Web: Copyright 1995-96, Department of Computer Science
and Engineering, University of Washington.



cse341-webmaster@cs.washington.edu



",course
"

CSE 370 Index Page 



CSE 370 Index Page


Current Quarter

The web for the current quarter of CSE 370 is here.  


Previous Quarters

Course webs from earlier quarters should be intact (more or less; if you
notice problems, for instance links that don't work, please send mail to 
cse370-webmaster@cs.washington.edu).





Spring 1996





Other information is available about 

 the 
     University of Washington,
 the 
     Department of Computer Science and Engineering,
 the 
    
    Computer Science degree program (offered through the College
    of Arts and Sciences),
   the 
    
    Computer Engineering degree program (offered through the College
    of Engineering).



Portions of the CSE 370 Web may be reprinted or adapted for academic 
nonprofit purposes, providing the source is accurately quoted and duly 
credited.  The CSE 370 Web: Copyright 1996, Department of Computer 
Science and Engineering, University of Washington.




  Comments to: cse370-webmaster@cs.washington.edu (Last Update: 
  
  11/17/96
)



",course
"

CSE 370 Home Page (Autumn 96)





CSE 370:  Introduction to Digital Design 
Autumn Quarter 1996 
Gaetano Borriello and Corey Anderson


Welcome to the CSE 370 Home Page!

This is the home page for the CSE 370 web which contains a whole bunch of 
useful information about the class.  Keep in mind that this document is not 
static, and that new information (especially class announcements and 
messages) will be added frequently.  If you have any problems with this 
document or the CSE 370 web, in general, send mail to
cse370-webmaster@cs. 


Class Announcements: 
Notices from your instructor, TA, and/or system administrators.

(Last update:

          11/11/96 at 12AM.)


Class E-mail Archive: Messages
sent to cse370@cs.washington.edu.

(Last update:

          11/21/96 at 01PM.)


Send e-mail to: the class, 
your instructor, 
your TA, 
both the instructor and TA,
or everyone.


Course administration:

Goals and syllabus
Meeting Times
  
Lectures: MWF 8:30-9:20am, EEB 108
   Final Exam: Monday, December 16, 8:30-10:20am, EEB108
  
Workload and grading expectations
PC laboratory and software tools
Policies on collaboration and cheating
Announcements and e-mail addresses
Overall schedule of lecture topics
Instructor: Gaetano Borriello (gaetano@cs)
  Office hours: WTh 12:30-1:20 in Sieg 212 
TA: Corey Anderson (corin@cs)
  Office hours: M 2:30-3:20, TTh 8:30-9:20 in Sieg 326a


Weekly assignments.
Bi-weekly quizzes and final exam.


Lectures:
Online versions of the slides used in lectures.
Textbook: Contemporary Logic Design, R. H. Katz, Benjamin-Cummings/Addison-Wesley 1994.
 
Web maintained by the author, R. H. Katz.
  Web maintained by the publisher, Benjamin-Cummings/Addison-Wesley.
 
Notes on topics of interest:
 
Evolution of implementation
      technologies
Computer-aided design (CAD) 
      tools for logic design
Synario


 Feedback:
Tell us what you think about how things are going (even anonymously, if you so desire).


Links to previous quarters of CSE 370.




Portions of the CSE 370 Web may be reprinted or adapted for academic 
nonprofit purposes, providing the source is accurately quoted and 
duly credited. The CSE 370 Web: Copyright 1996, Department of Computer 
Science and Engineering, University of Washington.




  Comments to: cse370-webmaster@cs.washington.edu (Last Update: 
  
  11/17/96
)



",course
"

CSE373 Course Web Page


CSE 373: DATA STRUCTURES AND ALGORITHMS
Autumn 1996

Basic Information:

Instructor:            Dr. Steve Tanimoto
                       tanimoto@cs.washington.edu
                       Sieg Hall Room 312
                       Office hours: WF1:30-2:20 or by appointment.

Teaching Assistant:    Mr. Anhai Doan
                       Office hours: To be announced.

Place, Days and Time:  Smith 304, MWF, 12:30-1:20

Computing Facilities:
                       1. Unix accounts at the MSCC.
                       2. (optional) Students' own PCs.

Languages:             C++ (required), Lisp (optional)

Textbook:              Shaffer: ""A Practical Introduction to
                                 Data Structures and Algorithm Analysis""
                       (published in the Summer of 1996 by Prentice-Hall).

Grading breakdown:  
(tentative)
                       Assignments 1-3 (20%)
                       Assignment 4    (20%)
                       Midterm         (20%)
                       Project         (20%)
                       Final           (20%)

Late policy:           To keep grading manageable and encourage punctual
                       work, points will be deducted for late assignments.
                       Each assignment will have its own penalty schedule.


Here is updated information about
the project.
Topics to study for the midterm exam
Information about the final exam
Basic information on C, C++, and on using the g++ compiler
Assignments
Solutions to Assignments
Teaching assistant information
Schedule

Webs for previous offerings of CSE 373:
Winter 96
Autumn 95


",course
"

CSE 373 Home Page


CSE 373:  Data Structures and Algorithms
Spring 1995
Instructor:  
Alistair Holden (holden@cs.washington.edu)
TA:  
Jonathan Nowitz (nowitz@cs.washington.edu)

Class Messages
(Last update:  Monday 10/25)

Course materials

Computing
Syllabus
Homework
Demos
Exams


Other information

 Department of Computer Science & Engineering
 
Computer Science degree program (offered through the College
    of Arts and Sciences)
   
Computer Engineering degree program (offered through the
    College of Engineering)
   Related courses,
    both for majors and for non-majors.


Mosaic

 Help!
 Some interesting
    pages for rainy day fun




nowitz@cs.washington.edu


",course
"

CSE373 Course Web Page


CSE373: Data Structures and Algorithms
Winter 1996

Meeting Time:	MWF 1230-120
Meeting Place:	Sieg 226


Instructor: Linda Shapiro

Office:		214 Sieg
Telephone:	543-2196
Email:		shapiro@cs.washington.edu
Office Hours:	MF 10:30-11:20 and W 1:30-2:20

TA: Denise Pinnel

Office:		429 Sieg
Telephone:	543-5129
Email:		denisep@cs.washington.edu
Office Hours:	TR 1:30-3:00 and W 2:30-4:00


Syllabus

Transparencies


Homework Assignments

Homework 1

Answers to Homework 1

Homework 2
Homework 3


Programming Assignments

Programming Assignment 1

Test File 1
Test File 2
Test File 3
Test File 4

Programming Assignment 2
Note: The data sets are set up as follows:  A line beginning with an 'I'
indicates an insertion into the B+ tree.  The key is next enclosed in
quotes.  As stated in the assignment these are 10 characters long.
Next comes an integer that indicates the length of the associated
value.  And finally the string value, also enclosed in quotes. A line
beginning with an 'S' indicates doing a find or search.  It is
followed by the search key, enclosed in quotes.

Test File 1
Test File 2
Test File 3

Programming Assignment 3

Object Model Graph
Image Graph



Review Lists

Final Study Sheet



",course
"


CSE 401







CSE 401 Compilers Class





Home




This is the World Wide Web hypermedia document
for CSE 401 and contains information about the class.  Keep in
mind that this document is not static, and that new information will
be added frequently.  




 Urgent Announcements 



Assignment 5 is now online



Class meets MWF at 12:30 PM in LOW 101





401admin@cs.washington.edu
(Last modified: 11/6/96)





",course
"

CSE 403X Home Page


CSE 403X: Experimental UW/Boeing Software Engineering Project Course
 
Professor: Nancy Leveson


 Office: Sieg 219
 Phone: 685-1934
 Hours: by appointment
 Mail: leveson@cs.washington.edu

Course Description

Instructional Objectives:

 Teaching the terminology and concepts of software engineering.
 Teaching the fundamentals of software project management and working in a team.
 Providing experience with a real industrial software engineering project.
 Teaching oral and written communication skills.
 Producing a ``portfolio.''


This course will study the concepts, methods, and tools for the specification,
design, construction, testing (analysis), and documentation of large software
systems.  Included also will be ``non-technical'' topics essential to
creating complex software systems successfully: project management, effective
oral and written communication, and group interaction.  These latter topics
are what most industrial feedback says are the most important to employers
and are the most often lacking in our graduates.

This experimental version of CSE 403, lasting two quarters, will use a real
Boeing project as an example, and the participants will work in one large
group.  There are several reasons for trying this new approach.  The first is
that one quarter is too short for a realistic project so students cannot
learn enough about software engineering due to class sessions being devoted
to discussing and organizing the project.  In the regular 403 class, the
group projects are also usually learning experiences about how hard it is
to work in a group, but not enough is learned about how to work effectively
together.  By having one group headed by the instructor, disasters can be
avoided and more experience can be provided in the correct way to work
together.  In addition, students will get experience in requirements
analysis and a real software development that is not possible in the
normal class setting.

At the end of the two quarters, students will have a ``portfolio'' of a
real software engineering project that they can use in their job search.
An example of such a portfolio, done for the CMU Software Engineering
Institute's Masters of Software Engineering program, will be provided
at the first class meeting.

In the class, each student will be assigned a specific ``role'' to play
that will allow them to experience a leadership position (see attached list
of roles).  However, everyone will participate in each phase of the project
so they can learn how to do each part.  The instructor will act as the
project manager.


Outline of Topics

 Nature, qualities, and principles of software and software engineering.
 Management of software projects: process models, working in groups,
      project planning, risk assessment, cost estimation, metrics, etc.
 Requirements analysis
 Specification
 Software design
 Verification and validation (testing and analysis)
 Configuration management
 Reviews
 Maintenance, evolution
 Reuse 
 Ethics and professionalism in software engineering
 Embedded systems and safety


Roles for Class Project 

Each student will take one of these leadership roles for the project.  
However, everyone will participate in each activity or in reviews of
the activity so that they get experience with each aspect of a software
development team.  In addition, each class member will be responsible
for a presentation at a Boeing review meeting.


 Project Administrator/Assistant Program Manager: 
    Responsible for project planning and control.  Primary duties
    include writing and updating the project management plan, tracking the
    project status, making sure that the proper meetings are held and that
    the work gets done on time. 


 Principal Architect: 
    Responsible for the creation of the software product.  Primary 
    responsibilities include the overall consistency of the design, 
    hardware and software platform issues, transition planning.


 Designer 1:
    Responsible for the existing system.  Primary duties include learning 
    about it, augmenting the documentation on it if necessary, evaluating 
    the current systems. 
 

  Designer 2: 
    Primary responsibility is organizing the development of the new 
    system design.


  Configuration and Security Manager:
    Responsible for change control and security.  Primary duties include 
    writing the configuration management plan, setting up a configuration 
    management system for the project, document control, organizing changes
    to the document, ensuring new design is secure.


  Human Factors Specialist: 
    Responsible for user interfaces and interactions.  Duties include
    design of human interface, evaluation of it with respect to requirements,
    planning user surveys and interviews with Boeing employees.


  Quality Assurance Specialist:
    Responsible for the overall quality of the released product.  Primary
    duries include conducting reviews of products, ensuring that design has
    required characteristics, conducting reviews of the deliverables, and 
    other normal quality assurance duties.


  Programming Manager: 
    Responsible for the mockups and prototypes.  Primary duties are 
    to provide expertise on programming languages and implementation,
    organize the development of prototypes and mockups, and handle
    www technical issues. 


  Documentation Specialist: 
    Responsible for the appearance and clarity of all documentation 
    and for the creation of user manuals.  Duties include determining
    what tools will be used and providing expertise on them, making 
    deliverable documents readable and understandable, and planning
    user support for the new system.


  Maintenance and Reliability Engineer:
    Primary responsibility is creating a guide for the maintenance of the
    delivered product and a reliability plan.




",course
"

CSE 403 Home Page




CSE 403: Software Engineering

Meeting Times

 Location: Loew 105
 Time: Monday, Wednesday, Friday 11:30 - 12:20

 
Professor: Nancy Leveson


 Office: Sieg 219
 Phone: 685-1934
 Hours: by appointment
 Mail: leveson@cs.washington.edu


TA: Adam Carlson


 Office: Sieg 326a
 Hours: Wed 12:30 - 1:30 or by appointment
 Mail: carlson@cs.washington.edu

Course Description

This course will study the concepts, methods and tools for the specifications, design, construction, testing (analysis) and documentation of large software systems.  Included also will be ""non-technical"" topics essential to creating complex software systems successfully, including project management. 
Textbook

Ghezzi, Jazayeri, and Mandrioli, Fundamentals of Software Engineering, Prentice Hall, 1991. 

Notes:

 Notes on requirements
 Some sample requirements interview questions
 Producer-Consumer Petri Net and Axiomatic Specification notes
 Z notes
 Coupling and Cohesion notes


Assignments:

 Assignment 1
 Assignment 2
 Assignment 3
 Assignment 4
 Assignment 5


Some links that may be of your interest:

 Course syllabus (Updated 4/2)

 Send mail to the class mailing
list
 news:comp.risks
 Military Standard Defense System Software Development


Other information is available about 

 CSE403, Winter 1995
 CSE403, Spring 1995
 CSE403, Winter 1996
 the Computer Science and Engineering Department



Suggestions/Feedback to: cse403-request@cs.washington.edu



",course
" 
CSE 413 (Winter 1996) Home Page

CSE 413 (Winter 1996)
PROGRAMMING LANGUAGES AND THEIR IMPLEMENTATION


 Instructor:
 Steve Tanimoto, Department of Computer Science and Engineering, University of Washington,
Seattle, WA 98195.

 TA:
 Ruth Anderson
Meetings:
 Tuesdays and Thursdays 10:30 AM to 11:50 AM in Sieg 325. 
(EXCEPT ON THURSDAY, JAN 4, WE WILL MEET IN THOMPSON HALL, ROOM 3!)

SLN in Time Schedule:
 2408

 Steve's Office Hours:
 Tuesday from 4:30 to 5:30 in Sieg 312. 
 Thursday from 12 to 1 PM in Sieg 312.

 Ruth's Office Hours:
 Mondays 12:30 to 1:30, 326a Sieg;
Wednesdays 1:30 to 2:30, 326a Sieg.

 Course Mailing List: cse413
  Mailing list archive.
 Schedule:
 This is a tentative schedule: of topics and examinations.
Most of the transparencies from past lectures are also posted here.


 Number of Credits:
 3

 Grading:
 Homework 20%
 Midterm exam  25%
 Final exam 35%
 Project 15%
 Class participation 5%

 Hardcopy Readings:
 Text (selected sections).
Many of the readings for the course will be online, but the first set of
readings is part of my recent book on Lisp and artificial intelligence.
There will be several readings from the book throughout the course,
including readings on Lisp, logic programming and Prolog, grammars and
parsing, language understanding systems, and shells for expert systems.
You can either purchase the whole book at the bookstore (approximately
15 copies have been ordered) or do a combination of getting copies from
the copy center and reading in the library.  The book is entitled,
The Elements of Artificial Intelligence Using Common Lisp, 2nd edition,
W. H. Freeman, 1995.  Chapter 2 (Introduction to Programming in
Common Lisp) and the Lisp glossary may be purchased
separately at the Copy Center in the basement of the Communications Building.


 Online reference materials for Lisp:
 What Lisp is.
 
The Lisp FAQ provides the answers to many questions about Lisp and
its implementations.
 
Common Lisp: The Language, 2nd edition is the standard reference
on Common Lisp. (It seems best if you access it via the table-of-contents
page, rather than by trying to download the entire HTML file or
postscript.)

 You can get the source code for 
the Lisp programs from The Elements of Artificial Intelligence Using
Common Lisp, 2nd edition.
 The web site for
Digitool, Inc., the company that
maintains and supports Macintosh Common Lisp, provides the most current
information about MCL.
 Here are some interesting links to info about how to use Lisp for
 programming World-Wide Web applications.

 Online reference materials for C.
 Introduction
to C Programming is an online tutorial.
 Programming in C is another online tutorial, but it's on a website in the UK that
doesn't always respond promptly.
 These are two of the several tutorials that are listed
 here.

 Online reference materials for Java.
 
The Java language trail map.


Announcements

 January 2.
 Welcome to this course and its course web!
This course is about programming languages and their implementation.
In some of the department's listings, it is called ""Languages and Compilers,""
although in the catalog it is called ""Programming Languages and Their
Implementation.""
It covers interpreters, compilers, and other techniques for building
programming systems.  Our attention will focus mainly on two particular programming
languages: Lisp and C.  With Lisp, we will explore many issues relevant to
intepreted languages, while with C, we will investigate compilers.
In addition to traditional language issues and techniques, we will also
look into current issues such as visual programming systems and programming
facilities for the World-Wide Web.

 January 2.
 Facilities:
This quarter, CSE 413 students will have the use of both the MSCC Macintoshes
(running Macintosh Common Lisp 3.0) and the MSCC Unix systems.
MSCC is the
Mathematical Sciences Computing Center.  The MSCC Macs are located in the
basement of Thompson Hall.  Some of the Macs are in Room 3 and some in Room 9.
While the Macs offer MCL (and a variety of other languages such as Mathematica)
the MSCC Unix hosts offer, C, Lex, Yacc, Allegro
Common Lisp, and other software facilities.

Macintosh Common Lisp provides a particularly powerful
environment including full implementation of the Common Lisp standard,
integrated editor (called FRED), and extensive facilities for graphics
and user interface construction.   The Macintosh computers are networked,
and files can easily be transferred between them and the Unix host machines
of MSCC.


  Students who have difficulty getting to the Macintoshes in
Thompson Hall can supplement their Macintosh work with work on their
own PCs, using such packages as XLISP-STAT for Windows and Micro-Emacs.
However, due to our limited ability to support alternative facilities,
students who wish to work on their own PCs will need to access these
resources themselves from archives on the Internet.  Also, note that
XLISP-STAT is a bare-bones implementation of Common Lisp and does not
have the extensive program-development support that MCL has.
While we are fortunate to have the powerful MCL system for this course,
there is one disadvantage of using it---you must use it in the MSCC lab
unless you purchase your own copy of it from
Digitool, Inc..
(MCL normally costs about $500 a copy, but there is a special student deal
allowing students to purchase it for $135.)
It has been pointed out that there is a free version of Allegro Common Lisp
for Windows which can be downloaded from franz.com on the Web.
This may be an attractive tool for some students.


 Final examination:
 The final exam for CSE 413 will be given on Monday, March 11,
in Sieg 325 from 10:30 to 12:20.  It will be a closed-book test.

 January 4.
 NOTE THIS: On Thursday, January 4, we will meet in
Thompson Hall Room 3, so that we can get introduced to the
laboratory facilities for the course.  So go to Thompson this
time, instead of going to our regular classroom.

 January 9.
 THIS WEEK ONLY Ruth's Wednesday office hours are moved to Thursday 
2:30 - 3:30 in Sieg 326a. 

 January 21.
 A Beginner's guide to HTML might be helpful for Assignment #3.

 January 22.
 Post of the message sent to the class news group regarding
reading files with paths on the Mac.
 January 23.
 Reminder to please email your assignment #3 to Ruth (rea@cs) today, 
even if you turned in a hard copy in class.
Click here for info on emailing files from the Macs.
 January 29.
 For assignment #4, please turn in a printout of your tokenize program run on several examples.  Also please email a copy of tokenize to Ruth (rea@cs).

 February 1.
 The midterm examination will be from 10:30-11:50 AM on
Thursday, February 8.  It will cover these 
topics..
 There will be an optional review session for the midterm exam.
The review session will be held 2:30-3:20 PM on Monday, Feb. 5, in
Sieg Hall room 422.  Please bring in questions on the material to be
covered.

 *** HOMEWORK #5 HELP ***.  Click here for info on converting strings to numbers and symbols.

 ** Check the cse413 mail archive for an important message about hw#5. The archive can be found at the top of this page.  Send email to rea@cs if you have not received any mail from the mailing list. 
 February 5
 Note modifications to the Assignment 5 page -- new deadlines (as announced
earlier via email), plus online reading material for part B.
 February 6
 A free postscript viewer for windows is available here. 
 February 12
 A Picture of a Koch Snowflake here. 
 March 5
 New details on completing the project are given in the project
general description page.  Check it out to find out about
demonstrations and writeups.
 The review session for the final exam has been scheduled.
It will be from 4:00-5:00 on Friday, March 8 in Sieg 422.
 March 8
 The final examination will be from 10:30-12:20 on
Monday, March 11.  It will cover these 
topics..  Part of the exam will be in multiple-choice format;
bring a mark-sense form and a few #2 pencils.  The exam is ""closed-book.""


Assignment 1 due on Tuesday, January 9.
Assignment 2 due on Tuesday, January 16.
Assignment 3 due on Tuesday, January 23.   
Solution:
Part 1.
Part 2.
Assignment 4 due on Tuesday, January 30. 
Solution:
Exercises
Tokenizer

Assignment 5 (Part A is due on Tuesday, February 13, and
Part B is due on Thursday, February 15).
Part A Solution:
Parser
Tokenizer
Part B Solution:
Koch Snowflake

Assignment 6 due on Tuesday, March 5. Java Tutorial (local copy) 

** Assignment #6 Help!! **.

PROJECT: General description, including new info on
demonstrations and writeups.
PROJECT Milestone 1 (DUE FEBRUARY 22nd).

PROJECT Milestone 2 (DUE FEBRUARY 29th).

Here is the file that shows how to 

display text in an MCL window.
Project Demonstrations are scheduled for Thursday, March 7 at 10:30.
Project Writeups are due at or before 4:00PM Friday, March 8.
You may turn them in at the review session for the final exam.


tanimoto@cs.washington.edu


",course
"

CSE 415  Introduction to Artificial Intelligence



CSE 415 Introduction to Artificial Intelligence - Spring 1996

Professor: 

Alistair Holden, holden@cs

Office: EEB 309, x3-2054 
Office hours: Tu noon - 1pm, Wed. 10:30 - noon


TA: 
Joshua Redstone,
redstone@ms

Office: Thompson 9 
Office hour: Monday 1:30 - 2:30
Lab hours: Monday 2:30 - 3:25, Thursday 1:30 - 2:25


Text:

Rich and Knight, Artificial Intelligence, SecondEdition
Touretzky, Common Lisp: A gentle introduction to symbolic
computing 

General Information

 Basic Computer Information
 Course Outline and information
 Turnin Instructions - Project 3
 First Programming Assignment
		 - due April 11
 Solution to 1st Programming Project
 First Homework Assignment	
		 - due April 18
 Second Homework Assignment
	         - due April 25
 Second Programming Assignment
		 - due April 26
 Solution to Second Programming Assignment
 Third Programming Assignment
		 - due May 17 at 5pm
 Sample Solution to Third Programming Assignment
 Final Programming Assignment
		 - due June 3 (at final exam)


Other information: 

An introduction to using the allegro-emacs
interface (Postscript)
Emacs refcard (Postscript)
Allegro Emacs interface refcard 
	(Postscript)
Instructions for downloading standalone
lisps for the PC or Macintosh 


Note: To check grades I have recorded, type: ~c415/grades
redstone@cs.washington.edu


<!-- reading intro +3 chaps of Rich, first 8chap lisp>


",course
"

CSE 421, Winter 1996






CSE 421: Intro. To Algorithms Winter 1996
Larry Ruzzo & Martin Tompa

Class Messages: 
      (Check this or your email frequently.
       Last update:
           
          
          03/15/96 at 02PM.)


Text Book Errata Lists.
Handouts:


LaTeX:
Syllabus
Midtem Solution


Acrobat  :
Syllabus
Midtem Solution


PostScript:
Syllabus
Midtem Solution



Homework:


LaTeX:
1,
2,
3,
4,
5,
6,
7,


Acrobat  :
1,
2,
3,
4,
5,
6,
7,


PostScript:
1,
2,
3,
4,
5,
6,
7,


421 Webs From Previous Quarters



 Winter 1995 (Karlin)





About file formats:  Most of the
course materials above are provided in three formats:





LaTeX:
    Plain ASCII text including formating commands.
    Simple things (e.g. assignments) are generally quite legible in
    this format.  For figures and complex math stuff, these are
    hard-to-impossible to read.
  Adobe Acrobat  :
    The latest & greatest.
    Get a free viewer from Adobe's 
    Acrobat and the Web Page.
    
PostScript:
    The 
    Ghostscript Home Page
    has free viewers (Mac, Windows, OS/2, Linux, ...)
  
At this time, Acrobat is supported on fewer systems, but is
preferable if you can use it -- files are smaller, rendering is
faster and more legible, and it can print (which Mac Ghostscript
can't, for example).






{ ruzzo | tompa | aberman } @cs.washington.edu

(Last Update: 
  
  02/28/96
)


",course
"


    CSE 431 - Intro. to the Theory of Computation, Spring 1996
  







    CSE 431 
    Introduction to the Theory of Computation
  

    Larry Ruzzo, Spring 1996
  

 General information 

 Instructor:  Larry Ruzzo
 TA:  
        Jayram Thathachar  
 Meeting times: Mon, Wed, Fri 10:30-11:20 in EEB 108.

    Instructor office hours (tentative):  Wed 1-2, Fri 1-2 in Sieg 415.

    TA office hours: Mon 1-2, Tue 12-1 in Sieg 326.


 Welcome to the CSE 431 home page 
If you have any problems with this document, send
mail to jayram@cs.washington.edu.


Class E-mail: 
      (Last update:
           
          
          05/31/96 at 10PM.)

A log of all messages sent out to the class e-mail list
(cse431@cs.washington.edu).


 Textbook 
    Errata.
Handouts:



Admin.
Problems
Solutions
Everything


LaTeX Source:
Syllabus
 1
 2
 3
 4
 5
Midterm
Final
 1
 2
 3
 4
 5
Midterm
Final
Everything



 Acrobat:
Syllabus
 1
 2
 3
 4
 5
Midterm
Final
 1
 2
 3
 4
 5
Midterm
Final
Everything


PostScript:
Syllabus
 1
 2
 3
 4
 5
Midterm
Final
 1
 2
 3
 4
 5
Midterm
Final
Everything




About file formats:  Most of the
course materials above are provided in three formats:





LaTeX:
    Plain ASCII text including formating commands.
    Simple things (e.g. assignments) are generally quite legible in
    this format.  For figures and complex math stuff, these are
    hard-to-impossible to read.
  Adobe Acrobat  :
    The latest & greatest.
    Get a free viewer from Adobe's 
    Acrobat and the Web Page.
    
PostScript:
    The 
    Ghostscript Home Page
    has free viewers (Mac, Windows, OS/2, Linux, ...)
  
At this time, Acrobat is supported on fewer systems, but is
preferable if you can use it -- files are smaller, rendering is
faster and more legible, and it can print (which Mac Ghostscript
can't, for example).



 Old Course Webs:

  Spring 1994
  Spring 1995




jayram@cs.washington.edu


",course
"

CSE444: Introduction to Database Systems


CSE444: Introduction to Database Systems
Fall Quarter, 1996
Instructor: Prof. 
Linda G. Shapiro 
(shapiro@cs) 
Office: 214 Sieg,
Telephone: 543-2196

Office Hours: MW 10:30 to 11:20, F 1:30 to 2:20
TA: Patrick Crowley (pcrowley@cs)
Office Hours: M 3:30-4:50, Th 2:30-3:20, and F 2:30-3:20. Sieg 232.
 Announcements 
 Syllabus 
 Assignments 

 Homework 4(MS-Word Doc) Shift-left-click this link to save.

 Some potentially useful Links 

 UNISQL Home Page
 
QBIC(Query By Image Content), an image database management system.
 
Link to OO DBMS page
 Probably not interesting at all,
but you may want to know about 
Windows NT. 


Back to Course Web


cse444-request@cs.washington.edu 


",course
"

CSE 451 Home Page



CSE 451
Introduction to Operating Systems
Autumn 1996


Instructor: 
Brian Bershad 
(cse451-instructor@cs.washington.edu) 
Lecture: MWF 11:30 - 12:20 in Low 102 
Office Hours:MF: 12.30-1.30
TA: Sung-Eun Choi 
(cse451-TA@cs.washington.edu)  
Section A: Th 12:30 - 1:20 in Low 217
Section B: Th 1:30 - 2:30 in Low 118
Office Hours: W 12:30 - 1:20 in Sieg 326A or by appointment  




Course Intro by Brian Bershad.

Course Admin
The class outline, administrative info, textbooks, grading, and
other words of wisdom. 


Course Messages
 Mail sent to cse451 is archived here.


Midterm 1 solutions
 Scale and solutions for the first midterm.


Lecture Schedule
What will be covered when.  The schedule is aggressive, and
will be updated regularly to reflect our actual pace. 


Lecture Notes
 Handouts and slides from lecture. 


Projects
Descriptions of the projects, related project material, and solutions
to old projects.

 Project 2 solutions are now available.
 Project 3 is now available.

Section Notes
Notes of the material from (some) sections. Watch
this space carefully for information vital to your survival (and
grade).  Project hints will appear here.


 Personal Pages 
 Your personal 451 home pages, where you'll receive feedback on
projects.



Feedback Page
 Send feedback to the instructors/TA...anonymously if you wish.

How To Page
 Lost in the cse451 web?  Click here.






cse451-webmaster@cs.washington.edu


",course
"
CSE 457 Home Page







1996 Autumn Quarter





Welcome to the World Wide Web hypermedia document for CSE/457,
which contains a bounty of information about the class.  Keep
in mind that this document is by no means static, and that new information
will be added frequently.  If you have any problems with this
document, send mail to pighin@cs.  Click here for help.




About the class



Personnel
(Professor, TAs, Students)
Course syllabus
Course calendar
TA Office Hours




Handouts & Assignments



Lecture notes
Reading assignments
Homework assignments




Projects



Project handouts
Project artifacts
Project help sessions
Project grading policy
Project write-ups
libui Documentation




Other course-related information



Getting into the class
Hearn & Baker errata
The SGI Instructional Lab
Using the Indys, a guide to 228
OpenGL Example Programs
1996 Spring quarter home page
1995 Autumn quarter home page
1995 Spring quarter home page
1995 Winter quarter home page




Graphics links



SGI Silicon Surf
Grafica Obscura
SIGGRAPH
GRAIL
Graphics sites index




Other useful links



MVis home page (visitor and room scheduling)

The Computer Science and Engineering Department

The Computer Science degree program

The Computer Engineering degree program



Web help



Basic help
Mosaic, Netscape, and Lynx
Using Netscape on the Indys








pighin@cs.washington.edu



29 September 1996




",course
"

CSE/EE 461, Autumn 1996






CSE/EE 461: Intro. to Computer Communication NetworksAutumn 1996


Instructor:
Arun Somani,
somani@cs




Lecture: MWF 8:30am - 9:20am in MEB103 
Office Sieg 316/EEB306
Phone: 543-9348/685-1602
Office Hours: M W and F 9:30-10:30


TA: 
Jari Kristensen,
jari@cs


Office EEB 331
Office Hours: T Th 9:00 - 1:00 pm ( TA's office hours has been changed to
match Prof. Somani's office hours, thus covering every day in the week and
providing a larger timewindow for consultations.)

Class Messages 
      (Check this or your email frequently.)

Lecture Overheads
Homeworks
Projects
Interesting Stuff

Attention


If you would like to request academic accommodations due to a disability, please
contact Disabled Student Services, 448 Schmitz, 543-8924(V/TDD). If you have
a letter from Disabled Student Services indicating you have a disability that requires
academic accommodations, please present the letter to me so we can discuss the 
accommodations you might need for class.




About file formats:  Most of the course 
materials above are provided in three formats:





HTML:
    HyperText Markup Language (HTML) is the document format handled by 
    WWW browsers, in fact you are currently looking viewing an HTML 
    document.  Many of the handouts we've provided were originally LaTeX 
    documents that have been converted to HTML using 
    LaTeX2HTML, 
    which is why they can be a bit strange.
  LaTeX:
    Plain ASCII text including formating commands.
    Simple things (e.g. assignments) are generally quite legible in
    this format.  For figures and complex math stuff, these are
    hard-to-impossible to read.
  PostScript:
    The 
    Ghostscript Home Page
    has free viewers (Mac, Windows, OS/2, Linux, ...)






jari@cs.washington.edu




",course
"

CSE/EE 461, Spring 1996






CSE/EE 461: Intro. to Computer Communication NetworksSpring 1996


Instructor:
Richard Ladner,
ladner@cs


Lecture: MWF 8:30am - 9:20am in Sieg 325
Office Sieg 311
Phone: 543-9347
Office Hours: W and Th 11am - noon

TA:
William Chan,
wchan@cs


Office Hours: T 11:30am - 12:20pm in Sieg 225, Th 2:30pm - 3:20pm in Sieg 326.

Class Messages 
      (Check this or your email frequently.)

Lecture Overheads
Homeworks
Projects


About file formats:  Most of the course 
materials above are provided in three formats:





HTML:
    HyperText Markup Language (HTML) is the document format handled by 
    WWW browsers, in fact you are currently looking viewing an HTML 
    document.  Many of the handouts we've provided were originally LaTeX 
    documents that have been converted to HTML using 
    LaTeX2HTML, 
    which is why they can be a bit strange.
  LaTeX:
    Plain ASCII text including formating commands.
    Simple things (e.g. assignments) are generally quite legible in
    this format.  For figures and complex math stuff, these are
    hard-to-impossible to read.
  PostScript:
    The 
    Ghostscript Home Page
    has free viewers (Mac, Windows, OS/2, Linux, ...)






ladner@cs.washington.edu

wchan@cs.washington.edu


",course
"

CSE467 Home Page


CSE467: Advanced Digital Design
Ted Kehl, Fall 1996 

The Web pages for CSE467, Fall 1996, can be found 
here.


ted@cs.washington.edu



",course
"

CSE467 Home Page


CSE467: Advanced Digital Design
Ted Kehl, Fall 1996 
Welcome to the 467 Home Page!

Course Information

Time and Place: MWF 9:30-10:30 - Johnson 123
  IMPORTANT ANNOUNCEMENTS Last Updated 
Summary
Syllabus

Lab policies and hours
Staff:

Ted Kehl: instructor Office hrs 10:30-11:30 MWF
Mark Savoy, Tues Lab TA, savac@cs
Richard Chinn, Thurs Lab TA, richin@cs
    Howard Chang, General TA, shchang@cs


Lab Assignments

FINAL PROJECT
Sample ABEL state machines
Sample .tf test fixtures
Lab 1: due Oct 15`
  Lab 2: 
  Lab 3: TA option
  Lab 4: TA option
  Lab 5: TA option


Handouts

Combinational Logic I
Combinational Logic II
Sequential Logic I
Sequential Logic II
FPGAs I
FPGAs II
Memories
Communication

Other Information

Department of Computer Science and Engineering home page
  Murphy's Law
Recent Dilbert Comics
A collection of WWW resources (care of Gaetano Borriello)
 List of VLSI links
 ComprehensiveList of IC
Manufactures
 National Semiconductor
       Data Sheets
 Motorola's Data Book Server
 Philips Semiconducter's Data Book Server
 
	Micron Technology Data Sheets


The CSE467 Web: 
Copyright 1995, 1996; Department of Computer Science and Engineering, University of Washington.

Portions of the CSE467 Web may be reprinted or adapted for academic nonprofit 
purposes, providing the source is accurately quoted and duly credited.





ted@cs.washington.edu



",course
"

CSE471 --- Computer Design and Organization

 CSE471 --- Computer Design and Organization

 General Information  
Meets: MWF 10:30-11:20, Loew 102 
Instructor: Larry Snyder 
Office Hours: MW 4:30-5:30 or by appointment.
E-mail address: snyder@cs 
Office: Sieg 426B  543-9265 
Assistant:  Judy Watson (jwatson@cs), Sieg 426E, 543-0374.

TA:  Robert Chen
Office Hours: Sieg 326A, 4:30-5:30 Tuesdays/Thursdays
E-mail address:  chensg@cs


  Catalog Description 
CPU instruction addressing models, CPU structure and functions,
computer arithmetic and logic unit, register transfer level design,
hardware and microprogram control, memory hierarchy design and
organization, I/O and system components interconnection. Laboratory
project involves design and simulation of an instruction set
processor. 
Prerequisite: CSE 370 and CSE 378. 


 Class notes 
 Monday,       30 Sep 96 (Postscript) Reading: 1.1-1.4 
 Wednesday, 2 Oct 96 (Postscript) Reading: 1.5-1.6 
 Friday,        4 Oct 96 (Postscript) Reading: 1.7-1.10
 Monday,       7 Oct 96 (Postscript), 
 Review Sheet and 
 Answer Sheet.  
 Wednesday, 9 Oct 96 (Postscript) 
 Friday, 11 Oct 96 (Postscript)  
 Monday, 14 Oct 96 (Postscript),
 Homework 1,
 ALU in HTML, Reading: Skim Appendix A 
 Wednesday, 16 Oct 96 (Postscript) 
 Friday, 18 Oct 96 (Color Postscript), Reading: 3.1-3.2 
 Monday, 21 Oct 96 (Postscript), Reading: 3.3-3.4 
 Wednesday, 23 Oct 96 (Postscript),
 Homework 2, Reading: 4.1-4.2 
 Friday, 25 Oct 96 (Postscript), Reading: 4.3.1-2  
 Monday, 28 Oct 96 (Postscript), 
 Homework 3, Reading: Skim H&P, Chap 6. 
 Wednesday, 30 Oct 96 (Postscript) 
 Friday, 1 Nov 96 (Postscript) 
 Monday, 4 Nov 96 (Revised), 
 Review 
 Wednesday, 6 Nov 96 (Postscript), 
  Review Answers 
Friday, 8 Nov 96 Midterm  Fast Answers 
Holiday Monday, 11 Nov 96  
 Wednesday, 13 Nov 96 (Postscript),
 Homework 4, Reading: 4.6 
Friday, 15 Nov 96 (Postscript) 
Monday, 18 Nov 96 (Postscript) 
Wednesday, 20 Nov 96 (Postscript), 
 Homework 5,6,7 
Friday, 22 Nov 96 (Postscript) 
Monday, 25 Nov 96 (Postscript) 
Wednesday, 27 Nov 96 (Postscript) 
Holiday Friday, 29 Nov 96 (Postscript) 
Monday, 2 Dec 96 (Postscript) 
Wednesday, 4 Dec 96 (Postscript) 
Friday, 6 Dec 96 (Postscript) 
Monday, 9 Dec 96 (Postscript) 
Wednesday, 11 Dec 96 (Postscript) 


 Lab Materials 
The following files are available for the Verilog pipeline design: 
Verilog simulation of MIPS pipeline,  pipeline.v. 
Additional modules for pipeline design,  common.v. 

Sample program, source form, test.s. 
Sample program, program segment in ""binary"", prog.bin. 
Sample program, data segment in ""binary"", data.bin. 

Simple assembler for MIPS assembly language, asm.bin. 
Man page for the assembler, man.

 Previous Quarters 
 Fall 95  
 Fall 94  


Verilog References

This is a free Postscript
 Verilog reference card. 


TA
 TA@cs.washington.edu

",course
" 
CSE 473 (Spring 1996) Home Page

CSE 473 (Spring 1996)
INTRODUCTION TO ARTIFICIAL INTELLIGENCE


 Instructor:
 Steve Tanimoto, Department of Computer Science and Engineering, University of Washington,
Seattle, WA 98195.

 TA:
 Jeremy Baer
Meetings:
 Mondays, Wednesdays and Fridays 2:30 PM to 3:20 AM, in Sieg Hall room 231.

 Steve's Office Hours:
 Tuesdays from 4:30 to 5:30 in Sieg 312. 
 Wednesdays from 11:00 to 12:00 in Sieg 312.

 Jeremy's Office Hours:
 Wednesdays from 3:30 to 4:20 in Sieg 326D.
 Thursdays from 1:30 to 2:20 in Sieg 326D.

 Course Newsgroup:
Newsgroup uw-cs.courses.cse473 has been created for CSE 473.
The newsgroup is accessable only through CSE machines.
Messages to the newsgroup can be posted by sending mail to post-cse473@cs
or by using a news interface such as Pnews or trn.

 Course Mailing List: cse473
  Mailing list archive (not implemented).

 Schedule:
 This is a tentative
 schedule: of topics.


 Number of Credits:
 3

 Grading:
 Homework 25%
 Midterm exam  20%
 Final exam 30%
 Project 20%
 Class participation 5%

 Hardcopy Readings:
 Required text: 
The Elements of Artificial Intelligence Using Common Lisp, 2nd edition,
W. H. Freeman, 1995. (I've worked hard to create an AI textbook that is 
self-contained, so you don't have to purchase a separate book on Lisp,
you don't have to buy a separate book on AI example programs, and you
don't have to purchase a separate book on the mathematical theory.)


 Online reference materials for Lisp:
 What Lisp is.
 
The Lisp FAQ provides the answers to many questions about Lisp and
its implementations.
 
Common Lisp: The Language, 2nd edition is the standard reference
on Common Lisp. (It seems best if you access it via the table-of-contents
page, rather than by trying to download the entire HTML file or
postscript.)

 You can get the source code for 
the Lisp programs from The Elements of Artificial Intelligence Using
Common Lisp, 2nd edition.

 Here are some interesting links to info about how to use Lisp for
programming World-Wide Web applications.

 Facilities:
 In order to take advantage of the new Allegro Common Lisp for Windows
implementation of Lisp, with its excellent features for program
development and interface construction, we are using the
Intel Pentium PC laboratory in Sieg Hall.

 There is a free version of Allegro Common Lisp that is
for Windows 95 and Windows NT.  It can be
downloaded from franz.com on the Web.
If you have this kind of computer at home, with at least 8MB of RAM,
using this may be an attractive option for you.


 Final examination:
 The final exam for CSE 473 will be given
according to the UW schedule of final examinations.
It will be a closed-book, multiple-choice test.
Bring a mark-sense form with you to the test.  Here is a

list of topics that you should know for the final.


Announcements

 25 March.
 Welcome to this course and its course web!
This course is about artificial intelligence.  It covers
both the mathematical theory of AI and the implementation
of AI techniques in Lisp.  Topics include Lisp programming
techniques, knowledge representation, search, logical
reasoning, probabilistic reasoning, case-based reasoning,
planning, learning, language understanding, vision,
neural nets, and expert systems.



31 March.
 The reading on CLOS is now linked into the Assignment 2 web page.
 The course's newsgroup has been set up by the CSL staff.
""Newsgroup uw-cs.courses.cse473 has been created for CSE 473.
The newsgroup is accessable only through CSE machines.
Messages to the newsgroup can be posted by sending mail to post-cse473@cs
or by using a news interface such as Pnews or trn.""


 22 April.
 
The mid-term examination will be given on Wednesday, May 1.


 22 April.
 There will be a review session for the midterm exam.
The review will be held Tuesday, April 30 at 4:30 PM in
our regular meeting room.

 26 April.
 
Note about Assignment 5:  We will be continuing the programming
part of Assignment 5 after the midterm.  For Monday, April 29,
turn in, on paper, the following:  All your solutions to Part 1
(exercises), your state representation in Part 2, a screen
shot of your user interface as it is so far, a description of
how you are or are going to generate moves in your search program,
and current status of the program.


 15 May.
 Workload Reduction Proposal (circulated via email) was approved.


 22 May.

Here is the schedule for the rest of the term:

 24 May (Friday) lecture on neural nets.  Preliminary demos of
project.  (Either give a preliminary demo right after class, or
turn in a 1-page progress report in class).

 27 May (Monday) Memorial Day holiday -- no class.

 28 May (Tuesday) Review session for Final Exam from 4:30-5:30 in
Sieg 231.

 29 May (Wednesday) lecture on expert systems.
Explanation of peer evaluation system for projects.

 31 May (Friday) Wrap-up.  Demonstrations of projects, peer evaluation
of projects.

 4 June (Tuesday) 2:30-4:20. Final Exam in Sieg 231.
Bring a mark-sense form with you to the test.


Assignments
Assignment 1 due on Friday, March 29, in class.

Assignment 2 due on Friday, April 5, in class.
Assignment 3 due on Friday, April 12, in class.
Assignment 4 due on Monday, April 22, in class.
Assignment 5 due on Monday, April 29, in class.
Assignment 6 due on Monday, May 13, in class.
Project portions due on May 17, 24, and 31, in class.


tanimoto@cs.washington.edu


",course
"

CSE477 Home Page

CSE477: Digital System Design
Steve Burns, Spring 1996 
Welcome to the 477 Home Page!

Course Information

Time and Place: MWF 1:30-2:30 - Loew 112
  IMPORTANT ANNOUNCEMENTS Last Updated 
Summary
Syllabus
Schedule
Lab policies and hours
Staff:

Steve
        Burns: instructor
Kent Smith
         TA 
Casey Anderson
         TA 
Stephen Lee, Hardware Laboratory manager
  
Office hours
Students

Lab Assignments

Lab 1
Lab 2
Lab 3

MC68HC11 Info

Nice Introduction to the 6811 by Fred Martin

Robotics Societies

Seattle Robotics Society
Portland Area Robotics Society

Other Information

Department of Computer Science and Engineering home page
  Murphy's Law
Recent Dilbert Comics
A collection of WWW resources (care of Gaetano Borriello)
 Comprehensive List of Sources
 National Semiconductor
       Data Sheets
 Motorola's Data Book Server
 Philips Semiconducter's Data Book Server


The CSE477 Web: 
Copyright 1995, 1996; Department of Computer Science and Engineering, University of Washington.

Portions of the CSE477 Web may be reprinted or adapted for academic nonprofit 
purposes, providing the source is accurately quoted and duly credited.





burns@cs.washington.edu



",course
"
CSE 490 Home Page














Welcome to the CSE 490 course web, containing a bevy of information relating
to the course.  As usual, these documents will frequently
change.  Send mail to bswest@cs
if you encounter any problems.




About the class

Personnel
Syllabus
Lecture schedule
Guest lecture schedule
Office hours




Projects

Project handouts/schedule
Project help sessions
Final project




Other information

About LA2
Bugs and errata
Reference pages
Midterm questionnaire








bswest@cs.washington.edu



31 March 1996



",course
" 
CSE501 Home page

CSE 501: Implementation of Programming Languages
Winter Quarter, 1996
Important Course Information


Meeting times 
 M, W, F from 1:30 to 2:20 in MEB 235

 Instructor
 Craig
Chambers (chambers@cs), office hours: T, Th 11-12
(starting second week), Sieg 309.

 TA
 Vass Litvinov (vass@cs), office hours: We 11:00-12:00,
 Fr 11:30-12:30, Sieg 423 / a cubicle on the 4th floor.


Archives

Slides from lecture are available here.

Handouts are available here.

Reading assignments are available here.
The full reading list for the class is available here.

Homework assignments are available here.

Messages sent to the cs501@cs mailing list are archived
here.

Last year's midterm exam & answers are available here.

Last year's final exam & answers are available here.  (Note that this test was closed
book & 2 hrs, which affected the kind of questions that were
asked.)

This year's midterm exam is available here.
Sample solutions are here.

This year's final exam & answers are available here.



Cecil and Vortex Information
Handouts from tutorials

the Cecil language tutorial
the Vortex compiler tutorial
How to Use the Vortex C/C++ Front-end
a list of compiler files of
    interest
dead-assign-elim.cecil
    -- a simple example of an IDFA

cfg-traversal-interface.cecil -- the CFG traversal framework

Vortex RTL Textual Description
    Grammar

Cecil reference documentation

Documentation is available both in HTML and PostScript formats:

The Cecil language reference manual (postscript version)

How to Use the Vortex Compiler (postscript version)

The Cecil Standard Library reference manual (postscript version)


Other Resources

The previous quarter's Web page, including all the old slides, etc.,
is available here.

 

More information about compiler and language research can be found on
Mark Leone's programming language research page.



chambers@cs.washington.edu


",course
" 
CSE501 Home page

CSE 501: Implementation of Programming Languages
Important Course Information


Meeting times 
 M, W, F from 2:30 to 3:20 in Sieg 226

 Instructor
 Craig Chambers (chambers@cs), office hours: T, Th 11-12, Sieg 309.

 TAs
 Jeff Dean (jdean@cs) and 
Dave Grove (grove@cs), office hours: M, F from 10:30 to 11:30.  Come find us in Chateau 110 and we'll go to the Chateau conference room.


Archives

Slides from lecture are available here.

Slides from the Cecil language turorial are available 
here.

Handouts are available here.

Reading assignments are available here.
The full reading list for the class is available here.

Messages sent to the cs501@cs mailing list are archived here.


Project

The course project is to implement some sort of program analysis and
transformation in the Vortex compiler.  Vortex is an optimizing
compiler for object-oriented languages, and is written in Cecil.

 

More information about the Vortex compiler can be found on the Cecil
project home page.

 

Some Cecil manuals can be found 
 here.


Other Resources

More information about compiler and language research can be found on
Mark Leone's programming language research page.



jdean@cs.washington.edu


",course
"

CSE 503 Home Page


CSE 503: Software Engineering
David Notkin, Spring 1996 

 Introductory Handout
 KWIC assignment (#1)
 Assignment #2
 Assignment #3
 Assignment #4
 Assignment #5
 Sample projects






notkin@cs.washington.edu



",course
"

CSE 505 Home Page


CSE 505:  Concepts of Programming Languages
Autumn 1996 / MWF 10:30-11:20 / Loew 113. 

Instructor: David Notkin
    (notkin@cs)
office hours: Tu 2:30-3:30PM, F 1:00-2:00PM, Sieg 414 (and by
appointment)


TA: Kurt Partridge 
(kepart@cs)
office hours: Th 12:00-1:00, 4th Floor Cubicles


Course Handouts

 Introductory handout html, postscript
 Assignments
 Readings


Mailing List and Threaded Archives

We will be using the mailing list for administrative and instructional
purposes.  If you wish to refer to a previously sent message, see the threaded mailing list archives.

Send mail to the list at: 
cse505@cs.washington.edu.  To subscribe to the list, send email
to majordomo@cs.washington.edu with the single line in the message body
(not the subject): 

subscribe cse505

General Programming Language Research Resources

 Yahoo's page
 Mark Leone's excellent 
Programming Languages Research pages
Programming language critiques
Gary Leaven's language self-study page

Functional Languages Resources

MIT's Scheme home page
CMU's Standard ML page
A Gentle Introduction to ML
Haskell FAQ
 Pages on the lambda calculus from Washington University
 Some more lambda calculus pages from Monash University

Object-Oriented Languages Resources

 University of Geneva's object-oriented programming info page
 UW's own Cecil project
 Dylan pages at Carnegie Mellon and Apple Computer.



Questions?  Send us mail.



",course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",course
"

CSE 521, Design and Analysis of Algorithms



CSE 521, Design and Analysis of Algorithms
    Winter 1996
 Instructor:
  
	Richard Anderson, 
        

                anderson@cs.washington.edu

  Lectures

 TTh 10:30 am - 11:50 am in Seig 231

 Office Hours

 Monday, 11:00 am - 11:50 am, other times by appointment



 Teaching Assistant:
  William Chan   , 
        

                wchan@cs.washington.edu

 Office Hours

 Monday 1:30 pm - 2:20 pm and Wednesday 1:00 pm - 1:50 pm
	In Chateau conference room (or in a Sieg 4th floor cubicle
	if somebody else is using the conference room)



 Course Information 

Prerequisite:  I am going to be assuming that you have already had an 
undergraduate course in algorithms.  If I am wrong, let me know as soon as 
possible.


Lecture Log
Suggested Reading

Textbook Errata List
 Project 
 Yes, 521 really does have a project!   For a preview,  check out
Eric Anderson's

applet.

 Assignments and Other Handouts 

Written homework sets will generally be due on Tuesdays in class. 


Background quiz (post script)
   Homework Sets: 

 Homework 1
	and solution
 Homework 2
	and solution
 Homework 3
	and solution
 Homework 4
	and solution
 Homework 5
	and solution
 Homework 6
 Homework 7
	and solution
 Homework 8
 Homework 9

Midterm Exam: Cancelled, due to lack of interest.

   Final Exam: I have been told that it is on Monday,  March 11 - 
I should probably verify the time.  The exam will be a two hour, closed book,
in class exam that covers all of the material from the class.  The exam will
consist of short answer and problem solving questions.

Bureaucratic stuff

Grading  Based upon homework, exams, project and class participation.


Working together on homework  It is okay to discuss homework
problems with your classmates, but  you must write your solutions up
independently.  (The Gilligan's Island rule could be invoked: between
any discussion of the homework, and writing up a solution, you must
watch at least half an hour of Gilligan's Island.  The theory is that
an episode of Gilligan is equivalent to a reboot, so anything that
survives was learned and understood.)



anderson@cs.washington.edu


wchan@cs.washington.edu


",course
"

CSE 524, Parallel Algorithms



CSE 524, Parallel Algorithms
    Spring 1995 
 General Information  
Meets: TTh 9:00-10:30, Sieg 225 
Instructor: Richard 
Anderson 
Office Hours: By appointment
E-mail address: anderson@cs 
Office: Sieg 410 
 Homework and Exams 
  Catalog 
Description  
Design and analysis of parallel algorithms: fundamental parallel algorithms
for sorting, arithmetic, matrix and graph problems, and additional selected 
topics. Emphasis on general techniques and approaches used for developing
fast and efficient parallel algorithms and on limitations to their
efficacy. Prerequisite: CSE 521 (or equivalent). CSE Majors only. 

 Homework Assignments and Notes 

  Syllabus  
  Homework 1 Due Thursday, April 6.  
  Homework 2 plus some rambling comments
about the course. Due Thursday, April 20.  
  Lecture Transparencies, April 11 Code and analysis
for list ranking. 
  Old lecture notes 
on connected components (this algorithm
is simpler and correcter than Section 5.1.3.)   LaTeX 
version 
  Pointers to papers about pointers References
for EREW and CREW Connectivity and the Ullman-Yannakakis paper.  
  Homework 3 Due Tuesday, May 2. 
 Union-Find Paper .ps or .dvi 
  Homework 4 Due Thursday, May 18. 
 Certified Write-All Paper .ps or 
.dvi  This implies the existence of
a more efficient consensus algorithm based upon swap - although it is not likely
something you are going to see inside your next supercomputer.
  Homework 5 Due Thursday, May 25. 
 Asynchronous P-RAM references - Martel et al. FOCS 1990, and 
 Buss et al. (Manuscript) . 
 Notes on  memory models .

 Real Description 

As a special topics course, the content is up to the whim of the instructor.
A more descriptive title for this year's course would be: A theory of shared 
memory parallel computing, or maybe, topics in the theory of SMPC.
The course will start with a collection of basic algorithms, and then we 
will spend some time on models of computation.  The 
syllabus gives a list of topics which could be covered.



My use of the term ""shared memory"" is to indicate that we will not be looking
at topics which pertain to specific interconnection topologies.  We
will consider some situations where the cost of memory access is
non-uniform.  


The course will be a theory course in the sense that we will not
consider particular real machines, we will prove some theorems, and
you will not be expected to log on to a parallel machine.  However,
topics may be motivated by practical considerations.  Our goal in
developing parallel algorithms will be to come up with algorithms
which could conceivably be efficient on some parallel machines.


I am expecting that there will be three or four problem sets,
containing a mix of routine and challenging problems.  I am not going
to require a project, (but I will be happy if students do outside
work on course related topics).


The text for the course will be ""An Introduction to Parallel
Algorithms"" by Ja Ja.  This is a nice book, although I will not be
following it very closely.  If you are feeling exceptionally cheap, you
could probably get by without purchasing a copy.  My original plan,
when I volunteered to teach the course a year ago, was that the text
would be ""A Theory of Shared Memory Parallel Computing"" by Anderson.
However, this book is progressing about as fast as Volume 7 of the Art
of Computer Programming, so I chose the Ja Ja book instead.



I am going to be quite flexible on how this course is taught.  My
choice of topics will be influenced by what is considered interesting
or uninteresting.  There is also a choice as to teach this course as
either a traditional lecture course, or to work in some research
content.  I have a number of open problems in mind which could turn
into very nice research results.  I could present my half baked ideas
on some of these, provided that others have the interest and
energy to think about them.









anderson@cs.washington.edu



",course
"

CSE 531 Home Page 






    CSE 531: Automata, Computability, and Complexity
  




The 531 web pages have moved:




Current Quarter



Autumn 1991
Autumn 1994






Portions of the CSE 531 Web may be reprinted or adapted for
academic nonprofit purposes, providing the source is accurately
quoted and duly credited.  The CSE 531 Web: Copyright 1996,
Department of Computer Science and Engineering, University of
Washington.




  Comments to: 
  

cse531-webmaster@cs.washington.edu
  
(Last Update: 
  
  10/21/96
)




",course
"

CSE 531 Home Page, Fall '91 



CSE 531: Automata
Autumn 1991 
 Instructor: Paul Beame  

Welcome to the 531 Home Page!

This is the World Wide Web (""the Web"" for short) hypermedia document
for CSE 531.  


 Exams: 

 Quiz 1: Postscript 
 Quiz 2: Postscript 
 Final: Postscript  or
                 Latex 



beame@cs.washington.edu


",course
"

CSE 531 Fall '96






    CSE 531: Automata, Computability, and Complexity
  

    Larry Ruzzo, Fall 1996
  

    TuTh 10:30-11:50, 224 Sieg
  



StaffNameEmailPhoneOffice Hours

Instructor:
Larry Ruzzo
ruzzo@cs543-6298Tu 2:30-3:20 F  1:00-2:20Sieg 415


TA:
Nitin Sharma
nitin@cs MW 3:30-4:20Sieg 326A



Class E-mail: 
      (Last update:
           
          
          10/21/96 at 09PM.)

A log of all messages sent out to the class e-mail list
(cse531@cs.washington.edu).


 
    Textbook Errata



Handouts
Administrivia
Homework
Midterm



LaTeX Source:
Course Organization
Syllabus
Collaboration
 1
 2
 3
 4
 5
Midterm












 Acrobat:
Course Organization
Syllabus
Collaboration
 1
 2
 3
 4
 5
Midterm











PostScript:
Course Organization
Syllabus
Collaboration
 1
 2
 3
 4
 5
Midterm













About file formats:  Most of the
course materials above are provided in three formats:





LaTeX:
    Plain ASCII text including formating commands.
    Simple things (e.g. assignments) are generally quite legible in
    this format.  For figures and complex math stuff, these are
    hard-to-impossible to read.
  Adobe Acrobat  :
    The latest & greatest.  A free viewer is available on
    some of the department's unix systems (""acroread""), or  is
    perhaps aavailable from Adobe's 
    Acrobat and the Web Page.
    
PostScript:
    Use ghostview, or see the 
    Ghostscript Home Page
    for free viewers (Mac, Windows, OS/2, Linux, ...)
  
At this time, Acrobat is supported on fewer systems, but is
preferable if you can use it -- files are smaller, rendering is
faster and more legible, and it can print (which Mac Ghostscript
can't, for example).



Old Course Webs:





Autumn 1991
Autumn 1994






Portions of the CSE 531 Web may be reprinted or adapted for
academic nonprofit purposes, providing the source is accurately
quoted and duly credited.  The CSE 531 Web: Copyright 1996,
Department of Computer Science and Engineering, University of
Washington.




  Comments to: 
  

cse531-webmaster@cs.washington.edu
  
(Last Update: 
  
  11/26/96
)




",course
"

 CSE 533 - Topics in Complexity, Autumn 1995



CSE533 Propositional Theorem Proving, Satisfiability Testing and Proof Complexity
 General information 

 Instructor:  Paul Beame 
 Meeting times: Tuesday, Thursday 12:00-1:20 in Loew 113.



Automated theorem proving and computer-aided verification in AI, VLSI, and
Software Engineering give algorithms that attempt to decide the truth
of logical statements in propositional or in first- (or higher-) order logic. 
This course will concentrate on complexity issues for the propositional case
as well as for its flip side, satisfiability-testing.  (Even the uses of
theorem proving in first-order and higher-order logic often involve finite
domains where the proofs can be interpreted in propositional logic anyway.)



We will consider a variety of systems for propositional theorem
proving and satisfiability testing.  Key issues for such systems are:

 How complex are proofs within the system?
 What are good choices for search strategies?

There has been considerable theoretical and practical work on both of these
questions.  We will concentrate on theoretical issues of proof complexity
and of the relative complexity of search strategies.  We will also examine a
number of implementations of propositional logic algorithms to compare theory
and practice.

 Papers and things 
  Urquhart's Complexity of Proofs Survey 
  519 talk slides 
 Installed software 

For our amusement I have installed a few theorem provers, ANL-DP, Sato, and
Boyer Moore as well as one satisfiability tester, Gsat on june in the
directory:

/cse/courses/cse533/provers

There are few papers scattered there as well and I am in the process of
installing more theorem provers.    




",course
"

CSE 543 Home Page





CSE 543:
Computer System
Performance Modeling
Spring 1996

Your Hosts:
Ed Lazowska
and
Mary
Vernon



Welcome to the home page for CSE 543, Computer System Performance
Modeling.


CSE 543 meets Mondays, Wednesdays and Fridays from 1:30-2:20
in Loew Hall 115.


Office hours
Tentative topic schedule
Comings and goings
Assignments
Project information
MAP (queueing network solution
	package)
Email



Other information is available about:

The May 1996
ACM SIGMETRICS Conference on Measurement and Modeling of Computer
Systems

UW Department of Computer Science & Engineering



lazowska@cs.washington.edu



",course
"

CSE 548 Home Page (W 96)



CSE 548: Computer Systems Architecture
Winter 1996 

Instructor
Susan
	Eggers
 
	, eggers@cs.washington.edu, Sieg 308, 543-2118 
	Office Hours: TuTh 11 - 12


TA
Joshua Redstone

	, redstone@cs.washington.edu, Sieg 233, 543-7798 
	Office Hours: M 2:30 - 3:20, W 4:00 - 4:50 in Sieg 326a


 Course information

Course Overview (Postscript)
Schedule (continuously updated) (Postscript)
Lecture Notes
Problem Sets
Previous Tests
Architecture History (Postscript)
Specmark Ratings (Postscript)


Other information 

 Tools
	
 
		Shade - an Instuction Set simulator for the SPARC V8
  	   
		Atom - a system for building analysis tools on the
			Alpha 21064
	   
		Tullsen's 21164 Simulator - An execution-driven,
		instruction-level simulator that simulates a superscalar 
		architecture very close to the 21164.

	   Etch - a binary rewriter to 
			analyze Pentium code.

	   
			Alpha Hardware Monitors
 Multiflow - Compiler for the Alpha
  	   
		Pixie - just User's Manual from 1991(Postscript)
 Dinero - A 'uniprocessor cache simulator'

 Local Machines
	
 Alphas
 Pentiums
 PowerPCs
 SPARCs

 Applications
	
 Multiprocessor
 Uniprocessor
		
 SPEC benchmarks




Other neat pages

 CPU Info Center - info on current/future processors



",course
"CSE 551 Home Page
CSE 551: Operating Systems

 Instructor
  Hank Levy, Spring
1996.

 TA
  Frederic Pighin
 Meeting times
  Tue, Thu. 10:30-11:50 in EEB 113.

 Instructor office hours
  TBA

 TA office hours
  Mon, Fri. 2:30-3:30 in Chateau conference room.


 Number of units
  3




 Welcome to the 551 Home Page.

This is the World Wide Web (""the Web"" for short) hypermedia document for
CSE 551 and contains information about the class. Keep in mind that this
document is not static, and that new information (especially class
messages) will be added frequently. If you have any problems with this
document, send mail to 
pighin@cs.


Announcements

 April 4
 The first assignment is ready. It
is due on Thu. April 11. 


Course Information

 Course mail
 Assignments
 The Project



levy@cs.washington.edu

",course
"

CSE 557 Home Page


CSE 557: Computer Graphics
Autumn Quarter 1995

Welcome to the CSE 557 Home Page!

This is the World Wide Web hypermedia document for CSE 557, which
contains a wealth of information about the class.  Keep in mind that
this document is not static, and that new information will be added
frequently.  

If you have any problems with this document, send mail to derose@cs.
Click here for help.  

Available information:

Your professor and TAs
Course syllabus
Lecture notes
Written homework assignments and solutions from last year
Project handouts
Project grading policy
Old tests
Cool images from last year's 557


Additional information:

Getting into the class 
The SGI Instructional Lab
Using the Indys
MVis home
    page (visitor and room scheduling)
The 
     Computer Science and Engineering Department,
The 
    
    Computer Science degree program (offered through the College
    of Arts and Sciences),
  The 
    
    Computer Engineering degree program (offered through the College
    of Engineering),
and 



Mosaic Help:
Help is available on the following topics:

 Basic information about Mosaic.
 Information about the HyperText Markup Language
(HTML)
 Uniform Resource Locators
(URL)
 How to read the web from home using
Lynx,
a character-based web browser



",course
"`

CSE 567 Home Page (A 96)



CSE 567: Principles of Digital Systems Design 
Carl Ebeling, Fall 1996 
Welcome to the 567 Home Page!

Course Information

Time and Place: MWF 1:30-2:20 - Loew 201
  IMPORTANT ANNOUNCEMENTS

Summary
Syllabus
Text books
Staff:


	Carl Ebeling: instructor
	ebeling@cs
	Office Hours: Wednesday 2:30; Friday 11:30 (Sieg 215)

	Paul Franklin TA 
	paul@cs
	Office Hours: Monday 3:30; Thursday 1:30 (Sieg 424)

	Ken Hines TA 
	hineskj@cs
	Office Hours: Tuesday 1:30; Wednesday 3:30 [Friday, Oct. 25, 12:00] (Sieg 424)
 Larry
	McMurchie: Research Staff and CAD Tools Guru
	larry@cs

Documentation for simulation and
    synthesis
How to design for the Pamette
  board.  (Mostly complete, still under construction.)
  Students
Working in groups


Homework Assignments

A note on doing homework.
  Homework 1: due 
Friday, Oct. 11, beginning of class.
  Homework 2: Handed out in class, due Oct. 18, beginning of class.
  Homework 3: due Monday,
Oct. 28, beginning of class.
  Homework 4: due Wednesday,
Nov. 6, beginning of class.
  Homework 5: due Friday,
Nov. 15, beginning of class.
  Homework 6: due Monday,
Dec. 15, beginning of class.


Handouts


Other Information

Department of Computer Science and Engineering home page
   
EE/CS Mother Site
 List of VLSI links
 ComprehensiveList of IC
Manufactures
Murphy's Law
Recent Dilbert Comics



The CSE567 Web: 
Copyright 1995, 1996; Department of Computer Science and Engineering, University of Washington.

Portions of the CSE567 Web may be reprinted or adapted for academic nonprofit 
purposes, providing the source is accurately quoted and duly credited.





ebeling@cs.washington.edu



",course
"
CSE 573 Index Page

CSE 573 - Artificial Intelligence
Fall Quarter, 1996




Artificial intelligence (AI) poses two of the most fundamental and
challenging questions in computer science: can we build intelligent
machines?  How? This course addresses these questions by providing an
in-depth introduction to selected topics in AI including agent
architectures, knowledge representation, search, planning, machine
learning, reasoning about uncertainty, and AI methodology.





Staff:

Dan Weldweld@cs
Sieg 408543-9196Hours, TBA 
Marc Friedmanfriedman@cs
Sieg 429543-5129Hours, TBA 
Nick Kushmericknick@cs
Sieg 428685-2723Hours, TBA 


Outline of Topics
Reading Assignments
Assignments & Exams
Grading
Resources
The Class Mailing
List; see also the archive of past messages




",course
"


CSE 574  Uncertainty and Decision Making



 CSE 574  Uncertainty and Decision Making in Artificial Intelligence --- 
     Winter 1996 

 Professor: 
 
          Steve Hanks, 
    hanks@cs.
   
 Office: Sieg 210, 3-4784
      Office hours whenever I'm around, or by appointment.
   

 Email addresses:

Mail to 
    cse574@cs.washington.edu  goes to all class members.

Send mail to 
     cse574-request@cs.washington.edu
     
to get put on the list.


 Reading material:

 Pearl:  Probabilistic Reasoning in Intelligent Systems
This is the ""required"" text for the class, and we will read several 
chapters.   You can probably get by without buying it if you're strapped
for cash, though it's a nice reference book. 

 Shafer and Pearl:  Readings in Uncertain Reasoning
This is a nice collection of foundational papers on reasoning and 
uncertainty, and we will read several selections.  A copy will be 
available in the GRAIL library.

 E.T. Jaynes:  Probability 
Theory:  The Logic of Science.
Fragmentary edition of July 1995.  
This is an extremely interesting technical and historical look at the foundations
of probability theory, statistics, and decision theory.  Definitely worth 
looking at for the reference list and historical perspective alone!  The 
math can be heavy going in places, but it's beautifully written.

 Neapolitan:  Probabilistic Reasoning in Expert Systems, Theory and 
Algorithms
A significant overlap with the Pearl book, so a good 
secondary source for information about graphical models and propagation
algorithms.   This is available from the Math Research library.


 Other papers to be arranged.


Course summary:
Here is a summary of the topics we covered and the readings, 
in  HTML  or 
Postscript.


 
hanks@cs.washington.edu (Last Update: 06/20/96)



",course
"

CSE/EE 576 Home Page


CSE/EE 576: Image Understanding
Welcome to the 576 Home Page!

This is the World Wide Web (""the Web"" for short) hypermedia document
for CSE/EE 576 and contains information about the
class.  Keep in mind that this document is not static, and that new
information (especially class messages) will be added frequently.
If you have any problems with this document, send mail to 
 mock@cs.


Copyright Notice:  The material in this course web is subject
to copyright.  While it may be viewed by the public,
it should not be installed at any web site other
than the one at the University of Washington.

Assignments 

The first assignment is to read Chapter 1 of the course notes and do
exercise 5.


The second assignment is due Wednesday,  April 5.
Read Chapter 2 of the course notes and do exercises 1-7.
Next, determine the most convenient way to
run KHOROS and CANTATA for you.  In CSE it runs on Suns such as
Lillith.
Edit your local workstation's .login file to contain
xhost +lillith
Then add to you .cshrc file on the Suns the following:


 setenv KHOROS_HOME /usr/local/khoros
 setenv MANPATH /usr/local/khoros/man
 set path=($KHOROS_HOME/bin $path)


After an rlogin onto Lillith with your rhost assignments
and DISPLAY environment variable set up appropriately, type
cantata at the Unix prompt.  In EE, the machine ""george"" has
KHOROS and CANTATA installed on it.


Also go to our course home page on the WWW
http://www.cs.washington.edu/education/courses/576/index.html
and follow the links to the KHOROS/CANTATA tutorial.  Go to its
course outline, to ""experiments"" and do at least the first two
topics (""Image information"" and ""Spatial Resolution"").
The ideal way to take the tutorial is to read the web pages
and experiment with KHOROS in another X window.
There is nothing to turn in for this part of the assignment.


The third assignment is to read the article by Lin, Huertas, and
Nevatia on pp.62-69 of the CVPR'94 proceedings, and also to
look at the article by Wolff on pp.369-376.


The fourth assignment is due Monday,  April 17.  In this assignment,
we make a comparison of three image-processing software environments:
KHOROS, MSVC/C++ & ""Image"", and MATLAB Image Processing Toolbox.
The objects of the assignment
are (1) to gain some experience with each environment,
(2) to begin to get a feel for the strengths and weaknesses of
each of these environments, and (3) to explore the use of
convolution in noise suppression and edge detection.

In each environment: (a) select a monochrome test image.
(b) apply the Sobel operation to the test
image. (c) apply a moving average filter to the test image.
(d) apply a 3 by 3 laplacian to the test image.
(e) simulate gaussian smoothing with larger standard-deviation
gaussians by iteratively applying the moving average filter.
(f) apply the 3 by 3 laplacian to each gaussian-smoothed image.
(g) describe the results obtained in terms of changes in appearance
to objects and contours in the test image.
(h) describe the following aspects of the implementation:
what menu selections, direct manipulations, or programming you
had to do to perform the experiments; how fast the operations ran;
and level of learning effort required on your part.


Announcements 

The final examination will be on Monday, June 5 from 2:30 to 4:20PM
in our regular class meeting room.  The exam will cover a combination
of pre-midterm and post-midterm material.
Here is a list of topics to study.
Reminder: the class approved Sunday, June 4 from 1:30-2:30
as the time for the final-exam review meeting.  The plan is to meet in
Sieg 422.



Outlines for selected class periods are available here:
Friday, 28 April.
Monday, 1 May.
Wednesday, 3 May.
Monday, 8 May.
Friday, 12 May.
Monday, 15 May.
Wednesday, 17 May.
Friday, 19 May.
Monday, 22 May.
Wednesday, 24 May.
Copies of the overhead transparencies for the May 22 and 24 lectures on
neural nets are available at the Engineering Library Copy Center (2nd floor)
as CSE/EE 576 packet number 2 (""Trainable Classifiers"").
Friday, 26 May.


Students in 576 are permitted to get a temporary copy of
MATLAB for their own use in the course.  This will require
that you fill out a form and sign a contract.
Let me know if you are interested.

Term projects are an important part of
the course.  These are to be started during the week of April 24.


Here are some corrections to the course notes.


On Friday, April 7, we were introduced to the Pentium laboratory, including
the MSVC/C++ software development environment.

Here is  Evan McLain's document
explaining how to add a new transform to the Image application.


Here is 
Current status of the KHOROS installation on the Suns.
It contains the most recent information about getting started with
Khoros and the accompanying DIP course.
Please read this.



No class on Friday, March 31 or Monday, April 3.
 

Most students already have a computer account that can access
KHOROS and CANTATA.  If you do not, contact Renee Reed on
Thursday or Friday to make an arrangement to pick up your
account login name and password so that you can use it
over the weekend and early next week.  Renee's hours are
limited, so plan ahead.  Her email address is reed@cs, and
she is in part of Sieg 127 (in a back office).
Sieg 127 is kept locked, so you will either need to knock or
have a prior arrangement to meet her.

Many of the account application cards were not signed.  We will
have to take care of that next week.

Selected Lecture Slides 
 Monday, March 27.
 Wednesday, March 29.
Information Resources for Image Understanding 
 An Online Intro to Image Processing with KHOROS/CANTATA
 The Delft Univ. Pattern Recognition Information Page.
 The Computer Vision Home Page (stored at CMU).
Other information

 Home page for the
Department of Computer Science and Engineering
 
Online version of the Computer Science undergraduate brochure
 
Online version of the Computer Engineering undergraduate brochure



Mosaic Help:
If you're running Mosaic on a Mac, you can find some help items
under the Mac Balloon Help menu, and on the MacMosaic Home Page item
under the Navigate menu, and 
 here.





(Last Update: 31 May 1995)



",course
"

CSE 581 Home Page


CSE 581: Parallel Computation in Image Processing
Welcome to the 581 Home Page!

This is the World Wide Web (""the Web"" for short) hypermedia document
for CSE 581 and contains information about the
class.  Keep in mind that this document is not static, and that new
information  will be added from time to time.

Schedule Information

On October 31, November 7, and 9, class will begin a half-hour
earlier than normal.  I.e., we will start at 8:30 on these days.
On November 1, we will meet at 9:00 and have a guest speaker,
Prof. Ze-Nian Li of Simon Fraser University in Burnaby, B.C., Canada.

Tuesday, November 14: no class.

November 16 at 9:00. Dr. Bharath Modayur will be our guest speaker,
and the title of his presentation is, 
""Efficient parallel object recognition on SIMD and MIMD machines"".

Tuesday, November 21.  Class will begin at 8:30 AM.
Topics: Completion of discussion of pyramid algorithms -- scale-invariant
operators, top-down algorithms, and segmentation through hierarchical
relaxation (using the ISODATA approach of Burt, Hong and Rosenfeld).
Introduction to embedding and virtual processing.
Overview of neural network architectures.
algorithms,

Tuesday, November 28. Class will begin at 8:30 AM.
Topics: Completion of overview of neural network architectures.
Embedding of neural networks in meshes and pyramids.
Brief treatment of iconic/symbolic computation.

Thursday, November 30. Class will begin at 8:30 AM.
Topic: Parallel image analysis for digital libraries.

Here is the 
demo schedule.
Finding term project topics

During the week of October 12-18 students should be actively
exploring one or more topics for the term project.
Written descriptions of topics should be handed in
on Tuesday, October 24.  A template for the writeups
is available 
here.
Resources
PVM (Parallel Virtual
Machine) is a software layear that permits a user program to run on a
virual machine made up of a heterogeneous collection of  one or more
workstations.  This is a convenient way to implement and study
distributed algorithms.


Intel SSD Technical
Publications include documentation for the Intel Paragon
parallel computer system.


The 
ZPL language  is a good language in which to implement
2-D array-oriented algorithms on the Intel Paragon.



Various
vendors of supercomputers and parallel machines.


Some info on
the MasPar, from the National Supercomputer Center in Sweden.

Some online information for the MasPar MP-2 is at the
University of Tennessee.
This resource was found by Neal Friedman.  He reports that
""they've also got some Paragon documents.""


Here are some  errors in and corrections
to the course notes.



Copyright Notice:  The material in this course web is subject
to copyright.  While it may be viewed by the public,
it should not be installed at any web site other
than the one at the University of Washington.


Term projects are an important part of
the course.  These should be started during the week of October 16.

The review session for the final is schedule for Friday, December 1,
4:30-6:00 in 422 Sieg Hall.


The final exam is scheduled for Wednesday, December 13 from 10:30 to 12:20
in our normal class meeting room.  The exam is closed-book.

Term projects are due at or before 4:30 PM, Thursday, December 14.





(Last Update: 10 October 1995)



",course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",course
"

CSE 590BI, Winter 1996






CSE 590BI, Winter 1996 Algorithms in Molecular Biology 
Richard Karp, Larry Ruzzo, Martin Tompa

Class Bboard: 
      (Last update:
           
          
          08/06/96 at 07PM.)

Handouts:



Administrative
Lecture Notes
(Drafts)
Homework


HTML:

Syllabus
Schedule
 
 
 



 Acrobat:
Title/TOC
Syllabus
Schedule
1
2
3
4
5
6
7
8
9
10
17
18
11
12
13
14
15
16
19
20
HW 1
HW 2


PostScript:
Title/TOC
Syllabus
Schedule
1
2
3
4
5
6
7
8
9
10
17
18
11
12
13
14
15
16
19
20
HW 1
HW 2

 

Slides:
 
 
10

 
 



















About file formats:  The 
course materials above may be provided in any of several formats:





HTML:
    Usual Web format.  This loads fast and is usually readable,
    but many parts will be generated by automatic translations
    from LaTeX, and the translation may not be very faithful to
    the format of the original.
    





Adobe Acrobat  :
    The latest & greatest.
    Get a free viewer from Adobe's 
    Acrobat and the Web Page.
    
PostScript:
    The 
    Ghostscript Home Page
    has free viewers (Mac, Windows, OS/2, Linux, ...)
  
At this time, Acrobat is supported on fewer systems, but is
preferable if you can use it -- files are smaller, rendering is
faster and more legible, and it can print (which Mac Ghostscript
can't, for example).






ruzzo@cs.washington.edu
(Last Update: 04/08/96)


",course
"

CSE 590B: Graphics Seminar




C S E   5 9 0 B :  
G R A P H I C S  
S E M I N A R
Spring 1996
Numerical Methods in Graphics






April 3
Matrix Computations I
Intro: Definitions, Properties, Inversion (Brad C.)
Solving Linear Systems (Eric)


April 10
Matrix Computations II
Eigenvalues & Eigenvectors (Dan F.) 
Singular Value Decomposition (Joel) 


April 17
Root Finding/Nonlinear Equations (Corey, Shuichi)


April 24
Optimization
Intro and Unconstrained Optimization (Kari) 
Constrained and Global Optimization (Kevin) 


May 1
Linear and Quadratic Programming
Linear Programming (Chuck/Ronen) 
Linear & Quadratic Programming: Examples (Daniel) 


May 8
Data Fitting
Intro and Conclusion (Mike) 
Linear Regression and Calibration Example (Brad W.)


May 15
Ordinary Differential Equations
  Intro, Methods, Papers (Adam)
More Methods & Papers (Joanna)


May 22
Discretization Methods
Finite Elements & Radiosity (Fred)
  PDEs & Finite Differences (Jim)


May 29
Interval Arithmetic (Troy, Jonathan)





Last modified: Wed Apr  3 18:08:02 PST 1996



",course
"

CSE 590D All Quarters


CSE 590D: Special Topics

Steven Tanimoto, instructor




CSE 590D (Autumn 1995): Transcript-Based Education/WWW.



CSE 590D (Winter 1996): Mathematics Experiences Through Image Processing.



CSE 590D (Spring 1996): Mathematics Experiences Through Image Processing.



CSE 590D (Autumn 1996): Technology for Collaborative Learning.

Copyright Notice:  The material in this course web is subject
to copyright.  While it may be viewed by the public,
it should not be installed at any web site other
than the one at the University of Washington.

This graduate seminar explores a variety of topics related to the use
of computers in education.  Specific topics and activities vary
from quarter to quarter.

(Last Update: 30 September 1996)
tanimoto@cs.washington.edu



",course
"

CSE 590D Home Page (Autumn 1995)


CSE 590D (Autumn 1995): Transcript-Based Education/WWW
Welcome to the CSE 590D Home Page!

This is the World Wide Web (""the Web"" for short) hypermedia document
for CSE 590D and contains information about the
class.  Keep in mind that this document is not static, and that new
information  will be added from time to time.


Copyright Notice:  The material in this course web is subject
to copyright.  While it may be viewed by the public,
it should not be installed at any web site other
than the one at the University of Washington.

Reading for October 10 --  G. McCalla: ""The Central Importance
of Student Modelling in Intelligent Tutoring.""

Reading for October 17 --  
(presented by Sandi Youngquist)

Meeting of October 23 --  Discussion with Paul Barton-Davis about
Internet services.

Reading for October 31 --  C. Laborde and J-M Laborde:
""Problem Solving in Geometry: From Microworlds to
Intelligent Computer Environments""  (presented by Tessa Lau)


Reading for November 7 --  B. Bartels: ""Promoting mathematics
connections with concept mapping""
(plus presentation by Gary Anderson)


No meeting November 14 --  


Reading for November 21 --   

The readings for this meeting are all online (on the WWW).

The first paper combines some degree of ""vision"" (a little)
with some degree of technology (nothing particularly ambitious,
but a description of the state of the art)


The second paper is a non-technical piece that promotes the
theme of learners taking responsibility for their education --
something that will be increasingly important in the future.


The two choices for the third reading are papers that are more
sophisticated than either of the first two.  The paper ""Beyond 
Browsing"" elaborates on the possibility of group annotation of
WWW materials.  The paper ""The DEC Web Toolkit"" describes in
technical terms a layer of Internet infrastructure that could
make it possible to have ""smart distributed tutorial"" applications
that do more than what Mosaic or Netscape can achieve.


Please read both 1 and 2 and either of the options for 3.


1.   Advanced Educational Uses of the World-Wide Web

http://www.igd.fhg.de/www/www95/proceedings/papers/89/paper.html
     (presentor: Jeremy Baer)


2.   Empowering Students in the Information Age

http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/Educ/ward/ward.html
     (presentor: Marla Baker)


3. Either
     Beyond Browsing: Shared Comments, SOAPs,
     Trails, and On-line Communities

http://www.igd.fhg.de/www/www95/proceedings/papers/88/TR/WWW95.html
     (presentor: John Dietz)


 or


     The DCE Web Toolkit: Enhancing WWW Protocols
     With Lower-Layer Services
<a href=""http://www.igd.fhg.de/www/www95/proceedings/papers/67/DCEWebKit.html>
http://www.igd.fhg.de/www/www95/proceedings/papers/67/DCEWebKit.html
     (presentor: Adam Carlson)


Presentor for the paper Concept Mapping:  Yan-Hong Zhu




Meeting of November 28 --  Discussion with Michael Jay about
Curriculum Navigator.







(Last Update: 21 November 1995)



",course
"

CSE 590D Home Page Autumn 1996)


CSE 590D (Autumn 1996): Technology for Collaborative Learning
Welcome to the CSE 590D Home Page!

Copyright Notice:  The material in this course web is subject
to copyright.  While it may be viewed by the public,
it should not be installed at any web site other
than the one at the University of Washington.

General description for Autumn 1996

 Computer technology, the Internet, and new methodologies
for teaching and learning are currently coming together in
new ways.  This seminar will explore a few of them.


 We will read a number of papers on technology for
collaborative learning.  Each participating student will
take responsibility for making a presentation to the group on one of
these papers.  We will cover a subset of 

these papers.
 We will also explore some of the possible applications of
AI and visualization techniques to the analysis of evidence of
student learning in online contexts.




Meetings are currently scheduled for Tuesdays 2:30-3:20.
However, we may decide to move the time to better fit into
people's schedules. 

Visits to the Meany Middle School and the Washington Middle School
may be scheduled, depending on the interests of the participating
students.









(Last Update: 25 September 1996,  S. Tanimoto)



",course
"

CSE 590g, Architecture Lunch

CSE 590g - Architecture Lunch





Course organizer:


Jean-Loup
Baer

Meeting time:


Tuesdays, 12:30pm to 1:20pm, in MOR 226




CSE590G, aka ""architecture lunch"", will continue this quarter with
almost the same  format as previous years,
i.e., selection of papers to be discussed
at the beginning of the quarter, distribution on week n of
the paper to
be read during the week and discussed at week (n+1). There might 
be a few formal presentations of work in progress by
esteemed members of the ""lunch"".  Mostly
we'll have  (hopefully heated) discussions
on papers from the literature.



The only difference between this quarter and previous quarters
is that we'll start by reading the position papers from
participants of a recent NSF Workshop on
Critical issues in Computer Architecture Research.
You can get a copy  here


Reading these positions papers will lead us to one or more
themes of papers to read this quarter.



With many thanks to Ruth Anderson, Molly Brown, Ori Gershony,
and Matthai Philipose a tabular summary of
the Gurus positions can be found 
here


For those of you who are new, our usual format is for one of the
students to lead the discussion of the papers, either informally
or with slides.  Credit for the course is variable: 2 credits if
you present, 1 if you just read.



The first meeting (organization meeting)
will be Tuesday October 1 at 12:30 in 
MOR 226



On Tuesday Oct 22, we will read:

Value locality and Load value prediction by Lipasti, Wilkerson and Shen, ASPLOS VII pp 138-147.



All ASPLOS-VII papers are on line. Follow the links from:

ASPLOS-advance
program


I have put a short 
bibliography of PIM (processor in memory)
on line. I'd appreciate volunteers for the
Saulsbury, Burger and M-machine papers.


On Tuesday Oct 29, we'll read

Ashley Saulsbury, Fong Pong, and Andreas Nowatzyk
""Missing the Memory Wall:  The Case for Processor/Memory Integration""
ISCA 1996 pp 90-101


On Tuesday Nov 5, we'll read

M.Fillo, S.Keckler, W.Dally et al.
""The M-machine multicomputer""
Micro 28 1995 (available on the net: follow the
M-machine
link. )


On Tuesday Nov 12,  we'll read

Doug Burger, Stefanos Kaxiras, and James R. Goodman
""DataScalar Architectures and the SPSD Execution Model""
University of Wisconsin-Madison Computer Sciences Department 
Technical Report 1317, July 1996. 
available on the net


On Tuesday Nov 19,  we'll read

""Intelligent RAM (IRAM): Chips that remember and compute""
by Patterson, Anderson, Cardwell, Fromm, Keeton, Kozyrakis, Thomas
and Yelick. The paper is available
here 
We are fortunate that one of the authors, Prof. Tom Anderson,
will present the paper.


To subscribe to the CSE 590g mailing list, send email to the
majordomo mailing list at ""majordomo@cs""; the mail's contents should
include the line ""subscribe cse590g"".  Leave the ""Subject:"" line
blank.  You should shortly receive a message back saying ""welcome"". 




baer@cs.washington.edu


",course
"

CSE 590h Home Page


CSE 590h Home Page
 The Spring 1995 offering of CSE 590h.
An experimental graduate course on human-computer interaction.



borning@cs.washington.edu



",course
"

CSE 590k, Compiler Seminar

CSE 590k - Compiler Seminar





Course organizers:


Susan Eggers
and Craig
Chambers

Meeting time:


Wednesdays 4:00pm to 4:50pm.  Officially, we're in Loew 220, but
really we meet on the second floor of the HUB Atrium.




Schedule



Week 1 (1/10): 
""MemSpy: Analyzing Memory System Bottlenecks in Programs,"" by Margaret
Martonosi, Anoop Gupta, and Thomas Anderson.  (Anderson) 

Week 2 (1/17): 

""A General Approach for Run-Time Specialization and Its Application To
C,"" by Charles Consel and Francois Noel.  (Lee) 

Week 3 (1/24): 

""A Practical Data Flow Framework for Array Reference Analysis and Its
Use in Optimizations,"" by Evelyn Duesterwald, Rajiv Gupta, and Mary
Lou Soffa.  (Lo) 

Week 4 (1/31): 

""Value Dependence Graphs:  Representation Without Taxation,"" by Daniel
Weise,Roger Crew, Michael Ernst, and Bjarne Steensgaard.
(Litvinov) 

Week 5 (2/7): 

""Iterated Register Coalescing,"" by Lal George and Andrew Appel.
(Garrett) 

Week 6 (2/14): 

""Generating Machine Specific Optimizing Compilers,"" by Roger Hoover
and Kenneth Zadeck.  (Dean and Grant) 

Week 7 (2/21): 

""The Paradigm Compiler for Distributed-Memory Multicomputers,"" by
Privthviraj Banerjee, et al.  (Lewis) 

Week 8 (2/28): 

""Minimum Cost Interprocedural Register Allocation,"" by Steven
Kurlander and Charles Fischer.  (Secosky) 

Week 9 (3/6): 

""Data Specialization,"" by Todd Knoblock and Erik Ruf.  (Grove) 

Week 10 (3/13): 

""Lazy Strength Reduction,"" by Jens Knoop, Oliver Ruthing, and
Bernhard Steffen.  (Mock and Tullsen) 

To subscribe to the CSE 590k mailing list, send email to
""majordomo@cs""; the mail's contents should include the line ""subscribe
cse590k"".  Leave the ""Subject:"" line blank.  You should shortly
receive a message back saying ""welcome.""



melody@cs.washington.edu


",course
"590MV
590MV: Global Resource Management in Distributed Systems
Professor: Mary Vernon
Time: W 2:30-3:50pm
Location: LOW 220

Jan 10  Processor allocation:  gang scheduling, NOWs

 J. Ousterhout.  Scheduling techniques for concurrent systems.  In
3rd Int'l. Conf. on Distributed Systems, pages
22-30, Oct. 1982.
 R. H. Arpaci, A. C. Dusseau, A. M. Vahdat, L. T. Liu,
T. E. Anderson, and D. A. Patterson.  The Interaction of Parallel and
Sequential Workloads on a Network of Workstations.  Proc. of
the ACM SIGMETRICS Conf., 1995.

Jan 17  Processor allocation:  dynamic equi-partitioning  (Thu Nguyen)

 A. Tucker and A. Gupta.  Process Control and Scheduling Issues
for Multiprogrammed Shared-Memory Multiprocessors.  In Proc.
of the 12th ACM Symp. on Operating System Principles, pages
159-166, Dec. 1989.
 T. D. Nguyen, R. Vaswani, and J. Zahorjan.  Using Runtime Measured Workload
Characteristics in Parallel Processor Scheduling.  Univ. of
Washington Technical Report, UW-CSE-95-10-01, Oct. 1995.

Jan 24  Tutorial:  how applications use processors  (Shun-Tak Leung)

 Evangelos P. Markatos and Thomas J. LeBlanc,
Using Processor Affinity in Loop
Scheduling on Shared-Memory Multiprocessors.
Proc. Supercomputing '92,, pp. 104-113, Nov. 1992.
(Expanded version in
IEEE Trans. on Parallel and Distributed Systems, pp. 379-400, Apr. 1994.)
 Hans P. Zima and Barbara Mary Chapman,
Compiling for Distributed-Memory Systems,
Proc. of the IEEE,, Vol 81, No. 2, pp. 264-287,
Feb. 1993.
 G. Edjlali, G. Agrawal, A. Sussman, J. Saltz,
Data Parallel
Programming in an Adaptive Environment.
Proc. 9th Int'l. Parallel Processing Symp., Santa Barbara, April 1995.

Jan 31 Tutorial:  processor allocation policy comparisons

Shikharesh Majumdar, Derek L. Eager, Richard B. Bunt,
Scheduling in Multiprogrammed Parallel Systems.
Proc. 1988 ACM Sigmetrics Conference on Measurement and Modeling of
Computer Systems, Santa Fe, NM, pp. 104-113, May 1988.
Eric W. Parsons, Kenneth C. Sevcik,
Multiprocessor Scheduling for High-Variability
Service Time Distributions.
Proc. IPPS '95 Workshop on Job Scheduling Strategies for Parallel Systems
, Santa Barbara, CA, pp. 127-145, Apr. 1995.
 Dror G. Feitelson, Bill Nitzberg,
Job Characteristics of a Production Parallel Scientific Workload on the
NASA Ames iPSC/860.
 Proc. IPPS '95 Workshop on Job Scheduling Strategies for Parallel Systems
, Santa Barbara, CA, pp. 337-360, Apr. 1995.


The following will also be covered, but are not required reading:


S. L. Leutenegger, M. K. Vernon,
Performance of Multiprogrammed Multiprocessor Scheduling Policies.
Proc. 1990 ACM SIGMETRICS Conf. on Measurement and Modeling of
Computer Systems, pp. 226-236, May 1990.
C. McCann, R. Vaswani, J. Zahorjan,
A Dynamic Processor Allocation Policy for Multiprogrammed, Shared Memory
Multiprocessors.
ACM Transactions on Computer Systems, Vol. 11, No. 2, May 1993.

Feb 7  Processor allocation:  demand based co-scheduling

 Patrick G. Sobalvarro, William E. Weihl,
Demand-based Coscheduling of
Parallel Jobs on Multiprogrammed Multiprocessors.,
Proc. IPPS '95 Workshop on Job Scheduling Strategies for Parallel Systems
, Santa Barbara, CA, Apr. 1995.

Feb 14  Impact of paging, page migration

 D. C. Burger, R. S. Hyder, B. P. Miller, D. A. Wood,
Paging Tradeoffs in Distributed-Shared-Memory
Multiprocessors.
 Proc. Supercomputing '94, Nov. 1994.
 Rohit Chandra, Scott Devine, Ben Verghese, Anoop Gupta, Mendel Rosenblum,
Scheduling and Page Migration for Multiprocessor
Compute Servers.
 Proc. 6th Int'l. Conf. on Architectural Support for Programming
Languages and Operating Systems (ASPLOS-VI),
San Jose, CA, pp. 12-24, Oct. 1994.

Feb 21  Coordinated scheduling of processors and memory

 G. Alverson, S. Kahan, R. Korry, C. McCann, B. Smith,
Scheduling on the Tera MTA.
Proc. IPPS '95 Workshop on Job Scheduling Strategies for Parallel Systems
, Santa Barbara, CA, Apr. 1995.
 Eric. W. Parsons, Kenneth C. Sevcik,
Coordinated Allocation of Memory and Processors in Multiprocessors.
October 15, 1995.

Feb 28  Demand-based co-scheduling, discussion of open problems

 A. Dusseau, R. H. Arpaci, D. E. Culler,
Effective
Distributed Scheduling of Parallel Workloads.
Proc. 1996 ACM Sigmetrics Conf. on Measurement and Modeling of Computer
Systems, Philadelphia, PA, June 1996 (to appear).
 D. G. Feitelson and L. Rudolph,
Coscheduling Based on Runtime Identification of Activity Working Sets.
Int'l. J. of Parallel Programming
, Vol. 23, No. 2, pp. 135-160, 1995.

Mar 6  Theoretical Results on Processor and Memory Allocation (A. Karlin)

Papers TBA

",course
"

CSE 590 O


 CSE 590 O - Parallel Programming Environments

Larry Snyder
Autumn Quarter 1996
Mondays, 3:30-4:20 pm, Loew 220

  

Welcome to the CSE 590 O Home Page!



This quarter we will be reading selected papers from recent IPPS, PPoPP, ICS, Supercomputing, ICPP, and LCPC.  Below is
a tenative schedule for the quarter.  The atmosphere is casual and
will hopefully ignite some lively discussion.



Everyone attending the seminar will be expected to present one of the
papers.  There are still spots open, so hurry and sign up!



Please send mail to majordomo@cs with
""subscribe cse590o"" in the body of the message to subscribe
to the class mailing list.





date
paper
presentor


09/30

    Compiling MATLAB Programs to SCALAPACK: Exploiting Task
    and Data Parallelism
Ramaswamy, Hodges IV, Banerjee (IPPS '96)

    FALCON: A MATLAB Interactive Restructuring Compiler
DeRose, Gallivan, Gallopoulos, Marsolf, and Padua 
    (LCPC '95)
E


10/07

    Compiling Portable Message-Driven Programs
Ramkumar, Forbes, Kale (ICPP '95)
Sung


10/14

    Cross-loop reuse Analysis and its Application to
    Cache Optimizations
Cooper, Kennedy, McIntosh (LCPC '96)
Ruth


10/21
Global
     Communication Analysis and Optimization
Chakarabarti, Gupta, Choi (PLDI '96)
Sean


10/28

    An Integerated Compilation and Performance Analysis Environment
    for Data Parallel Programs
Adve, et al. (SC '95)
AJ


11/04

    Input/Output Characteristics of Scalable Parallel Applications
Crandall, Aydt, Chien, Reed (SC '95)
Jason


11/11
holiday


11/18

    pC++/streams: A Library for I/O on Complex Distributed
    Data Structures
Gotwalls, Srinivas, Gannon (PPoPP '95)
Brad


11/25

    A Model and Compilation Strategy for Out-of-Core Data Parallel
    Programs
Bordawekar, Choudahary, Kennedy, Koelbel, Paleczny (PPoPP '95)



12/02
Local Iteration Set Computation for Block-Cyclic Distributions
Midkiff (ICPP '95)



12/09

    On the Utility of Threads for Data Parallel Programming
Fahringer, Haines, Mehrotra (ICS '96)
Eric


12/16

    Cilk: An Efficient Multithreaded Runtime System
Blumofe, Joerg, Kuszmaul, Leiserson, Randall,
    Zhou (PPoPP '95)







  
  Sung-Eun Choi
 
  Last modified: Tuesday 30 September 1996



",course
"

CSE 590S (Systems Seminar)


Preliminaries

If you're not already on the uw-systems mailing list,
you need to be, because that's where various crucial bits of
information (e.g., ``this week's seminar is cancelled'') will be
sent.  To get yourself on this list, send mail to 
uw-systems-request with the line subscribe uw-systems
in the message body.

Quarterly Webs


 Spring 95
 Summer 95
 Autumn 95
 Winter 96
 Autumn 96




",course
"


CSE 590S (Summer 95)


This Quarter
We meet on Fridays at 3:30 in Loew 113.  This quarter we
will read final papers that will appear in the upcoming
ACM Symposium on Operating Systems Principles (SOSP). Please read 
the papers before the meeting so that we can have
an interactive discussion.


This Quarter's Schedule

Oct. 6: Implementing 
Global Memory Management in a Workstation 
Cluster.  (Presenter:  Feeley)

Oct. 13: Logged Virtual Memory. (Presenters:  Savage, Lim)

Oct. 20: The HP 
AutoRAID Hierarchical Storage System. (Presenter:  Wilkes)

Oct. 27: 
Serverless Network File Systems. (Presenters: Franklin, Montgomery, Tiwary)

Nov. 3: Hypervisor Based Fault Tolerance. (Presenters: Chan,
Philipose,Wolman)

Nov. 10: Exploiting Weak Connectivity for Mobile File Access. (Presenters: Voelker, Litvinov)

Nov. 17: Performance of Cache Coherence in Stackable Filing. (Presenters: Sriram, Fiuczynski)

Dec. 1: The 
Impact of Architectural Trends on Operating System Performance. (Presenters: Anderson, Romer)







 Return to top of page

",course
"

CSE 590 ZP: High Performance Scientific Computing in ZPL



 
 


CSE 590 ZP
High Performance Scientific Computing in ZPL
Larry Snyder and the ZPL Team
Autumn Quarter 1996
Wednesday, 2:30-3:30 PM 
Sieg 422 (Oct. 2, 1996), Loew 111 (all other days) 





Welcome to the CSE 590 ZP Home Page!



Please send mail to majordomo@cs with
""subscribe cse590zpl"" in the body of the message to subscribe
to the class mailing list.



Students may also be interested in joining the zpl-users
mailing list.  This mailing list is used to distribute information
about compiler and libraray releases and other ZPL related
information.  To be added to the mailing list, send mail to majordomo@cs with
""subscribe zpl-users"" in the body of the message.

Description
ZPL is a new scientific
programming language suitable for computations previously written in
Fortran, C, etc.  ZPL is an array language that dramatically
simplifies programming by eliminating nuisance looping and indexing.
ZPL runs fast on modern machines, including parallel supercomputers,
allowing programmers to develop code on their workstations and
trivially migrate them to the largest parallel machines simply by
recompiling.  ZPL was developed at UW, and is just being released to
the scientific computing community.


CSE590-ZP is a class designed for scientists and engineers who are 
NOT computer scientists, but who want to learn how to use modern 
languages and supercomputers effectively for scientific 
computation.  The class will cover the following topics:

 The state-of-the-art in high performance computing.
     ZPL syntax and semantics.
     Algorithms exploiting high performance parallel machines.
     WYSIWYG Performance -- writing fast programs easily.
     Developing ZPL programs from workstation to supercomputer.
     How well does your program perform? i.e. doing more ""science""
	with a faster program.
    Prototyping scientific computations in MATLAB and ZPL.

Text Book

None.  The class will rely on materials on the web.  Documents can be found on
in the ZPL web pages.
Specifically, we will follow closely the ZPL
Programming Guide (new version as of 10/03/96).

Prerequisites
Familiarity with some scientific computation e.g.  Fortran, C or
MATLAB programming, on a UNIX platform will be assumed.


The class is variable (1-3) credit, CR/NC or audit.  Students will 
write, debug and run a ZPL program selected from their technical 
discipline.  Suitable computations range from whole applications to 
kernels (inner loops) of a scientific computation.

Other Useful Information

Course Syllabus, including lecture notes.

How to apply for an NCSA block grant account (for UW faculty, staff and students only)

How to compile ZPL programs using the remote
ZPL compiler
Other Important Links



  
  Sung-Eun Choi
 
  Last modified: Wednesday 9 October 1996



",course
"

CSE 370 Home Page (Autumn 96)





CSE 370:  Introduction to Digital Design 
Autumn Quarter 1996 
Gaetano Borriello and Corey Anderson


Welcome to the CSE 370 Home Page!

This is the home page for the CSE 370 web which contains a whole bunch of 
useful information about the class.  Keep in mind that this document is not 
static, and that new information (especially class announcements and 
messages) will be added frequently.  If you have any problems with this 
document or the CSE 370 web, in general, send mail to
cse370-webmaster@cs. 


Class Announcements: 
Notices from your instructor, TA, and/or system administrators.

(Last update:

          12/10/96 at 12AM.)


Class E-mail Archive: Messages
sent to cse370@cs.washington.edu.

(Last update:

          12/10/96 at 12AM.)


Send e-mail to: the class, 
your instructor, 
your TA, 
both the instructor and TA,
or everyone.


Course administration:

Goals and syllabus
Meeting Times
  
Lectures: MWF 8:30-9:20am, EEB 108
   Final Exam: Monday, December 16, 8:30-10:20am, EEB108
  
Workload and grading expectations
PC laboratory and software tools
Policies on collaboration and cheating
Announcements and e-mail addresses
Overall schedule of lecture topics
Instructor: Gaetano Borriello (gaetano@cs)
  Office hours: WTh 12:30-1:20 in Sieg 212 
TA: Corey Anderson (corin@cs)
  Office hours: M 2:30-3:20, TTh 8:30-9:20 in Sieg 326a


Weekly assignments.
Bi-weekly quizzes and final exam.


Lectures:
Online versions of the slides used in lectures.
Textbook: Contemporary Logic Design, R. H. Katz, Benjamin-Cummings/Addison-Wesley 1994.
 
Web maintained by the author, R. H. Katz.
  Web maintained by the publisher, Benjamin-Cummings/Addison-Wesley.
 
Notes on topics of interest:
 
Evolution of implementation
      technologies
Computer-aided design (CAD) 
      tools for logic design
Synario


 Feedback:
Tell us what you think about how things are going (even anonymously, if you so desire).
Questions for course evaluation:
To be completed on last day of class.


Links to previous quarters of CSE 370.




Portions of the CSE 370 Web may be reprinted or adapted for academic 
nonprofit purposes, providing the source is accurately quoted and 
duly credited. The CSE 370 Web: Copyright 1996, Department of Computer 
Science and Engineering, University of Washington.




  Comments to: cse370-webmaster@cs.washington.edu (Last Update: 
  
  12/10/96
)



",course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",course
"
CSE 500/490B: Computers and Society


CSE 500/490B: Computers and Society

Welcome to the home page for the Computers and Society course!  This winter
CSE 500, Computers and Society, will focus on social, economic, ethical,
and legal implications of the present Internet and the future national and
global information highway.



Instructor: Alan Borning 
Class times: Tues Thurs 12:00-1:20, Sieg 225.



Course Syllabus
Class schedule
Links to relevant web sites
Books and journals available for reference


Assignments

Assignment 1


",course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",course
"
CSE 573 Index Page

CSE 573 - Artificial Intelligence
Fall Quarter, 1996




Artificial intelligence (AI) poses two of the most fundamental and
challenging questions in computer science: can we build intelligent
machines?  How? This course addresses these questions by providing an
in-depth introduction to selected topics in AI including agent
architectures, knowledge representation, search, planning, machine
learning, reasoning about uncertainty, and AI methodology.





Staff:

Dan Weldweld@cs
Sieg 408543-9196Hours, TBA 
Marc Friedmanfriedman@cs
Sieg 429543-5129Hours, TBA 
Nick Kushmericknick@cs
Sieg 428685-2723Hours, TBA 


Outline of Topics
Project
Reading Assignments
Assignments & Exams
Grading
Resources
The Class Mailing
List; see also the archive of past messages




",course
"

CSE 590I



CSE 590I: Intelligent Information Internet Servers 
Meets Tuesdays at 2:30 in 225 Sieg
Creating Server-side scripts

Please read these guidelines on how to
write programs that will be executed when someone follows a link to
them. 

SEW what? 
People to see, places to go:
A collection of the URL's from the 590i mailing list, generated by Paul's SEW program. 

What's new: 

 Check out the future of the web
       here.
I've begun to update this file. Remember, if you want to add to it,
       check it out first using co -l index.html and check it back
       in with ci -u index.html. 
  This was added with Phoenix. So far, I'm not that
       impressed.

Way Older topics: 

The official release of glimpse has been installed in /uns. Check
       out the manual
       pages, as well as the glimpse developer's home page. If you're
       interested in more details on how glimpse works, you can read the Winter 1994 USENIX paper on the design
       and implementation of glimpse. 
  Information on the Wide Area Information Server (WAIS). 
  zwhere, a
       Mosiac interface to the Zephyr Location Database. It shows the users
       currently registered with zephyr, makes a guess as to which room they
       are in, and shows when they registered with the zephyr server. (This is
       just another version of znol/zwatch/zlocate with some extra info and
       links, except that it shows the status of all registered zephyr users
       and not just the ones in a .anyone file.) 
  Notes on 590I
       lectures/discussions
Mail that has been sent to the 590i
       mailing list. 
  Displaying the belief that an index page should be short, Mike
       relegates the reviews of web sites (and
       comments on what makes a good web page) to another page. 
  ... and here are other miscellaneous comments 
Rather than ramble, Kurt grumbles about some interface problems and improvements to mosaic that he's too shy to bring up in class. 
    Paul provides a luddite
	 perspective on the idea for an intelligent filter for network
	 information sources. 
    Nick provides some vaguely related comments. 
    The December 1992 CACM was all about information filtering. Check
	 out the summary article.

Remember:If you want to change this document, check it
out first using co -l index.html and check it back in with
ci -u index.html. You can send mail to the
entire class using the address ""590i@cs.washington.edu"". 

",course
"

 CS 354 Home Page 


 CS/ECE 354 - Machine Organization and Programming
 4 credits.

An introduction to current system structures of control,
communication, memories, processors and I/O devices.
Projects involve detailed study and use of a specific small computer
hardware and software system.

Prerequisites:
CS 302 or consent of instructor.  
Not open to students who have taken 

CS/ECE 552.
Open to Freshmen.


Semesterly course information:

No info as of Fall 1994.



",course
"

 CS552 Page 


CS/ECE 552 - Introduction to Computer Architecture
 3 credits.

The design of computer systems and components.
Processor design, instruction set design, and addressing;
control structures and microprogramming; memory management, caches,
and memory hierarchies; interrupts and I/O structures.

Prerequisites:

ECE/CS 352 

and

CS/ECE 354
; co-req:  CS 367.  


Semesterly course information:

No info as of Fall 1994.



",course
"

 CS 752 Home Page 


 CS/ECE 752 - Advanced Computer Architecture I
 3 credits.

Advanced techniques of computer design.  Parallel processing and
pipelining;
multiprocessors, multi-computers and networks; high performance
machines and special purpose processors; data flow architectures.

Prerequisites:

CS/ECE 552

 and CS 537.


Semesterly course information:


Fall 1994




",course
"

 CS 757 Home Page 


 CS/ECE 757 - Advanced Computer Architecture II
 3 credits.

Parallel algorithms, principles of parallelism detection and vectorizing
compilers, interconnection networks, SIMD/MIMD machines, processor
synchronization, data coherence, multis, dataflow machines, special purpose
processors.

Prerequisites:

CS/ECE 752 or consent of instructor.


Semesterly course information:

No info as of Fall 1994.



",course
"

CS 537 - Introduction to Operating Systems - Spring 1996





UNIVERSITY OF WISCONSIN-MADISON

Computer Sciences Department




CS 537

Spring 1996 
Bart Miller


CS 537: Introduction to Operating Systems


New Stuff


Final grades are posted.

Problem Sets 1 and 2 are available (2/17/96).

Programming Assignment 3 is available (3/31/96).

Quizzes 1-10 and answers are available (5/1/96).

Sections 1-28 of the lecture notes are ready for reading and printing (4/29/96).

Class Staff
Instructor: Bart Miller

email: bart@cs.wisc.edu

Office: 6381 CS

Phone: 263-3378

Office hours: Wednesday/Friday 1030-noon
or by appointment.


TA: Karuna Muthiah

email: muthiah@cs.wisc.edu

Office: 1343 CS

Phone: 262-5596

Office hours: Monday 1100-1300 and Wednesday 1400-1600.


TA: Jonathan Weyers

email: weyers@cs.wisc.edu

Office: 1304 CS

Phone: 262-6601

Office hours: Monday/Friday 1400-1530 and Wednesday 1600-1700.

Course Materials


The course is organized around my lecture notes.
The

lecture notes

are available on the class Web page.

You will need the textbook
Modern Operating Systems,
by Tanenbaum.

For the programming
assignments, you should purchase a copy of
Object-Oriented Programming Using C++
by Pohl, or whatever is your favorite C++ book.


The lecture notes are available now.
You should read the first section before coming to class.
Modern Operating Systems
and
Object-Oriented Programming Using C++
are available in the book store.

Lectures and Discussion Sections
Lecture times:
Tuesday/Thursday 1300-1415

1221 Computer Sciences

Discussion section:
Wednesday 1300-1350

168 Noland

Note that there is the extra (Wednesday at 1300) discussion section.
This section will be used mainly as a recitation section to discuss material
covered in lecture and for the weekly quizzes.
On occasion, it will be used to discuss important details of
the programming assignments and homeworks.
Make sure that you leave room in your schedule to attend this section.
Exams/Quizzes
There will be no midterms.
The final is optional.

Each week, starting the second week of classes, there will be a quiz in the
Discussion Section.
The quizzes will last 15-30 minutes.
Following are the past quizzes with answers:


Processes and concurrency,
February 7.

Semaphores,
February 14.

Monitors,
February 21.

Messages,
February 28.

Scheduling & Synchronization,
March 6.

Segmentation & Paging,
March 27.

TLB's,
April 10

Demand Paging,
April 17

File Systems,
April 24

File Systems and Recovery,
May 1

Programming Assignments
There will be about four programming assignments during the semester.
Details on these assignments will be given in class handouts.
These assignments will be written in C++ and done on workstations running
UNIX.
It is unlikely that you will be able to do all these assignments on your personal
computer.


Programming assignment #1
is available.
The goal of this assignment is to practice using C++, learn some UNIX system
facilities, and try to write a really input-tolerant program.

Programming assignment #2
is available.
The goal of this assignment is to write a program that uses multiple processes
and synchronization.

Programming assignment #3
is available.
You are to write a simulator for CPU scheduling algorithms; you will use
traces of activities on a real UNIX systems to drive your simulation.
The goals of this assignment are to
(1) learn more about the CPU scheduling algorithms,
(2) learn about trace-driven simulation,
and
(3) experiment with quantitatively analyzing a computer system.

Written Problem Sets
During the semester, I will hand out several
written problem sets based on the lectures.
These problem sets are for your use and do not need to be turned in.
Though, you will find that you will do poorly on the weekely quizzes, if you
don't do the problems
Solution sets for the problem will be handed out about two weeks after the
problem set.
The TA and I will be happy to answer questions on these problems and
look over your solutions.


Problem Set #1
is available.
The goal of this assignment is to learn about using the various synchronization
primitives to solve problems.

Problem Set #2
is available.
The goal of this assignment is to learn memory management hardware and software.

Late Work
Assignments are due at 5 p.m. on the date listed on the handout.
Over the entire semester,
you have
three late days
of credit.
You can use these late days on different assignments (e.g., one day on each
of three assignments) or all three days on one assignment.
Other than these three days,
absolutely no late work will be accepted.

Late days cannot be used on any assignment
that is due during the last week
of classes.

Cheating
Programming assignments will be done with partners.
Each group of two will work independently from other groups.

Cheaters will receive the maximum penalties, which include receiving
an ``F'' grade for the course and having this marked on your transcript.

Computer Facilities
We will (probably) be using the Solaris (UNIX) workstations for this course.
These are UNIX workstations, running the Sun Solaris operating systems and X windows.
All students who have registered for this class should have an account.

Grading Policy

If you don't take the final: 

If you take the final: 
Programming assignments:40%
Programming assignments:30%
Quizzes:60%
Quizzes:45%
Final:0%
Final:25%


Your lowest quiz grade will be dropped from the average; there will be
no quiz during the first week nor during the week after Spring break.
If you take the final exam, it will be counted as above.
In the past, when I've taught this class, the class GPA has been in
the range of 2.9-3.1.

Class Schedule
The following schedule is tentative and could (and probably will) change:


Week 1
    January 23 & 25
    Introduction and overview, processes
Week 2
    January 30 & February 1
    Dispatching, process creation
Week 3
    February 6 & 8
    Cooperating processes, synchronization
Week 4
    February 13 & 15
    Semaphores
Week 5
    February 20 & 22
    Semaphores, monitors
Week 6
    February 27 & 29
    Messages, deadlocks
Week 7
    March 5 & 7
    OS debugging strategies, dynamic memory allocation

March 12 & 14
    Spring Break
Week 8
    March 19 & 21
    Relocation
Week 9
    March 26 & 28
    Segmentation, Paging, TLBs
Week 10
    April 2 & 4
    Virtual memory, page replacement, thrashing
    
Week 11
    April 9 & Nov. 11
    Working sets, I/O devices, files
Week 12
    April 16 & 18
    Disk allocation and scheduling, directories
Week 13
    April 23 & 25
    Protection
Week 14
    April 30 & May 2
    Security, advanced topics (readings)
Week 15
    May 7 & 9
    Advanced topics (readings)
Finals
    May 14
    Final Exam (Tuesday, 5:05pm)



Last modified:
Wed May 15 12:54:17 CDT 1996
by
bart


",course
"

CS 638/699 - Internet Honors Seminar





UNIVERSITY OF WISCONSIN-MADISON

Computer Sciences Department




CS 537

Spring 1996 
Bart Miller


CS 638/699: Internet Honors Seminar



Instructor: Bart Miller

email: bart@cs.wisc.edu

Office: 6381 CS

Phone: 263-3378

Office hours: Wednesday/Friday 1030-noon
or by appointment.

Lectures
Lecture time:
Monday 11:00-11:50

2310 Computer Sciences

Class Schedule
There are no written assignments for this class.  You are required to attend
all of the lectures and participate in the discussions.
The following schedule is mostly right, but could change:


Week 1
    January 22
    Bart Miller
    Introduction and overview
Week 2
    January 29
    Larry Landweber
    Internet Architecture and Protocols
Week 3
    February 5
Week 4
    February 12
    Bart Miller
    Client/Server and Remote Procedure Calls
Week 5
    February 19
    Systems Security
Week 6
    February 26
    Eric Bach
    Security and encryption
Week 7
    March 4

March 11
    Spring Break
Week 8
    March 18
    Miron Livny
    Images and Pictures on the Net
Week 9
    March 25
Week 10
    April 1
    Pei Cao
    High-performance File Systems
Week 11
    April 8
Week 12
    April 15
    David Wood
    The Internet as a Supercomputer
Week 13
    April 22
    Jim Larus
    JAVA
Week 14
    April 29
Week 15
    May 6
    Bart Miller
    Discussions



Last modified:
Thu Jan 25 08:58:10 CST 1996
by
bart


",course
"

CS 736 - Advanced Operating Systems - Fall 1996





UNIVERSITY OF WISCONSIN-MADISON

Computer Sciences Department




CS 736

Fall 1996 
Bart Miller


CS 736: Advanced Operating Systems


Summary

This course is intended to give you a broad exposure to advanced
operating systems topics.
We will be reading about and discussing such topics as protection, security,
memory management, operating system kernels, file systems, synchronization,
naming, and distributed systems.
Please read the rest of this information sheet carefully.
Text

There is really no satisfactory textbook for a graduate level operating
systems
class, so we will use the current literature as our text.
The course will be structured around readings from journal articles and
conference proceedings.
You will be able to purchase these readings at DoIT (CS736 handout #1).

During each class, we will discuss topics relevant to the current papers.
The lecture will not be a detail-by-detail review of the papers, but will
instead be a
discussion of major topics and themes using the papers a focal point.
You will form reading groups with 2 or 3 of your classmates that will meet
once or twice a week to discuss the details of the assigned papers.
The readings are an especially important part of the class.
We will go through the reading list
according the posted reading schedule.

So, the formula for being successful in this class is (1) read the papers
independently, (2) discuss them in your reading group, trying to identify
the important issues, and (3) participate in the class discussion of the
papers.
Class Discussions

Class meetings will be in the form of discussion lectures.
We will talk about the day's topics, and this discussion will be
supported by your comments and opinions.
If you are willing to participate actively and daily in class, you'll get
a lot out of it.
If you expect to sit quietly and listen for 15 weeks, you will be
very unhappy in this class.
Papers

During this class, you will write two papers - one short (6 pages) and
one longer.

The first paper
will be a design, based on ideas that you have read.
You will work from some well-understood operating system facility
and design an extension in some area.

The second paper will involve a project,

and the paper will be a summary
of that project.
There will be a
selection of project topics
from which to choose.

Writing well will be as important as writing about good ideas.
Each paper will be reviewed at least twice.
The first reading will be a refereeing of the paper by one of your fellow
students.
This will give the writer critical comments by another person, and give
the reader a look at someone else's writing.
The paper will then be revised for a second pass that will be read by me.
Exams

There will be no exams.
The papers and reading will keep you busy.
Grades

Scores and final grades will be posted here as assignments are graded.

Details

Time: Tuesday/Thursday, 1300-1415

Place: 1257 CS

Office hours: Tuesday/Thursday, 1100-noon



Last modified:
Thu Sep  5 17:13:43 CDT 1996
by
bart


",course
"

CS 110 Section 2 Home Page



CS 110 Introduction to Computer Programming
Section 2 (FORTRAN)


CS 110 is a one-credit course which covers the basic programming structures needed to prepare students for CS 310 and elementary engineering courses.  No prior computer programming experience is required and only a basic knowledge of computers is assumed.  The material covered will enable you to write simple computer programs to solve engineering problems in elementary courses.  All programming is done in FORTRAN.  This course is intended for students who received little or no programming instruction in high school.

This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors. Click here for a course description.

Menu

 IMPORTANT ANNOUNCEMENTS - READ NOW!
 Lectures
 Instructor
 Grading Policy
 Syllabus
 Text and Lecture Notes
 Programming Assignments
 Problem Solving Exercises
 Computer Lab
 Other Pointers of Interest


 Lectures

Section 2: 134 Psychology, 8:50 am MWF, March 18 to May 10
   
   Please be punctual to lectures to avoid disturbing the class.


 Instructor - Gareth Bestor

Office:
   Rm. 1306 Computer Science & Statistics, 1210 W. Dayton St.
Office Hours:
   Wed 7:45 - 8:45 am, Fri 11:00 - 1:00 pm or by appointment
Phone:
   (608) 262-6601 [office]
       (608) 251-5193 [home, emergencies only]
E-mail:
   bestor@cs.wisc.edu (click here for finger)
World-Wide-Web:
   http://www.cs.wisc.edu/~bestor/bestor.html


 Grading Policy

Your final grade is based on four programming assignments each worth 25% (not including Program #0).  This course is Pass/Fail only.  You must complete and hand in all five assignments to be eligible to pass the course.  There are no tests or exams.

	100% - Assignments (4 @ 25% each)

Click here to see a list of the current class grades for Section 1 (identifed by student ID only).
Click here to see a list of the current class grades Section 2 (identifed by student ID only).

 Syllabus (tentative)

The following topics and sections of the text will be approximately covered each week during the semester.  You will only get the most out of this class if you read the relevant sections of the text before coming to class.  This way you will be able to ask questions in class about anything that you are unsure of, instead of waiting until you're in the lab trying to work on an assignment to discover you didn't really understand something.

Weeks 1-8


 Text and Lecture Notes
Text:
Fortran with Engineering Applications, 5th. edition, by E. Koffman and F. Friedman, 1993.
Lecture Notes:
Copies of the lecture notes will be available on-line at the end of each week of class. Important - the on-line lecture notes are not a substitute for coming to class and only cover what I show on the overhead projector.  They do not include any examples or additional notes that I put on the board.  You are responsible for all the material covered in class.

Week 1
Week 2
Week 3
Week 4
Week 5
Week 6
Week 7
Week 8


 Programming Assignments

There are four programming assignments each contributing 25% to your final grade.  You must attempt to complete every programming assignment.  If you hand in a program that does not run or will not even compile without errors then it will not be graded and will automatically receive a zero grade and you risk failing the course.

Gradesheets
Handin Directory (how to hand in assignments online)
   Late Policy
Policy on Academic Misconduct (i.e. cheating)

Assignment Specifications:

Program #0 (handed out in class), due Wednesday 3/27/96, 8:50 am
   Program #1, due Monday 4/8/96, 8:50 am
   Program #2, due Friday 4/19/96, 8:50 am
   Program #3, due Wednesday 5/1/96, 8:50 am
   Program #4, due Friday 5/10/96, 1:00 pm

How to Get Help with Your Assignments:

Consultants: 
   The consultants in the computer lab can help you with most problems.  They wear name tags and are on duty from approximately 8:00 am to 11:00 pm.  Consultants can answer short questions about compiler error messages and program syntax, as well as how to login, use the printers, send E-mail, run Netscape, etc.

Click here for more information about the consultants.
   

Instructor:
   General questions about an assignment or questions that may require a long explanation are best answered by myself.  Please see me during office hours or send me E-mail.  I am not normally in my office except during office hours because I do my dissertation research from home via a modem.  Therefore, if you want to see me outside of office hours please make an appointment first.  You can most easily contact me by E-mail because I regularly login and read my E-mail from home.

Click here to send me E-mail.
   



 Problem Solving Exercises

One of the most important skills you will learn in this class is problem solving.  Good problem solving skills distinguish a ""good"" computer programmer from a ""bad"" one - it doesn't matter how familiar or skilled you are in a particular programming language, if you do not understand how to solve the problem then you will not be able to write a computer program for it in any language.

To help you learn problem solving skills and techniques I will assign weekly problem solving exercises.  These will be small but non-trivial problems which I will give out each Monday.  You should look at the problem and think about it during the week and right down the steps you would go through to solve the problem; i.e. the overall structure of your program.  This is primarily an exercise in general problem solving so you do not have to write any FORTRAN code (though you may if you want to and have time) and your solution/algorithm should not even be dependent on a particular programming language such as FORTRAN.  We will go over the solution in class the following Monday.
Exercises:

Week 2: Question 16, Pg. 89. Click here for the solution.
   Week 3: Question 4, Pg. 147. Click here for the solution.
   Week 4: Question 13, Pg. 218. Click here for the solution.
   Week 5: Question 6, Pg. 269. Click here for the solution.
   Week 6: Question 10, Pg. 329 (subroutines) - click here for the solution; Question 11, Pg. 330 (functions) - click here for the solution.
   Week 7: Question 8, Pg. 401. Click here for the solution.


 Computer Lab

You will be using the Vectra lab in Rm. 1350 Computer Science & Statistics containing Hewlett-Packard Vectra's running Microsoft Windows and Microsoft FORTRAN.  This lab is open from 7:00 am to 1:00 am seven days a week except certain holidays.  The printer room is located across the hall in Rm. 1359.

You may also use your home or dorm computers to write your programs, however you will probably have to purchase your own copy of Microsoft FORTRAN or Lahey Personal FORTRAN (see the inside cover of the textbook).  You may also work in any of the other computer labs on campus, however most do not have FORTRAN compilers (please see me first before using the CAE lab).

The software you will be using in the lab includes:

Microsoft Windows and MS-DOS
E-mail
Netscape


 Other Pointers of Interest

 CS 110 Home Page
 Gareth Bestor's Home Page
 Computer Sciences Department Home Page
 Starting Points for Internet Exploration
 Lycos (search the World-Wide-Web by keyword)
   
 Dilbert (comic relief for those long nights before an assignment is due)




Copyright © 1996 Gareth S. Bestor (bestor@cs.wisc.edu). Last modified May 1, 1996.


",course
"

CS 302 Section 70 Home Page



CS 302 Algebraic Language Programming
Section 70 (FORTRAN)


This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors. Click here for a course description.

Menu

 IMPORTANT ANNOUNCEMENTS - READ NOW!
 Lectures
 Instructor
 Grading Policy
 Syllabus
 Text and Lecture Notes
 Exams and Programming Assignments
 Problem Solving Exercises
 Computer Lab
 Other Pointers of Interest


 Lectures

Section 70: 103 Psychology, 9:55 am MWF
   
   Please be punctual to lectures to avoid disturbing the class.


 Instructor - Gareth Bestor

Office:
   Rm. 1306 Computer Science & Statistics, 1210 W. Dayton St.
Office Hours:
   Wed 7:45 - 8:45 am, Fri 11:00 - 1:00 pm or by appointment
Phone:
   (608) 262-6601 [office]
       (608) 251-5193 [home, emergencies only]
E-mail:
   bestor@cs.wisc.edu (click here for finger)
World-Wide-Web:
   http://www.cs.wisc.edu/~bestor/bestor.html


 Grading Policy

Your final grade is based on seven programming assignments each worth 5% (not including Program #0) and three exams.  Your highest two exam scores will each contribute 25% to your final grade; your lowest exam score will contribute 15%.  You must complete and hand in all the assignments to be eligible to receive a passing grade for the course.  Final grades for all CS 302 sections are graded on a curve with a mean in the range of 2.8 - 3.0, where A = 4.0; the curve is computed after the final exam is completed.

Exam 1
   Thur February 29, 7:15 - 9:15 pm

   Exam 2
   Wed April 10, 7:15 - 9:15 pm, Rm. 1207 Computer Science

   Final 
   Mon May 13, 7:55 - 9:45 am


Click here to see a list of the current class grades (identifed by student ID only).

 Syllabus (tentative)

The following topics and sections of the text will be approximately covered each week during the semester.  You will only get the most out of this class if you read the relevant sections of the text before coming to class.  This way you will be able to ask questions in class about anything that you are unsure of, instead of waiting until you're in the lab trying to work on an assignment to discover you didn't really understand something.

Weeks 1-6 (Mid-Term Exam #1)
   Weeks 7-11 (Mid-Term Exam #2)
   Weeks 12-15 (Final Exam)


 Text and Lecture Notes
Text:
Fortran with Engineering Applications, 5th. edition, by E. Koffman and F. Friedman, 1993.
Lecture Notes:
Copies of the lecture notes will be available on-line at the end of each week of class. IMPORTANT - the on-line lecture notes are not a substitute for coming to class and only cover what I show on the overhead projector.  They do not include any examples or additional notes that I put on the board.  You are responsible for all the material covered in class.

Week 1
Week 2
Week 3
Week 4
Week 5
Week 6
Week 7
Week 8
Week 9
Week 10
Week 11
Week 12
Week 13
Week 14
Week 15


 Exams and Programming Assignments

There are three exams: two mid-term exams and one final exam.  Exams constitute 65% of your final grade so it is very important to do well on them to ensure a good grade, regardless of your performance on the assignments.  All exams are approximately two hours long (though you may stay a bit longer if you need extra time) and are closed-book.  You only need to bring a pen or pencil to exams - calculators are not necessary or even useful.

Exam Solutions:

Mid-Term Exam #1
Mid-Term Exam #2


There are seven programming assignments (not including Program #0) each contributing 5% to your final grade.  All the assignments must be completed and handed in to be eligible to receive a passing grade for the course.  You must attempt to complete every programming assignment.  If you hand in a program that does not run or will not even compile without errors then it will not be graded and will automatically receive a zero grade and you risk failing the course.

Gradesheets
Handin Directory (how to hand in assignments online)
   Late Policy
Policy on Academic Misconduct (i.e. cheating)

Assignment Specifications:

Program #1, due Monday 2/12/15/96, 9:55 am
   Program #2, due Friday 2/23/96, 9:55 am
   Program #3, due Wednesday 3/6/96, 9:55 am
   Program #4, due Wednesday 3/27/96, 9:55 am
   Program #5, due Friday 4/12/96, 9:55 am
   Program #6, due Monday 4/29/96, 9:55 am
   Program #7, due Friday 5/10/96, 1:00 pm

How to Get Help with Your Assignments:

Consultants: 
   The consultants in the computer lab can help you with most problems.  They wear name tags and are on duty from approximately 8:00 am to 11:00 pm.  Consultants can answer short questions about compiler error messages and program syntax, as well as how to login, use the printers, send E-mail, run Netscape, etc.

Click here for more information about the consultants.
   

Instructor:
   General questions about an assignment or questions that may require a long explanation are best answered by myself.  Please see me during office hours or send me E-mail.  I am not normally in my office except during office hours because I do my dissertation research from home via a modem.  Therefore, if you want to see me outside of office hours please make an appointment first.  You can most easily contact me by E-mail because I regularly login and read my E-mail from home.

Click here to send me E-mail.
   



 Problem Solving Exercises

One of the most important skills you will learn in this class is problem solving.  Good problem solving skills distinguish a ""good"" computer programmer from a ""bad"" one - it doesn't matter how familiar or skilled you are in a particular programming language, if you do not understand how to solve the problem then you will not be able to write a computer program for it in any language.

To help you learn problem solving skills and techniques I will assign weekly problem solving exercises.  These will be small but non-trivial problems which I will give out each Monday.  You should look at the problem and think about it during the week and right down the steps you would go through to solve the problem; i.e. the overall structure of your program.  This is primarily an exercise in general problem solving so you do not have to write any FORTRAN code (though you may if you want to and have time) and your solution/algorithm should not even be dependent on a particular programming language such as FORTRAN.  Each Friday we will go over the solution in class.
Exercises:

Week 3: Question 16, Pg. 89. Click here for the solution.
   Week 4: Question 4, Pg. 147. Click here for the solution.
   Week 5: Question 13, Pg. 218. Click here for the solution.
   Week 6: Question 6, Pg. 269. Click here for the solution.
   Week 7: Question 10, Pg. 329 (subroutines) - click here for the solution; Question 11, Pg. 330 (functions) - click here for the solution.
   Week 8: Question 5, Pg. 559. Click here for the solution.
   Week 9: Question 8, Pg. 401. Click here for the solution.
   Week 10: Question 6, Pg. 467. Click here for the solution.
   Week 11: Question 5, Pg. 467. Click here for the solution.
   Week 12: Question 3, Pg. 466. Click here for the solution.
   Week 13: Question 5, Pg. 655.


 Computer Lab

You will be using the Vectra lab in Rm. 1350 Computer Science & Statistics containing Hewlett-Packard Vectra's running Microsoft Windows and Microsoft FORTRAN.  This lab is open from 7:00 am to 1:00 am seven days a week except certain holidays.  The printer room is located across the hall in Rm. 1359.

You may also use your home or dorm computers to write your programs, however you will probably have to purchase your own copy of Microsoft FORTRAN or Lahey Personal FORTRAN (see the inside cover of the textbook).  You may also work in any of the other computer labs on campus, however most do not have FORTRAN compilers (please see me first before using the CAE lab).

The software you will be using in the lab includes:

Microsoft Windows and MS-DOS
E-mail
Netscape


 Other Pointers of Interest

 CS 302 Home Page
 Gareth Bestor's Home Page
 Computer Sciences Department Home Page
 Starting Points for Internet Exploration
 Lycos (search the World-Wide-Web by keyword)
   
 Dilbert (comic relief for those long nights before an assignment is due)




Copyright © 1996 Gareth S. Bestor (bestor@cs.wisc.edu). Last modified April 24, 1996.


",course
"

CS 302 Fall 1996 - Section 63


CS 302 Fall 1996 - Section 63
Algebraic Language Programming - C++
Name: Dave Eggleston
Email: burnett@cs.wisc.edu
Office: CS&St 1306
Office Phone: (608)262-6601
Office Hours: M 3:00-4:00 F 11:30 - 12:30


ANNOUNCEMENTS: updated Nov 10, 19:30

Note: The original output on the prog6 page had two errors in it
(the days of the week were off by one.)  The correct values are now there.
Information about Exam 2 - updated Nov 10
Questions Asked about Program 6
HourlyWorker Class
Reading: Scan through 9.1 for Thursday's class.
Program 6 is now available.
Solution to Quiz 3.
Grades Page is here.



General Course Information


CS 302 Home Page
Course Objectives
Vectra Lab
CS 302 Consultants
Syllabus
Working from Home


Class ""Handouts""


Grades
Homework
Exams and Quizzes
Miscellaneous Archive


Policy Information


Email Policy
Grading Policy
Late Policy
Academic Misconduct Policy


Text

Problem Solving 
with C++ - The Object of Programming by Walter Savitch
Addison-Wesley Publishing Company, 1996.
List of known errata


Last modified: 
Wed Aug 28, 1996, Dave Eggleston
(burnett@cs.wisc.edu)

Based on Greg Sharp's cs302 home page


",course
"

CS736 Spring 1996


 CS 736: Advanced Operating Systems (Spring 1996)
 Summary 
This course is intended to give you a broad exposure to advanced
operating systems topics.
There are two important components of this course: reading and discussion of
various research papers, and a project involving implementation of an
experimental system.  The research papers cover topics
including synchronization and communications, memory management, file systems,
protection and security, and distributed systems.  The project requires you to
choose a problem, research and propose solutions, and implement a 
prototype system.

 Lecture Info 
During each class, we will discuss topics relevant to the current papers.
The lecture will not be a detailed review of the papers, but rather
a discussion of major topics and themes using the papers as a focal point.
Active participation in discussion is strongly encouraged.

Lecture: 11:00 - 12:15 Tuesday and Thursday, 2255 Engineering Hall
Office Hour: 2:00 - 3:00pm Tuesday, or by appointment; 7361 Computer Sciences
 Text 
Our text is a selection of ``classic'' papers 
(from the 60's to the 90's) on operating system design and implementation.  

You can purchase these readings at the DoIT (formerly MACC) documentation desk
for about $20.
The readings this semester are different from those of previous semesters;
so please do buy a copy of these papers.

 Grading 
There is no exam in this course.  Instead, there are two assignments.
The first assignment is using a benchmark suite to measure the performance
of various operating systems (SunOS, Solaris, Linux, Windows, etc., as many
as you can lay your hands on).
The second assignment is the project, involving a project proposal, 
implementation, a final report, and a project presentation.  

Of the total grade, class participation counts 10\%, the first assignment 
counts 20\%, and the project counts 70\%.

 Schedule 
Here is a tentative schedule.

 Projects 
Here is a list of suggested projects.  
You can make up your own project as well.
In either case, you need to come and discuss with me before choosing a project.
Teams of two or more people are allowed.

 Slides 

Here are the  slides I used in my lectures.

 Assigments 

Here is the  first assignment.



",course
"

CS 110


Introduction to Computer Programming 
Computer Sciences 110 
Fall 1996

This is a one-credit course designed to cover the basic programming
structures needed to prepare the students for CS310 and elementary
engineering courses.  The material covered will be sufficient to enable
the student to write simple programs to solve engineering problems in
elementary courses.


The material in CS 110 is essentially the same as the first half of CS 302.



List of fall sections:


 Lecture 1 (FORTRAN), Jeff Lampert
 Lecture 2 (FORTRAN), Jeff Lampert
 Lecture 3 (C++), Tony D'Silva
 Lecture 4 (C++), Tony D'Silva
 Lecture 5 (C++), Sidney Hummert
 Lecture 6 (C++), Sidney Hummert
 Lecture 7 (C++), Michael Birk
 Lecture 8 (C++), Michael Birk
 Lecture 9 (C++), Sidney Hummert
 Lecture 10 (C++),Sidney Hummert
 Lecture 11 (C++), Tony D'Silva
 Lecture 12 (C++), Tony D'Silva
 Lecture 13 (C++), Russell Manning
 Lecture 14 (C++), Russell Manning
 Lecture 15 (C++), Martin Reames


Last modified: Wed Sep  4 11:29:13 1996 by Anthony D'Silva



",course
"

CS 132,  Fall 1996






























 Search the CS 132 web pages for keywords (returns all matching paragraphs):
















News

 
  Once you set up your class account, NEVER LEAVE YOUR
  COMPUTER WITHOUT EXITING FROM WINDOWS.  When you exit from
  windows, you automatically exit from your account, too.  If you don't
  do as instructed, the next person starting using the computer
  you've just abandoned has complete control over your account.
  They can send messages signed with your name, read your mail, copy, or even
  delete your personal work.  Remember to exit windows when you're
  done working for the day, or when you plan to leave your machine
  unattended for some time.
 
  The email address you get when you initialize your account is
  provided to you by the Computer Sciences department and is
  different from the one provided by DoIT.  You will have the account
  for CS 132 only during this semester; after the end of the course the
  account will be canceled.  As long as you are a UW student, the email 
  account that DoIT provides will be active.  Look for messages and
  announcements for CS 132 in your Computer Sciences account.


Midterm exam answer key


Instructor

Professor Ed Desautels

Office: 5375 Computer Sciences
Office hours: 12-1 Monday-Wednesday, or by appointment.
Phone: 262-7971; dept office 262-1204
E-mail: ed@cs.wisc.edu


Teaching Assistants

Follow these links to your TA's home page...



Name:Kelly Ratliff
Email:kelly@cs.wisc.edu
Office #:3360 CS&S
Office phone:262-9275
Office hours:MW 3:30-4:30
132 sections:304, 305
GRADES


Name:Nathan Bockrath
Email:bockrath@cs.wisc.edu
Office #:3310 CS&S
Office phone:262-1721
Office hours:MW 10:00-11:00
132 sections:301, 302
GRADES


Name:Rehnuma Rahman
Email:rehnuma@cae.wisc.edu
Office #:1349 CS&S
Office phone:262-5340
Office hours:M 11:00-12:00,W 12:30-1:30
132 sections:317, 318
GRADES


Name:Jaime Fink
Email:jfink@cs.wisc.edu
Office #:1306 CS&S
Office phone:262-6601
Office hours:TR 10:45-11:45
132 sections:315, 316
GRADES


Name:Ashraf Aboulnaga
Email:ashraf@cs.wisc.edu
Office #:3310 CS&S
Office phone:262-1721
Office hours:MW 4:00-5:00
132 sections:319, 320
GRADES


Name:Andrew Geery
Email:geery@cs.wisc.edu
Office #:1301 CS&S
Office phone:
Office hours:R 2:30-4:30
132 sections:303, 304
GRADES


Name:James Herro
Email:jherro@cs.wisc.edu
Office #:1301 CS&S
Office phone:
Office hours:WF 12:30-1:30
132 sections:305, 310
GRADES


Name:Abhinav Gupta
Email:agupta@cs.wisc.edu
Office #:3360 CS&S
Office phone:262-9275
Office hours:MF 9:30-10:30
132 sections:322, 323
GRADES


Name:Jyothi Krothapalli
Email:jyothi@cs.wisc.edu
Office #:3310 CS&S
Office phone:262-1721
Office hours:MW 10:00-11:00
132 sections:306, 307
GRADES


Name:Su-Hui Chiang
Email:suhui@cs.wisc.edu
Office #:6384 CS&S
Office phone:262-6619
Office hours:R 4:00-5:00
132 sections:321
GRADES


Name:Thanos Tsiolis
Email:tsiolis@cs.wisc.edu
Office #:6364 CS&S
Office phone:262-6615
Office hours:R 10:00 - 11:00
132 sections:309
GRADES





Explore the Web Further...

Companies Whose Software or Hardware We Will Use

 Borland 

 Hewlett-Packard 

 IBM 

 Intel 

 Microsoft 

 Novell 
Useful Links for Further Web Exploration


Lycos
Enormous Database of Web Sites.

Yahoo
Internet resources classified by categories.  Has a lookup search.

The Virtual Tourist
Find W3 sites around the world by clicking on a world map.

The Mother of All BBS
Large Alphabetical List of Web Sites.

What's Hot and Cool on the Web
Lists of Especially Excellent Web Sites.

University of Wisconsin-Madison CS Home Page




This page was originally created and maintained by 
Ben Teitelbaum and Thanos Tsiolis.

It was modified and now maintained by 
Kelly Ratliff.


",course
"

CS 132,  Fall 1996






























 Search the CS 132 web pages for keywords (returns all matching paragraphs):
















News

 
  Once you set up your class account, NEVER LEAVE YOUR
  COMPUTER WITHOUT EXITING FROM WINDOWS.  When you exit from
  windows, you automatically exit from your account, too.  If you don't
  do as instructed, the next person starting using the computer
  you've just abandoned has complete control over your account.
  They can send messages signed with your name, read your mail, copy, or even
  delete your personal work.  Remember to exit windows when you're
  done working for the day, or when you plan to leave your machine
  unattended for some time.
 
  The email address you get when you initialize your account is
  provided to you by the Computer Sciences department and is
  different from the one provided by DoIT.  You will have the account
  for CS 132 only during this semester; after the end of the course the
  account will be canceled.  As long as you are a UW student, the email 
  account that DoIT provides will be active.  Look for messages and
  announcements for CS 132 in your Computer Sciences account.


Midterm exam answer key


Instructor

Professor Ed Desautels

Office: 5375 Computer Sciences
Office hours: 12-1 Monday-Wednesday, or by appointment.
Phone: 262-7971; dept office 262-1204
E-mail: ed@cs.wisc.edu


Teaching Assistants

Follow these links to your TA's home page...



Name:Kelly Ratliff
Email:kelly@cs.wisc.edu
Office #:3360 CS&S
Office phone:262-9275
Office hours:MW 3:30-4:30
132 sections:304, 305
GRADES


Name:Nathan Bockrath
Email:bockrath@cs.wisc.edu
Office #:3310 CS&S
Office phone:262-1721
Office hours:MW 10:00-11:00
132 sections:301, 302
GRADES


Name:Rehnuma Rahman
Email:rehnuma@cae.wisc.edu
Office #:1349 CS&S
Office phone:262-5340
Office hours:M 11:00-12:00,W 12:30-1:30
132 sections:317, 318
GRADES


Name:Jaime Fink
Email:jfink@cs.wisc.edu
Office #:1306 CS&S
Office phone:262-6601
Office hours:TR 10:45-11:45
132 sections:315, 316
GRADES


Name:Ashraf Aboulnaga
Email:ashraf@cs.wisc.edu
Office #:3310 CS&S
Office phone:262-1721
Office hours:MW 4:00-5:00
132 sections:319, 320
GRADES


Name:Andrew Geery
Email:geery@cs.wisc.edu
Office #:1301 CS&S
Office phone:
Office hours:R 2:30-4:30
132 sections:303, 304
GRADES


Name:James Herro
Email:jherro@cs.wisc.edu
Office #:1301 CS&S
Office phone:
Office hours:WF 12:30-1:30
132 sections:305, 310
GRADES


Name:Abhinav Gupta
Email:agupta@cs.wisc.edu
Office #:3360 CS&S
Office phone:262-9275
Office hours:MF 9:30-10:30
132 sections:322, 323
GRADES


Name:Jyothi Krothapalli
Email:jyothi@cs.wisc.edu
Office #:3310 CS&S
Office phone:262-1721
Office hours:MW 10:00-11:00
132 sections:306, 307
GRADES


Name:Su-Hui Chiang
Email:suhui@cs.wisc.edu
Office #:6384 CS&S
Office phone:262-6619
Office hours:R 4:00-5:00
132 sections:321
GRADES


Name:Thanos Tsiolis
Email:tsiolis@cs.wisc.edu
Office #:6364 CS&S
Office phone:262-6615
Office hours:R 10:00 - 11:00
132 sections:309
GRADES





Explore the Web Further...

Companies Whose Software or Hardware We Will Use

 Borland 

 Hewlett-Packard 

 IBM 

 Intel 

 Microsoft 

 Novell 
Useful Links for Further Web Exploration


Lycos
Enormous Database of Web Sites.

Yahoo
Internet resources classified by categories.  Has a lookup search.

The Virtual Tourist
Find W3 sites around the world by clicking on a world map.

The Mother of All BBS
Large Alphabetical List of Web Sites.

What's Hot and Cool on the Web
Lists of Especially Excellent Web Sites.

University of Wisconsin-Madison CS Home Page




This page was originally created and maintained by 
Ben Teitelbaum and Thanos Tsiolis.

It was modified and now maintained by 
Kelly Ratliff.


",course
"


CS132 Using Computers - Lectures 3 & 4


CS132 - Using Computers
Instructor Info:


Instructor: 
 Sally Peterson

Office: 
 5381 Computer Science

Phone: 
 263-7763

E-Mail: 
sally@cs.wisc.edu or slpeters@facstaff.wisc.edu

Office Hours:
Tuesday 10:45-11:45, Thursday 11:00-12:00 or by appointment


Vital Class Info:


Time:
TR 8:00 to 9:15 (Lecture 3)
TR 9:30 to 10:45 (Lecture 4)

Place:
All lectures held in 1800 Engineering Hall

Lecture Text:
Information Technology and Society by Laudon, Traver & Laudon

Lab Text:
Point, Click & Drag: Using the Macintosh by Peterson


Course Introduction:
This class is designed to take you from zero knowledge of computers
to being a crack shot user (and using these skills to get yourself through
college and into the job arena!). Our lab sections are taught using Macintosh
computers, but sections using PCs are available (see CS132
Using Computers - Lectures 1 &2).
The course has two components:
Part 1 - Lecture:
In the lecture we will discuss computers in ""generic"" terms,
i.e. general computer science topics. We will discuss how computers work,
including the following topics (not necessarily in this order):

application programs (including word processors, spreadsheets, graphics
  and databases) 
hardware, input/output, storage devices 
operating systems, programming languages 
networks and telecommunications 
artificial intelligence and expert systems 
computer-related social issues 

Part 2 - Lab:
In the laboratory (discussion) sections you will have hands-on experience
on Macintosh IIci computers with the following programs:

word processing (MS Word 5.0) 
electronic mail, newsgroups, and World Wide Web (Eudora 3.0 and
  Netscape 3.0) 
painting and drawing (Aldus SuperPaint 3.0) 
spreadsheet and charting (MS Excel 5.0) 
database (FileMaker) 
presentation manager (HyperCard 2.1) 
desktop publishing (Aldus PageMaker 4.0) 

An integral part of lab is learning the Macintosh operating system (System
7.5.3) as well.
In addition, there are some special tools (CD-ROM and scanners) available.
There are 10 TAs that teach the lab sections. Both the TAs and I have the
goal of providing you with high quality instruction and a rich educational
experience.
TAs:


Name
Section
Time
Days 

Jon Bodner 
358
6:10
MW

Nick Leavy
338
340
3:30
11:00
MW
TR

Shannon Lloyd 
354
356
5:20
6:40
TR
TR

Jeff Reminga
331
357
7:45
4:50
MWF
MW

Ira Sharenow
351
352
1:00
2:30
TR
TR

Brian Swander

335
336
12:05
1:20
MWF
MWF

Brad Thayer 
333
334
9:55
11:00
MWF
MWF

Joe Varghese
339
355
9:30
8:00
TR
TR

Geoff Weinberg
337
353
2:25
4:00
MWF
TR

Maria Yuin
332
359
8:50
7:30
MWF
MW


Recommended Background:
No background is necessary for this course.
Assignments, Quizzes and Exams:
Your grade will be based on two exams from lecture, and on regular assignments
and quizzes in lab.
Syllabus:
To glance at the syllabus (which contains all nitty-gritty class details),
click here. 
Assignments:
Assignment 3: SuperPaint
Assignment 4: Excel
Last modified: October 13, 1996 by Jon
Bodner


",course
"


CS132 Using Computers - Lectures 3 & 4


CS132 - Using Computers
Instructor Info:


Instructor: 
 Sally Peterson

Office: 
 5381 Computer Science

Phone: 
 263-7763

E-Mail: 
sally@cs.wisc.edu or slpeters@facstaff.wisc.edu

Office Hours:
Tuesday 10:45-11:45, Thursday 11:00-12:00 or by appointment


Vital Class Info:


Time:
TR 8:00 to 9:15 (Lecture 3)
TR 9:30 to 10:45 (Lecture 4)

Place:
All lectures held in 1800 Engineering Hall

Lecture Text:
Information Technology and Society by Laudon, Traver & Laudon

Lab Text:
Point, Click & Drag: Using the Macintosh by Peterson


Course Introduction:
This class is designed to take you from zero knowledge of computers
to being a crack shot user (and using these skills to get yourself through
college and into the job arena!). Our lab sections are taught using Macintosh
computers, but sections using PCs are available (see CS132
Using Computers - Lectures 1 &2).
The course has two components:
Part 1 - Lecture:
In the lecture we will discuss computers in ""generic"" terms,
i.e. general computer science topics. We will discuss how computers work,
including the following topics (not necessarily in this order):

application programs (including word processors, spreadsheets, graphics
  and databases) 
hardware, input/output, storage devices 
operating systems, programming languages 
networks and telecommunications 
artificial intelligence and expert systems 
computer-related social issues 

Part 2 - Lab:
In the laboratory (discussion) sections you will have hands-on experience
on Macintosh IIci computers with the following programs:

word processing (MS Word 5.0) 
electronic mail, newsgroups, and World Wide Web (Eudora 3.0 and
  Netscape 3.0) 
painting and drawing (Aldus SuperPaint 3.0) 
spreadsheet and charting (MS Excel 5.0) 
database (FileMaker) 
presentation manager (HyperCard 2.1) 
desktop publishing (Aldus PageMaker 4.0) 

An integral part of lab is learning the Macintosh operating system (System
7.5.3) as well.
In addition, there are some special tools (CD-ROM and scanners) available.
There are 10 TAs that teach the lab sections. Both the TAs and I have the
goal of providing you with high quality instruction and a rich educational
experience.
TAs:


Name
Section
Time
Days 

Jon Bodner 
358
6:10
MW

Nick Leavy
338
340
3:30
11:00
MW
TR

Shannon Lloyd 
354
356
5:20
6:40
TR
TR

Jeff Reminga
331
357
7:45
4:50
MWF
MW

Ira Sharenow
351
352
1:00
2:30
TR
TR

Brian Swander

335
336
12:05
1:20
MWF
MWF

Brad Thayer 
333
334
9:55
11:00
MWF
MWF

Joe Varghese
339
355
9:30
8:00
TR
TR

Geoff Weinberg
337
353
2:25
4:00
MWF
TR

Maria Yuin
332
359
8:50
7:30
MWF
MW


Recommended Background:
No background is necessary for this course.
Assignments, Quizzes and Exams:
Your grade will be based on two exams from lecture, and on regular assignments
and quizzes in lab.
Syllabus:
To glance at the syllabus (which contains all nitty-gritty class details),
click here. 
Assignments:
Assignment 3: SuperPaint
Assignment 4: Excel
Last modified: October 13, 1996 by Jon
Bodner


",course
"

CS302 Home Page




Computer Sciences 302
Algebraic Language Programming

    Sections and Instructors


We would like your comments, suggestions, or complaints about CS302.
Feedback may be provided by clicking 
here.
 - Jim Skrentny, CS302 Coordinator,  Office: CS1303, 262-0191,
    Email skrentny@cs

Information for All Sections

CS 302 Frequently Asked Questions

Course Overview
Microcomputer Laboratories
Consultants - 
      Fall 1996 Consulting Schedule
Tutors (mainly C++)
Policy on Academic Misconduct

Courses
      Offered by CS Department

Software for All Sections

Introduction to
       Microsoft Windows
Hints for Windows
       Compilers
The Windows
       Operating System
Email
Netscape

Creating and Using Subdirectories

C++ Information

The Savitch Text Book
Introduction to Borland C++
The C++ language
The
       Borland C++ integrated development environment

Fortran Information

See Jeff Lampert's  home page for
       Section 70.



Last Updated: Fri 8/30/96, Jim Skrentny CS302 Coordinator, skrentny@cs.wisc.edu 



",course
"

CS302 Course Info


Course Information for CS302
Course Description
From the Guidebook for Undergraduate Students, May 1994:
	
	Construction of algorithms; problem solving; instruction and experience
	in the use of at least one procedure-oriented language (e.g., Pascal
	or Fortran); survey of other such languages, advanced programming
	techniques. Prereq: Advanced high school mathematical preparation or
	some college work in mathematics, statistics or logic; or consent of
	instructor. Open to Fr.


< 
    cs302 home page >



",course
"

CS302 Home Page




Computer Sciences 302
Algebraic Language Programming

    Sections and Instructors


We would like your comments, suggestions, or complaints about CS302.
Feedback may be provided by clicking 
here.
 - Jim Skrentny, CS302 Coordinator,  Office: CS1303, 262-0191,
    Email skrentny@cs

Information for All Sections

CS 302 Frequently Asked Questions

Course Overview
Microcomputer Laboratories
Consultants - 
      Fall 1996 Consulting Schedule
Tutors (mainly C++)
Policy on Academic Misconduct

Courses
      Offered by CS Department

Software for All Sections

Introduction to
       Microsoft Windows
Hints for Windows
       Compilers
The Windows
       Operating System
Email
Netscape

Creating and Using Subdirectories

C++ Information

The Savitch Text Book
Introduction to Borland C++
The C++ language
The
       Borland C++ integrated development environment

Fortran Information

See Jeff Lampert's  home page for
       Section 70.



Last Updated: Fri 8/30/96, Jim Skrentny CS302 Coordinator, skrentny@cs.wisc.edu 



",course
"

CS310 Home Page	



 Problem Solving using Computers -  Fall 1996 
 Computer Sciences 310 




Check the following pages for information on CS310.


  
   Instructors and teaching assistants  including office hours. 
   

  Information on  
   assignments  including suggestions, copies of assignments, and 
   explanations about grading.  
   Check the 
   policy  on assignments, doing your own work, etc.
   

  Information on  
   examinations  and copies of past exams.
   

  Information on  
    labs  including copies of the handouts.
   

  
    Documents  including a syllabus.
   




  Many of the documents on these web pages are in postscript.  
      If you need a postscript viewer, you can obtain one from the
      CS ftp site.  Check the local services section of the 
       CS department home page.  
      Under local services, go to the FTP web page, and then to the
      ghost directory.  Read the README file for further directions.




",course
"

CS310 Home Page	



 Problem Solving using Computers -  Fall 1996 
 Computer Sciences 310 




Check the following pages for information on CS310.


  
   Instructors and teaching assistants  including office hours. 
   

  Information on  
   assignments  including suggestions, copies of assignments, and 
   explanations about grading.  
   Check the 
   policy  on assignments, doing your own work, etc.
   

  Information on  
   examinations  and copies of past exams.
   

  Information on  
    labs  including copies of the handouts.
   

  
    Documents  including a syllabus.
   




  Many of the documents on these web pages are in postscript.  
      If you need a postscript viewer, you can obtain one from the
      CS ftp site.  Check the local services section of the 
       CS department home page.  
      Under local services, go to the FTP web page, and then to the
      ghost directory.  Read the README file for further directions.




",course
"

 CS 354 - Home Page - Fall 1996 



 CS 354 - Fall 1996 
 Course Information 


 Instructors and Office Hours
 TAs and Office Hours
 Class Cancellations
 Handouts
 Assignments
 Solutions
 Exams
 Grades
 Simulator Help
 Lecture Notes
 Frequently Asked Questions (FAQ)




 Instructors: 

Sections 1 and 3: Jerry Tusch

 Office: 1309 CS&S  Phone: 262-6603
 Hours: 10-11 & 4-5 MW, 9-10 F
 e-mail: jerry@cs.wisc.edu  or  tutsch@execpc.com

 Class: section 1, MWF 11am-12:15 in 1325 CS
	 section 3, MW 5-6:40pm in 168 Noland


Section 2: Karen Miller

 Office: 3387 CSS, Phone 263-1724
 Hours: MW 10-11am
 e-mail: smoler@cs.wisc.edu

 Class Time: MWF 8:25-9:40am in 107 Psychology



 TAs: 
Sunlung Suen


 Office: 1347 CSS, Phone 262-5786
 Hours: TuTh 2:30-3:30pm
 e-mail: ssuen@cs.wisc.edu

Sridevi Bhamidipati


 Office: 1351 CSS, Phone: 263-1938
 Hours: WR 4:00-5:00pm
 e-mail: bsri@cs.wisc.edu

Mohammad Asgarian


 Office: 5364 CSS, Phone: 262-5105
 Hours: TuTh 2:30-3:30pm
 e-mail: ma@cs.wisc.edu


 Class Cancellations: 

Karen's section:

 no class on Monday September 23.
 no class on Wednesday November 27.


Jerry's sections:

 no cancellations scheduled




 Handouts: 


 revised Chapter 9 (postscript)
 Course Overview (Jerry's 
sections, html)




Assignments



 Assignment #1 (hw.html,  pgm.html ) 
 Assignment #2 (program and homework)
 Assignment #3, Karen's section (program and homework)
 Assignment #4 (program and homework)
 Assignment #5 (program and homework)



Solutions


 Quiz #1:  Sections  1 , 
 2 ,
 3 
 Assignment #1 (hw.html , 
 program ) 
 Quiz #2:  Sections  1 , 
 2 , 
 3 
 Assignment #2 (hw.html , 
 program ) 
 Quiz #3:  Sections  1 , 
 2 , 
 3 
 Assignment #3 (hw.html , 
 program ) 
 Quiz #4:  Sections  1 , 
 2 , 
 3 
 Assignment #4 (hw.html , 
 programSAL ,
  programMAL  ) 
 Quiz #5:  Sections  1 , 
 2 , 
 3 
 Assignment #5 (hw.html , 
 program ) 



 Exams

All quizzes will be open book/note, NO calculators.


 FOR KAREN'S SECTION:

 Quiz 1  Friday September 13, in class
 Quiz 2  Friday September 27, in class
 Quiz 3  Friday October 11, in class
 Quiz 4  Friday October 25, in class
 Quiz 5  Friday November 8, in class
 Quiz 6  Friday November 22, in class
 Quiz 7  probably Friday December 13 (last class day)

 FOR JERRY'S SECTIONS:

 see section 1, MWF syllabus 
(html)
 see section 3, MW syllabus 
(html)



Previous Exams, all in postscript format

 Fall 91 -- exam 1
 Spring 91 -- exam 1
 Fall 93 -- exam 2
 Spring 92 -- exam 2
 Fall 90 -- exam 2
 Fall 93 -- exam 3
 Spring 94 -- exam 3
 Summer 94 -- exam 3
 Fall 95 -- midterm exam, with 
answers
 Fall 95 -- final exam, no answers




 Grades


 Lookup Your Grade




 Simulator Help


 graphical interface manual




 Lecture Notes

Karen Miller's section (section 2)

 Chapter 1
 Chapter 2 -- SAL
 Chapter 3 -- number systems
 Chapter 4 -- data representation
 Chapter 5 -- integer arithmetic
 Chapter 6 -- floating point 
arithmetic
 Chapter 7 -- data 
structures
 Chapter 8 -- MAL and registers
 Chapter 9 -- procedures (updated 
Wednesday Oct. 16, 1996)
 Chapter 10 -- assembly (updated
Monday October 28, 1996)
 Chapter 11 -- I/O
 Chapter 12 -- exception 
processing
 Chapter 13 -- features for 
performance
 Chapter 14 -- architecure and 
case studies



",course
"

 CS 354 - Home Page - Fall 1996 



 CS 354 - Fall 1996 
 Course Information 


 Instructors and Office Hours
 TAs and Office Hours
 Class Cancellations
 Handouts
 Assignments
 Solutions
 Exams
 Grades
 Simulator Help
 Lecture Notes
 Frequently Asked Questions (FAQ)




 Instructors: 

Sections 1 and 3: Jerry Tusch

 Office: 1309 CS&S  Phone: 262-6603
 Hours: 10-11 & 4-5 MW, 9-10 F
 e-mail: jerry@cs.wisc.edu  or  tutsch@execpc.com

 Class: section 1, MWF 11am-12:15 in 1325 CS
	 section 3, MW 5-6:40pm in 168 Noland


Section 2: Karen Miller

 Office: 3387 CSS, Phone 263-1724
 Hours: MW 10-11am
 e-mail: smoler@cs.wisc.edu

 Class Time: MWF 8:25-9:40am in 107 Psychology



 TAs: 
Sunlung Suen


 Office: 1347 CSS, Phone 262-5786
 Hours: TuTh 2:30-3:30pm
 e-mail: ssuen@cs.wisc.edu

Sridevi Bhamidipati


 Office: 1351 CSS, Phone: 263-1938
 Hours: WR 4:00-5:00pm
 e-mail: bsri@cs.wisc.edu

Mohammad Asgarian


 Office: 5364 CSS, Phone: 262-5105
 Hours: TuTh 2:30-3:30pm
 e-mail: ma@cs.wisc.edu


 Class Cancellations: 

Karen's section:

 no class on Monday September 23.
 no class on Wednesday November 27.


Jerry's sections:

 no cancellations scheduled




 Handouts: 


 revised Chapter 9 (postscript)
 Course Overview (Jerry's 
sections, html)




Assignments



 Assignment #1 (hw.html,  pgm.html ) 
 Assignment #2 (program and homework)
 Assignment #3, Karen's section (program and homework)
 Assignment #4 (program and homework)
 Assignment #5 (program and homework)
 Assignment #6 (program and homework)



Solutions


 Quiz #1:  Sections  1 , 
 2 ,
 3 
 Assignment #1 (hw.html , 
 program ) 
 Quiz #2:  Sections  1 , 
 2 , 
 3 
 Assignment #2 (hw.html , 
 program ) 
 Quiz #3:  Sections  1 , 
 2 , 
 3 
 Assignment #3 (hw.html , 
 program ) 
 Quiz #4:  Sections  1 , 
 2 , 
 3 
 Assignment #4 (hw.html , 
 programSAL ,
 programMAL ) 
 Quiz #5:  Sections  1 , 
 2 , 
 3 
 Assignment #5 (hw.html , 
 program ) 
 Quiz #6:  Sections  1 , 
 2 , 
 3 
 Assignment #6 (hw.html , 
 programA ,
 programB ) 
 Quiz #7:  Sections  1 , 
 2 , 
 3 



 Exams

All quizzes will be open book/note, NO calculators.


 FOR KAREN'S SECTION:

 Quiz 1  Friday September 13, in class
 Quiz 2  Friday September 27, in class
 Quiz 3  Friday October 11, in class
 Quiz 4  Friday October 25, in class
 Quiz 5  Friday November 8, in class
 Quiz 6  Friday November 22, in class
 Quiz 7  probably Friday December 13 (last class day)
 OPTIONAL final   Thursday December 19 at 12:25pm

A very difficult, cumulative final will be offered for those desperate
to raise their grade.  Sign up in advance (before December 11).

 FOR JERRY'S SECTIONS:

 see section 1, MWF syllabus 
(html)
 see section 3, MW syllabus 
(html)



Previous Exams, all in postscript format

 Fall 91 -- exam 1
 Spring 91 -- exam 1
 Fall 93 -- exam 2
 Spring 92 -- exam 2
 Fall 90 -- exam 2
 Fall 93 -- exam 3
 Spring 94 -- exam 3
 Summer 94 -- exam 3
 Fall 95 -- midterm exam, with 
answers
 Fall 95 -- final exam, no answers




 Grades


 Lookup Your Grade




 Simulator Help


 graphical interface manual




 Lecture Notes

Karen Miller's section (section 2)

 Chapter 1
 Chapter 2 -- SAL
 Chapter 3 -- number systems
 Chapter 4 -- data representation
 Chapter 5 -- integer arithmetic
 Chapter 6 -- floating point 
arithmetic
 Chapter 7 -- data 
structures
 Chapter 8 -- MAL and registers
 Chapter 9 -- procedures (updated 
Wednesday Oct. 16, 1996)
 Chapter 10 -- assembly (updated
Monday October 28, 1996)
 Chapter 11 -- I/O
 Chapter 12 -- exception 
processing
 Chapter 13 -- features for 
performance
 Chapter 14 -- architecure and 
case studies



",course
"


Data Structures, CS367 Lecs 1 & 4



CS367: Introduction to Data Structures
Lecture 1, MWF 9:30 - 10:45, 121 Psychology
Lecture 4, MWF 11:00 - 12:15, 121 Psychology


Course Information

Announcements 11/9/96
Reading Assignments
Getting Started!
Getting Help!

Exams
Programming Assignments
Sample Code

Lecturer and TA Information
Course Materials
Computers: Labs/Home/Other



Announcements
Any general announcements are placed here with the most recent
    announcements first.  Any announcements or problems with programming
    assignments are not found here, but are located on each assignment's
    web page.
  
 
11/9/96 Binary Search Tree ADT sample code is online in samples page.
    11/5/96 Now that the last makeup exam is done, I have
	placed a copy of the solution key for exam one on reserve at
	the Kurt Wendt Library.
    11/1/96 Queue ADT sample code is online in samples page.
    10/10/96 Stack ADT sample code is online in samples page.
    10/9/96 Exam 1 topics are online in exams page.
    10/3/96 List ADT sample code is online in samples page.
    9/28/96 The handin directories have been created.
    9/19/96 The list of Common
        C++ Programming Errors is now online.  Any suggestions/additions
	are welcomed.
    9/17/96 You can now use either the vega or the sol computer
        labs to do CS367 work.  See computers
	for more information.
    9/14/96 Sample code has been placed on-line for Monday's
	and Wednesday's lectures.
    9/6/96 Are you getting a ""bad magic number"" error?  Source
        files must end in .cc for them to be able to be compiled.
        Otherwise you will get this unusual error!
    9/6/96 Are you looking at stale pages?  Don't forget to reload
	the web pages.  The pages are being updated, and copies that your web
	browser caches become outdated (i.e. stale).
    9/4/96 Attend the Unix Tutorial! You need only
	attend one of the times listed below.
	
	Mon. 9/3 - Thurs. 9/5, 4 and 6 PM, CS1221
	Mon. 9/9 - Thurs. 9/12, only 4 PM, CS1221.
	



Reading Assignments

FUTURE: Balanced Search Trees, Chapter 12, Pages 556-587
   FUTURE: Tables, Chapter 11, We will discuss comparisons of implementations in lecture.
   11/8+ Lectures: Trees, Chapter 10
   11/4+ Lectures: Queues, Chapter 7, skip simulation
   11/1 Lecture: Overloading Operators, Chapter 8, Pages 384-386
   10/23+ Lectures: Hash Tables, Chapter 12, Pages 591-608
   10/14+ Lectures: Stacks, Chapter 6
   10/7+ Lectures: Linked Lists, Chapter 4
   10/4 Lecture: Pointers and Dynamic Memory Allocation, Chapter 4, Pages 142-152
   10/2 Lecture: Sorting and Searching Analysis, Chapter 9, Pages: 392-405
   9/27+ Lectures: Sorting Algorithms, Chapter 9, Pages: 405-429
   9/23+ Lectures: Basic Recursion and Searching Algorithms, Chapter 2
   9/16+ Lectures: Basic OOP, Chapter 3, Pages: 118-120 skip, 120-129 focus
   9/6+ Lectures: Basic C++, Appendix A, Pages: A1-A35
 


Who's Who in CS367

Lecturer
Jim Skrentny,
      skrentny@cs.wisc.edu
Office:1303 Computer Sciences, 262-0191
      Office Hours:
M 12:30-1:30 PM, TW 3:00-4:00 PM
Teaching Assistants
Baicheng (Billy) Liao,
bail@cs.wisc.edu
Office: 1343 Computer Sciences, 262-5596
      Office Hours:
W 4:00 - 5:00 PM, F 3:00 - 4:00 PM
Jia Cheng,
      jiacheng@cs.wisc.edu
Office:  1306 Computer Science, 262-6601
      Office Hours:
M 8:00 - 9:00 AM, R 4:00 - 5:00 PM



Copyright © 1996 James D. Skrentny,
skrentny@cs.wisc.edu



",course
"

CS 367 - Lecture 2




CS 367-2Introduction to Data StructuresFall 1996


Course email address:
 cs367-2@cs.wisc.edu 
Course home page:
 http://www.cs.wisc.edu/~cs367-2/cs367.html

INSTRUCTOR:  
Yannis Ioannidis 


Office:  7357 Computer Sciences
Office hours:  Tuesday 8:45-9:30 am / Thursday 8:45-9:30 am
Office phone:  263-7764
Email address:
 yannis@cs.wisc.edu 
Home page:
 http://www.cs.wisc.edu/~yannis/yannis.html 


Contents

  News
  Teaching Assistants
  Lecture Information
  The C++ Language
  Text
  Grading
  Exams
  Course Schedule
  Assignment 0
  Programming Assignments

  Late Policy
  Cheating
  Help
  Program Grading
  Style
  External Documentation
  Internal Documentation

  Using Unix and Vi
  The Program Development Cycle 



News

Assignment 3
Assignment 3 
is now ready.

Midterm Statistics
Some interesting exam statistics for Section 2: max: 98, min: 22,
median: 78, mean: 77.92

Old Midterm
A sample old
midterm is now available to help you in your preparation for our own
midterm.

Assignment 2
Assignment 2 
is now ready.

Notes on O-notation and Binary Search

The notes on  O-notation 
and  Binary Search 
are now available.
If you want to print either one of them, open the File
menu from the (Ghostview) window that shows you the document, and
choose the ``Print...'' menu item.

Women In Computer Science

Some female faculty, graduate students, and undergraduates have
formed a group called WICS (Women In Computer Science).  One
of the group's goals is to encourage more women to become
computer science majors.  So if there are any women in this
class who would like to talk to someone about majoring in
computer science, or doing graduate studies in computer science,
or if there are any women who would like some extra help with
their classwork, they should see Suzan (a computer
science grad student) during her office hours or email her to
make an appointment.
Suzan's e-mail address is: stodder@cs.wisc.edu
and her office hours are Tuesday & Thursday 1:30-2:30 in room 1345.

Assignment 1
Assignment 1 
is now ready.

Out of Town
The first week of classes I will be out of town at the VLDB Conference.
Jim Larus will give the lectures for me.  I will be in class
September 10th.


 Teaching Assistants 

Both people listed below are teaching assistants (TAs) for the course.
They will be grading your homework assigments and will be happy to answer
questions about the assignments, or any other aspect of the course that
is giving you trouble.
Note that TAs are not assigned to specific sections.

Chin Tang Chin 
Office:  3310 Computer Sciences
Office hours:  Monday 9:30-10:30am / Tuesday 2:30-3:30pm / Friday 9:30-10:30am
Office phone: 262-1721 
Email address:
 cchin@cs.wisc.edu 
Home page:
 http://www.cs.wisc.edu/~cchin/cchin.html 

Wei Zhang 
Office:  1343 Computer Sciences
Office hours:  Wednesday 10:00-11:00am / Thursday 9:00-10:00am / Sunday 3:00-4:00pm
Office phone: 262-5596 
Email address:
 weiz@cs.wisc.edu 
Home page:
 http://www.cs.wisc.edu/~weiz/weiz.html 


 Lecture Information 

Lecture:  9:30 - 10:45 Tuesday and Thursday
1325 Computer Sciences and Statistics

 The C++ Language 

CS 367 will be taught using the C++ programming
language, and you will be required to do your programming assignments
in C++.
We didn't choose C++ just to make your life more difficult.
Most people who become fluent in C++ think it is far superior to C or
Pascal; the use of C++ is growing tremendously in the field and the
odds are that if you ever have to write another program after this
course ends, you will be able to write it in C++.  (The same statement
is not true about Pascal.  C is also widely available, but after an
initial startup period you will be more productive in C++ than in C.)
If you go on to take more computer science courses, with few exceptions
you will be required to use C++ in those courses.


Text

The text book for this course is

Data Abstraction and Problem Solving with C++: Walls and Mirrors 

by Frank M. Carrano (ISBN # 0-8053-1226-9).
This is a well-written text that covers most
(but not all) of the material in this course.
It also includes a lot about C++, so a separate text for the language is not
necessary.
For my lectures I will often (but not always) be following
 
CS 367 Lecture Notes - Fall 1993

by David J. DeWitt.
These notes are actually considerably more complete that simple lecture
notes, but they are still short of a true text book (there is
very little narrative text, no exercises, etc.)
As a recommended additional source, you may want to purchase these notes, which
are available from the DoIT documentation desk near the Dayton Street entrance
of the Computer Sciences building (1210 W. Dayton St).

If this is the first experience with Unix for you, you will need
some information about activating your account, logging in, creating, editing,
and manipulating files, and compiling, running, and debugging programs.
The handout
CS 1000, available from the DoIT information desk (where the DeWitt notes
are available), contains all the key information.
You will find it invaluable.
See also the  help section below.

As I mentioned above, the lectures will often follow the DeWitt notes, although
I may supplement them with a few handouts during the course
of the semester.
Nonetheless,

You are responsible for all material covered in lecture!

The exams will be based on
the lecture material, reading assignments in the notes, and
the course assignments.

Grading

There will be one or two evening exams during the course of the semester,
a final exam and five programming assignments.
The exams will determine 50% of the final grade
(with approximately equal weight for each one), and the programming
assignments will count for 10% each.


 Exams 


 Exam 1
 Tuesday, October 22nd, 7:15pm-9:15pm, 1351 Chemistry.
 Exam 2
 TBA
 Final Exam 
 Wednesday, December 18th, 5:05pm-7:05pm, place TBA


 Course Schedule 

The following is the list of topics that will be covered in this
course.  A more detailed scheduled will be provided later.
semester.

TOPIC                           DEWITT'S        
                                NOTES           WALLS AND MIRRORS
===========================================================================

Introduction, Administration                    1-42 (general familiarity)
Basic stuff of C++              lecture #2      101-135, App A, App C
---------------------------------------------------------------------------
Functions                       lecture #3      App A
Pointers                        lecture #4      141-150, App A
---------------------------------------------------------------------------
Records & dynamic storage       lecture #5      141-150, App A
Lists                           lecture #6      150-177
---------------------------------------------------------------------------
Lists                           lecture #6      150-177
Binary Search and O notation                     83- 86, 393-405
---------------------------------------------------------------------------
Advanced Lists                  lecture #7      177-189
Advanced Lists                  lecture #7      177-189
---------------------------------------------------------------------------
Stacks                          lecture #8      249-295
Queues                          lecture #9      307-344
---------------------------------------------------------------------------
Hashing                         lecture #10     591-608
Hashing                         lecture #10     591-608
---------------------------------------------------------------------------
Recursion  (Evening Exam)       lecture #11      50- 93, 203-238
Trees                           lecture #12     439-468, 501-502
---------------------------------------------------------------------------
Trees                           lecture #12     439-468, 501-502
Binary Trees - Sort & Search    lecture #13     468-500
---------------------------------------------------------------------------
AVL Trees					587-590
AVL Trees					587-590
---------------------------------------------------------------------------
Graphs                          lecture #16	620-646
Graphs                          lecture #16	620-646
---------------------------------------------------------------------------
Graphs                          lecture #16	620-646
Graphs                          lecture #16	620-646
---------------------------------------------------------------------------
Sorting                         lecture #17     405-432
THANKSGIVING
---------------------------------------------------------------------------
Sorting                         lecture #17     405-432
Sorting                         lecture #17     405-432
---------------------------------------------------------------------------
To be announced



Assignment 0

This is an

absolute necessity to get a grade other than F!

Bring in a photograph of you.
It should not be your picture from your 1st birthday, nor
should it be the one from that boy/girl scout trip in the summer
of 1984.
Other than that, it can be color or black-and-white, any size, etc.

No grade will be given without a photo!


Programming Assignments

Proficiency in a programming language (Pascal, C, C++, or FORTRAN)
at the introductory level is assumed;  the equivalent UW-Madison prerequisite
course is CS 302.  

Assignments must be done in C++ on the designated machines.  These
are in the machine rooms on the first floor of the
CS building.  I encourage you to use these machines.

If you prefer to use a home computer, you may do so, with certain
restrictions: You must have a C++ compiler on your home machine; 
you must log on to your university account often to read email
and get copies of data files; finally, we will require that
you turn in your C++ program electronically (via email) so if you
work at home you must make provisions to download your programs to
your university account and to make sure that they compile and run
with the g++ compiler on the SPARCstations.

I often use electronic mail to notify students of changes in
assignments, hints for programs, etc.

I assume that you will read all
electronic mail that I send.


Late Policy

No late assignment will be accepted.
Assignments must be turned in exactly when they are due.
In order to avoid lateness caused by machine loads, coincident due
dates for several classes, etc., simply be sure to get started right away on
each assignment.
Things are certain to go wrong now and then, so don't wait until the
last minute to start.
Any exceptions must be approved by me, and you will need a very good excuse.
If you get into trouble, see me as soon as possible.


Cheating

The Computer Science department takes a very hard line
stance on cheating.
You are welcome to
communicate with each other on design of algorithms and data
structures, but

there is to be no sharing of code.


You are also expected to learn, understand, and obey the
Computer Systems Lab Policies
governing your computer accounts.

Help

If you are having problems with the course work or programs,
please let me know as early in the semester as possible.  
Office Hours Policies
If you need help debugging a program, the best way to get help is to
visit any one of the
CS 367 TA's 
during his office hours, taking along a current
hard copy of your program.
My office hours are intended as a time for me to re-explain concepts
that I have presented in class but about which you are still confused,
or to answer your specific questions about course material.
I encourage you to use email as
a reliable way to contact me about any problems;  I read and respond to email
several times daily, almost every day of the week.


Program Grading

Programs are graded on all of the following criteria.


Correctness: The program should behave correctly/normally on typical
input.  The program should behave as stated in the project
specifications.

Clarity:  The program should be easy to read and understand.
(See the notes on  style  below for more information
about clarity).

Robustness:  Correct behavior in extreme or unusual situations.
The program should handle such situations in a reasonable and
logical manner (that is, it should not simply blow up).

Quality of test data:  The test data for the program should
demonstrate all facets of the program's capabilities, including
unusual cases.  

Efficiency:  Avoid unnecessarily inefficient algorithms or constructs.
However, efficiency should never be pursued at the expense of clarity.

Modularity:  The program should be modular and should make effective use
of parameters.

Completeness:  You should incorporate all information into your 
program;  there should be no need for any sort of extra (paper)
documentation.

Generality:
The program should be as general as possible, subject to consideration
of efficiency and clarity.
You should avoid arbitrary limitations (such as a bound on the size or
complexity of the input) whenever possible.
When limitations are necessary, they should be expressed as defined
constants near the top of the program so that they can be easily changed.
The only numeric literals that should appear in your program are those
values not very likely to change (such as 0, 1, or 3.1415926535).


Style



Use meaningful identifier names.

Use a consistent naming scheme for identifier names.
A suggested convention is as follows


 int variable_name; 

 int function_name(int argument); 

 const int DEFINED_CONSTANT = 1234; 

 enum EnumType { VALUE1, VALUE2 }; 

 class ClassName ... 


Do not put multiple statements on a single line.

Skip lines between functional groups of code.

Use a clear and consistent indentation style (see the DeWitt notes
for a suggested style).


Indent continued statements (if, loops, ... etc).

Line up {'s and }'s.

Label }'s meaningfully (e.g.  ``} // while (!done)'').



External Documentation

This should be included as a long comment at the beginning of your
program.  It is addressed to both the typical user and to someone
who wants to know superficially how the program works:



Include your full name and student ID at the beginning of the comment.


Give a general description of what the program does.

Tell how to use the program: how to call it, format of data.

Give limitations, bugs, special features, and assumptions made.
Describe negative as well as positive aspects of the program.
If you don't include negatives we will assume you were unaware of them. 

Information included in the assignment about the problem description
need not be repeated, but may be briefly summarized for the first point above.
A statement referring the user to the assignment document is then
sufficient. Note that this only applies to the problem description!

Internal Documentation

There are four main types of internal documentation:


Headers:
Comments at the headers of functions, classes, and major data structures
should describe their purpose, assumptions about their parameters,
and the main outline of any algorithms they use.

Declarations:  Comments next to a declaration of a variable or data member
should provide extra information not conveyed by the identifier's
name.
The name of a variable should tell as much about it as is possible without
making it too long;
additional information can be supplied by a comment.  For example

   int top; // index of last element added to stack

You should use comments to explain parameters as well as local variables. 

Within segments of code:  Tricky or opaque sections of code should be
avoided, but sometimes they are necessary.  In such cases, a comment
can help the reader understand what's going on.

Between segments of code:  These comments clarify the top-level outline
of your algorithm.


 Using Unix and Vi

Many people working with UNIX for the
first time will find that it takes some time to become
comfortable with it (this is particularly true if your
only previous programming experience is with Pascal using 
MacPascal on a MacIntosh.)  I strongly urge you to put in
the time early in the semester to become comfortable with
Unix.  While this time may be painful, it is time well
spent.
Also, you may wish to attend a UNIX tutorial.
They will be held in rooms 1240 Comp Sci in two sessions on each of the
following days: TBA
You will want to pick up a copy of 
 CS 1000 before you go.


 The Program Development Cycle 

The program development cycle in a UNIX environment is:


for (;;) {
    edit your program             // %vi program.c
    compile your program          // %g++ -Wall -g  program.c
    if (there are compilation errors)
        continue;
    run your program              // %a.out < inputfile > outputfile
    look at your output           // %vi outputfile
                                  // or %more outputfile
    if (there are no errors)
        break;
    if (you are too tired to continue) {
	print a listing to take home
                 // pr program.c inputfile outputfile | lpr
	goto home
    }
    debug the program
                                  // gdb a.out
                                  // run
                                  // ...
                                  // quit
}
you're done!  turn in the result
		 // submission instruction to be given out later





 yannis@cs.wisc.edu 

Mon Aug 19 17:28:14 CDT 1996


",course
"


CS 367




 
CS 367-3: Introduction to Data Structures
(http://www.cs.wisc.edu/~cs367-3/cs367.html, Revised 9/4/96)
Fall 1996
James R. Larus
 
Instructor:
James Larus
larus@cs.wisc.edu 
5393 Computer Sciences
262-9519
http://www.cs.wisc.edu/~larus/larus.html 
Office hours: Tuesday 3-4 pm , Friday 11-12 am

Contents

Teaching Assistants
Text
Lecture Information
Electronic Mail
The C++ Language
Grading
Exams
Course Schedule
Assignment 0
Assignment 1
Assignment 2
Assignment 3
Programming Assignments


Course Objectives
CS367 has two objectives:

Present the concepts of data structures in general and some of the most widely used structures in detail. Data structures are the fundamental building 
blocks of computer programs. By the end of the course, you should be able to identify situations in which a data structure is necessary, determine the 
requirements for the data structure, and select the appropriate data structure from those covered in this course.
Reiterate the concepts of structure programming, abstract data types, and modularity. These principles, which were introduced in CS302, are essential 
to writing clear, correct, and maintainable software. As there is a close connection between abstract data types and data structures, this course places 
a strong emphasis on applying these principles in all programming exercises.

Teaching Assistants
Wei Zhang and Chin Tang Chin are the teaching assistants (TAs) for
this course (sections 2 and 3). They will grade your homework assignments
and will be happy to answer questions about the
assignments, or any other aspect of the course that is giving you trouble.
Wei Zhang
Office: 1343 Compuer Sciences
Office hours: Wednesday 10-11, Thursday 9-10, Sunday 3-4
Office phone: 262-5596 
Email address: weiz@cs.wisc.edu 
Chin Tang Chin 
Office: 3310 Computer Sciences
Office hours:  Monday 9:30-10:30am, Tuesday 2:30-3:30pm, Friday 9:30-10:30am
Office phone: 262-1721 
Email address:
 cchin@cs.wisc.edu 
Home page:
 http://www.cs.wisc.edu/~cchin/cchin.html 

Text
The text book for this course is Data Abstraction and Problem Solving with C++: Walls and Mirrors by Frank M. Carrano (ISBN # 0-8053-1226-9). 
This is a well-written, if a little long-winded, text that covers most (but not all) of the material in this course. It also includes background about C++, so a 
separate text for the language is not necessary.
The lectures will often (but not always) follow David Dewitt's CS 367 Lecture Notes - Fall 1995. These notes are far more complete that simple lecture 
notes, but they fall short of a true text book (they contain very little narrative text, no exercises, etc.). I am using these notes as a basis for my lectures; as 
such, I feel free to skip portions and cover additional material. You may want to purchase these notes, which are available from the DoIT documentation 
desk at the Dayton Street entrance of the Computer Sciences building (1210 W. Dayton St). 
If this course is your first experience with Unix, you will need information about activating your account, logging in, creating, editing, and manipulating files, 
and compiling, running, and debugging programs. The handout CS 1000, also available from the DoIT information desk, contains this crucial information. 
(Also, see also the help section below.)
Lecture Information 
Tuesday and Thursday: 11:00 - 12:30 in 107 Psychology.
As mentioned above, lectures will often follow DeWitt's notes. Lecture attendence is strongly recommended as I will regularly present material that does not 
appear in the textbook or lecture notes, but will be useful for the programming assignments and exams. Needless to say, You are responsible for all 
material covered in lecture! The exams will be based on the lecture material, reading assignments in the notes, and the course assignments.
Electronic Mail
I often use electronic mail to notify students of changes in assignments, hints for programs, etc. I assume that you regularly read your electronic mail.
Grading
There will be one or two evening exams during the semester, a final exam and five programming assignments. The exams will determine 50% of the final 
grade (with approximately equal weight for each one), and the programming assignments will count for 10% each.
The C++ Language 
CS 367 will be taught using the C++ programming language, and programming assignments must be written in C++. If you do not know C++, you should 
not be in this section of CS367. Jim Skrentny is teaching two sections of CS367 that cover C++ in addition to data structures. C++ is a large and complex 
language; unless you are an experience programming (and even then), it is a difficult language to learn from a book.
There is also another WWW page with more information on the programming assignments.
Gdb
There is also a web page that describes the gdb program debugger.
Exams 

Exam 1 
Tuesday, Oct 22, 7:15-9:15pm, 1351 Chemistry. 
Exam 2 
TBA 
Final Exam 
Wednesday, December 18th, 5:05pm-7:05pm, place TBA 

Course Schedule 
The following is a rough outline of topics that will be covered in this course. A more detailed scheduled will be provided later.


Topic 
Dewitt's Notes 

Introduction & Administration
Basic stuff of C++ lecture #2 
Functions lecture #3 
Pointers lecture #4 
Records & dynamic storagelecture #5 
Lists lecture #6
Binary Search and O notation 
Advanced Listslecture #7
Stackslecture #8 
Queueslecture #9
Hashinglecture #10
(Evening Exam)lecture #11 
Recursionlecture #12 
Trees
Binary Trees - Sort & Searchlecture #13
AVL Trees
Graphslecture #16
(Evening Exam)
Sortinglecture #17
TBA


Assignment 0
This is an absolute requirement to get a grade other than F! Turn in an index card with the following information:

Name and login name
Year in school (freshman, sophomore, ...)
Previous CS courses
Previous programming experience
Recent photograph of you. It should not be your picture from your 1st birthday, nor from that boy/girl scout trip in the summer of 1984. It can be 
color or black-and-white, any size, etc. No CS367 grades will be given without a photo! 

Assignment 1
The first programming assignment is to write a simple abstract data byte for
a bounded integer sequence.  The text of the assignment is 
on-line.

Assignment 2
The second programming assignment is to write a program to maintain a database
of scores for a tennis tournament.  The text of the assignment is 
on-line.

Assignment 3
The second programming assignment is to write a program to produce a
concordance using hash tables.  The text of the assignment is 
on-line.


",course
"


Data Structures, CS367 Lecs 1 & 4



CS367: Introduction to Data Structures
Lecture 1, MWF 9:30 - 10:45, 121 Psychology
Lecture 4, MWF 11:00 - 12:15, 121 Psychology


Course Information

Announcements 11/5/96
Reading Assignments
Getting Started!
Getting Help!

Exams
Programming Assignments
Sample Code

Lecturer and TA Information
Course Materials
Computers: Labs/Home/Other



Announcements
Any general announcements are placed here with the most recent
    announcements first.  Any announcements or problems with programming
    assignments are not found here, but are located on each assignment's
    web page.
  
 
11/5/96 Now that the last makeup exam is done, I have
	placed a copy of the solution key for exam one on reserve at
	the Kurt Wendt Library.
    11/1/96 Queue ADT sample code is online in samples page.
    10/10/96 Stack ADT sample code is online in samples page.
    10/9/96 Exam 1 topics are online in exams page.
    10/3/96 List ADT sample code is online in samples page.
    9/28/96 The handin directories have been created.
    9/19/96 The list of Common
        C++ Programming Errors is now online.  Any suggestions/additions
	are welcomed.
    9/17/96 You can now use either the vega or the sol computer
        labs to do CS367 work.  See computers
	for more information.
    9/14/96 Sample code has been placed on-line for Monday's
	and Wednesday's lectures.
    9/6/96 Are you getting a ""bad magic number"" error?  Source
        files must end in .cc for them to be able to be compiled.
        Otherwise you will get this unusual error!
    9/6/96 Are you looking at stale pages?  Don't forget to reload
	the web pages.  The pages are being updated, and copies that your web
	browser caches become outdated (i.e. stale).
    9/4/96 Attend the Unix Tutorial! You need only
	attend one of the times listed below.
	
	Mon. 9/3 - Thurs. 9/5, 4 and 6 PM, CS1221
	Mon. 9/9 - Thurs. 9/12, only 4 PM, CS1221.
	



Reading Assignments

FUTURE: Trees, Chapter 10
   11/4+ Lectures: Queues, Chapter 7, skip simulation
   11/1 Lecture: Overloading Operators, Chapter 8, Pages 384-386
   10/23+ Lectures: Hash Tables, Chapter 12, Pages 591-608
   10/14+ Lectures: Stacks, Chapter 6
   10/7+ Lectures: Linked Lists, Chapter 4
   10/4 Lecture: Pointers and Dynamic Memory Allocation, Chapter 4, Pages 142-152
   10/2 Lecture: Sorting and Searching Analysis, Chapter 9, Pages: 392-405
   9/27+ Lectures: Sorting Algorithms, Chapter 9, Pages: 405-429
   9/23+ Lectures: Basic Recursion and Searching Algorithms, Chapter 2
   9/16+ Lectures: Basic OOP, Chapter 3, Pages: 118-120 skip, 120-129 focus
   9/6+ Lectures: Basic C++, Appendix A, Pages: A1-A35
 


Who's Who in CS367

Lecturer
Jim Skrentny,
      skrentny@cs.wisc.edu
Office:1303 Computer Sciences, 262-0191
      Office Hours:
M 12:30-1:30 PM, TW 3:00-4:00 PM
Teaching Assistants
Baicheng (Billy) Liao,
bail@cs.wisc.edu
Office: 1343 Computer Sciences, 262-5596
      Office Hours:
W 4:00 - 5:00 PM, F 3:00 - 4:00 PM
Jia Cheng,
      jiacheng@cs.wisc.edu
Office:  1306 Computer Science, 262-6601
      Office Hours:
M 8:00 - 9:00 AM, R 4:00 - 5:00 PM



Copyright © 1996 James D. Skrentny,
skrentny@cs.wisc.edu



",course
"

cs520: Introduction to Theoretical Computer Science



cs520:
Introduction to Theoretical Computer Science



    Fall 1996
    

    MWF 1:20pm, room 1325 cs
    




lecturer:
Brian Cole

email:
tuc@cs.wisc.edu

office:
1309 cs

office hours:
Monday 2:15 - 3:15pm
              Friday 12:15 - 1:15pm





teaching assistant:
David Sundaram-Stukel

email:
sundaram@cs.wisc.edu

office:
5364 cs

office hours:
Tuesday 3:00 - 4:00pm
              Wednesday 9:30 - 10:30am
              Thursday 3:00 - 4:00pm







text:
Introduction to Languages and the Theory of Computation,
            John C. Martin, North Dakota State University, 1991, McGraw Hill,
            ISBN 0-07-040659-6
        




    the tentative lecture schedule,
    including exam information
    

    some lecture clarifications


    the assignments page
    

grading policy:
%25 written assignments
            %40 mid-term examination
            %35 final examination
        




    archive of the
    
    cs520 mailing list



    cs520 Home Page / 1 September 1996  / Brian Cole
    

    < 
      UW-Madison Computer Sciences home page >
    < 
      UW-Madison home page >

  

",course
"

 CS 525 (Also IE, MATH, STAT), Fall 1996  




 CS 525 (Also IE, MATH, STAT) 
Linear Programming
Fall 1996


 Schedule 

  Lecture:     11:00 - 12:15 TR, 174 Mechanical Engineering

 Open-Book Midterm Exam 

  Time & Date: 11:00 - 12:55 Thursday October 24, 1996
  Location   : 174 Mechanical engineering	     

 Open-Book Final Exam 

  Time & Date:  12:25 -  2:25 Wednesday December 18, 1996
  Location   :  TBA

 Instructor: 
     Olvi L. Mangasarian 

  Office:       6393 Comp Sci & Stat
  Pphone:    	262-6593
  E-mail:       olvi@cs.wisc.edu
  Office Hours: 2:30 -  4:30 Wednesdays (During Fall Semester)

 Teaching Assistant: 
     Yuh-Jye Lee


  Office:      1307 Comp Sci & Stat 
  Telephone:    262-6602    
    E-mail:       yuh-jye@cs.wisc.edu
  Office Hours: MW 12:00-1:00 

 Textbook  

  Linear Programming with MATLAB , M. C. Ferris and O. L. 
Mangasarian, Preliminary Version, DoIt, Madison, WI 1996. 




 Syllabus 

  Course Overview 

 Course Information 

 
	Course Information
   
	Books on Reserve at Kurt Wendt Library
   
	MATLAB Setup 
 
	Homework 1 (Due September 12, 1996) 
 
	Homework 2 (Due September 19 , 1996) 
 
	Homework 3 (Due September 24 , 1996) 
 
	Homework 4 (Due September 26, 1996) 
 
	Homework 5 (Due October 3 , 1996) 
 
	Homework 6 (Due October 8 , 1996) 
 
	Homework 7 (Due October 17, 1996) 
 
	Homework 8 (Due October ??, 1996) 
 
	Homework 9 (Due November ??, 1996) 
 
	Homework 10 (Due November ??, 1996) 
 
	Homework 11 (Due December ?, 1996) 
 
	Homework 12 (Due December ?, 1996) 
 
 
	Programming Project (Due November 26, 1996) 
 
	Sample Midterm Exam of March 1993 
 
	Solution to Sample Midterm Exam of March 1993 
 
	Midterm Exam of March 1996 
 
	Solution to Midterm Exam of March 1996 
 
	Midterm Exam of October 1996 
 
	Solution to Midterm Exam of October 1996 
 
	Sample Final Exam of May 1993 
 
	Final Exam of May 1996 
 
	Solution to Final Exam of May 1996 

 Mathematical Programming at UW 

  
        Home Page
 
	Courses


 Relevant Web Sites 

  
        Searchable Bibliographic Database of 15,000 Items 


  
        Links to Various OR Sites




This page is updated periodically during the semester. 



",course
"

 CS 536, Fall 1996  




 CS 536: Introduction to Programming Languages and Compilers
Spring 1996


  Story of the Month  
(new for October)

 Schedule 

  Lecture:     9:30 - 10:45 TuTh, 1221 Comp Sci & Stat
  Recitation:  2:30 -  3:20 Tu,   107 Psychology

 Instructor: 
     Susan Horwitz 

  Office:       5391 CS&S
  Telephone:    262-7946
  E-mail:       horwitz@cs.wisc.edu
  Office Hours: Tuesday  3:30 - 4:30
                Friday 1:30 - 2:30
		or by appointment

 Teaching Assistant:
     Rahul Kapoor

  Office:       3360 CS&S
  Telephone:    262-9275
  E-mail:       rahul@cs.wisc.edu
  Office Hours: Monday and Wednesday 3:45 - 5:15
                or by appointment

 Texts on Reserve at Wendt Library: 

   Compilers Principles, Techniques, and Tools, Aho, Sethi, and Ullman.
  Crafting a Compiler, Fischer and LeBlanc.



 
 What's New (Check this regularly)
  General Course Information 

  Course Overview 
  Key Dates 
  Information about assignments, exams, and grading (including late policy) 

 
 Getting Started 
 
 Readings  
 
 Programming Assignments and Homeworks  
 
 Examinations  
 
 Lecture Notes  
 
 Useful Programming Tools 
 
 Grades 
 
 Email 
 
 Links of Interest 





",course
"

CS 537 - Introduction to Operating Systems - Fall 1996



CS 537Introduction to  Operating SystemsSection 1, Fall 1996

Instructor


Marvin Solomon

 

office:  7397 Computer Sciences
office hours:  9:00 TR
office phone:  263-2844
email address:
 solomon@cs.wisc.edu 

TA


Rob Mellencamp 

 

office:  1349 Computer Sciences
office hours:  10-11 MWF
office phone:  262-5340
email address:
 mellen@cs.wisc.edu 

 News 
 Watch this space for the latest updates. 

Oct 31

The  answers to the midterm exam 
and a summary of the scores are now available.

A  more detailed breakdown of the grade distribution
is also available.

Oct 27

The specification for

Project 4

is now avaiable.

Oct 21

The due date for Project 3 has been moved to Thursday, Oct 24.

A few typographical errors in the notes on
 Deadlock Avoidance 
have been corrected.  Most importantly, the same array
was being called D in some places and M in others.
It is now called M in all places.

By popular demand, an  old midterm exam  is
available for you to look at.
Warning:
You should take this example with a large grain of salt.
The exam is from a very long time ago when the course
used a different text and covered topics in a different order.
This semester's midterm will likely
be quite different.

Oct 15

The time and place for the Midterm exam have been determined.
It will be in room 1240 Comp Sci from 7:15 to 9:15 pm on October 23.

Oct 14

The specification for

Project 3

is now avaiable.

Oct 9

A discussion of the issues presented
in class to day is available.

Oct 8

A summary of the grades for project 1 are
 available.

Oct 6

The electronic 
hand-in directions for
program 2 have now been posted.

Oct 1

The procedure giveFork in Algorithm 2 of the
Project 2 specification
should contain a call to notify().
The web page has been corrected to show this.

Sept 26

I've fixed two more bugs in the
Project 2 specification,
one minor and one that is more important.

The first caused the Introduction paragraph to be slightly garbled.
Thanks to Jake Dawley-Carr for pointing this one out.

The second was a line omitted from the sample code for Algorithm I in the
Programming Details
section.
After you create a ThreadScheduler, you have to start it

  ThreadScheduler sched = new ThreadScheduler();
  sched.start();

This was specified correctly in the later section on the ThreadScheduler, 
but not in the Details section.  The Web page is now fixed.
Thanks to Liping Zhang for this one.

Sept 20

Test data files for 

Project 2

are now available.
The directory

~cs537-1/public/src

contains three data files and a Java class for reading them.
The file

~cs537-1/public/src/Graph.java

contains the definition of the class

Graph

described in the project specification.

The file

~cs537-1/public/src/petersonCyclic.graph

contains the Peterson graph shown in the project specification
 
As mentioned there, this initial placement of forks is not
acyclic.
The file

~cs537-1/public/src/petersonAcyclic.graph

contains the Peterson graph with an acyclic initial placement of forks.
The file

~cs537-1/public/src/star.graph

contains a ``star'' topology, with one central philosopher sharing
forks with each of nine others.

Sept 19

Todd Jenner pointed out two typos in the specification for Project 2
   ``The 15 forks ... are the numbers 0 through 15.''
should read 
   ``The 15 forks ... are the numbers 0 through 14.''
and in eat(), MAXTHINK should be replaced by MAXEAT.

The 

online version

has been corrected.
Thanks, Todd.

Sept 18

There was a mistake in the

Java tutorial notes
 in the section on Strings.
In the two-argument version of String.substring(), the second argument
is the offset of the end of the substring, not the number of characters
in the string.
The notes have been corrected.
Thanks to Franco Tung Fai Chan for pointing this out.
Sept 17


We occasionally send urgent messages directly to a mailing list
of students registered for this course.
There is an 
archive of all messages sent to this list on the web.
If you are not receiving these messages and think you should be, send
mail to solomon@cs.wisc.edu.
The specification for

Project 2

is now avaiable.
I have received a few requests for makefiles for Java.
There is a sample Makefile in 
~cs537-1/public/src/Makefile.
Copy that file to the working directory where your Java source files are
(remember, you should use a separate directory for each project),
edit it as described in the comments in it, and then type make
to compile and run your program, or make classes to compile
without running.

Sept 13

Notes on handing in your assignment and simulating 
preemptive multitasking for the Solaris computers
have been added here.
Sept 12

The 

Java tutorial

is now finished (or about as finished as it's going to get).
In the section on

threads,

you will find some helpful hints on how to structure
 project 1.

You should be aware that there is a weekly seminar on operating systems
and networking, meeting Mondays at 2:30.
The first seminar of the semester is Monday the 16th.
Check

the Colloquia and Seminars web page
 for more details.
Sept 5

The Java Book is finally available at the
University Bookstore!
Sept 4

The beginnings of a

Java tutorial
 are now available.
Sept 4

To use Java on CS Department Unix workstations, you must create a
file named .cshrc.local in your home directory containing one
line:

    set path=($path /s/java/bin)

To make the change take effect, either type

    source .cshrc.local

or simply log out and log back in.
Sept 3

The specification for
 project 1  is ready.
Sept 3
The Unix Orientation Sessions, for all new Unix users, are scheduled for
the following times:


Tues - Thurs, Sept 3 - 54 pm and 6pm, room 1221 CS

Mon - Thurs, Sept 9 - 124 pm, room 1221 CS



Last updated:
Wed Sep  4 14:10:06 CDT 1996



Contents

         News
     Summary
     Lecture Information
         Text
     Projects
     Grading
     Course Schedule
         Lecture Notes


  Summary  

CS 537 is intended as a general introduction to the techniques used
to implement operating systems and related kinds of systems software.
Among the topics covered will be
process management (creation, synchronization, and communication);
processor scheduling;
deadlock prevention, avoidance, and recovery;
main-memory management;
virtual memory management (swapping, paging, segmentation and page-replacement
algorithms);
control of disks and other input/output devices;
file-system structure and implementation;
and protection and security.

  Lecture Information  
Lecture:  11:00 - 12:15 Tuesday and Thursday, 1221 Computer Sciences
and Statistics

Discussion:  11:00 - 11:50 Wednesday, 107 Psychology


The discussion section is not ``optional'':  it is at least as important as the 
lectures.
The primary focus of the Wednesday meetings will be topics related to the
projects
(including introduction to the
Java
programming language), but time will also be available for answering any
questions you have regarding points raised in the the lectures or the
text.

 Text 
 Required 
Modern Operating Systems
by Andrew S. Tanenbaum,
Prentice Hall, 1992.

 Strongly Recommended 
The Java Programming Language
by  Ken Arnold and James Gosling,
Addison Wesley, 1996.

 Online References 

Lots of additional helpful materials about Java are available on the WEB.

The following references have been collected locally for fast access.

The Java Tutorial
The Java Language Specification
Java API Documentation

Watch this spot for additional links to the web.

 Projects 

There will be five programming projects, all in the
Java
programming language.
Sun SparcStation workstations running the Solaris dialect of the Unix
operating system are provided for your use, but you may use any
computer to which you have access that implements the Java programming
language.
However, if you do not use the Computer Sciences Department's computers, 
you will be responsible for transferring any required
data sets or software packages to your computer.

The first assignment will be an easy ``get acquainted'' exercise designed
to help you become familiar with the computing environment and the
Java language.
Subsequent projects will involve
process synchronization,
processor scheduling,
disk scheduling,
and file-system implementation.
On all but the first project, students will be required to work in pairs.
Both members of a pair will receive the same grade on a project.
Feel free to discuss projects with anyone, but

you must not share code with anyone but your partner.


Cheating will be vigorously punished.

Enough said!


Assignments are due at the beginning of class (11 a.m.) on the date
indicated.
Over the entire semester, you have
three late days
of credit.
You can use these late days on different assignments (e.g., one day on each
of three assignments) or all three days on one assignment.
Late days may not be used for the last assignment.

 Why Java? 

Most students taking this course will be familiar with C++ but not Java.
Why, then, did we choose Java?
There are several arguments in favor of it.

Java is a more congenial programming environment.
Runtime errors such as bad subscripts, null pointers,
and uninitialized variables cause exceptions caught by the language runtime
rather than mysterious crashes or random behavior.
Java Strings are much easier to use than char *
arrays.  Garbage collected storage management is extremely handy.
And more!
Java is very trendy.
Java had caught on faster than any other new language in history.
Many of the reasons for Java's growing popularity have little to do with
the way we will use it in this course (we will discuss these issues in class),
but a byproduct of this course
will be knowledge of Java, which is becoming quite a marketable commodity.
Java has ``operating system'' features built in.
In particular, it is the first widely-used programming language with
language-level support for concurrency (threads) and synchronization
(monitors).


On the other hand, switching to a new programming language is always
a bit dislocating.
Fortunately, there are excellent resources are available to ease the
transition.
The Java Programming Language
by Arnold and Gosling is amazingly good.
It is neither an introductory programming primer (the authors assume you
already know how to program)
nor a reference manual (although a
reference manual
is available online),
but a readable introduction to the language, which takes you all to the way
from getting started to everything you need to write quite sophisticated
programs in Java.
This book is available at the University Bookstore.
You are strongly encouraged to buy it.
We have also gathered a variety of
other resources together, including a nice
online tutorial
about Java programming, and
a reference manual
for the standard class libraries you will be using.

  Grading  

There will be a midterm and a final exam, each of which will count for 25%
of your grade.
The midterm will be in the evening of Wednesday, October 23
from 7:15 to 9:15 pm in room 1240, Computer Sciences and Statistics.
The final, as scheduled in the timetable, will be Tuesday, December 17
at 5:05 p.m.
The first programming project (getting started) will count for 2% of your
grade.
The remaining four projects will count for 12% each.

  Course Schedule  

The following schedule is tentative;
it may be updated later in the semester, so check back here frequently.


Sept 3 - 6
    Introduction
    Chapter 1
Sept 10 - Oct 8
    Processes, Synchronization, Processor Scheduling
    Chapters 2 and 6
Sept 17
     Project 1  Due
    Learning Java
Oct 10
     Project 2  Due
    Synchronization
Oct 10 - Nov 11
    Memory Management and Virtual Memory
    Chapter 3
Oct 22
     Project 3  Due
    CPU Scheduling
Oct 23
    Midterm Exam
Room 1240 Comp Sci.
Nov 14 - Dec 5
    I/O Devices, File Systems
    Chapters 4 and 5
Nov 14
    Project 4  Due
    Disk Scheduling
Dec 10 - 12
    Protection and Security
    Sections 4.4 and 4.5
Dec 12
    Project 5 Due
    File Systems
Dec 17
    Final Exam

  Lecture Notes  

Introduction

     History
         What is an OS For?
     Bottom-up View
     Top-Down View
     Course Outline

 Java for C++ Programmers
 Processes and Synchronization

 Using Processes 
 What is a Process? 
 Why Use Processes 
 Creating Processes 
 Process States 
 Synchronization 

 Race Conditions 
 Semaphores 
 The Bounded Buffer Problem 
The Dining Philosophers 
Monitors 
 Messages 

 Deadlock

 Terminology 
 Deadlock Detection 
 Deadlock Recovery 
 Deadlock Prevention 
 Deadlock Avoidance 

 Implementing Processes

 Implementing Monitors 
 Implementing Semaphores 
 Implementing Critical Sections 
 Short-term Scheduling 


Memory Management 

 Allocating Main Memory 

 Algorithms for Memory Management 
 Compaction and Garbage Collection 
 Swapping 


Paging 
Disks 
 More to come ...






solomon@cs.wisc.edu


Thu Oct 31 16:24:20 CST 1996



Copyright © 1996 by Marvin Solomon.  All rights reserved.



",course
"

CS 537-2 Fall 1996 Home Page


CS 537-2:
Introduction to Operating Systems
Fall 1996

Tuesdays and Thursdays, 1:00-2:15pm in CS 1325

Discussion: Fridays, 1:00-2:15pm in CS 1221


Your Hosts:
 Mary
Vernon (Instructor)
and
Karuna
Muthiah (TA)

Welcome to the home page for CS 537-2.

NOTE:  Thursday lecture and Friday discussion will be
interchanged on the following dates:

Oct 3-4, Oct 10-11, Nov 7-8, Dec 5-6. 

What's New:

Solutions to Quiz #3.
Assignment #4.  (11/7/96)




 Office hours and email
 Textbook and other readings
 Grading, Projects and Quizzes
 Mail Archive


Approximate Schedule of Topics


Week of
Topics
Reading


Sep 3introduction;
concurrency: threads, address spaces, processesChapter
1, 2.1


Sep 10thread management;
cooperating threadsChapter 2.2, 2.3


Sep 17synchronization;
implementing mutual exclusioncont'd.


Sep 24semaphorescont'd.


Oct 1monitors; concurrency: summarycont'd


Oct 8deadlock; process scheduling
Chapter 6, 2.4


Oct 15memory management: protection, address translation;
caching and TLBsChapter 3


Oct 22demand paged virtual memorycont'd.


Oct 29REVIEW; survey of i/o systemsChapter 4


Nov 5file systems & disk management;
naming and directoriesChapters 4 & 5


Nov 12the hardware, os, compiler, language interface;
protection & securityTBA


Nov 19Java overview, language;
Java objects, core methodsTBA


Nov 26Java threads, security;
Thanksgiving (no class)--


Dec 3networks and distributed systems;
remote procedure call (RPC)Chapter 9


Dec 10distributed file systems;
global memory systems; REVIEWChapter 13





vernon@cs.wisc.edu



",course
"

 CS/ECE 552 Lecture 2 - Home Page - Fall 1996 



 CS/ECE 552 - Fall 1996 
 Course Information 


 Instructor and Office Hours
 TA and Office Hours
 Handouts
 Assignments
 Exams
 Grades




 Instructor: 

David Wood

 Office: 6369 CSS
 Hours: Tuesday and Wednesday 11:00A - 12:00P, or by appointment.
 e-mail: david@cs.wisc.edu
 Phone: 263-7463

 Class Time: Tuesday and Thursday 9:30A - 11:00A
 Location: 1257 CSS


 TA: 
Phil Atkinson

 Office: 1343 CSS
 Hours: Tuesday 2:00 - 3:00P, Thursday 1:00P - 2:00P, or by appointment.
 e-mail: atkinson@cs.wisc.edu
 Phone: 262-5596




Getting Started

 Helpful Information



 Handouts: 


 Course Description
 Getting started with Mentor
 Error Checking and Correction
 Sample VHDL code
 Compiling and Simulating VHDL with 
mentor




Assignments

 Assignment 0. (due 09/10/96).
(Answer to Question #3)
 Assignment 1. (due 09/17/96).
 Assignment 2. (due 10/01/96).
(Selected answers to Assignment 2)
 Assignment 3. (due 10/15/96).
(Selected answers to Assignment 3)
 Assignment 4. (due 10/29/96).
(Selected answers to Assignment 4)
 Assignment 5. (due 11/19/96).
 Assignment 6. (due 12/05/96).




 Project


This section includes information on the course project. 

 Project Description
 Project Deadlines
 The project reports will be due at the project demonstration times, 
     which will be on December 12 and 13, 1996.




 Exams



The Midterm Exam will be on Wednesday, Oct 30, 1996 at 7:15 pm,
room 1221 CSS.

Final Exam: Tuesday, Dec 17, 1996, at 10:05 AM. Room TBA.




Exams - Previous

 Spring 91 -- Midterm
 Fall 91 -- Midterm
 Spring 93 -- Midterm
 Spring 94 -- Midterm
 Spring 95 -- Midterm and Solution
 Fall 95 -- Midterm and Solution
 Spring 96 -- Midterm and Solution
 Spring 92 -- Endterm



",course
"

CS 564 - Database Management Systems: Design and Implementation


CS 564
Database Management Systems: Design and Implementation

Course Information (Postscript version)
What's New! 

 No class this Friday. Instead, we will have office hours at that time. 
    Assignment 3 due day changed to Nov. 8, this Friday
    Assignment 3 FAQ (Text )(last updated Nov 5)
    Assignment 3 handout ( Postscript)

 Class Mailing List ( CS564-1)

 Solutions to  Chapters' Exercises 

 Please DONT print them out
    Solutions to all Chapters' Exercises ( Postscript)

First Day Information

 Overview
 Prerequisites
 Office Hours
 Topics to be Covered
 Grading
 Important Dates
 Important Policy Issues


 The  minibase
 home page (Check here for details on Assignment 0!).


Assignments 

 Assignment 0 handout ( Postscript)
    Assignment 1 FAQ (
HTML )(last updated Sep 20)
    Assignment 1 handout ( Postscript)
    Assignment 2 FAQ ( HTML )(last updated Oct. 4)
    Assignment 2 handout ( Postscript)
    Last year's Midterm sample ( Postscript)
    The key to last year's Midterm ( Postscript)


Using Sybase: Info at
 UW  and from  Sybase 
C++ Info/Help

 Yahoo's entry of WWW C++ resources.
 
	   C++ Tutorial
 
	   GCC/G++ Info Tree
 
	   GDB (debugger) Info Tree
 
	   CS 302's ""The C++ language"" (under construction)

   1994 C++ Assignment 1 Handout Not Graded, for C++ experience
 A FAQ for 1994 Assignment
1

Other Handouts

  Coding conventions.


Instructor


 Raghu Ramakrishnan

	Office:        7355 CS&S
	Phone:         262-9759
	E-Mail:        raghu@cs
	Office Hours:  MW 12:30PM - 1:00PM 

Lecture and Discussion 

 Lecture
  
	Time:          MWF  11:00AM - 12:15PM
	Place:         222 Ingraham   


Teaching Assistants

 Xuemei Bao 

	Office:        1345 CS&S
        Phone:         262-1012
        E-Mail:        xbao@cs
	Office Hours:  2:30PM - 3:30PM  Tues and Thur 




Last modified: Mon Sept.2  16:00:00 CDT 1996 by xbao


",course
"

CS564 Lecture 2 Home Page


 Welcome to the home page for CS564-2.  This page is (obviously)
under construction; as the semester progresses we will be adding
information that you need to know to this page.

 The most important thing to know now is that the class meeting
room has been changed.  Currently we are meeting in 150 Russell Labs
for the TR lectures; the optional discussion on Friday has not been
moved so it is still in 103 Psychology.



Instructor


 Jeff Naughton

        Office:        7369 CS&S
        Phone:         262-8737
        E-Mail:        naughton@cs
        Office Hours:  F 8:15AM - 9:45AM 

Teaching Assistant

 Tim Jung 

        Office:        1308 CS&S
        Phone:         262-6602
        E-Mail:        tjung@cs
        Office Hours:  4:00PM - 5:00PM  Monday; 2:30-3:30 Wednesday.

Lecture and Discussion 

 Lecture
  
        Time:          TR  11:00 - 12:15
        Place:         150 Russell Labs   
 Discussion (optional)
  
        Time:          F  9:55
        Place:         103 Psychology   


More information. 
	This lecture of 564 will be taught in close cooperation
        with Lecture 1; in fact, the assignments (but probably not the
        exams) will be the same for both.  For more information about
        CS564 in general, and the Minibase assignments in particular,
        please see the CS564 Lecture 1 Homepage .



",course
"

 CS 577 - Introduction to Algorithms  


 Introduction to Algorithms - CS 577 

 Course Information
 Instructor :  
Eric Bach 


  Office : CSS 7385
  Phone  : 262 7997
  e-mail : bach@cs.wisc.edu
  Hours  : MR 10 - 11 and by appt.


 Teaching Assistant: 
 Bill Donaldson 

  Office : CSS 6394
  Phone  : 262- 6620
  e-mail : wwd@cs.wisc.edu
  Hours  : T 1 - 2   R 12 - 1


 Teaching Assistant:
 Raji Gopalakrishnan  

  Office : CSS 1308
  Phone  : 262 6602
  e-mail : raji@cs.wisc.edu
  Hours  : MW 11 - 12


 Midterm Exam : 
Oct 28, 1996 from 7:15 - 9:15pm, 1240 CS 


 Course Handouts 

 
	  Course Description 
 
	  Syllabus 
 
          Books on Reserve 
 
          Course Organization 
 
	  Homework 0 
 
	  Homework 1    Due Sep 30, 1996
      
	  Homework 2    Due Oct 16, 1996
  

 Solutions to Homeworks

 
	Homework1 

Graph 
	for fractal behaviour
     Homework2 


  
Mail Archive  


",course
"


UW CS Computer Networking Courses (Professor Landweber)



UW CS Computer Networking Courses

CS 640 - Introduction to Computer Networks
CS 740 - Advanced Computer Networks



Introduction to Computer Networks - CS 640
Table of Contents

International Connectivity Map
About UW Networking Courses Offered
Course Information
Instructor
Teaching Assistants
Course Syllabus
Mail Archives
Assignments
Programming References
Selected Readings







Click 
here
to get the latest text version.





 Networking
courses at UW-Madison


Course Information
Lecture

Time:		8:00 - 9:15 MWF
Place:		1221 Comp Sci & Stat
Class email:	cs640-1list


Instructor: Lawrence H. Landweber

Office:		7397 Comp Sci & Stat
Phone:		263-7442
Email:		lhl@cs.wisc.edu
Office hours:   M,W,F 9:30-11:00


Teaching Assistant: Srinivasa Narayanan

Office: 3360
Phone: 262-9275
Email: nsp@cs.wisc.edu
Office hours:
	Monday      2:00p  -  4:00p
	Wednesday   3:00p  -  5:00p

	If these times are not convenient, feel free to email me at 
	nsp@cs.wisc.edu for an appointment.

Teaching Assistant: Ben Teitelbaum

Office: 3310
Phone: NA
Email: ben@cs.wisc.edu
Office hours: 
	Tuesday  1:00p  -  3:00p
	Thursday 2:00p  -  4:00p

	If these times are not convenient, feel free to email me at 
	ben@cs.wisc.edu for an appointment.



 Fall 1996 Course Syllabus

 Fall 1996 Mail Archive (moderated)
 CSL Mail Archive (complete)

 Assignments - Fall 1996 

Programming Assignment 1 (Error/Warning Codes)
  Class Project - Implementation of ATM Network Layer and Reliable ATM Adaptation Layer

Handout (PostScript)
Project overview slides  (PostScript)  (Powerpoint)
""Software Engineering 101"" slides  (PostScript)  (Powerpoint)
 Design Document Evaluation Form (PostScript)






 Grading

Midterm Exam: 25%
Final Exam: 25%
Assignment 1: 5%
Term Project: 45%



 Prior Midterms

Fall '92 Midterm
Fall '94 Midterm


Optional Reference Book for Project

     UNIX Network Programming
     Stevens, W. Richard
     Prentice Hall 
     ISBN 0-13-949876-1


 Programming References

BSD Socket Interface
Socket Interface Lecture
  <!--li><!--a href=""olsen.proj.ps""><!--Project Lecture #1>
  <!--li><!--a href=""olsen.proj2.ps""><!--Project Lecture #2>
The Garbler Package
Annotated Bibliography


Readings (Partial Set)

TCP RFC-793
IP RFC-791
ICMP RFC-792
OSPF RFC-1583
BGP4 RFC-1771
IPNG RFC-1752


<!--h3><!--img src=""gif/bug.gif"" alt=""-- ""><!-- Assignments - Fall 1994>
<!--ol>
  <!--li><!--a name=""f94"" href=""f94-toc.html""><!--Programming Assignment 1>
  <!--li><!--a href=""project.ps""><!--Course Project>



Advanced Computer Networks - CS 740
Lecture Schedule Spring 1996
Review Form



",course
"

CS720 Home Page Fall 1996 


 CS720 (Fall 1996) 
Instructor:  Robert R. Meyer  (rrm@cs.wisc.edu)  
 Time:   2:30 - 3:45  TR
 Place:  1257 Comp. Sci.
Office hours: MW230-330, 6395 CS, 262-7870

 Course Description 

 Homework 1 (.ps)

 Homework 1 solution notes (.ps)

 Homework 2 (.ps)

 Homework 2 solution notes (.ps)

 Computing project, part 1 (.ps)

 Computing project, part 2 (optional) (.ps)


",course
"

 CS 726, Fall 1996  




 CS 726 (Also IE 726, Math 726, Stat 726)  
Nonlinear Programming Theory & Applications
Fall 1996


 Schedule 

  Lecture:             8:50 - 9:40 MWF, 1257 CS&S
  Course E-mail:       cs726-1list@cs.wisc.edu
  Course URL:          http://www.cs.wisc.edu/~cs726-1/ 

 Instructor: 
     Michael C. Ferris 

  Office:       6391 CS&S
  Telephone:    262-4281
  E-mail:       ferris@cs.wisc.edu
  Office Hours: 10:00 - 11:00 Monday, Tuesday and Wednesday

 Teaching Assistant: Yuh-Jye Lee
      

  Office:       1307 CS&S
  Telephone:    262-6602
  E-mail:       yuh-jye@cs.wisc.edu
  Office Hours: 12:00 - 1:00 Wednesday, 2:00 - 4:00 Thursday


 Class Text: 

   Nonlinear Programming , Olvi L. Mangasarian, SIAM Publishers,
Philadelphia 1994.




 Other Useful Texts: 

   Nonlinear Programming Theory and Algorithms ,  M. S. Bazaraa, H. D. Sherali and C. M. Shetty, 
Second Edition, Wiley, New York 1993.

  Nonlinear Programming ,  D. Bertsekas, Athena Scientific, 1996.

 General Course Information 

 Course Overview
  
 Introduction
     Linear Inequalities and Theorem of the Alternative
     Convex Sets in $R sup n$
     Convex and Concave Functions
     Saddlepoint Optimality Criteria without Differentiability
     Differentiable Convex and Concave Functions
     First Order Optimality Criteria with Differentiability
     Second Order Optimality Criteria with Differentiability
     Duality in Nonlinear Programming
     Generalizations of Convex Functions
     Other Optimality Conditions: Exact Penalty, Augmented Lagrangians,
Gradient Projection, etc. 
  
 
	Books on Reserve at Kurt Wendt Library 

 Assignments and Grading 

 Homework assignments: 35% of grade 
	1 assignment per week
   Midterm examination: (November 4, 8:50 - 9:40 AM) 25% of grade 
   Final examination: 40% of grade
 
 Homework  Assignments

 Homework 3
 Homework 4
 Homework 5
 Homework 6

 Mathematical Programming at UW 

  
        Home Page
 
	Courses



This page is updated periodically during the semester.



",course
"

 CS 726, Fall 1996  




 CS 726 (Also IE 726, Math 726, Stat 726)  
Nonlinear Programming Theory & Applications
Fall 1996


 Schedule 

  Lecture:             8:50 - 9:40 MWF, 1257 CS&S
  Course E-mail:       cs726-1list@cs.wisc.edu
  Course URL:          http://www.cs.wisc.edu/~cs726-1/ 

 Instructor: 
     Michael C. Ferris 

  Office:       6391 CS&S
  Telephone:    262-4281
  E-mail:       ferris@cs.wisc.edu
  Office Hours: 10:00 - 11:00 Monday, Tuesday and Wednesday

 Teaching Assistant: Yuh-Jye Lee
      

  Office:       1307 CS&S
  Telephone:    262-6602
  E-mail:       yuh-jye@cs.wisc.edu
  Office Hours: 12:00 - 1:00 Wednesday, 2:00 - 4:00 Thursday


 Class Text: 

   Nonlinear Programming , Olvi L. Mangasarian, SIAM Publishers,
Philadelphia 1994.




 Other Useful Texts: 

   Nonlinear Programming Theory and Algorithms ,  M. S. Bazaraa, H. D. Sherali and C. M. Shetty, 
Second Edition, Wiley, New York 1993.

  Nonlinear Programming ,  D. Bertsekas, Athena Scientific, 1996.

 General Course Information 

 Course Overview
  
 Introduction
     Linear Inequalities and Theorem of the Alternative
     Convex Sets in $R sup n$
     Convex and Concave Functions
     Saddlepoint Optimality Criteria without Differentiability
     Differentiable Convex and Concave Functions
     First Order Optimality Criteria with Differentiability
     Second Order Optimality Criteria with Differentiability
     Duality in Nonlinear Programming
     Generalizations of Convex Functions
     Other Optimality Conditions: Exact Penalty, Augmented Lagrangians,
Gradient Projection, etc. 
  
 
	Books on Reserve at Kurt Wendt Library 

 Assignments and Grading 

 Homework assignments: 35% of grade 
	1 assignment per week
   Midterm examination: (November 4, 8:50 - 9:40 AM) 25% of grade 
   Final examination: 40% of grade
 
 Homework  Assignments

 Homework 3
 Homework 4
 Homework 5
 Homework 6

 Mathematical Programming at UW 

  
        Home Page
 
	Courses



This page is updated periodically during the semester.



",course
"

CS 737 Home Page



 CS 737  
 Computer System Performance Evaluation and Modeling 


News

[Sept 24] - Assignment 1  (Due Oct 7)
       Postscript
Text

[Sept 9] - MiMic library is now available at ~cs737-1/public/MiMic. 


 Course Information

 Lecture: MWF 2:25 PM - 3:40 PM at 1325 Computer Science
 DEVise Software: 

 Home Page - 
       HTML
 User Manual - 
       Postscript
       (Please do not print this file as it contains many images and will take
       at least half an hour!)
   Initialization Instructions -
       Text
 
 MiMic Software: 

 Tutorial - 
       HTML
Postscript
 Online Help - 
       HTML
 Qnet (Example of DEVC) -
       HTML
 


 Professor: Miron Livny

     Office: 7367 Computer Sciences
     Hours:  TBA
     Phone:  262-0856
     E-mail: 
             miron@cs.wisc.edu


 Teaching Assistant:
Chee-Yong Chan

     Office: 5364A Computer Sciences
     Hours:  TR 2-3 PM
     Phone:  262-5105
     E-mail: 
             cychan@cs.wisc.edu



 Any suggestion or comment please send to 
    cychan@cs.wisc.edu



",course
"Finding Out About (UWisc CS838 - F96)

Finding Out About:  
Information Retrieval and other technologies  
for seeking knowledge
Richard K. Belew
Visiting Professor
CS838 (Lecture 2)
Univ. Wisconsin  - Computer Science Department
Fall, 1996
Tue, Thurs 8:30-9:45a
Call #20616
Room: 3345 Engr


This course is designed for students interested in understanding more about
the information retrieval and AI (esp. knowledge representation and machine
learning) techniques underlying much of the exciting new activity occurring on
the World Wide Web.  For a more complete description of the courese, you can
see:

an  abstract; 
a
syllabus of the major topics to be considered;
a  graphical ""map""of how these
are related; and
a (tentative) schedule of how the semester
will proceed.

  Course Resources 

 Readings

 
Overview - Part 1 (Postscript, 56k)
 
Overview - Part 2 (Postscript, 64k)

 
Political Infidelity image  (Postscript, 463k)


 
Assignments
 
Class Email (Digested by HyperMai)

 
Suggestions for composing your Email for this class

Related WWW resources 

Class Minutes   (Taken by students, for students)




Last modified by:
belew@cs.wisc.edu
17 Sept 96 


",course
"

CS412 - Introduction to Numerical Methods


-------------------------------------> last change:  06nov96
                           
CS412 - Introduction to Numerical Methods
This page contains information for the Fall 1996 CS412 course.
 smile 







 changes on 29oct:
assignment 5 , due 12nov96.
NOTE the CHANGED DUE DATE as well as the slightly changed points for problems
1 and 4.
  diary of 29 oct  class;
additional material on 
 residual and error, condition #   (29oct)
 changes on 04nov: Rick Carl's office hour this R is 11-12.
 list of errata for the text.
 changes on 05nov:
  diary of 31 oct  class;
  diary of 05 nov  class;
 changes on 06nov: useful email concerning
 problem 3  (05nov) UPDATED 06nov.
Since there was a question about the computational complexity of numerical
analysis algorithms, I have posted a 
 preprint, by one of the foremost
mathematicians of today, on that subject, for those interested in this tricky
topic.

least-squares solution and approximation   (05nov)



 Time and Place:  TR 12:55 - 2:15, CS&STAT 1221
 Lecturer: Carl de Boor. 
  email: deboor@cs.wisc.edu 
 Office hours: WF11-12, R14:30-15:30, 7379 CS&Stat

 FINAL EXAM: Thursday 19dec, 2:45p.  I don't intend to provide a make-up 
exam.  
TAs

The text is brand new:  Introduction to Scientific Computing , by C.
Van Loan (Computer Science Department, Cornell University), Prentice-Hall,
hence there is a growing
 list of errata for the text; also the text
may be supplemented here and there by
additional material  (12sep, 19sep,
24sep, 26sep, 01oct, 08oct, 10oct, 15oct,  17oct, 29oct).
All the  m-files mentioned in the book are
available, organized by chapter. Be aware, though, that, on the 
 ftp site 
mentioned in the book as well as here, all their names begin with a capital
letter while, sometimes, their name in the book begins with lower case
letter. 
 matlab diaries of class sessions 03sep,
05sep, 10sep, 12sep, 17sep, 24sep, 26sep, 01oct, 03oct, 08oct, 10oct, 
15oct, 29oct. 
 Present plans are to have all computing assignments in MATLAB (rather 
than Fortran or C).
   Kermit Sigmon's MATLAB Primer, 3rd Edition, is available at DoIT, for
$1.95; look for Handout #2 for CS 525 or under CS 412.
 one student's reaction to the  student 
edition of MATLAB .
  accessing matlab via telnet (as of 8sep) 
  accessing matlab via telnet from a Win95
or Win3.1 machine  
Course Overview
Course Syllabus tentative, as of 29oct
 Assignments (1, 2, 3, 4, 5), also 
answers to 2, 3, 4.  
 Here is a list of key-words.
grades 
(look for the last four digits of your student id)
 email  concerning current questions. 



Related Links
You might wish to explore the CS
Department's Home Page, and the Computer Systems Lab's Frequently Asked Questions list.
A simple  vi  
tutorial is available, as well as the more advanced vi reference
viva vi!.
There is also a good 
introduction to unix. 


",course
"

CS717 - Numerical Functional Analysis


-------------------------------------> last change:  26aug96
                           
CS717 - Numerical Functional Analysis
This page contains information for the Fall 1995 version of 
 MATH/CS 717 .
Current class notes will be available in the following
 directory , as well as in hard copy from DoIT.





classes are MWF 8:46 - 9:40.
 most recent announcement (21 dec): 
I have posted the grades. 


 Time and location: MWF 8:46-9:40, 1257 CS&Stat
Lecturer: Carl de Boor. 
  email: deboor@cs.wisc.edu 
 Office hours: M10-11, W11-12, F14:30-15:30,
 7379 CS&Stat

on-line classnotes.  0, I, II, III,
IV, V, VI, VII, VIII, IX, X,  Index.
 Assignments:  due 18sep, 25sep,
2oct, 9oct, none due 16oct, 23oct, 30oct, 06nov, 13nov, 20nov, 04dec, 11dec.
 email   concerning homework and 
other course-related questions.
 


Related Links
You might wish to explore the 
CS Department's Home Page, or the
 CS Course
Offerings.


",course
"

MA887 - Approximation Theory


-------------------------------------> last change:  29 apr 96
                           
MA887 - Approximation Theory
This page contains information for the Spring 1995 version of 
this math course.

 Notes  for the course.






",course
"

Home Page for Tony D'Silva's  cs110, C++  section


CS110M
 Instructor: Tony D'Silva 
 How to contact me: 

  email:dsilva@cs.wisc.edu 
 office: 1349, Computer Sciences and Statistics 
 phone: 262-5340 

 Office Hours:

 12:00-1:00p  MF or by appointment

 Textbook
Problem solving with C++-- the object of programming  by 
Walter Savitch


 Section Information: 

 8:00-9:15a, Sept 3 - Oct 24 , 1263 Comp. Sci. & Stat., (First
day in 226 Noland, as specified in Timetable)Lec.4
 1:00-2:15p, Sept 3 - Oct 24, 2104 Chamberlin, Lec.12 

 Computer Lab 

 Rm. 1350, Computer Science and Statistics 

 Course Information: 

 Day 1 handout
 What is 110 all about
 Tentative Syllabus for semester
 Late Policy
 Grading Criteria
 Academic Misconduct
 Handouts

 Important software :  

Introduction to Microsoft Windows
Hints for Windows Compilers
The Windows operating system
Email
Mosaic
Netscape

 C++ information: 

Introduction to Borland C++
The C++ language
The Savitch Text

 Assignments: 

 Program0 due Tuesday, Nov 5th
 Program1 due Tuesday, Nov 12 
 
 
 

Solution to quizzes

 



Last modified: Tue Nov  5 06:53:33 1996 by Anthony D'Silva

dsilva@cs.wisc.edu



",course
"

CS 766 - Computer Vision






CS 766 - Computer Vision
Fall 1995


Instructor: Chuck Dyer

Office:       6397 CSS
Telephone:    262-1965
Email:        dyer@cs.wisc.edu
Office Hours: 2:30 - 3:30 Mondays and Thursdays, and by appointment


Teaching Assistant: Bryan So

Office:       5364 CSS
Telephone:    262-5105
Email:        so@cs.wisc.edu
Office Hours: 1:00 - 2:00 Wednesdays and Fridays, and by appointment


Students


 What's New?
 General Course Information
Fundamentals of computer vision.  
First, an introduction to low-level image analysis methods,
including image formation, edge detection, feature
detection, and segmentation.  
Principles of defining modules for
reconstructing three-dimensional scene information using
techniques such as
shape from shading and depth from stereo.  
Active methods for scene recovery such as depth from focus and
occluding contour detection by viewpoint control.  
Motion detection and  analysis including tracking.
Model-based three-dimensional object recognition.  


Schedule
  1:00 - 2:15 p.m. Tuesdays and Thursdays in 1325 CSS
  Prerequisites
  CS 540, fundamentals of calculus, probability
  theory, linear algebra, and C
  Grading

Midterm Exam (Thursday, November 16): 35%
      Homework assignments: 35%
      Project: 25%
      Class participation: 5%
    
Syllabus
Required Readings

Selected parts of
      Machine Vision
      by R. Jain, R. Kasturi, and B. G. Schunck, McGraw-Hill,
      New York, 1995
      A collection of readings
from journals and conference proceedings;  
to be sold at DOIT Documentation in small batches

Supplementary Reading Sources
Online Information
Most course information will be available online at WWW URL
http://www.cs.wisc.edu/~dyer/cs766.html


 Reading Assignments to Date 

9/5: Chapters 1 and 8 of JKS, and Paper #1 (at DOIT)
9/14: Chapter 2
9/21: Chapter 3
9/28: Chapters 4 and 5
10/5: 4 papers at DOIT available as Handout #3
10/17: Chapter 6 except 6.6, 6.7, 6.8.3, and 6.9
10/19: Chapter 7.1 - 7.3, and 2 papers at DOIT available as Handout #4
11/2: 3 papers at DOIT available as Handout #5, and Chapters 9, 11.1 - 11.3
11/28: Chapter 14 (primarily 14.4)



Student Scores and Grades


 Homework Assignments

Homework #0: Image Enhancement by Histogram Modification (Optional)
Make a copy of your portrait image in ~cs766-1/public/images/
and then use xv to contrast enhance your face.  Do this by
first rotating the image, then cropping a window around your head
(say down to your shoulders), and finally interactively adjusting the
Intensity modification function in the Color Editor window under the
Windows button.  (You are also free to modify other things such as color
if you wish.)  When you have found a good grayscale transformation
save the result as a color gif image and
put it in the same directory where
the original image is.  Send me email telling me qualitatively what
intensity transformation you applied and why it improves the quality
of the image overall.  I'll then use this image in the ""photo board""
of students in the class.  Feel free to use this image in your own
Web home page as well!

Homework #1: Skeletons (Due: October 3)
  
Learn about getting started with
    the Vista vision software
Read the Introduction to Vista Programming manual
    that is available at DOIT Documentation
    Corrections to the Original Assignment
      
In Method 1, change condition 1 to be ""at least 3 ...""
	instead of ""at least 2 ..."";  this will prevent some
	types of shapes from disappearing altogether
	In Method 1, condition 2 should also count as a 0-1 transition
	the case where NW=0 and N=1
	In Method 2, the 3 x 3 matrix c for city-block distance should have
	infinity (i.e., some large constant), not 0, in the four corners
	In Method 2, the 3 x 3 matrix c for chessboard distance should have
	0, not 1, in the center position
      
TEST IMAGES to be used:
    (1) /p/vision/images/hw1/DOIT.v
    (2) /p/vision/images/hw1/hand.v
To evaluate your thinning results, you might want to
    try the following additional experiment using the output of at least
    one of your tests:  (1) Convert your skeleton image to ubyte format using
    vconvert, (2) edit (you may need to use Emacs because vi is
    not ""8-bit clean"") the header of the new
    image file so that it contains the following lines right after the
    repn: ubyte line:
	component_interp: gradient
	low_threshold: 1
	high_threshold: 2
    (3) run vlink on this file, and then (4) vsegedges.  
    Try using the results on the image hand.v, for example, to
    see how well this approach might be used to determine the direction
    the index finger is pointing (for a HCI application, say).
    Note:  The thinning method may in fact delete entirely some shapes;
    e.g., a 2 x 2 block of 1's surrounded by all 0's will disappear
    The thinning algorithm is based on the papers: (1) T. Zhang and C. Suen,
    A fast parallel algorithm for thinning digital patterns,
    Comm. ACM 27(3), 1984, 236-239, and
    (2) H. Lu and P. Wang, A comment on ""a fast parallel algorithm
    for thinning digital patterns,"" Comm. ACM 29(3),
    1986, 239-242.
    Comparison of student results of the
    different methods applied to the pointing hand image and a
    rotated version of this test image
  

Homework #2: Image Splining for Mosaics (Due: October 24)
  
Read the 3 papers:
    
E. H. Adelson et al., Pyramid methods in image processing,
        RCA Engineer 29-6, Nov/Dec 1984
      P. Burt and E. H. Adelson, The Laplacian pyramid as a compact
        image code, IEEE Trans. Comm. 31, 1983, 532-540
      P. Burt and E. H. Adelson, A multiresolution spline
        with application to image mosaics, ACM Trans. Graphics
2, 1983, 217-236
      
Hints and FAQs
Some splined images
	produced by students in the class
  

Homework #3: Segmentation by Snakes (Due: November 9)
  
Read the 2 papers:
      
M. Kass, A. Witkin and D. Terzopoulos,
      Snakes: Active contour models,
      Int. J. Computer Vision 1,
      1988, 321-331
      D. Williams and M. Shah, A fast algorithm for active contours
      and curvature estimation, Computer Vision, Graphics, and Image
      Processing: Image Understanding 55, 1992, 14-26
      
Hints and FAQs


Homework #4: Your Own Project (Due: December 18)
  
 Student Project Titles and Abstracts
 See Supplementary Readings
    for some additional papers that might help you select a topic. 
     Student projects done in Stanford vision course



 Computer Accounts

Accounts
    Course accounts are on the Sun Sparcstations called sun1 - sun36
    in rooms 1358, 1363 and 1368.  Each account has a large disk space quota
    of 50MB so you can store images for homeworks and
    your project.  Be sure to delete old images and compress others
    (see gzip(1)), however,
    in order to save space.  
    Email
    Email sent to cs766-1list
    goes to everyone in the class including the instructor and TA
    Printers
    To print images you should use one of the laserprinters,
    laser1 - laser4, which are located
    in room 1359.  Alternatively, the generic printer name laser will
    send output to one of the four printers with the shortest queue.  Caution:
    Before sending images to the printer, be sure to check the queue;  if
    there are a lot of jobs being printed it is bad manners to send images
    to be printed because they take so long to print.  Be considerate!
Vision Software

 Vista
        The Vista
	programming environment will be used in the homework assignments.
	The code is located in the directory /p/vision/ip-tools/vista/
	Man pages are in /p/vision/ip-tools/vista/man/
	and executables are in /p/vision/ip-tools/vista/bin/
 Xv
xv(1) is an interactive image display program for the X
	window system that is very useful for displaying images in a
	variety of formats.  

	 ImgStar
	70 basic image processing operations invoked using Unix-like command lines.
	Code, executables and manual are in /p/vision/ip-tools/imgstar/
 Khoros
	The Khoros image processing software development environment 
	provides a set of basic image processing modules and a graphical
	programming language interface for rapid prototyping of simple
	image processing algorithms.  The code is located in the directory
	/p/vision/ip-tools/khoros /p/vision/ip-tools/khoros/bin/cantata
	is the executable that starts up the interactive environment.  

	 Netpbm
	A toolkit for conversion of images between a large variety of
	different formats.  Based on the Pbmplus package.  Man pages are in
	/p/vision/ip-tools/man/ and executables are in 
	/p/vision/ip-tools/bin/
 Matlab
Matlab(1) is a numeric computation and visualization
	environment.  Signal processing
	and image processing toolboxes are especially relevant.
      
Test Images
      Most test images will be put in the directory
      /p/vision/images/ although they may require format
      conversion to be used.  Some other images may be put in
      ~cs766-1/public/images/  Numerous image databases are also
      accessible via the WWW; for example, see the
      collection of test images at CMU


 Examination

Examination
Solution
 The Exam will be held on Thursday, November 16 from 12:45 pm to 2:15 pm in the regular classroom, 1325 CS.  Note the early
  starting time!   The exam will cover topics up through shape-from-shading,
  including readings in the textbook, papers sold through DOIT, and
  homework assignments.  You may bring into the exam one (1) 8.5"" x 11""
  sheet of paper with any notes you want on both sides.  The exam will
  focus on main ideas and algorithms, not proofs.  See old exams below for
  the types of questions that will be asked.
   Old Exams
   
Exam 1 - Spring 1994
Exam 2 - Spring 1994
Exam 1 - Spring 1992
Exam 2 - Spring 1992



 Links of Interest

Computer Vision Home Page (highly recommended!)
  Chuck Dyer's Links of Interest
B. Wandell's List of Useful Numbers in Vision Science
HDTV
    
Grand Alliance HDTV System Specification
Advanced Television Systems Committee (ATSC)
ATSC Documents in postscript

SPIE Optical Science and Engineering Library


 Vision Demos and Projects

Apple's Quicktime VR image mosaicing product
IBM's PanoramIX image mosaicing
An Example of Panoramic Image Mosaicing
DECface talking synthetic face
CMU Video-Rate Stereo Machine
CMU Virtualized Reality Project
IBM's QBIC Image Database Project
Miscellaneous Computer Vision Demos


 Other Computer Vision and Related Courses

CS 585 and CS 835 at Boston University
  Cardiff University (UK)
Khoros Digital Image Processing Online Course
Royal Institute of Sweden
Stanford University
University of Virginia
University of Washington




",course
"


CS 302 Fall 1996 - Section 2


CS 302 Fall 1996 - Section 2
Algebraic Language Programming - C++
Instructor: Dave Zimmermann
Email: dzimm@cs.wisc.edu
Class Meeting Time/Place: 9:55-10:45 MWF, 455 Noland
Office: CS 1306
Office Phone: 262-6601
Office Hours: 2:30-3:30 T, 11:30-12:30 Th



ANNOUNCEMENTS
Program 4 due on Wednesday, October 23
Program 5 ready and due on Friday, November 1




General Course Information
CS 302 Home Page
Course Objectives
Vectra Lab
CS 302 Consultants
Syllabus
Working from Home


Class Handouts
Programs
Exams and Quizzes
Lecture Notes
Greg Sharp's Style Guide


Grades (Referenced by last 4 digits of your ID number)
Quizzes
Programs
Exams 


Policy Information
Email Policy
Grading Policy
Late Policy
Academic Misconduct Policy


Text

	Problem Solving with C++ - The Object of Programming by Walter Savitch
Addison-Wesley Publishing Company, 1996.

	List of known errata




Last modified: 
Sat Aug 31, 1996, 
Dave Zimmermann
(dzimm@cs.wisc.edu)

Based on Greg Sharp's cs302 home page


",course
"

 CS 525 - Linear Programming Methods 



 CS 525 - Linear Programming Methods 
 General Course Information 


This course is offered each Fall and Spring semester.



 CS 525 Pages of the Various Instructors 

 
        Michael C. Ferris    (Spring '97)
   
        O.L. Mangasarian  (Fall '96)
 

 Graduate MP Courses at Wisconsin 


  
	CS 719 Network Flows 
  
	CS 720 Integer Programming 
  
	CS 726 Nonlinear Programming Theory 
  
	CS 730 Nonlinear Programming Algorithms 
  
	CS 733 Computational Large Sparse Systems 


 
Last modified: January 25, 1996




",course
"

 CS 719, Spring 1996  




 CS 719: Network Flows
Spring 1996


 Schedule 

  Lecture:             8:50 - 9:40 MWF, 1263 CS&S
  Course E-mail:       cs719-1list@cs.wisc.edu
  No class:            Friday, February 23, 1996.

 Instructor: 
     Michael C. Ferris 

  Office:       6391 CS&S
  Telephone:    262-4281
  E-mail:       ferris@cs.wisc.edu
  Office Hours: 11:00 - 12:00 Mondays and Wednesdays

 Teaching Assistant: 
     Lee Yuh-Jye 

  Office:       1307 CS&S
  Telephone:    262-0662
  E-mail:       leey@cae.wisc.edu
  Office Hours: 2:30 - 4:00 Tuesdays and Thursdays



 Required Text: 

   Network Flows,  Ravindra K. Ahuja, Thomas Magnanti and James Orlin, Prentice Hall. 

 Other Useful Texts: 

   Linear Programming,  V. Chvatal, Freeman, 1980. 

   Linear Network Optimization,  D. Bertsekas, MIT Press, 1991. 



 General Course Information 

 Course Overview
  
 Paths, Trees and Cycles (Data Structures)
     Shortest Paths
     Max Flow
     Min Cost
     Network Simplex Method
     Generalized Flows (Convex, equilibria)
     Lagrangian Relaxation
     Multicommodity Flows
     Applications
  
 
      Prerequisite CS 525 or Knowledge of Linear Programming

 Grading 

 Homework assignments: 40% of grade 
   Project assignment: 
  
 20% of grade 
     Due: Wednesday, May 1, 1996, in class.
  
 Final examination:
  
 40% of grade 
     Monday, May 13, 1996, 10:05-12:05 in CS 1289.
     Closed book, except 2 sheets of paper allowed.
     
        Representative Questions


 Assignments 

 
        Homework 5 (due Friday March 1, 1996).
   
        Homework 6 (due Friday March 8, 1996).
   
        Homework 7 (due Friday March 22, 1996).
   
        Homework 8 (due Friday March 29, 1996).
   
        Homework 9 (due Monday April 8, 1996).
   
        Homework 10 (due Monday April 15, 1996).
   
        Homework 11 (due Friday April 26, 1996).
   
        Homework 12 (due Friday May 3, 1996).
 
 Computing Information 



   Unix Orientation sessions, for first-time unix users and
   novice Unix users who have not previously used the CSL Unix
   workstations will be held:
	Monday - Thursday the first week of classes:
		4 and 6 pm
		room 1221 CS&S
	Monday - Thursday the second week of classes:
		4 pm
		room 1221 CS&S
   Orientation sessions last 60-90 minutes.

 
	Introduction to UNIX at UW


   To set up your login so that you have access to GAMS:
   > cp ~cs719-1/public/.cshrc.local ~/.cshrc.local
   > source ~/.cshrc.local
   This alters your path and sets up the GAMS directory appropriate
   for solaris machines on it.

 Course Machines SOL lab, 1370 CS&S
 
 Mathematical Programming at UW 

  
        Home Page
 
	Courses




 This page was updated January 22, 1996



",course
"

 CS 733, Spring 1996  




 CS 733 (Also ECE and MATH):
Computational Methods for Large Sparse Systems
Spring 1996 


 Schedule 

  Lecture:             9:55 - 10:45 MWF, 1263 CS&S
  Course E-mail:       cs733-1list@cs.wisc.edu
  No class:            Friday, February 26, 1996.

 Instructor: 
     Michael C. Ferris 

  Office:       6391 CS&S
  Telephone:    262-4281
  E-mail:       ferris@cs.wisc.edu
  Office Hours: 11:00 - 12:00 Mondays and Wednesdays

 Teaching Assistant: 
     Lee Yuh-Jye 

  Office:       1307 CS&S
  Telephone:    262-0662
  E-mail:       leey@cae.wisc.edu
  Office Hours: 2:30 - 4:00 Tuesdays and Thursdays

 Recommended Textbooks: 

   Matrix Computations,  G. Golub and C. Van Loan, Johns Hopkins
University Press, Second Edition, 1991.

  Direct Methods for Sparse Matrices,
I.S. Duff, A.M. Erisman and J.K. Reid, 
Oxford Science Publications, 1990.

  Finite-Dimensional Vector Spaces,
P.R. Halmos,
Springer Verlag, 1974.


 General Course Information 

 Course Overview
  
 Introduction: storage schemes.
     Gaussian elimination: dense, error analysis, sparse.
     Local pivotal strategies.
     Matrix modifications.
     Iterative linear solvers.
     Sparse least squares.
     Sparse nonlinear equations.
     Optimization applications.
     Parallel techniques.
     Eigenvalue and eigenvectors.
  
 Prerequisite (CS 367, 412 and Math 340) or
       (CS 367 and ECE 416) or
       (Consent of Instructor).
 
 Grading 

 Homework assignments: 40% of grade 
   Project assignment: 
  
 30% of grade 
     Due: Wednesday, May 1, 1996, in class.
  
 Final examination:
  
 30% of grade 
     Monday, May 13, 1996, 2:45-4:45 in CS 1263.
     Closed book, except 2 sheets of paper allowed.
     
        Representative Questions


 Assignments 

 
        Homework 4 (due Monday February 26, 1996).
   
        Homework 5 (due Friday March 1, 1996).
   
        Homework 6 (due Friday March 8, 1996).
   
        Homework 7 (due Friday March 22, 1996).
   
        Homework 8 (due Friday March 29, 1996).
   
        Homework 9 (due Monday April 8, 1996).
   
        Homework 10 (due Monday April 15, 1996).
   
        Homework 11 (due Friday April 26, 1996).
   
        Homework 12 (due Friday May 3, 1996).
 
 Other Handouts 

 
        IEEE Arithmetic handout.
   
        Sparse QR handout.
 
 Computing Information 

 Course Machines SOL lab, 1370 CS&S
  

   Unix Orientation sessions, for first-time unix users and
   novice Unix users who have not previously used the CSL Unix
   workstations will be held:
	Monday - Thursday the first week of classes:
		4 and 6 pm
		room 1221 CS&S
	Monday - Thursday the second week of classes:
		4 pm
		room 1221 CS&S
   Orientation sessions last 60-90 minutes.

 
	Introduction to UNIX at UW
  
        Instructions to set up MATLAB

 Mathematical Programming at UW 

  
        Home Page
 
	Courses



 This page was updated January 22, 1996



",course
"

 CS 701, Fall 1996  




 CS 701: Construction of Compilers
Fall 1996


 Schedule 

  Lecture:      9:30 - 10:45 TuTh, 1263 CSST

 Instructor: 
     Charles N. Fischer 

  Office:       5397 CS&S
  Telephone:    262-6635
  E-mail:       fischer@cs.wisc.edu
  Office Hours: 1:00 - 2:00 Mondays, Wednesdays and Fridays, or by appointment

 Teaching Assistant:  
     Krishna Kunchithapadam  


  Office:       1351 CS&S
  Telephone:    263-1938
  E-mail:       krisna@cs.wisc.edu
  Office Hours: 11:00 - 12:00 Tuesdays and Thursdays, or by appointment

 
 Programming Assignments and Homeworks  
 
 Readings  

 
 What's New (Check this regularly)
  General Course Information 

  Course Overview 
  Key Dates 
  Grades 

 
 Examinations  

 
 Links of Interest 





",course
"

CS 302 Fall 1996 - Sections 6 and 9


CS 302 Fall 1996 - Sections 6 and 9
Algebraic Language Programming in C++

Instructor: Greg Sharp
Email: greg@cs.wisc.edu
Office: CS&St 1307
Office Phone: (608)262-6602
Office Hours: 
6:00pm-8:00pm Mon and 12:00pm-1:00pm Wed (or by appt.)

Grader: Krishna Kunchithapadam
Email: krisna@cs.wisc.edu


General Course Information


CS 302 Home Page
Course Objectives
Vectra Lab
CS 302 Consultants
Syllabus
Course Difficulty
Working from Home


News


Startup Information
Class Notes
Homework
Exams and Quizzes
Style Guide
Email Archive


Policy Information


Email Policy
Grading Policy
Late Policy
Academic Misconduct Policy (YOU MUST READ THIS)


Text
Problem Solving with C++: The Object of Porgramming
Walter Savitch
Addison-Wesley Publishing Company, 1996.
Please see this list of known 
errata


Last modified: 
Mon Sep  2 16:02:54 CDT 1996
by Greg Sharp

greg@cs.wisc.edu
| http://www.cs.wisc.edu/~greg/greg.html



",course
"

CS302-13:  Class Home Page, Fall '96




CS302
    : Algebraic Language Programming in C++
Section 13, Fall 1996
TA: H. Chad Lane
[hcl@cs.wisc.edu]


Announcements:

 Program 7 is on-line and due Tues Nov 12. 
   IMPORTANT!  You need to get the 
       new version of tribble.h (as of 11/4) before you compile.  The 
       problem was that the enumerated types were not recognized outside of
       the class.  They must be declared inside the public section of the class.
       As a result, the private section at the top needed to bumped down to the
       private section at the bottom.  This is shown in the new version.
       Also note the definition of the RandomIntInRange() is
       defined in-line so that you will not need a corresponding 
       function body in tribble.cpp.  You can just call it from within the
       class, and it will work.
 In the file ""prog06.cpp"" I forgot to change the enumerated
     type values to uppercase.  You need to do this before you
     compile everything.  I have changed the 
     on-line copy of prog06.cpp if you just want to overwrite your
     obsolete copy.  Also, it used to say ""#include prog05.h"", so I changed
     it to ""prog06.h""
   You might also want to check the help link below again... something
       was added.
   Here are some Comments and
       Suggestions for Program 6.  
   It is very important that you use the same name throughout
       program 6 for the project parts (name of the project, 
       directory name, file names, etc.).  I updated the program
       description to be consistent with ""prog06.""  If you saw
       the old version (that used ""prog05""), please make sure
       you are consistent with your naming.  The only discrepency
       is with the sample run in Chris Weaver's public directory
       where it is called prog05, but this shouldn't matter for 
       your program (it is just a sample).
   Program 6 is on-line and ready.  It is crucial that you read
       the entire assignment and understand class basics before you
       attempt it, and that you get an early start.  It is not 
       hard, but will require some time to piece everything 
       together.  Bring questions to class on Tuesday!
   About midterm grades for freshmen...  you either got a B (which
     means your doing fine), or a D (which means you're not doing so
     great).  It is a thumbs up or down grade, and means nothing more
     than that.  If you're not a freshman, disregard this.


Stuff For, From, and About class:

 Tentative semester syllabus/reading assignments
 Programming assignments
 Handouts
 Preparing for Quizzes and Tests
 Old Quizzes & Tests w/solutions


Course Information & Policies:

Text: 
Problem Solving with C++:  The Object of Programming, 
  Walter Savitch, 
  Addison Wesley Publishing Company, Inc., 1996.
  We meet in B139 Van Vleck on T Th, 1:00pm - 2:15pm.          
  Policies and Administrative Information:
  
Grading Policy
Late Policy
E-mail Information
Attendance Policy
Academic Misconduct




  Links to other 302 information:

 
       Introduction to Microsoft Windows (Do this first)
   
       Introduction to Borland C++ 4.5 (Do this second)
   CS302 home page
 
       The Vectra Lab
 Source code from the text
 Who are
  consultants and what do they do?
 Extra C++ 
  reference material
 CS302 FAQ (many
       of your questions will be answered here)
   Working from home
 
       Some very Sharp lecture notes
 
       A very Sharp style guide


Last Modified:


Wed Oct 30 16:00 CDT 1996
by H. Chad Lane  
",course
"

 CS 536, Fall 1996  




 CS 536: Introduction to Programming Languages and Compilers
Spring 1996


  Story of the Month  
(new for October)

 Schedule 

  Lecture:     9:30 - 10:45 TuTh, 1221 Comp Sci & Stat
  Recitation:  2:30 -  3:20 Tu,   107 Psychology

 Instructor: 
     Susan Horwitz 

  Office:       5391 CS&S
  Telephone:    262-7946
  E-mail:       horwitz@cs.wisc.edu
  Office Hours: Tuesday  3:30 - 4:30
                Friday 1:30 - 2:30
		or by appointment

 Teaching Assistant:
     Rahul Kapoor

  Office:       3360 CS&S
  Telephone:    262-9275
  E-mail:       rahul@cs.wisc.edu
  Office Hours: Monday and Wednesday 3:45 - 5:15
                or by appointment

 Texts on Reserve at Wendt Library: 

   Compilers Principles, Techniques, and Tools, Aho, Sethi, and Ullman.
  Crafting a Compiler, Fischer and LeBlanc.



 
 What's New (Check this regularly)
  General Course Information 

  Course Overview 
  Key Dates 
  Information about assignments, exams, and grading (including late policy) 

 
 Getting Started 
 
 Readings  
 
 Programming Assignments and Homeworks  
 
 Examinations  
 
 Lecture Notes  
 
 Useful Programming Tools 
 
 Grades 
 
 Email 
 
 Links of Interest 





",course
"

Home Page for Sid Hummert's  cs110, C++  sections


CS110
 Instructor: Sid Hummert 
 How to contact me: 

 email:  hummert@cs.wisc.edu 
 office: 1307, Computer Sciences and Statistics 
 office phone: 262-6602
 home phone: 276-4477

 Office Hours:

Monday   12:15-1:15
Thursday  3:00-4:00

 Announcements: 


 Textbook
Problem solving with C++-- the object of programming  by 
Walter Savitch


 Section Information: 

 9:55-10:45a, MWF, Psych 138, Lec. 6
 11:00-11:50a, MWF, Psych 130, Lec. 10 

 Grades 
 Computer Lab 

 Rm. 1350, Computer Science and Statistics 

 Course Information: 

 Day 1 handout
 What is 110 all about
 Tentative Syllabus for semester
 Late Policy
 Grading Criteria
 Academic Misconduct
 Viewgraphs
 Important software :  

Introduction to Microsoft Windows
Hints for Windows Compilers
The Windows operating system
Email
Mosaic
Netscape

 C++ information: 

Introduction to Borland C++
The C++ language
The Savitch Text

 Assignments: 

 Program 0 due Wed, Nov. 6
 Program 1 due Fri, Nov. 15



",course
"

CS132 Info


CS 132 Info for Section 358




TA Name: Jon Bodner
Sections: 358 (MW 6:10-7:25)
Office Hours: Monday 12:30-1:30 and Thursday 1:30-2:30
Office Number: 1308, Computer Sciences and Statistics (down the hall from DoIT)
Phone: 262-6602
E-Mail: jonb@cs.wisc.edu



Here are a few things to keep in mind:
If you need a copy of the lab guide for my sections, click here to get one, then choose Print from the File Menu and click OK.

If you have any questions, please stop by during my office hours or send me E-Mail.

Grades for my section are available by clicking here.


Jon Bodner/jonb@cs.wisc.edu/1326 Mound St. #1, Madison, WI 53715
Last Modified: September 15, 1996



",course
"


 CS 540 - Intro to AI (Kunen's Section) 


 CS 540 - Introduction to Artificial Intelligence 
 Notice 
The information here is for Spring, 1997.
Further details about the course
will appear here later.



 Instructor: 
Ken Kunen

Office:       6385 CS & Stats Building
Telephone:    263-2874
Email:        kunen@cs.wisc.edu
Office Hours: ????, or by appointment, or by email.

 Grades 
There will be four programming assignments, counting 10%
each, and three exams, counting 20% each; the third
exam will be at the scheduled time and place for the final.
Programs may be turned in any time (until midnight) on the
day due.
Late assignments will loose 5% for each day late.


 Topics Covered 
The following order of topics isn't entirely logical, but
is designed so that the topic for each programming assignment
is discussed before the program is due.


 Introduction to Lisp (Program 1)
 Searching and Game Playing (Program 2)
 Introduction to Prolog
 Natural Language Understanding (Program 3)
 Learning and Neural Networks (Program 4)
 Logical Deduction
 Planning 
 Reasoning with Uncertain Knowledge

 Lisp Information 
Since Lisp is used in a lot (not all!) of AI programming, the course
will begin with a discussion of COMMON Lisp.  It would probably be useful
to have some Lisp reference available to supplement the lectures
and the on-line help available within lisp itself.  There are many
paperbacks available, most of which are probably ok.
 
  I like Common LISPcraft by Wilensky.
   Another possibility: 
      The ANSI Common Lisp Book by Graham.
       
       Code used in the book is on line.
 The Ultimate Lisp Reference: Steele's Common
        Lisp: The Language (2nd Edition) , 1029 pages.  Also
      
         available on line.
 
       Click here 
       for more information on using Common Lisp on the Suns

 Additional Information

 Textbook: 
Artificial Intelligence: A Modern Approach
       by Russell and Norvig
   Class time: 8:30 - 10:45 TR (Lec. 1) and 11:00 - 12:15 TR (Lec. 2)
      in 1325 CS.
   Recitation sessions:  2:30 - 3:45 T
      in 2305 Engr (Lec. 1) and 4:00 - 5:15 T in 121 Psych (Lec. 2).
      In these, no essentiallly new material will be presented.
       I'll answer questions, give hints for
       programming assignments, and review for exams.
       They will usually last only 50 minutes.  Since I am teaching
       both sections, you may attend a recitation section which
      is different from your lecture section.
   The course directory is /p/course/cs540-kunen/public 
   An alpha-beta problem from a previous exam is on the course
      directory (alpha_beta.ps).  
      click here to see it on line.
   A best-first-search problem from a previous exam is on the course
      directory (astar.ps).  
      click here to see it on line.


 Exams from  Fall, 1995 (postscript) 

   Exam 1
   Exam 2
   Exam 3 (Final)
   Some still older exams are in the course directory.


 Last Changed: November 4, 1996 by kunen@cs.wisc.edu 



",course
"

CS/ECE 752 Fall 1994-1995



CS/ECE 752: Advanced Computer Architecture I
Fall 1994-1995 Offering


 
       Course Information 
 Instructor: 
       Mark D. Hill

Office:         6373 Comp Sci & Stat
Email:          markhill@cs.wisc.edu
Office hours:   Tuesday 10:30 - 11:30 
                Friday 1:15 - 2:15 or by appointment

 TA:  Mo Shen

Office:         1351 Comp Sci & Stat
Phone:          263-1938
Email:          mshen@cs.wisc.edu
Office hours:   Monday 9:30 - 10:30 
                Thursday 4:00 - 5:00 or by appointment


 Table of Contents

 What's New
 Reader
 Lecture Notes
 Homeworks
 Project
 Miscellanea

What's New

 
       Giving Talks

Reader

 
       Reader 1 Table of Contents (get full papers from DoIT)
   
       Reader 2 Table of Contents (get full papers from DoIT)
   
       Reader 3 Table of Contents (get full papers from DoIT)
   
       Reader 4 Table of Contents (get full papers from DoIT)


     Lecture Notes

 
       Introduction (Chapter 1)
 
       Performance & Cost (Chapter 2)
 
       Instruction Sets (Chapter 3)
 
       Caches (Chapter 6 Part A)
 
       Memory (Chapter 6 Part B)
 
       [Talluri & Hill 1994]
 
       Basic Pipelining (Chapter 4 Part A)
 
       Basic Pipelining (Chapter 4 Part B)
 
       Instruction Level Parallelism
       (Chapter 5 Part A)
 
       Instruction Level Parallelism
       (Chapter 5 Part B)
 
       Input/Output (Chapter 7)
 
       Interconnects (Chapter 8)
 No notes for Parallel Processing (Chapter 9).

Homeworks

 Homework 1: 
       assignment
  & 
       solution
 Homework 2: 
       assignment
  & 
       solution
 Homework 3: 
       assignment
  & 
       solution
 Homework 4: 
       assignment
  & 
       solution
 Homework 5: 
       assignment
  & 
       solution

Project

 
       Assignment
 Proposals due November 7 in class
   Talks December 5-14 in class
   Report due December 19 at noon

Miscellanea

 
       Giving Talks
 
       Spring 1993 final
 
       Spring 1993 project assignment
 
       Spring 1993 midterm
  (using first edition of Hennessy & Patterson)
   
  Architecture Qualifying Exams (a source of hard questions)
   
  Computer Architecture Seminar
 
  Wisconsin CS's Computer Architecture Group
 
  World-Wide Computer Architecture Information




",course
"


 CS110 Section 8 


  CS110 Section 8  
 Instructor 

 Michael Birk
   Email: mbirk@cs.wisc.edu
 Office: 1302 Comp Sci & St
   Phone: 262-6600 (office), 251-7734 (home)
   Office Hours: Tue 4:30 pm, Wed 2:30 pm, Thu 1:00 pm
       (in my office or the lab), or by appointment

 Assignments 

 Program 1 - due Tue 11/12/96
   Program 0 - due Tue 11/5/96

 Administrative Information 

 Text: Problem Solving with C++: The Object of Programming,
       Walter Savitch, 1996
   Room & Time: 115 Psychology, 9:30-10:45 Tuesday & Thursday
   Lab: 
       1350 Comp Sci & St (""The Vectra Lab"")
 Syllabus
 Computation of Grades
 Grading Standards
 Late Assignments Policy
 Handin Procedures
 Cheating and Academic Misconduct
 Lab Consultants


 Other Links 

 CS110 Home Page
 CS302 Home Page
 
       An Introduction to Microsoft Windows
 
       An Introduction to Borland C++
 
       A Tutorial on Using the Debugger



 mbirk@cs.wisc.edu 


",course
"


 CS302 Section 12 


  CS302 Section 12  
 Instructor 

 Michael Birk
   Email: mbirk@cs.wisc.edu
 Office: 1302 Comp Sci & St
   Phone: 262-6600 (office), 251-7734 (home)
   Office Hours: Tue 4:30 pm, Wed 2:30 pm, Thu 1:00 pm
       (in my office or the lab), or by appointment


 Announcements 

 Test cases
       for Program 6 now available.
   Dice code discussed in class
   Class Ranking by last four digits of
       student ID number
   Past Exams now online:
       Spring 96,
       Fall 95, and
       Spring 95
 Notes on the Hangman
       Assignment (Program 3)
   Exam I - Monday, October 14, 7:15-9:15, 1325 Comp Sci (same
       room as the lecture)
   Instructions for formatting
   Syllabus for first eight weeks
       is now available (second eight weeks coming soon)
   Instructions
       on printing your program's output on a computer outside of the lab.
   Late policy finalized
   Room change: As of 9/10/96, we will meet in 1325 Comp Sci.

 Assignments 

 Program 0 - due Tue 9/10/96
   Program 1 - due Tue 9/17/96
   Program 2 - due Tue 9/24/96
   Program 3 - due Tue 10/8/96
   Program 4 - due Tue 10/22/96
   Program 5 - due Tue 11/5/96
   Program 6 - due Tue 11/12/96

 Administrative Information 

 Text: Problem Solving with C++: The Object of Programming,
       Walter Savitch, 1996
   Room & Time: 1302 Comp Sci & St, 11:00-12:15 Tuesday & Thursday
   Lab: 
       1350 Comp Sci & St (""The Vectra Lab"")
 Syllabus
 Computation of Grades
 Grading Standards
 Late Assignments Policy
 Handin Procedures
 Cheating and Academic Misconduct
 Lab Consultants


 Other Links 

 CS302 Home Page
 
       An Introduction to Microsoft Windows
 
       An Introduction to Borland C++
 
       A Tutorial on Using the Debugger



 mbirk@cs.wisc.edu 


",course
"

cs302-1, cs302-22





CS 302, Sections 1 and 22
T.A. Dave Melski
These pages change frequently.  Press the reload button daily.


Getting Started:  We already have stuff on the assignments page.  If you are uncomfortable with the computer and
the software, this page may have some helpful links.

TA info:

 Instructor: David Melski
 Office: 5390 Computer Science and Statistics (5th floor)  
   Phone: 262-0018
   Office Hours: M 9:50-10:50, 1:00-2:00, W 9:50-10:50
   Email: melski@cs.wisc.edu or click
       here. (No attachments please).

Section info:

 Section 1 meets at 8:50 MWF in 240 Noland.
   Section 22 meets at 11:00 MWF in 134 Psychology. 
   Text: Problem Solving With C++: The Object of Programming, Walter Savitch, Addison Wesley
Publishing, 1996.
   CS 302: General stuff for all of 302 (using the lab, using Windows, using
Borland, some C++ reference material, etc.). 
   This is a rough syllabus for sections 1 and 22.
   Email archive for section 1.
   Email archive for section 22.

Policy info:

 Academic Misconduct (must
       read).  The rule of thumb is, ``Don't share code.''
   Consultants are there to
       help.
   Grading.
   Late Work.
   Email should be checked often.

Essential links:

 Assignments and solutions.
   Handouts.
   A list of CS302 tutors is available here.


Last modified: Tue Oct 22 14:00:17 1996 by David Melski

melski@cs.wisc.edu



",course
"

Home Page - CS302 - Section 4



CS 302
  Fall 1996 - Section 4

Algebraic Language Programming in C++
Instructor:
  Milo M. Martin
(milo@cs.wisc.edu)  
Time and Location:  1:20-2:10 pm, MWF, 130 Psychology
Instructor: Milo M. 
Martin
Email: 
milo@cs.wisc.edu

Office: CS&St 1301
Office Hours: 2:45-3:45 pm, Tuesday/Thursday or by 
appointment
Office Phone: (608) 262-6600

Announcements
This page changes frequently, it is your responsibility to 
check this page often. 

 November 6, 1996:  Quiz 4
(take-home) will be given out in class today and has been placed on
the homepage.  
 November 5, 1996:  I added the file Using Projects to the program 6
page and the homepage. 
 November 2, 1996:  The room for the test has been scheduled
for 1263 CS.  (On Wednesday, November 13, 7:15-9:15 pm.) 
 October 31, 1996:  I updated the current grades.  It now has
everything through quiz 3.  Please check this to make sure it is
accurate. 
 October 30, 1996:  I added links to a couple of pages with
information about HTML, the language used for web pages.  The links
are below in the section titled Other Documents.
 October 30, 1996:  Program 6 is available and is due on
Friday, November 8.  There will be a ``take home'' quiz due Monday,
November 11. Reminder: Exam 2 is on Wednesday, November 13.

General Class Information

Current Class Grades
General Information Sheet
Turning in Assignments
Syllabus
Code Style Guide
CS 302 Home Page
Vectra Lab
CS 302 Consultants
Fall 1996 Consulting Schedule
Academic Misconduct Policy


Class Documents

 The final BankAccount class code: 
BankAccount.cc -
BankAccount.h -
main.cc -
postscript
 BankAccount class code - 
BankAccount2.cc -
postscript
 BankAccount struct code - 
BankAccount1.cc -
postscript
 minmax.cc - Example code to find
the minimum and maximum in a list of numbers, in this case entered
from stdin.

   form.cc - Code which creates form
letters from data specified in files.  Uses file IO and the
open_file function introduced in class.

   Call-by-reference in-class example
  Functions to ask for user input with
prompts (call-by-reference version)
  Functions to ask for user input with
prompts (call-by-value version)

Other Documents

 
	A Beginner's Guide to HTML - the standard introduction to
the HTML language.
   HTML 3.2 reference guide. - a reference guide for the latest HTML standard release. 
   The Good Times Virus Hoax
 ACM - Code of Ethics and
Professional Conduct

Assignments

Class Survey Questionare - 
Required - Due Monday, September 9, 1996
  Program 0
     - Due Wednesday, September 11, 1996
  Program 1
     - Due Wednesday, September 18, 1996 
  Program 2
     - Due Wednesday, September 25, 1996
  Program 3
     - Due Friday, October 4, 1996
  Program 4
     - Due Monday, October 21, 1996
  Program 5
     - Due Wednesday, October 30, 1996
  Program 6
     - Due Friday, November 8, 1996
  Program 7  
     - Due TBD
  Program 8 
     - Due TBD
  Program 9 
     - Due Wednesday, December 11, 1996


Quizs

Quiz 1 - 
      Solutions - 
      Scores
       - Monday, September 23, 1996
  Quiz 2 - 
      Solutions - 
      Scores
       - Wednesday, October 2, 1996
  Quiz 3 - 
      Solutions - 
      Scores
      - Monday, October 28, 1996
  Quiz 4 - 
      Solutions - 
      Scores
      - Take home quiz due Monday, November 11, 1996

Exams

Exam 1 -
      Solutions - 
      Scores
       - Wednesday, October 9, 1996
  Exam 2 -
      Solutions - 
      Scores
       - Wednesday, November 13, 1996
  Exam 3 -
      Solutions - 
      Scores
       - Tuesday, December 17, 1996

Textbook

Problem Solving 
with C++ - The Object of Programming by Walter Savitch
Addison-Wesley Publishing Company, 1996.
List of known errata



Milo M. Martin

  (milo@cs.wisc.edu)



",course
"

Home Page for Martin Reames's CS 302 class




CS 302, Sections 33 & 37
Algebraic Language Programming
Spring 1997
Martin Reames, Teaching Assistant


What's New 

 Absolutely nothing


Everyday information

CS302 Class Information Pages
Common Programming
Mistakes

Archive of  
section 33 and section 37
class mailing lists (most messages are sent to both lists).


 Semester Calendar 

 Program 0 due Tuesday, 
January 28
 Program 1 due Tuesday,
February 4
 Program 2  due Tuesday, 
February
 Program 3  due Thursday,
February
 Program 4  due Thursday,
March
 EXAM 1 : Tuesday, March ?, 7:15-9:15 p.m., 1257 CS & ST
 Program 5  due Tuesday,
March
 Program 6  due Thursday, April
 Program 7  due Tuesday, April
 EXAM 2 : Tuesday, April ?, 7:15-9:15 p.m., 1257 CS & ST
 Program 8  due Thursday, April
 Program 9 due Thursday,  May

 FINAL EXAM : Thursday, May 15, 10:05a.m. - 12:05p.m., place
to be announced



Course Details

 How to contact me: 

 email: mreames@cs.wisc.edu
 office: 1345 Computer Sciences and Statistics, 1210 W. Dayton St. 
 phone: 262-1012

 Office Hours:

 TBA
   or by appointment (talk to me after class or send me email)

 Textbook
Problem Solving with C++: The Object of Programming by Walter Savitch


 Section Information: 
 Section 33 

 9:30a-10:45a TR
   379 Noland

 Section 37 

 1:00p-2:15p TR
   379 Noland

 Computer Lab 

  Rm. 1350, CS&ST, containing HP Vectra's running MS Windows and
Borland C++ 4.52

Additional Course Information

 Tentative Syllabus for semester
 Extra C++ material
 Late Policy
 Grading Criteria
 Academic
Misconduct Rule of thumb: ""Do not share code for assigned work in any
form"" 



Former cs302 students who have made it big
Todd Thiel
Wendy Staats


About your instructor...


Last modified: Fri Jan 17 12:33:50 1997 by Martin Reames

mreames@cs.wisc.edu




",course
"

CS 302 Fall 1996 - Section 10



CS 302 Fall 1996 - Section 10
Algebraic Language Programming - C++
Tue./Thu. 2:30-3:45, 455 Noland


Instructor: Mike Steele
Email: msteele@cs.wisc.edu
Office: 1332 Comp Sci & Stat Building
Office Hours: Mon./Wed. 1-2:30pm (or other times by appointment), 1332 CS&S
Office Phone: (608)262-6605



Important Announcements

I have extended the deadline for Program 6
.  Please check your e-mail or read the
NEW PROGRAM 6 DEADLINE INFORMATION

Midterm 2 is on Tuesday, November 12th, from 
7:15-9:15pm in Comp Sci & Stat 1325 again.

Current grades are on-line.  This 
includes grades for everything handed in through Tuesday, November 5th.

Sample programs:  I've taken some of my examples from the past
few weeks of class and filled in all the stuff I glossed over to make
fully functioning programs out of them.  You may find this useful if
you missed a day or even if you were there and didn't understand an example.
They're on the notes and examples page,
near the bottom.

Remember to check your e-mail for clarifications to the programming
assignments.





General Course Information


CS 302 Home Page
Course Objectives
About the Vectra Lab
CS 302 Consultants
Course Syllabus and Reading Assignments
Notes on Working from Home


Class Handouts


Programming Assignments
Exams and Quizzes
Some notes and examples


Policy Information


Email Policy
Grading Policy (and Late Policy)
Academic Misconduct Policy


Useful Reference Pages



Introduction to Microsoft Windows

Introduction to Borland C++
Greg Sharp's Style
Guide for C++ code


Text

Problem Solving 
with C++ - The Object of Programming by Walter Savitch
Addison-Wesley Publishing Company, 1996.
List of known errata



Last modified: 
Wed Nov 6, 1996, by Mike Steele
(msteele@cs.wisc.edu)


",course
"

CS302, fall session info


CS302 Fall Session
Algebraic Language Programming in C++
Instructor: Andrew Prock
Email:  prock@cs.wisc.edu
Office:  Computer Science and Statistics 1331
Office Phone:  (608)262-6605
Office Hours: 11am - 12pm M 12pm - 1pm W 8pm - 10pm Th


Grader:  Haihong Wang
Email:  whh@cs.wisc.edu
Office:  Computer Science and Statistics 1347
Office Phone:  (608)262-5786
Consulting Hours (in 1350):  7:00-10:00 pm MTWR

Announcements

11/7 I have put a grades link below, please check
	your grade and verify your scores.
	11/6 I have modified crazy.txt yet again.
	11/5 I will be having office hours today from
	12 - 2pm today
	10/29 I have made a minor modification to
	the crazy.txt file for assignment 7, you should get
	a new copy if you have already gotton one.
	10/15 Assignment five is online.
        10/10 Exam results: avg ~76 range 43-100
        10/8: I have added the grading policy to the
        end of assignment #4.
	9/26: I have put some sample quizes and tests
	online
	for your general perusal.  These tests and quizes are from
	another TA, but I think they should give you a good idea of
	the level of knowledge you will need.  Remember that the
	topics on our tests may not be the same as the tests online.
	9/3 9pm: Webpages seem to be done.  Email me if you notice
	any errors or have any questions. Make sure to check out assingment
	0.  Assignment 1 is online as well for those of you who like to 
	work ahead.

	The final is on Tuesday, December 17, 1996. Mark your
	calendar because everyone is required to take the final then.

	You should check all the links to this page to get a feel
	for where things are located. It is very important that
        you carefully read the policies and administrative
        information below.

	Welcome to class.

Class Information:

Text: 
	
Problem Solving with C++, Walter Savitch.  
    	Room: 1263 Computer Sciences & Statistics
	Time: 5:00-6:15 (Section 30), 6:30-7:45 (Section 31) 
	Tentative Syllabus
Section 30 grades
Section 31 grades
Grading Policy
Late Policy
E-mail Policy

	Academic Misconduct

Course Materials

 General Course Info
 Style Guide
 Lecture Notes
 Assignments
 
	Email archive for section 30
 
	Email archive for section 31

Other Info

 
       	Introduction to Microsoft Windows (Do this first)
   
       	Introduction to Borland C++ 4.5 (Do this second)
   
	CS302 home page
 
       	The Vectra Lab
 
	Source code from the text
 
	Who are consultants and what do they do?
 
	Extra C++ reference material
 
	CS302 FAQ (many of your questions will be answered here)



prock@cs.wisc.edu



",course
"

Kelly's CS 132 Page



  CS 132
  Kelly Ratliff


Current grades
 You can do a keyword search of my 132 mail messages.  For example, enter ""functions"" below (without the quotes) to get every paragraph that used the word ""functions.""  You can also use * for a wildcard. 














Here are links to the mail messages I have sent this semester:

CS 132 info -- 9/11/96
CS 132 info -- 9/15/96
CS 132 info -- 9/22/96
CS 132 info -- 10/29/96
CS 132 info -- 10/6/96
CS 132 info -- 10/9/96
CS 132 info -- 10/16/96
CS 132 info -- 10/27/96
CS 132 info -- 11/3/96

 Additional information of interest:

Backups: copying disks and files
Virus Information
 World Wide Web FAQ

Fun stuff:

  Usenet Oracle Resource Index
 Virtual Tourist World Map

The Space Shuttle Clickable Map
 Badger Herald web site
 Comics

Humor:

Abort, retry, ignore?
Nine Types of Users
Finals Week
Lab jokes

Getting software from the net:
If you have a computer at home, you might be interested in trying
some of the shareware and freeware software available from Internet 
archives.  These programs are usually compressed, and you may need some
compression or archiving software to ""unpack"" them. You may need to review
some DOS commands before trying this. One of the biggest 
and best maintained archives is Simtel, so I'm
including some links to Simtel FAQ files posted on Usenet:


What is SimTel?
FTP site info
Compression Info
Favorite FTP sites

  Click

here to visit the CS 132 - Desautels web page.



",course
"

Home Page for Russ Manning's CS110


CS 110:  Introduction to Computer Programming (C++)

Instructor:    Russell Manning
Email:         rmanning@cs.wisc.edu
Office:        Room 1349, Computer Science

Office Hours:  You can find me in the CS132 lab (basement, B240) at:

               Saturday:  11:00 - 5:00     (except during home football games)
               Sunday:    11:00 - 5:00

               (Come down and keep me company!  You can work here too,
               just like in the Vectra Lab, although CS132 students
               have priority...)               

 The grades for Lecture 13 are finally up...click here to see them.


 Textbook: 

Problem Solving with C++: The Object of Programming,  by 
Walter Savitch

 Section Information: 

1:20-2:05, Oct 28 - [end of semester], B1 1402 University (ROTC building)

 Computer Lab: 

Room 1350, Computer Science and Statistics 


 Assignments: 

 Program 0 due Monday, November 4
 Program 1 due Wednesday, November 13
 Program 1
   Program 2
   Program 3
   Program 4



 Course Information: 

 Day 1 handout
 Syllabus
 Late Policy
 Academic Misconduct

 Important software:  

Introduction to Microsoft Windows
Hints for Windows Compilers
The Windows operating system
Email
Mosaic
Netscape

 C++ information: 

Introduction to Borland C++
The C++ language
The Savitch Text


Old Quizzes

  None yet!



",course
"

 CS 540 - Introduction to Artificial Intelligence 



 CS 540 - Introduction to Artificial Intelligence 
 General Course Information 


This course is offered each Fall and Spring semester.
For the 1996-97 academic year there will be one section in the
fall and two in the spring.



 Topics Covered 

 Principles of knowledge-based search techniques:  best-first
      search, alpha-beta search
  Knowledge representation using predicate logic, semantic networks,
      connectionist networks, frames, rules
  Automated deduction
  Applications in problem solving, planning, expert systems, game playing,
      vision, natural language understanding, learning, robotics
  Programming will include Lisp, and possibly some Prolog;
      previous knowledge of these languages is not assumed

Prerequisite:  CS 367 
 CS 540 Pages of the Various Instructors 

 
        Chuck Dyer    (Spring '96, Fall '96)
   
        Ken Kunen  (Fall '95, Spring '97)
   
        Jude Shavlik  (Fall '95, [on sabbatical 96-97], Spring '98)
   
        Bryan So (Spring '96)
 
 Local AI-Related Links 

 
        UW-Madison AI Seminar
 
        PhD Qualifying Exam in AI
  
        Recent Table of Contents and Abstracts of Some AI Journals
 (mostly from Wendt Library; readable only if @cs.wisc.edu)
    
        U-Wisc AI Group
 
	U-Wisc Computer Vision Group
 
        U-Wisc Machine Learning Group
 
        U-Wisc Robotics Group
  
        U-Wisc Computational Biology (includes some AI)
    
        U-Wisc CS Dept


 Graduate AI Courses at Wisconsin 


  CS 760 - Machine Learning
    CS 761 - Deduction and Problem Solving
     CS 766 - Computer Vision
     CS 780 - Robot Motion Planning

 External AI-Related Links 

 
Last modified: Tue Aug 20 15:00:00 1996 by Jude Shavlik


shavlik@cs.wisc.edu




",course
"

 CS 760 - Machine Learning 




 CS 760 - Machine Learning (Spring 1996) 


 General Course Information 

 Instructor:
Jude Shavlik
        6357 CS & Stats
shavlik@cs.wisc.edu
        Office Hrs: Monday/Wednesday 2-3pm
 Teaching Assistant:
Geoff Weinberg
        94 Highway Labs (basement of the CAE building)
geoffrey@cs.wisc.edu
        Office Hrs: Monday 2:30 - 3:30pm, Wednesday 3:00 - 4:00pm
        Office Phone: 262-5139, Home Home: 231-0950
        
 
	Course Overview (postscript)
   
	Course Syllabus (postscript)
   
	Archive of Class Email (only readable if @cs.wisc.edu)
   
        Suggested Class Projects (postscript)



  Reading Assignments 

 Assigned May 1, 1996:
    Read Chapter 7 (theory refinement) and Chapter 3 (computational learning theory)
        of Mitchell's textbook;
        feedback to author due May 15, 1996.
 Assigned April 24, 1996:
    Read `Learning Logical Definitions from Relations' by Quinlan (MLJ:5) and
        `Knowledge-Based Artificial Neural Networks' by Towell & Shavlik (AIJ:70)
 Assigned April 22, 1996:
    Read `Chunking in Soar' by Laird, Rosenbloom, & Newell (MLJ:1) and
        `Learning at the Knowledge Level' by Dietterich (MLJ:1)
 Assigned April 15, 1996:
    Read Chapter 10 (analytical learning) of Mitchell's textbook; 
        feedback to author due April 26, 1996. 
 Assigned April 8, 1996:
    Read journal articles on `unsupervised learning'
        by Fisher (MLJ:2), Rumelhart & Zipser (CogSci:9), and Lenat (AIJ:9).
    Assigned April 1, 1996:
    Read Chapter 8 (genetic algorithms) of Mitchell's textbook; 
        feedback to author due April 12, 1996. 
 Assigned March 20, 1996:
    Read Chapter 13 (reinforcement learning) of Mitchell's textbook; 
        feedback to author due April 5, 1996. 
 Assigned March 6, 1996:
    Read `Backpropagation: The Basic Theory' by Rumelhart et al.
    Assigned February 26, 1996:
    Read Chapter 5 (neural networks) of Mitchell's textbook; 
        feedback to author due March 8, 1996. 
        Also read the ML journal article by Shavlik, Mooney, and Towell that 
        empirically compares ID3 and backprop.
    Assigned February 12, 1996:
    Read Chapter 2 (concept space) of Mitchell's textbook; 
        feedback to author due February 23, 1996
    Assigned January 31, 1996:
    Read (1) `Machine Learning as an Experimental Science,' 
        Kibler & Langley, RML:1.1.3, (2) Chapter 4 and Sections 6.10 & 6.11 of
        Empirical Methods for Artificial Intelligence, Cohen, MIT Press, 1995,
        and (3) Learning Representative Exemplars of Concepts: An Initial Case Study, 
        Kibler & Aha, RML:2.2.4 (or the ML journal version of this article that's
        in the DoIT packet, but under a different title: `Instance-Based Learning
        Algorithms').
    Assigned January 24, 1996:
    Read Chapter 4 (decision trees) of Mitchell's textbook; 
        feedback to author due February 2, 1996
    Assigned January 22, 1996:
    Read Chapter 1 (introduction) of Mitchell's textbook;
        feedback to author due January 29, 1996
  
  BRR Assignments 

 BRR #3: on the ML journal article by Towell & Shavlik on the KBANN algorithm.
       Due Monday, May 6, 1996
   BRR #2: on the ML journal article by Fisher on the COBWEB algorithm.
       Due Wednesday, April 17, 1996
   BRR #1: on the ML journal article by Shavlik, Mooney, & Towell that 
       empirically compares ID3 and backprop.
       Due Wednesday, March 20, 1996
   Be sure to answer (on one sheet of paper):
        
 Best Idea and Why?
            What to do Next and How?
       
       Do not summarize the assigned paper (one-sentence summary as a lead-in is ok);
       instead analyze it.
   Late policy on BRRs: 50% off if handed in after material covered in lecture.
 
  Homework Assignments 

 
	Homework 4: Learning from Reinforcements - Q-Learning 
        Due Wednesday, April 10, 1996
   
	Homework 3: Training Neural Networks - BP 
        Due Monday, March 25, 1996
   
	Homework 2: Experimental Methodology
        Due Monday, February 26, 1996
   
	Homework 1: Inducing Decision Trees - ID3
        Due Monday, February 12, 1996
   
	Homework 0: Creating Your Personal Concept
        Due Monday, January 29, 1996
   Late policy on HWs: 
      
 HWs are due at the start of class.
         Each student will have FIVE ""free"" late days for use
             over the semester.  Once these are exhausted, there will be
             a penalty of 10% per day (measured noon-to-noon; weekends are free).
         To make the TA's job tractable, no HWs will be accepted more than
             one week late.
     

  Previously Used Homeworks (postscript) 

 Homeworks - Spring 1995 (most of these will migrate up as the semester progresses)
    
 
	   Homework 1 - Inducing Decision Trees (ID3)
 
	   Homework 2 - Heuristically Searching Concept Space (AQ)
 
	   Homework 3 - Training Neural Networks (BP)
 
	   Homework 4 - Learning from Reinforcements (Q-Learning and GA's)

 
	Homework 2 - Version Space (1992, postscript)
 
	Homework 4 - Explanation-Based Learning (1993, postscript)
 
	Homework 5 - Cobweb (1992, postscript)    
 
  Previous Exams (postscript) 

   Spring 1996 |
         Spring 1995 |
         Spring 1994 |
         Spring 1993
   Spring 1992 |
         Spring 1990 | 
         Spring 1989 |
         Spring 1988

 <IneedAgoodICON> Some ML-Related Links 

 
         Machine Learning journal
         (the on-line page)
    
         NIPS-95 papers (the premier neural net conference)
     
         Recent Table of Contents and Abstracts of Selected Journals
 (mostly from Wendt Library; readable only if @cs.wisc.edu)
    
         The UC-Irvine ML Dataset Archive
 
         Pointers to ML Courses
 
         Knowledge Discovery in Databases
 
         Neural Network Resources
 
         Some ILP Stuff
 
         Machine Learning Benchmarking
 
         IEEE Neural Networks Council (several journals connected to this page)
    
         International Society for Adaptive Behavior
 
         AI Bibliography Server (Austrian AI Institute)
    
         Neural Networks Bibliography Server (Austrian AI Institute)
    
         AI Resources (Canadian NRC Server)
    
	 Aha's Links to People in ML
 
         More External AI References

  Help with Programming Assignments 
(from  CS 540's page) 

 
          Using AKCL Common Lisp on Departmental Workstations
 
          Some Tips on Using Vi and Emacs for Lisp-code Writing
 
          Frequently Asked Questions about Lisp and the Course Computers
 
          Some Tips on Using the AKCL Debugger
 
          Some Help for Lisp Novices
 
          Lisp FAQ's (frequently asked questions)
     
          Steele's Common Lisp: The Language (2nd Edition)
	  (This is a reference manual and not a textbook.)
     
          About Printing and Printers | 
         
          How to Print WWW Pages

  Related Local Links 

  
        U-Wisc ML Group
 
        U-Wisc ML & Math-Programming Group
  
        U-Wisc Comp Biology (includes some ML)
    
        U-Wisc AI Group
  
        U-Wisc CS Dept
 
        U-Wisc Library
  
        More local links


Last modified: Mon Apr 29 14:08:09 1996 by Jude Shavlik

shavlik@cs.wisc.edu



",course
"


CS 736 - Fall 1995





CS 736Advanced Operating SystemsFall 1995




Marvin Solomon 



office:  5355 Computer Sciences
office hours:  9:00 TR
office phone:  262-1204
email address:
 solomon@cs.wisc.edu 


News
 Watch this space for the latest updates. 
Last updated: Thu Dec 14 10:30:08 CST 1995



Dec 14
The schedule for 
 project presentations  is listed below.
Dec 8
The Final Exam will be Monday, Dec. 18, from 2:45 to 4:45 pm in
room 1221, Computer Sciences and Statistics building.

Project presentations will be in room 2310 on Friday, Dec. 15,
from 10 am until noon.
Oct 20
Here is an example of a past midterm exam
together with sample answers.
Oct 19
The midterm exam will be Wednesday, October 25, from 7:15 to 9:15 pm
in room 1221 Computer Sciences.

The final exam will be Monday, December 18, exact time and place to be
determined.
Sep 29
Project suggestions and other information
about the project are now avaiable.
Aug 30
A  more readable version of Figure 5 from the
 Multics memory management paper 
is available.


Contents

  News
  Summary
  Lecture Information
  Text
  Course Schedule
  Grading
  Project
  Project Presentations 



 Summary 

This course is intended to give you a broad exposure to advanced
operating systems topics.
I will assume that all students have had a good one-semester course on
operating systems (CS 537 or the equivalent).
We will cover the topics normally presented in such a course, but in
considerably more detail:
synchronization,
interprocess communication,
memory management,
file systems,
protection,
security,
and distributed systems.


 Lecture Information 

Lecture:  11:00 - 12:15 Tuesday and Thursday, 1263 Computer Sciences


Text

There is really no satisfactory textbook for a graduate level operating
systems class, so we will use

a selection of 26 ``classic'' papers
as our text.
The course will be structured around readings from journal articles and
conference proceedings.
You can purchase these readings at the DoIT (formerly MACC) documentation desk
for about $20.
The readings this semester are very similar, but not identical, to those
of previous semesters.
If you have a used copy, I can make available individual papers for you
to copy.


During each class, we will discuss topics relevant to the current papers
(click 

here

for a tentative schedule).
The lecture will not be a detail-by-detail review of the papers, but will
instead be a
discussion of major topics and themes using the papers a focal point.
Active participation in discussion is strongly encouraged.
If you are willing to participate actively and daily in class, you'll get
a lot out of it.
If you expect to sit quietly and listen for 15 weeks, you will get much less
out of this class.


Grading

There will be two exams (a midterm and a final) and a project.
Each will be worth about 1/3 of the total grade.
The exams are designed to verify that you have carefully 
and thoroughly read all the readings.


Project

You will be required to complete a term project.
A list of suggested topics will be provided,

but you are strongly encouraged to make up your own project.
Projects may involve implementation of tools, experimental implementations
of algorithms suggested in the research literature, measurement studies,
or simulations.
All projects must have an experimental component.
Literature surveys or unvalidated design papers are not sufficient.
Most projects will be done by two-person groups.
Larger or smaller groups may be approved on a per-case basis.

You will write a term paper summarizing the results of your project.
This paper must meet the standards of a research publication.
It will be graded on the quality of the writing as well as the content.
You will also make a

short presentation

about your project to the class.


Project Presentations

Here is the schedule for project presenations.
All presentations will be in room 2310, Computer Sciences and Statistics.
Times are approximate.

10:00

 Manyan Stubbs
 Andrew Biggs
 Francis Salmon and Gunawan Agus

10:20

 Qingmin Wang and Chien-pang (James) Chen
 Eric Larsen
 Conroy Fritz and Craig Jordan

10:40

 Prasad Deshpande and Avinash Sodani
 Jim Basney and Rajesh Raman
 Biswadeep Nag

11:00

 Wei Chen and Taxiao Wang
 Lei Cao, Yanming Cao and Xinyu (Richard) Zhang
 Todd Munson

11:20

 Wenjun Qiu, Xinyi Wang and Yufei Zhu
 Zeyu Chen and Sridhar Gopal
 Michael Lee






solomon@cs.wisc.edu


Thu Dec 14 10:30:08 CST 1995




",course
"

 CS132  Lab 321 


  CS 132 
  Su-Hui Chiang: Lab 321 (Time: 8-9:15pm TR)

  Grades


Go to CS132 homepage 
Go to my homepage 


",course
"/

CS 110 Sections 1&2 Home Page



CS 110 Introduction to Computer Programming
Sections 1&2 (FORTRAN)


CS 110 is a one-credit course which covers the basic programming structures needed to prepare students for CS 310 and elementary engineering courses.  No prior computer programming experience is required and only a basic knowledge of computers is assumed.  The material covered will enable you to write simple computer programs to solve engineering problems in elementary courses.  All programming is done in FORTRAN.  This course is intended for students who received little or no programming instruction in high school.

This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors. Click here for a course description.

Menu

 IMPORTANT ANNOUNCEMENTS - READ NOW!
 Lectures
 Instructor
 Grading Policy
 Syllabus
 Text and Lecture Notes
 Programming Assignments
 Problem Solving Exercises
 Computer Lab
 Other Pointers of Interest


 Lectures

Section 1: 455 Noland, 8:50 am MWF, September 4 to October 25  
   
Section 2: 455 Noland, 8:50 am MWF, October 28 to December 14
   
   Please be punctual to lectures to avoid disturbing the class.


 Instructor - Jeff Lampert

Office:
   Rm. 5364a Computer Science & Statistics, 1210 W. Dayton St.
Office Hours:
   Wed 11:00-12:30, Thurs 2:30-4:00 or by appointment
Phone:
   (608) 262-5105 [office]
       (608) 283-0636 [home, emergencies only]
E-mail:
   tick@cs.wisc.edu (click here for finger)
World-Wide-Web:
   http://www.cs.wisc.edu/~tick/tick.html


 Grading Policy

Your final grade is based on four programming assignments each worth 25% (not including Program #0). This course is Credit/No Credit only. There are no tests or exams.

	100% - Assignments (4 @ 24% each + 1 for 4%)


 Syllabus (tentative)

The following topics and sections of the text will be approximately covered each week during the semester.  You will only get the most out of this class if you read the relevant sections of the text before coming to class.  This way you will be able to ask questions in class about anything that you are unsure of, instead of waiting until you're in the lab trying to work on an assignment to discover you didn't really understand something.

Weeks 1-8


 Text and Lecture Notes
Text:
Fortran with Engineering Applications, 5th. edition, by E. Koffman and F. Friedman, 1993.
Lecture Notes:
Copies of the lecture notes will be available on-line at the end of each week of class. Important - the on-line lecture notes are not a substitute for coming to class.  They do not include any examples or additional notes that I put on the board (except for Week1).  You are responsible for all the material covered in class.

Week1
Week2


 Programming Assignments

There are four programming assignments each contributing 25% to your final grade.  You must attempt to complete every programming assignment.  If you hand in a program that does not run or will not even compile without errors then it will get a very low mark (check the gradesheets) and you risk failing the course.

Gradesheets
What to do in DOS/Fortran (and how to hand in assignments online)
   Late Policy
Policy on Academic Misconduct (i.e. cheating)

Assignment Specifications:

Program0, due Friday 11/1/96, 5:00pm
   Program1, due Wednesday 11/13/96, 5:00pm

How to Get Help with Your Assignments:

Consultants: 
   The consultants in the computer lab can help you with most problems.  They wear name tags and are on duty from approximately 8:00 am to 11:00 pm.  Consultants can answer short questions about compiler error messages and program syntax, as well as how to login, use the printers, send E-mail, run Netscape, etc.

Click here for more information about the consultants.
   

Instructor:
   General questions about an assignment or questions that may require a long explanation are best answered by myself.  Please see me during office hours or send me E-mail.  I am not normally in my office except during office hours because I do my research from home via a modem.  Therefore, if you want to see me outside of office hours please make an appointment first.  You can most easily contact me by E-mail because I regularly login and read my E-mail from home. If you mail from Netscape, make sure to include your name and e-mail address, as they don't show up for me, so I won't know who mailed me and be able to respond otherwise.

Click here to send me E-mail.
   



 Problem Solving Exercises

One of the most important skills you will learn in this class is problem solving.  Good problem solving skills distinguish a ""good"" computer programmer from a ""bad"" one - it doesn't matter how familiar or skilled you are in a particular programming language, if you do not understand how to solve the problem then you will not be able to write a computer program for it in any language.

To help you learn problem solving skills and techniques I will assign weekly problem solving exercises.  These will be small but non-trivial problems which I will give out each Monday.  You should look at the problem and think about it during the week and right down the steps you would go through to solve the problem; i.e. the overall structure of your program.  This is primarily an exercise in general problem solving so you do not have to write any FORTRAN code (though you may if you want to and have time) and your solution/algorithm should not even be dependent on a particular programming language such as FORTRAN.  We will go over the solution in class the following Monday.
Exercises:



 Computer Lab

You will be using the Vectra lab in Rm. 1350 Computer Science & Statistics containing Hewlett-Packard Vectra's running Microsoft Windows and Microsoft FORTRAN.  This lab is open from 7:00 am to 1:00 am seven days a week except certain holidays.  The printer room is located across the hall in Rm. 1359. You have a quota of 300 pages on which
 to print. Once you exceed that quota you must contact the lab either by e-mail or by going to room 2310 during office hours (they prefer e-mail) to pay to increase your quota.
Beware: Some of the machines in the Vectra lab aren't configured correctly. In particular, the machines along the wall closest to the outside
hallway, towards the left-hand part of the room. Try to avoid those if you can.
You may also use your home or dorm computers to write your programs, however you will probably have to purchase your own copy of Microsoft FORTRAN or Lahey Personal FORTRAN (see the inside cover of the textbook).  You may also work in any of the other computer labs on campus, however most do not have FORTRAN compilers (please see me first before using the CAE lab).

The software you will be using in the lab includes:

Microsoft Windows and MS-DOS
E-mail
Netscape


 Other Pointers of Interest

 CS 110 Home Page
 Jeff Lampert's Home Page
 Computer Sciences Department Home Page
 Starting Points for Internet Exploration
 Lycos (search the World-Wide-Web by keyword)
   
 Dilbert (comic relief for those long nights before an assignment is due)




Copyright © 1996 Modified from Gareth S. Bestor (bestor@cs.wisc.edu). Last modified October 26, 1996.


",course
"



CS302 Homepage



CS302 Homepage
Welcome to the homepage for CS302.  The purpose of this homepage is to 
provide my students with information pertaining to our sections of CS302.
Since this page changes frequently, it is your responsibility
to check this page often.

General Information
Instructor: Todd Munson
Email: tmunson@cs.wisc.edu
Office: 1301 Computer Science and Statistics
Office Phone: (608) 262-6600
Office Hours: 1:00 - 2:00 PM MW, 1:00 - 2:00 PM R, 7:30 - 8:30 AM F, 
and by appointment
Sections: 8 and 25
Textbook: Problem Solving with C++ by Walter Savitch


Class Information

Expectations
Syllabus
Exam Schedule
E-Mail
Grading
Late Assignments
Extra Credit


Policies

Consultant Responsibilities
Academic Misconduct


Other Information

Daily Notes and Assignments
Homework Assignments
Programs and Documents Used in Class
Other Programs and Resources
CS302 Homepage




tmunson@cs.wisc.edu


",course
"

CS302, Section 19


Computer Science 302, Section 19

Time: MWF 1:20
Place: 226 Noland
Instructor: Todd Turnidge
Office Hours: TBA
Lab Hours: TBA


Announcements

Class notes on classes.
A handout on structs is available.
Program 5 is available.



 
	Getting Started
	There is some useful information here to read when you are getting started.

 General Information
	Text, Facilities, Grading, Policies.

 Syllabus
	A tentative syllabus for the course.

 Assignments
	The text of reading/programming assignments and some solutions.

 Handouts
	A collection of the class handouts to date.

 The Class Mailing List
	Information about how to send messages to me and to the class
as a whole.

 Course Home Page
	This is a home page for all sections of 302.  There is much
information
	here of general interest including information about
	tutors,
	consultants,
	the windows operating system,
	email,
	netscape,
	and C++.

 
	Other CS302 Sections
	You may find some of the information provided by
other instructors to be helpful.  For example, here is a handout from Gregory
Sharp about course difficulty.



Last modified: Mon Nov  4 11:43:36 1996 by Todd Turnidge

turnidge@cs.wisc.edu



",course
"



CS302, Sections 16 and 17







CS302, Sections 16 and 17
Algebraic Language Programming in C++

    Announcements as of Tue Oct  8 20:10:25 1996


Exam #1: Thursday, Oct. 17, 715-915pm, 121 Psych


RELOAD THIS PAGE EVERY TIME YOU LOGIN.





Instructor: Chris Weaver

Email: 
weaver@cs.wisc.edu
	(and my email policy)
Office: Computer Science and Statistics 1302
Office Phone: (608)262-6600
Office Hours: MW 400-500, R 400-600, and by appointment
(Office hours in the lab, 1350 CS, for the first two weeks.)

Grader: Jin Zhang

Email: 
zj@cs.wisc.edu
Office: Computer Science and Statistics 1345
Office Phone: (608)262-1012


Location

Section 16:  955-1045 MWF in 119 Noland
Section 17: 1100-1150 MWF in 119 Noland
Computer (Vectra) lab
	in 1350 Computer Science and Statistics
	(Hours: 7am-1am seven days a week, staffed by
	
	    consultants)


General Course Info

Syllabus
Text:

	    Problem Solving with C++: The Object of Programming,
	    Walter Savitch,
	    Addison-Wesley, 1996.
	    (ISBN 0-8053-7440-X)
	    Includes errata and source code from the text.

     Misconduct Policy


Assignments, Grading, and Handouts

Programming assignments


	Homework (Reading) Assignments

Lecture Notes
Handouts and
	Example Programs
Exam and Quiz Keys

Late Policy
Grading Policy
Style Guidelines (still rough)
     Printing and Paper Use Statement









Chris Weaver,
	Computer Sciences Department,
	University of Wisconsin-Madison

Last Change: 11/1/96 by Chris Weaver











",course
"

ECE/CS 752 Spring 1996




ECE/CS 752: Advanced Computer Architecture I 
Spring 1996 Offering


 
       Course Information 
 Instructor: Prof. James E. Smith 

Office:         4621 Engineering Hall 
Office hours:   2:30-3:30PM, Tues. and Thurs. 
Office phone:   265-5737 
Email:          jes@ece.wisc.edu

   TA: Dan Prince

Office:         3614 Engineering Hall  
Office hours:   2:00-3:00PM Wed; 1:00-2:00PM Fri 
Office phone:   265-3825  
E-mail address: princed@cae.wisc.edu


 Table of Contents

 News
 Readings
 Lecture Notes
 Homeworks
 Project
 Miscellaneous

News

 Homework 5 solns  5/10

   Special Office hours: 10-11:30AM Fri. May 10

   FINAL EXAM: Rm 132 Biochemistry, Sun. May 12, 12:25 PM


Readings

 
       Readings 1 Table of Contents (get full papers from DoIT)

   
       Readings 2 Table of Contents (get full papers from DoIT)

   
       Readings 3 Table of Contents (get full papers from DoIT)

   
       Readings 4 Table of Contents (get full papers from DoIT)

 Lecture Notes

 
       Course Overview and Introduction to Computer Architecture 
 
       Performance and Cost 
 
       Instruction Sets 
 
       Pipelining 
 
       Advanced Pipelining, part 1 
 
       Advanced Pipelining, part 2 
 
       Vectors and VLIW 
 
       ILP limits and software 
 
       Cache Memories 
 
       Advanced Caches 
 
       Advanced Caches (BIG) 
 
       Main Memory 
 
       Main Memory (BIG) 
 
       I/O systems 
 
       Disk arrays 
 
       I/O and disk arrays (BIG) 
 
       Interconnect technology 
 
       Interconnect technology (BIG) 
 
       ATM networks 
 
       ATM networks (BIG) 
 
       Multiprocessors part 1 
 
       Multiprocessors part 1 (BIG) 
 
       Multiprocessors part 2 
 
       Multiprocessors part 2 (BIG) 

Homeworks

 
       Homework 1 assignment 
 
       Homework 1 solution 
 
       Homework 2 assignment 
 
       Homework 2 solution 
 
       Homework 3 assignment 
 
       Note on Homework 3 
 
       Homework 3 solution 
 
       Homework 4 assignment 
 
       Homework 4 solution 
 
       Homework 5 assignment 
 
       Homework 5 solution 

Project

 
       Project Assignment 
 
       Trace information 
 
       Project list 

Miscellaneous

 
       Some useful tools for projects 
 
       Review for Midterm 
 
       Midterm Exam from 1995 
 
       SPECmarks Considered Harmful 
 
       An Analysis of Pipeline Clocking 
 
                Detailed Design of Reservation Station

   
       757 lecture: Network Routing 
 
       757 lecture: Network Routing (BIG) 
 
       Cache Summary 
 
       Final Exam from 1995 




",course
"



CS417 Lab Main Page





Computer Science 417: Computer Graphics
 This page is evolving. 
It is incomplete but hopefully useful. 

This is the beginnings of a home page for
CS 417 which deals with computer graphics and scientific visualization at
the level of 
 Computer Graphics: Principles and Practice  by Foley et.al., 
or  3D Computer
Graphics  by Alan Watt.
 CS 417 is currently taught by Bruce
Land, who is also the Project Leader for the Visualization Group at
the Cornell Theory Center.


Contents

 Course summary 
 Administrivia: Textbook errors, 
   Homework, Staff, Schedule
    Relevant math:  Cornell Math 293
   Other graphics courses 



 Course Summary  
Computer graphics is a topic that requires mathematical, 
programming, and artistic skills, among others.
The content of the computer graphics fundamentals 
course at Cornell focuses on mathematical skills. The associated 
lab course, 
 
CS418,  is a programming course designed
to help illuminate the math. 

The course covers the following topics 
(but not all in the same year): 

Construction of surfaces 
 
Explicit  polygon  lists 
    Parametric operations 
    
quadric surfaces
       figures of rotation
       swept surfaces
       tensor-product surfaces
       
 A parametric surface viewer 

 Implicit Surfaces
    
quadric surfaces
       blobby models
       CSG operations
       surface tesselation
    
 Computing a surface 
     normal 
Hierarchical
 grouping of simple objects to form complex surfaces. 
 
Scene composition and animation
 
Introduction to homogeneous coordinates
    Geometric transforms
    
building objects
       kinematic animation
    
Hierarchical modeling 
    
combining prototype objects
       mimic connected rigid parts
       inverse kinematics
    
 Dynamical systems and animation
    
  Differential equations 
 Cellular automata
     

Viewing of a group of objects 
 
Camera transforms 
    Clipping to a view volume
    Projection onto a 2D screen
    
parallel projection
       perspective projection
    
 
      A camera simulator   (transform, clip, project)
    Stereo vision

Rendering  
  
Shading/lighting
     
human color vision
        color device limitations
        light: geometric optics and waves
        Gourand and Phong shading
     
Hidden surface removal 
     
Z-buffer
	transparency and shadows
     
Scan-conversion and Anti-aliasing 
     
polygons to pixels
        human vernier hyper-acuity
        image space methods
	object space methods
     
Surface property modifications  
     
texture-mapping 
	bump-mapping
	volume textures
     

Modeling of scientific data for scientific visualization. 
  
Aspects of scientific data
     
dimensionality of fields
	scalar and vector fields
	objects (e.g. walls of a channel)
     
Scalar fields
     
contour lines and surfaces
	colors and color misperception
	volume rendering
     
Vector fields
     
difficulties
	""arrows""
	field lines
	particle advection
     
Multiparameter and High-dimensional data
     Dynamic systems
   



 Administrivia: 

  Errors in the Textbook: 
  3D Computer graphics  by Alan Watt.

 Homework assignments 

  Homework #1 is due 31 Jan 96.
     Homework #2 is due 7 Feb 96.
     Homework #3 is due 14 Feb 96.
     Homework #4 is due 21 Feb 96.
     Homework #5 is due 6 March 96.
     Homework #6 is due 13 March 96.
     Homework #7 is due 27 March 96.
     Homework #8 is due 3 April 96.
     Homework #9 is due 17 April 96.
     Homework #10 is due 1 May 96.


 Course Schedule

 Prelim #1 is on 2/27/96 at 7:30 pm.
The  first test 
from spring 1995 can serve as a general guide to my test style.
Also there is a list of all 
 scheduled prelims.
at Cornell.

 Spring break is 3/16/96 to 3/24/96.

 Prelim #2 is on 4/9/96 at 7:30 pm.
 This is a Religious Holiday for some students. NYS Education
Law §224-A mandates that faculty make available an opportunity to
make up any examination missed because of religious beliefs. In
order to facilitate preparation of makeup exams, students intending
to be absent in order to observe this holiday are requested
to notify the instructor by 2/2/96.

 Last Lecture is 5/3/96.

 Final is 
 scheduled  
for exam period 12, Tuesday May 14, 3-5:30 in Upson B17.
The final mean was 80 with a standard deviation of 15.



 Staff 

Bruce Land, 
   606 Rhodes, 4-8686, bruce@tc.cornell.edu 
   Jing Huang,  4138 Upson, 5-1158, huang@cs 
   
Ioi K. Lam,  4162 Upson, 5-2219, ioi@cs 
   Justin McCune,  343a Upson, 5-1041, jmccune@cs




Relevant Math:

 
Cornell University Math 293


Other Graphics Courses:

 
University of California at Davis 
 
University of Waterloo 

University of Wales College of Cardiff
 
University of Manchester
 
Oregon State University

Related Topics:



Final Project CS 418 Animations (1994 to 1996)



Visualization at the Cornell Theory Center 



Comments about Theory Center online documents are welcome and may be sent to
doc-comments@tc.cornell.edu.
 

Last modified, 1/15/96 B. Land. 




Copyright Statement 
 
",course
"



CS418 Lab Main Page




Computer Science 418: 
 Computer Graphics 
Laboratory Exercises



This is the Web Site for the Cornell University
undergraduate computer graphics laboratory, CS 418. 
These pages contain all of the materials for CS 418 including
 lab procedures, software and student results.


CS 418 is the lab section for 
 
CS 417 
which deals with computer
graphics and scientific visualization at the level of Computer
Graphics: Principles and Practice by Foley et.al., or 3D
Computer Graphics by Watt.  CS 418 is currently taught by Bruce
Land, who is also the Project Leader for the Visualization Group at
the Cornell Theory Center.


These pages won first place in the  1996 ACM SIGUCCS  Web-based
Education and Training materials competition.

  Exercises: 
 Getting started (1996)


 Building Polygon Objects (1996)

 Parametric Surfaces (1996) 

 Transformations and Modeling (1996) 

 Using a Virtual Camera (1996)

 Camera and Perspective Transforms (1995)

 Lighting (1995)

 Texture and Bump Mapping  (1996)

 Modeling and Scientific Visualization (1996)

 Design Project (1996)

 Physics-based Animation (1996)

 Implicit Surfaces (1996)

 Procedural Textures (1996)



Exercises to be done in 1996 will be in the order 1, 2 ,11 ,3, 4, 
 10, 12, 8,  and 9.


Note that exercises marked ""(1997)"" are current. Those marked ""(1995 or 96)"" 
 are
included for reference only and are not current exercises.
 
 Lab Chat:
 This facility is for communication about
CS 418 related topics only. During the spring semester
access is restricted to enrolled students.
Related Topics:



Final Project CS 418 Animations 


Visualization at the Cornell Theory Center 



Comments about Theory Center online documents are welcome and may be sent to
doc-comments@tc.cornell.edu.
 

Last modified, 1/17/96, B. Land.




Copyright Statement 
 
",course
"

CS718 Cornell Fall 1995



CS 718, Topics in Computer Graphics 
Fall 95 semester



Each group of students chose a current research topic in computer
graphics, read appropriate papers, and implemented some code. Each group 
delivered a lecture on their chosen topic and
documented their work as a Web document.


 Student Topics 


A Metaball modeler for Windows95  Michael Arcuri and Alex Benton  




Modeling Human Facial Expressions 
Szu-Wen Huang and Dan Hung




Content-Based Image Retrieval Systems   for Interior Design  
 Sean Landis  



 
Interdependent Particle Systems 
Justin McCune




   Visualization of Diffusely Distributed Pollutants 
Using Spatially-explicit Landscape Models
Fu-An Tsai 




AntiAliasing videos and images  using stochastic sampling 
Arun Verma


Che-hsun Wan 


",course
"



Patty Hough




Patty Hough



 Sandia National Laboratories  
P.O. Box 969 
MS 9214 
Livermore, CA 94551 

 ph@cam.cornell.edu  



 Who am I? 


I was a Ph.D. student (1991-1996) in the  Center for Applied Mathematics,  which
is housed in  Frank
H.T. Rhodes Hall  at  Cornell
University.   My thesis advisor was 
Steve Vavasis .  Other members of my committee were  Nick
Trefethen  and 
Al Schatz.  My research interests fall in the areas of

 numerical linear
algebra


 scientific computing


 optimization

I am currently working as a postdoc with  Juan Meza  in the  Scientific Computing Department
 at  Sandia National
Laboratories  in Livermore, CA.
 Here is my  resume  and a  statement of research goals .



 Tech Reports 




""Complete orthogonal decomposition for weighted least squares"", 
with 
S.A. Vavasis , to appear in SIAM J. Matrix Anal. App.




 ""Stable and efficient solution of
weighted least-squares problems with applications in interior point
methods"",  Ph.D. Thesis.



",non-course
"
Jeff Baggett



Jeff Baggett
 Center for Applied Mathematics  
657 Frank H.T. Rhodes Hall 
 Cornell University  
Ithaca, NY 14853 

 baggett@cam.cornell.edu  
(607) 255-4195  

 Who am I? 

I am a sixth year graduate student in the Department of Mathematics at
Cornell University under the supervision of 
Nick Trefethen.
I expect to finish my thesis, titled ""Non-normal dynamics and applications 
in hydrodynamic stability"" by the summer of 1996.  I would like to continue 
my research so I am seeking a research position.  
Here is a detailed  outline (postscript - 4 pages)
 of my thesis.

 My  curriculum vitae (postscript - 2 pages).  


 Interests and Activities 

My interests and background are an unusual blend of scientific computing, dynamical 
systems, and fluid mechanics.  Here is a  
research proposal (postscript - 5 pages)  for some work I
would like to do in the next couple of years.


 Papers  


 ""A mostly linear model of transition to turbulence"" (postscript 430k) , with 
 T.A. Driscoll, and
 L.N. Trefethen ,
Physics of Fluids, April 1995.



 ""Exponential type versus spectral abscissa:  the Hille and
Phillips example"" (postscript 196k) 
submitted to Integral Equations and Operator Theory.



 ""Low dimensional models of subcritical transition to turbulence"" 
(postscript 885k) with L.N. Trefethen, submitted to Physics of Fluids.



 Misc. Links 


 Satish 



",non-course
"
Networked Computer Science Technical Reports Library



Networked Computer Science Technical Reports Library


NCSTRL  (pronounced ""ancestral"") is an international
collection of computer science technical reports from CS departments
and industrial and government research laboratories, made available
for non-commercial and eduational use.  The NCSTRL
collection is distributed among a set of interoperating servers
operated by participating
institutions.  Read the official NCSTRL
press package for a description of the background, goals, and
organization of NCSTRL.

Search the NCSTRL collection

 The  Fielded Search Form  allows you to perform a search on several fields of the bibliographic data, and/or to limit the search to specific institutions,


Or enter  one or several words into the box below to list all documents in our collection whose author, title, or abstract contain any search word:




Or browse reports at any of the
participating institutions.

I want to join NCSTRL, tell me more
Read the faq for
institutions interested in participating in the NCSTRL collection.
More Information
Find out what's
new with NCSTRL or browse a list of 
documents   related to NCSTRL.


 NCSTRL at Cornell Computer Science.  Send email to
tech-reports@cs.cornell.edu.  
 
",non-course
"


The Design Research Institute








Design Research Institute













About the DRI 
Researchers
at the DRI 
browse or search
all public files 
Technical Reports

Search technical reports from the DRI and other institutions 
IPIC'96 home page:

International Working Conference on Integration of Enterprise Information
and Processes 
Another site for this information is at ITI
Singapore 
AltaVista
Forum at DRI 




Send questions or comments about this server to mike@dri.cornell.edu



",non-course
"


About Jim Davis at the Design Research Institute



Jim Davis
Xerox Corporation
PhD, MIT Media Lab 1989
davis@dri.cornell.edu


My goal in general is to build software systems that improve
communication among people.  I believe that communication mediums of
the future will have an increasing understanding of the structure and
content of the messages they transmit.  They will manipulate,
reformat, and even generate that content.  I am interested in
hypertext systems, network information access, and collaboration.


I work on the
CSTR project, an
ARPA sponsored effort to make computer science technical reports more
easily accessible.  As part of that work, I designed a distributed technical report server which
is now running at many universities.

I am interested in Corporate (or Group) Memory, meaning electronic
systems for capturing and accessing the knowledge used and produced by
(the workers of) an institution, in order to increase the quality of
or reduce the time required to do future work.  Corporate memory
includes not just the intellectual products of the institution
(e.g. an engineer's designs, a lawyer's contracts, an author's
screenplays) but also knowledge about the process that produced
the product: knowledge of dead-ends explored, tools used, and
justifications supporting the final decisions.



I have also begun a project (with Dan Huttenlocher) in developing
corporate memory through shared
annotation of structured documents.  This project investigates how
people can share information by reading and writing annotations in
electronic documents shared by the group.  An initial prototype
implementation is being used by Cornell class CS212.  Here, the shared
documents are problem sets and course notes, and a nnotations might be
requests for clarifications by students, technical questions, or
corrections made by staff.  The question is whether this will be a
useful means for students to obtain answers, whether students will
find each other's questions a useful source for learning, whether
students will often be able to answer each other's questions
(correctly), and whether the course staff will find this a useful
means for feedback in improving the course.  So far, the evidence is
that they do.

 I'm also interested in natural language generation and the design
of computational proxies (""agents"") which can safely and reliably
carry out remote computations on foreign machines without risk to
either you or the owner of the remote machine.



See also

Papers
 Online copies of some of my publicatiions.

Web resource for the DRI.
 A list of Web resources that seem especially useful for the
DRI
my web resources
 Resources I've collected that seem useful (or fun) to me

professional history
This is a narrative, not a resume.

Contact improvisation
Is it a sport or an art?


Resume
No, I'm not in the job market.  But thanks for asking.  I like
it just fine at Xerox



",non-course
"

MetaCrawler Searching







METACRAWLER


by Erik Selberg,
Greg Lauckhart
and Prof. Oren Etzioni








If you're searching for a person's home page, try Ahoy!


Search for: 
 A phrase

 All of these words

 Any of these words






Sort results by

relevance
  location

Control search with Java










Home
· Configure 
· About 
· Problems



webmaster@metacrawler.com

Copyright © 1996 Erik Selberg, Oren Etzioni and Greg Lauckhart.  All Rights Reserved.



",non-course
"

 University of Wisconsin Robotics Lab Home Page 




 

 UW-Madison Robotics Lab 
302 Mechanical Engineering
1513 University Avenue
Madison, WI 53706
 
Vladimir Lumelsky, Director





 About the Lab 

 
        Brief Review of the Lab's Research Activities 
 People in the Lab
 
        Lab Technical Reports (compressed postscript available)
    
        The Simulation Library, v2.0
 
        Related Courses
 
        Robotics Seminar


 
Recent Projects and Selected Publication Abstracts  

 
        Maze-searching algorithms
 
        Effect of kinematics in sensor-based motion planning
 
        Dynamics and sensor-based control: the Jogger's Model
 
        Sensing and planning
 
        Decentralized intelligence: groups of robots
 
         Special topics in sensor-based motion planning: 
             Tethered robots; Underwater robots; Kinematic redundancy
 
        Sensitive skin project
 
        Human-centered systems
 
        Computational Geometry


 Related Research at UW--Madison

 
               Neil A. Duffie -- Manufacturing Systems
            
               Chuck Dyer  -- Computer Vision
            
               Robert Lorenz  -- Sensors and Actuators
            
                Jude Shavlik  -- Machine Learning
        

 Robotics links 

 
      IEEE Society of Robotics and Automation (IEEE RAS) 
 
      IEEE RAS Tech. Committee on Robot Motion & Path Planning  
  
       Robotics Internet Resources Page
 
      Robotics Web Servers
 
      ROBOTICS 
 
      NASA Telerobotics Research Program 
 
      Robotics Frequently Asked Questions List 


 Local links 

 UW-Madison CS Dept
 UW-Madison AI Group
 UW-Madison College of Engineering


 Comments/suggestions/errata: hert@cs.wisc.edu 


",non-course
"


 Vladimir J. Lumelsky's Home Page 


  Vladimir J. Lumelsky

Professor
Mechanical Engineering, Computer Sciences, and EC&E Depts.
University of Wisconsin-Madison

E-mail: lumelsky@engr.wisc.edu
Telephone: (608) 263-1659
Fax: (608) 265-2316
Ph.D., Institute of Control Sciences, Russian National 
Academy of Sciences, Moscow, 1970.

 
 Research Interests: Robotics, Geometry and
Complexity of Motion Planning, Kinematics, Cognitive and
Information Aspects of Motion, Sensor-Based Intelligent Systems,
Industrial Automation, Control Theory, Pattern Recognition.  

 Research 
 My current research is in the area of fully automatic (robotic)
and human-centered semi-automatic systems, and covers theoretical,
simulation/animation, and experimental work.  In the area of fully
automatic systems, our focus is on development of means for
geometric reasoning and control necessary for automatic planning of
motion in a complex environment. A machine equipped with such means
is able to purposely move in a complex scene with multiple, perhaps
moving, obstacles of arbitrary shapes. We are especially interested
in a paradigm which assumes incomplete information and continuous
real-time computation based on sensory feedback (e.g., from vision
or range sensors). This model suggests economic  active sensing
 guided by the motion planning needs. A strong factor in such
systems is the effect of system dynamics and nonholonomic
contstraints on real-time control.
  
 As part of our work on human-centered systems, we study (jointly
with cognitive scientists) human skills in motion planning and space
orientation. These results are then used for comparison with the
performance of automatic systems and for developong hybrid physical
(teleoperated) and computer graphics interaction systems. The major
property of such a hybrid system is that it blends together, in a
synergistic manner, human and machine intelligences. Our
hardware/experimental work includes systems with massive real-time
sensing and control (e.g. with thousands of sensors operating in
parallel).   

Courses

 
Recent Projects. Selected Publications




Maze-searching algorithms 


Effect of kinematics in sensor-based motion planning 


Dynamics and sensor-based control: the Jogger's Model 


Sensing and planning 


Decentralized intelligence: groups of robots 


Special topics in sensor-based motion planning: 
Tethered robots; Underwater robots; Kinematic redundancy 


Sensitive skin project 


Human-centered systems 


Computational Geometry



 Some global links


 
IEEE Society of Robotics and Automation (IEEE RAS) 


IEEE RAS Tech. Committee on Robot Motion & Path Planning  


 Some  Links at U-Wisconsin


 
Robotics Lab Home Page
 
College of Engineering
 
Mechanical Engineering Dept
 
Electrical and Computer Engineering Dept
 
Computer Sciences Dept
 
Mathematics Dept
 
Mathematics and Computation in Engineering Graduate Program (MaCE)
 
Sea Grant Institute




",non-course
"
Werner Vogels









 Werner Vogels 
researcher

4105a Upson Hall
Dept. of Computer Science
Cornell University, 
Ithaca, NY, 14850


Phone: 607-255-9199
Fax  : 607-255-4428
Email: vogels@cs.cornell.edu








	In protocol design, perfection has been reached not when there is nothing
	left to add, but when there is nothing left to take away.
	




I am involved with two of the major systems projects at the Cornell Computer Science Department: The

Horus
and the 
 Cornell ATM Cluster Projects. I think my
research interests are best described by: 



	Low latency and high bandwith communication support for 
	highly reliable distributed systems with real time requirments.
	


I focus on the system design and engineering issues. Some of the things I am
working on:

A highly predictable execution environment for Horus. The integration of Horus
with some Real-Time environments needs to lead to a situation where we can 
reason about advanced operational guarantees.

Mechanisms for efficient data transfers between high-speed 
network devices and the application level. Low latency for all messages 
and high bandwidth with small messages are two issues that 
have fallen behind in the software design for high-speed network adapters.

High-speed Cluster Communication protocols. Once you achieve the desired low-latency
for your message passing system, you will see that your old protocols
are not able to exploit this, and you will need to re-think their structure
and interaction patterns.

Methods for dealing with guarantee failures (aka 
missed deadline support). It is not bad to not be able to meet the 
guarantes you gave, it is bad to not tell anyone about it.

Acurate Failure Detection. If we want to take our distributed systems to a
global scope, there is a need to find a generic mechanism to support
failure suspision, detection and management of processes, nodes and networks.
From our experience with group systems we can extract a mechanism that will work
with any middleware package, regardless of its functionality.


Horus is the brainchild of  

Robbert van Renesse  and

Ken Birman. The ATM Cluster work is done cooperation with

Thorsten von Eicken and the Multimedia & Video-On-Demand Horus
experiments are in concert with 

Brian Smith.

I am responsible for 
CS 515, 
 a Practicum in Distributed Systems, and teach a number of lectures
on network protocols and high-speed network technology in 
CS 514: 
Practical Distributed Systems.


Recent publications:



World Wide Failures, Werner Vogels, 
To appear in the Proceeding of the 1996 ACM SIGOPS Workshop
Connamoran, Ierland, 
September 1996.


Structured Virtual Synchrony: Exploring the Bounds of Virtually
Synchronous Group Communication.
Katherine Guo, Werner Vogels, Robbert van Renesse, 
To appear in the Proceeding of the 1996 ACM SIGOPS Workshop
Connamoran, Ierland,
September 1996.



U-Net: A User-Level Network Interface
for Parallel and Distributed Computing,
Anindya Basu, Vineet Buch, Werner Vogels, Thorsten von Eicken,
Proceedings of the 15th ACM Symposium on Operating 
Systems Princples, Copper Mountain, December 1995.



Delivering High-Performance Communication to the Application-Level.
Werner Vogels and Thorsten von Eicken, in the Proceeding of 
the Third IEEE Workshop on the Architecture and Implementation
of High Performance Communication Subsystems (HPCS'95), August 1995.


Horus: A Flexible Group Communications System ,
Robbert van Renesse, Kenneth P. Birman, Brad Glade, Katie Guo, Mark 
Hayden, Takako Hickey, Dalia Malki, Alex Vaysburd and Werner Vogels, 
CS-TR 95-1500, March 23, 1995.



",non-course
"

The Horus Project
















































The Company of
the Gods rejoiced, rejoiced, at the coming of Horus, the son of Osiris,
whose heart was firm, the triumphant, the son of
Isis, the heir of Osiris.


¹












The Horus project has developed a modular and extensible process-group
communication system, 
addressing the requirements of a wide variety 
of robust distributed applications.














Horus, the son of Isis and of Osiris, was a god whose attributes appealed
strongly to the Egyptians from one end of Egypt to the other, because
in him every man and woman saw the type of what he or she wished to possess,
that is to say, renewed life, and life as opposed to death, and movement
as opposed to inactivity.

²




 

Horus provides a framework for the development of distributed applications
based on group communications, a style of computing that can arise in
fault-tolerant systems, managed distributed systems, applications that
exploit data replication or coherent caching, and groupware. Within the
overall Horus framework a large collection of system and application
protocols have been developed that allow the application designer to
construct a communication module that exactly meets the application
requirements at minimal cost. 

The Horus project was originally launched as an effort to redesign  the
Isis group
communication system, but has evolved into a general purpose communication
architecture with advanced support for the development of robust
distributed systems in settings for which Isis was unsuitable, such as
applications that have special security or real-time requirements. Besides
the practical uses of our software, the project has contributed 
towards the theory of virtually synchrony, a runtime model used
for our implementation of data replication and fault-tolerance.   At the same
time, our software is much faster and lighter weight than the Isis system.

Horus exists as two systems: an initial version coded in C, which can be
used for research purposes at no fee but has restricted commerical
rights,
and a new version called Ensemble, written in ML but usable from many
other languages, which  is available for all classes of users at no
fee.  Ensemble is actively under development and we will do series of
releases over the fall of 1996 and spring of 1997.  By early in
1997, Ensemble
will be an outstanding environment for building Java-based groupware
applications that do multimedia conferencing on the Web.

Horus and Ensemble are designed to be platform independent, and are
available for different
classes of workstations, personal computers, parallel processors and on
next-generation cluster environments using standard high-speed
communications networks. 

The Horus effort collaborates closely with many other distributed systems
projects, including Transis, NavTech, and the StormCast and TACOMA
projects. Links to these and other projects can be found elsewhere in these
pages. 










Introductions to Horus




Visit the 
papers
and 
abstract
pages for an overview of all publications and reports related
to the Horus project. The following are recent articles that present a 
high-level introduction to Horus:

 
Kenneth P. Birman and Robbert van Renesse,
Software for 
Reliable Networks, in 
Scientific American, May, 1996.


Robbert van Renesse, Kenneth P. Birman and Silvano Maffeis, 

Horus, a flexible
Group Communication System, Communications of the ACM, April 1996.














¹
Final sentence in the 
Hyme to Osiris
from the Papyrus of Ani, better know as the 
Book of the Dead.



²  
E.A. Wallis Budge, The Gods of the Egyptians or Studies
in Egyptian Mythology, Volume 1, pages 486-487, The Open Court Publishing 
Company, London, 1904.



Comments to 
Werner Vogels 



",non-course
"

 Cornell Department of Computer Science 


















| 
 General Info | 
 Academic Info | 
 Faculty | 
 Research Projects | 
 Tech Reports | 
 
Annual Report | 







Welcome to the Cornell University
Department of Computer Science Web site.
Feel free to browse around 
and get to know our department.









General Info


Get some General Information about the 
department - its location, size, age, etc.  Also find information 
such as 
Contacts
within the department and our standard 
Disclaimers.






Faculty


Find a list of the 

Faculty and check out their ""official"" Annual Report home pages or
their personal home pages.





Research


Check out the 
Research Projects going on in the department, or find out about
our 

Researchers and our 
Research Collaborators.





Publications


Find links to publications by department Faculty and Researchers
either through the 
Technical Reports Project
or through the 
Annual Report.




Degrees


Look into our degree programs - 
Doctorate,
Masters of Engineering, or
Undergraduate.





Academics


Reference the 
Course Home Pages to see what is being taught via the Web
for this semester or read the general
Course
Descriptions as they appear in the 
Courses of Study.





People


Get to know some of the outstanding 
People 
who keep our department going, including our Staff 
and Students.  There is 
also a Directory
Listing of people in the department.




Activities


Find out about the activities we have in the department such as the

Association of CS Undergraduates or our excellent
Hockey Team.




Other Servers


Check out some of the other servers in the department, such as the 
 Cornell CS Gopher
Server or the
 Cornell CS Anonymous FTP
Server.  Or check other servers and pages at 

Cornell Web Sites







Questions and comments on the information
presented here can be directed to www@cs.cornell.edu. 


",non-course
"

Kev's Home page

















Kev's Home Page





Welcome!  That's the CS Department-issue picture of me to the left.  You are seeing a not-quite-up-to-date page for frames challenged web viewers.

I'm from Syosset, New York (one of those towns on Long Island) and received my Bachelor of Science degree here in December, 1994.  After working for a few months in California, I decided to come back here in the fall and am currently working on a Master of Engineering degree.  Why did I leave the ""land of sun"" to come back to Ithaca?  Maybe I missed the seasons here - rain, wind, snow, ice....  (Actually, I got more than enough rain while I was in Santa Barbara).  Anyway, I plan to graduate in May, 1996.

I'm currently working on my MEng project with Prof. Ramin Zabih at the Cornell Robotics and Vision Lab (CSRVL).   If you are interested in the topic of motion video segmentation or just general video processing, here is a paper which relates to my research in the area.


Some Links:


Companies:

Green Hills Software, Santa Barbara, California
Lockheed Martin (Control Systems), Binghamton, New York
Altera Corp., San Jose, California

Fun Stuff:

Games Domain
vThe Babylon 5 site

Other places:

Most Universities in the World
CareerMosaic
Top Web Sites




[Go up to students' page]
Say hi! Email: kmai@cs.cornell.edu 

Of course, this page is still under construction. 
Last Modified: January 24, 1995.  

There have been 208 accesses to this page.




",non-course
"Gerard Salton




Gerard Salton
Professor
gs@cs.cornell.edu
Ph.D. Harvard University, 1958


Natural-language text processing is a rapidly expanding field of research and development.  Large masses of machine-readable text now exist that can be cheaply stored on high-density optical storage media and rapidly retrieved on demand.  Furthermore, sophisticated methods are available for analyzing document texts, formulating appropriate user queries, conducting rapid file searches, and ranking the retrieved items in decreasing order of importance to the users.

At Cornell, we design and operate large, general-purpose text processing environments where texts can be handled without restrictions as to size or subject matter.  In the absence of knowledge bases that would be useful for unrestricted text databases, we use corpus-based text analysis systems that determine the meaning of words and expressions by a refined context analysis using statistical and probabilistic criteria.  Using the corpus-based approaches, we are able to determine text similarity with a high degree of accuracy.  There are two main applications:

The automatic generation of structured text collections (hypertext) where semantically similar pieces of text are automatically linked.  Hypertext representations of large databases provide flexible browsing capabilities for general-purpose text access.

The automatic retrieval of interesting text excerpts in response to available search queries.


We have done extensive work with an automated encyclopedia consisting of about 25,000 encyclopedia articles (the Funk and Wagnalls New Encyclopedia).  In addition, we are also processing the TREC collection consisting of about 800,000 full-text documents covering a number of different subject areas (over 2 gigabytes of text).

A sophisticated search and retrieval service exists, as well as a text linking system capable of relating different text sections, paragraphs, and sentences.  The main test vehicle continues to be the current version of the Smart text analysis and retrieval system, operating under UNIX on Sun Sparc Stations and Sun-4 terminal equipment.

University Activities

Member,  Engineering College Library Committee

Professional Activities

Associate Editor, ACM Transactions on Information Systems
Program Committee:  SIGIR 94, Seventeenth Int. Conference on Research and Development in Information Retrieval, Dublin, Ireland, 1994; EP '94, Electronic Publishing, Darmstadt, Germany, 1994; Information Retrieval and Genomics, National Library of Medicine, Bethesda, Maryland, May 1994; Multimedia-Hypermedia and Virtual Reality, Moscow, September 1994

Lectures

Automatic Construction of Hypertext Links, Federal Institute of Technology (ETH) Zurich, Switzerland, June 1993. 
Progress in Information Retrieval Research, University of Konstanz, Germany, June 1993. 
Hypertext and Information Retrieval, ASIS National Meeting, Columbus, Ohio, October 1993. 
Automatic Text Utilization in Large Full Text Databases.  Computer Science Colloquium, Ohio State University, Columbus, Ohio, October 1993.
Automatic Information Retrieval.  Lecture Course at Hypertext-93, Seattle, Washington, November 1993. 
Full Text Information Retrieval.  Microsoft Corporation, Seattle, Washington, November 1993. 
Automatic Text Utilization.  Workshop on Information and Genomics, National Library of Medicine, Bethesda, Maryland,  May 1994.

Publications

Approaches to Passage Retrieval in Information Systems.  Proceedings 16th Annual National Conference on Research and Development in Information Retrieval (SIGIR-93), Association for Computing Machinery, New York (1993), 49-58 (with J. Allan and C. Buckley). 
Selective Text Utilization and Text Traversal.  Proceedings Hypertext-93, Association for Computing Machinery, New York (November 1993), 131-144 (with J. Allan).
Automatic Structuring and Retrieval of Large Text Files.  Communications of the ACM, 37: 2 (February 1994), 97-108 (with J. Allan and C. Buckley).
Text Retrieval Using the Vector Processing Model.  Proceedings Third Annual Symposium of Document Analysis and Information Retrieval, University of Nevada, Las Vegas, Nevada (April 1994), 9-22 (with J. Allan).

Software

The Smart text analysis and retrieval system is made available free of charge for research purposes.  Several hundred copies of Smart (version 11) have been distributed and are used around the world.



Return to: 


 
        List of Faculty

 
        1993-1994 Annual Report Home Page

 
        Departmental Home Page

If you have questions or comments please contact: 
 www@cs.cornell.edu.


Last modified: 9 November 1994 by Denise Moore 
(denise@cs.cornell.edu).
",non-course
"Yuying Li




Yuying Li
Research Associate
yuying@cs.cornell.edu
Ph.D. University of Waterloo, 1988


My general research interests are in numerical optimization and scientific computation.  I am also interested in applying optimization techniques to solve real world engineering problems.

My current interests include generalizing the trust region theory for unconstrained minimization to nonlinearly constrained minimization.  In particular, for nonlinearly constrained problems, there do not exist acceptance conditions for optimality.  I have been investigating a new affine scaling trust region method for minimizing a nonlinear I (sub-1) function; including a trust region convergence analysis.  The method can be used to solve a general nonlinearly constrained minimization problem using an exact penalty approach.  An application of the new method has been considered for image enhancement problems.

Lectures

An Interior and Trust Region Method for Nonlinear Minimization Subject to Bounds.  1993 Conference on Scientific and Engineering Computing for Chinese Young Scientists, Beijing, China, August 1994. 

Publications

A Globally Convergent Method for Lp Problems.  SIAM Journal on Optimization, 3:  3 (1993), 609-629.
Centering, Trust Region, Reflective Techniques for Nonlinear Minimization Subject to Bounds.  Proceedings of 1993 Conference on Scientific and Engineering Computing for Chinese Young Scientists (1993), 241-246.



Return to: 


 
        List of Researchers

 
        1993-1994 Annual Report Home Page

 
        Departmental Home Page

If you have questions or comments please contact: 
 www@cs.cornell.edu.


Last modified: 9 November 1994 by Denise Moore 
(denise@cs.cornell.edu).
",non-course
"Richard Zippel




Richard Zippel
Senior Research Associate
rz@cs.cornell.edu
Ph.D. MIT, 1979


My research focuses on using symbolic mathematics and modern software techniques to automate the generation of scientific software, currently focusing on computational fluid dynamics.  This work will allow a scientist to specify the differential equations to be studied, the mathematical techniques that will be used perform the numerical computations and the architecture of the machine on which the calculations will be done.  The toolkit then converts the differential equations, via the supplied methods, into specialized code for the architecture.  With colleagues in the department of Mechanical and Aerospace Engineering, this toolkit has been used to generate the dynamical systems that arise in the study of the boundary layers in fluids.

A component of this toolkit is a computer algebra substrate called Weyl, that extends the data structures available in Common Lisp to include objects like polynomials, matrices, rational functions, rings, vector spaces, and ideals.  The introduction of these new objects into a programming language provides a number of new challenges to the language's type system and provides new opportunities for deductive reasoning, which we are pursuing.

Professional Activities

Editorial Board:  Journal of Symbolic Computation; ACM Transactions on Mathematical Software
Program Committee:  Principles and Practice of Constraint Programming Workshop '94
Referee/Reviewer:  AOR; NSF; Journal of Algebraic Algorithms and Error Correcting Codes; International Symposium on Symbolic and Algebraic Computation

Lectures

Algebraic Function Decomposition.  American Mathematical Society Regional Meeting, Syracuse, New York, September 12, 1993 (with Dexter Kozen and Susan Landau - Dexter Kozen presenter).
__. American Mathematical Society Regional Meeting, Syracuse, New York, May 6, 1994 (Susan Landau presenter).
Effective Algorithms for Polynomial Irreducibility Testing.  American Mathematical Society Regional Meeting, Syracuse, New York, September 12, 1993.
Vista:  A MicroStorage Architecture.  International Workshop on Object Oriented Operating Systems, Durham, North Carolina, December 10, 1993 (joint with Dawson Dean - Dawson Dean presenter).
__. IBM Scientific Center, Haifa, Israel, January 6, 1994.
__. Department of Electrical Engineering, Technion, Haifa, Israel, January 9, 1994.
Synthesizing Scientific Programs using SPL/Weyl.  Department of Computer Science, Weizmann Institute, Rehovot, Israel, December 28, 1993.
__. Department of Electrical Engineering, Technion, Haifa, Israel, January 3, 1994.
__. Department of Computer Science, SUNY, Albany, New York, April 20, 1994.
A New Modular Interpolation Algorithm for Factoring Multivariate Polynomials.  Algebra and Number Theory Symposium, Ithaca, New York, May 7, 1994 (joint with Ronitt Rubinfeld - Ronitt Rubinfeld presenter).

Publications

Effective Polynomial Computation.  Kluwer Academic Publishers, Boston Massachusetts (June 1993), 368 pages.
Vista:  A Microstorage Architecture That Implements File Systems and Object Databases.  Proceedings of the International Workshop on Object Oriented Databases (December 1993), 194-198 (with Dawson Dean).



Return to: 


 
        List of Researchers

 
        1993-1994 Annual Report Home Page

 
        Departmental Home Page

If you have questions or comments please contact: 
 www@cs.cornell.edu.


Last modified: 9 November 1994 by Denise Moore 
(denise@cs.cornell.edu).
",non-course
"

Kenneth P. Birman






Kenneth P. Birman
Professor
PhD Univ. of California, Berkeley, 1981




My research is concerned with fault-tolerant distributed computing and 
operating systems.  My focus is on using a distributed programming model 
based upon virtual synchronous process groups to solve such problems as 
managing replicated data, coordinating actions in a distributed setting, 
and performing dynamic reconfiguration.  This is done in a way that 
provides fault-tolerance, although it is limited to certain classes of 
reasonably benign failures.

My effort has a theoretical and a practical side.  The practical work 
started in 1985, when we developed a computing system called the Isis 
Toolkit.  Isis, with software tools to support virtual synchrony and 
fault-tolerance, became widely popular.  We are now developing a new 
system, Horus, which is intended to be more flexible than Isis and which 
addresses issues such as real-time communication and security.

The most important feature of Horus is its extensive use of layering, which 
permits it to be reconfigured for special purposes.  The basic idea is that 
Horus users should pay only for features that they actually use but should 
have available a very broad collection of options.  Horus also seeks 
leverage from the emergence of ATM network technology and from 
communication techniques such as Active Messages, which originated in work 
on parallel supercomputers.  Horus embodies an advanced security 
technology, developed by graduate students Mike Reiter and David Cooper, 
which is unusual in combining security, privacy, and high availability in a 
single package.

On the more fundamental side of the effort, the Horus group is looking at 
techniques for specifying and proving properties of process-group 
structured systems.  We are using the ML language to develop executable 
Òreference implementationsÕÕ of the major Horus layers, with the goal of 
using ConstableÕs Nuprl system to prove that the latter correctly 
implements the former.  We are also studying extensions of the virtual 
synchrony model, notably in work by Roy Friedman on adding real-time 
guarantees to Horus and in work by Mark Hayden on support for probabilistic 
broadcast primitives and programming tools.

Horus is very much a collaboration.  The architecture and development side 
of the effort is headed by Dr.  Robbert van Renesse, Werner Vogels and Roy 
Friedman.  Six graduate students are working on aspects of the system, 
including the development of object-oriented programming tools for 
multimedia communication applications, security and privacy, high-speed 
protocols that exploit ATM, and other problems.  We are also collaborating 
within the department, notably with Thorsten von Eicken and Brian Smith.



University Activities

Chair, Engineering Policy Committee  
Acting Head, Computer Science Department Master of Engineering Program  
Member, Computer Science Department Faculty Recruiting Committee  
Member, Cornell Academic Leadership Committee 

Professional Activities

Editor in Chief, ACM Transactions on Computing Systems
Chief Scientist, Isis Distributed Systems, Inc.  
Member: ISAT study group on Robustness of Critical Elements of the 
	National Information Infrastructure.

Publications

The process group approach to reliable distributed computing. Communications 
	of the ACM  36, 12 (December 1993), 37-53.  
Integrating runtime consistency models for distributed computing. Journal of 
	Parallel and Distributed Computing  23, (Nov. 1994), 158-176.  
Reliable distributed computing using the Isis toolkit. (eds. K.P.  Birman 
	and R. van Renesse) IEEE Computer Society Press  (1994), Los Alamitos, 
	California.  
Reliability through consistency. IEEE Software 12, 3 (May 1995), 29-41  
    (with B. Glade).

Distributed Software

 Horus system. 



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 24 November 1995 by Denise Moore 
(denise@cs.cornell.edu).


",non-course
"

Donald P. Greenberg







Donald P. Greenberg 
Jacob Gould Schurman Prof. of Computer Science 
Director, NSF Science and Technology Center for Computer Graphics and 
	Scientific Visualization 
PhD Cornell University, 1968




For the past two decades, our computer graphics activities have involved 
the development of a wide range of graphic input and display techniques.  A 
number of input methods have been implemented, and progress has been made 
on a large variety of display routines.  Graphics research topics 
previously investigated include polygon clipping, hidden surface 
algorithms, texturing, spatial and temporal aliasing problems, geometric 
modeling, parametric surface descriptions, and color science.

Our current focus of graphics research involves the three-dimensional 
modeling of very complex environments and algorithms for realistic image 
synthesis.  A modular testbed that is sufficiently flexible to evaluate 
different modeling and image generation techniques has been created.  
Laboratory research is now being conducted on light reflection models, 
methods for determining the interaction between reflecting surfaces, 
techniques for improving the computational efficiency of ray-tracing, 
parallel processing strategies, perceptual studies, micro-geometry surface 
modeling, motion control, dynamics, constraint modeling, anti-aliasing 
strategies, and a host of other topics related to complex modeling and 
realistic image displays.  New application research is being started in 
volume rendering and medical imaging, digital photography, animation, and 
the development of generic tools for scientific visualization, as well as 
core technologies for multi-media environments.

Most of the research is conducted within the facilities of the Program of 
Computer Graphics, which is a member of the new National Science Foundation 
Science and Technology Center for Computer Graphics and Scientific 
Visualization.  Other participating universities are Brown University, 
California Institute of Technology, University of North Carolina (Chapel 
Hill), and the University of Utah.


University Activities

Director, Program of Computer Graphics  
Director, National Science Foundation Science and Technology Center 
	for Computer Graphics and Scientific Visualization

Professional Activities

Editorial Board, Computer Graphics Journal
National Academy of Engineering  
Founding Fellow, American Institute of Medical and Biological Engineering  
Fellow, ACM



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 24 November 1995 by Denise Moore 
(denise@cs.cornell.edu).

",non-course
"

Juris Hartmanis







Juris Hartmanis 
Walter R. Read Professor of Engineering  
PhD California Institute of Technology, 1955 





The strategic goal of our research is to contribute to the development of a 
comprehensive theory of computational complexity.  Computational complexity 
is the study of the quantitative laws that govern computation, and it is an 
essential part of the science base needed to guide, harness, and exploit 
the explosively growing computer technology.  Computational complexity 
classifies problems by the amounts of various computational resources 
needed to solve them.  This classification yields complexity classes, each 
of which consists of all problems that can be solved within a given 
computational resource bound.  To gain a deeper understanding of what makes 
problems hard to compute, we explore various complexity classes, relations 
between these classes, and the internal structure of these classes.  We 
also study the trade-offs between different computational resources in 
problem solving, with particular attention to sequential-time, 
parallel-time, nondeterministic-time, memory requirements, randomness as a 
computational resource, and interactive computing.


University Activities

Member, Faculty Council of Representatives
Chair, Computer Science Department Recruiting Committee

Honors

ACM Turing Award (with R.E.Stearns)
Member, National Academy of Engineering 
Foreign Member, Latvian Academy of Sciences 
Fellow, American Academy of Arts and Sciences 
Fellow, New York State Academy of Sciences 
Fellow, American Association for the Advancement of Science (AAAS) 
Charter Fellow of the ACM 

Professional Activities

Editor: Springer-Verlag Lecture Notes in Computer Science,SIAM 
	Journal of Computing, Journal of Computer and Systems Sciences
Advisory Board for EATCS Monographs in Theoretical Computer Science, 
	Springer-Verlag  
Board of Directors, Computing Research Association, 1989-1994  
IFIP Technical Committee for Foundations of Computer Science  
Advisory Council, George P. Brown School of Engineering, Rice 
	University, Houston, Texas  
National Academy of Engineering Peer Committee for Computer Science 
	and Engineering, 1991-1994  
Visiting Committee to the Physical Sciences Division, University of 
	Chicago, 1992-1995  
EATCS Council, 1991-  
Board of Advisors: International Journal for the Foundations of 
	Computer Science, World  Scientific Press
Editorial Board: Chicago Journal of Theoretical Computer Science, 
	Electronic Journal for the Foundation of Computer Science, MIT Press  
Foundations Editor, Electronic Journal for Universal Computer Science
Goedel Prize Committee  
Member, Computer Science and Telecommunications Board of the National 
	Research Council,1995-98 

Awards

Honorary doctoral degree, Dr.h.c., University of Dortmund, Germany,1995  

Lectures

Some observations about computer science. Banquet speech, International 
	Logic  Programming Symposium, Cornell University, November 16,1994.  
Computational complexity: its scope, nature and future. Distinguished 
	Lecture Series, University of Virginia, February 13, 1995.  
___.  Distinguished Lecture Series, University of Tennessee,  April 17, 1995.

Publications

On computational complexity and the nature of computer science.  Turing 
	Award Lecture. Communications of the ACM 37,10, (October 1994), 37-43.  
The random Oracle hypothesis is false.  Journal of Computer and System 
	Sciences  49, 1,  (August 1994), 24-39 (with Richard Chang, Benny Chor, 
	Oded Goldreich, Johan Hastad,  Desh Ranjan, and Pankaj Rohatgi).  
On Hausdorff and topological dimension of the Kolmogorov Complexity of 
	the real line.  Journal of Computer and System Sciences  49, 3, 
	(December 1994), 605-619  (with Jin-yi Cai).
On the weight of computations. EATCS Bulletin  55, (February 1995), 136-138. 



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 24 November 1995 by Denise Moore 
(denise@cs.cornell.edu).


",non-course
"

John E. Hopcroft







John E. Hopcroft
Joseph Silbert Dean of Engineering
Professor of Computer Science
PhD Stanford University, 1964





On January 1, 1994, I was appointed dean of the College of Engineering and 
now oversee the ten academic departments that comprise the college as well 
as various research units.  My involvement with the Computer Science 
Department continues through research on robust geometric algorithms, 
modeling and simulation, and information capture and access.

In collaboration with the Design Research Institute, we are developing 
technologies to facilitate information capture and access within an 
engineering design environment.  Among the technologies being researched 
are distributed databases and persistent object storage, document image 
processing and management, multimedia and user interface technology, 
information science for heterogeneous data, knowledge representation and 
organization, and remote collaboration technologies.


Professional Activities

Member, National Research Council, Commission on Physical Sciences, 
	Mathematics, and Applications
Member, National Science Board
Member, Scientific Advisory Board, United States Air Force
Member, National Academy of Engineering
Fellow, American Academy of Arts and Sciences
Fellow, American Association for the Advancement of Science (AAAS)
Fellow, Institute of Electrical and Electronics Engineers (IEEE)
Fellow, Association for Computing Machinery
Chairman, SIAM Board of Trustees
Member, Scientific Advisory Committee for the David and Lucile 
	Packard Foundation
Member, Sloan Research Fellowship Committee
Advisory Board, Supercomputing Research Center, Institute for 
	Defense Analysis
Editor: Oxford University Press International Series on Computer 
	Science, Algorithmica, Discrete and Computational Geometry
Associate Editor: International Journal of Computational Geometry 
	and Applications, Journal of Computer and Systems Sciences, 
	Journal of Information Sciences



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 24 November 1995 by Denise Moore 
(denise@cs.cornell.edu).

",non-course
"

Keshav Pingali







Keshav Pingali
Associate Professor
PhD MIT, 1986 





My research group works in the areas of programming languages and compilers 
for parallel architectures.

Our goal is to develop tools for generating parallel code for applications 
programs that deal with large sparse matrices.  Most scientific 
applications involve the numerical solution of partial differential 
equations.  The techniques used almost always produce a system of algebraic 
equations that involve large sparse matrices.  Unfortunately, existing 
compiler technology does a poor job of parallelizing sparse matrix 
programs.  We take a radically different approach to this problem.  Our 
compiler produces parallel sparse-matrix programs from sequential 
dense-matrix programs, using information from the user about the sparsity 
structure of matrices in the program.  This enables us to use tools from 
the restructuring compiler area.  Preliminary experiments with some Krylov 
space solvers show that the code produced by our compiler is competitive 
with hand-parallelized code in libraries like Argonne's PetSc library.  We 
will extend our approach to direct methods for solving linear systems and 
to applications that require adaptive mesh refinement.

This project builds on our earlier work on restructuring compilation 
techniques for dense matrix programs.  We have developed restructuring 
techniques for compiling programs to distributed memory and non-uniform 
memory access (NUMA) architectures like the IBM SP-2 and CM-5, where a 
processor can access local memory faster than non-local memory.  To get 
good performance, the compiler must not only parallelize but must also 
ensure locality of reference by matching code and data distribution; when 
non-local references must be made, block transfers are preferable to many 
small messages.  We recently developed the best algorithm known for the 
automatic alignment of computation and data and are incorporating it into 
our compiler test-bed.  In earlier work, we developed a novel loop 
restructuring technique called access normalization, which transforms loop 
nests for increased locality and potential for block transfers, and 
implemented it in the LAMBDA loop transformation toolkit - our paper 
summarizing these results won the best paper prize at ASPLOS V.  We worked 
with Hewlett-Packard to transfer this technology to HP's FORTRAN compiler 
product line for uniprocessors and multiprocessors.

We have developed new frameworks for program analysis and optimization 
based on the dependence flow graph (DFG).  The DFG knits together the data 
and control dependence information of a program, permitting the development 
of optimization algorithms that generate better code than is possible with 
competing approaches.  Our results are of independent interest; for 
example, we recently developed optimal algorithms for control dependence 
problems, answering a foundational question that had been open for almost 
a decade.  This work led to the development of a linear-time algorithm for 
computing the static single assignment (SSA) form of programs.  These 
results have been incorporated into a number of compilers, including those 
at IBM, Microsoft, HP, and Flavors.


Professional Activities

Panel member and organizer, ACM Symposium on Principles and Practice 
	of Parallel Programming, 1995
Member, NSF National Young Investigator (NYI) Awards Panel 
Consultant: Hewlett Packard Labs, Intel Corporation, Army Ballistic 
	Research Labs, Odyssey Research, Math Sciences Institute 
Referee/Reviewer: ACM TOPLAS, IEEE Transactions on Computers, Journal 
	of Parallel and Distributed Computing, Journal of Supercomputing, 
	IEEE Computer
Editorial Board, International Journal of Parallel Programming

Awards

National Science Foundation Presidential Young Investigator (1989-1994) 
IBM Faculty Development Award (1986-88)
Best paper prize,  ASPLOS V, 1992  

Lectures

Fast algorithms for control dependence problems. Hewlett-Packard 
	Corporation, Chelmsford,  Massachusetts, January 1995.
___. Computer Science Department, Wayne State University, Detroit, 
	Michigan, February 1995.
___. Rutgers University, New Brunswick, New Jersey, May 1995.
___. Microsoft Research Laboratories, Redmond, Washington, June 1995.

Publications

Solving alignment using elementary linear algebra. Proceedings of the 
	Seventh Annual Workshop on Languages and Compilers for Parallel 
	Computers (LCPC), Lecture Notes in Computer Science 892, Ithaca, NY 
	(August 1994) 46-60  (with David Bau, Induprakas Kodukula, 
	Vladimir Kotlyar,  and Paul Stodghill).
APT: a data structure for optimal control dependence computation. 
	ACM SIGPLAN '95  Conference on Programming Language Design and 
	Implementation  (PLDI June 1995), 171-185 (with Gianfranco Bilardi). 



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 24 November 1995 by Denise Moore 
(denise@cs.cornell.edu).

",non-course
"

Fred B. Schneider







Fred B. Schneider 
Professor
PhD State Univ. of N.Y., Stony Brook, 1978





Techniques for understanding concurrent programs are becoming increasingly 
important as distributed computing systems become widespread in 
mission-critical applications.  My research has focused on the development 
of these techniques.

I have been heavily involved in applying assertional reasoning to the 
design of concurrent, distributed, fault-tolerant, and real-time programs.  
I am completing a textbook on this subject.  Along with David Gries, I 
continue investigations concerning our first-order equational logic E.  
This past year, we streamlined the inference rules and evaluated a number 
of techniques for handling undefined terms and partial functions.

Thomas Bressoud and I completed building and analyzing our hypervisor-based 
implementation of replication management for HP's PA-RISC architecture.  
Our protocols ensure that the sequence of instructions executed by two 
virtual machines running on different physical processors are identical.  
The protocols also coordinate I/O issued by these virtual machines.  Use of 
a hypervisor to implement replica coordination is attractive - at least, in 
theory.  When replica coordination is implemented in a hypervisor, it 
instantly becomes available to all hardware realizations of the given 
instruction-set architecture, including realizations that did not exist 
when the hypervisor was written.  Second, when replica coordination is 
implemented in a hypervisor, a single implementation suffices for every 
operating system that executes on that instruction-set architecture.  
Finally, by implementing replica coordination in a hypervisor, the 
applications programmer is freed from this task.

Jointly with Dag Johansen (University of Tromsø, Norway) and Robbert van 
Renesse, I started the TACOMA project (Tromsø And COrnell Moving Agents) to 
investigate support and use of mobile processes in building 
mission-critical applications.  By structuring a system in terms of agents, 
applications can be constructed in which communication-network bandwidth is 
conserved.  Data may be accessed only by an agent executing at the same 
site as the data resides.  An agent typically will filter or otherwise 
reduce the data it reads, carrying with it only the relevant information as 
it roams the network.  Two TACOMA prototypes have been completed, and we 
are implementing a third system based on our experiences.

Finally, I developed with Scott Stoller a new algorithm for detecting 
whether a particular computation of an asynchronous distributed system 
could have passed through a global state satisfying some given state 
predicate.  The new algorithm allows more efficient detection than is 
possible with previous algorithms.


University Activities

Sabbatical leave, 1994-95

Professional Activities

Editor-in-chief, Distributed Computing
Editor, Information Processing Letters
Editor, IEEE Transactions on Software Engineering
Editor, High Integrity Systems
Editor, Annals of Software Engineering
Editor, ACM Computing Surveys
Co-Editor, Texts and Monographs in Computer Science, Springer-Verlag
Program Committee Member, 3rd International School and Symposium on 
	Formal Techniques in Real-Time and Fault-Tolerant Systems
Program Committee Member, 3rd International Conference on the Mathematics 
	of Program Construction
Program Committee Member, 4th International Workshop On Responsive 
	Computer Systems
Program Committee Member, Workshop on Composability of Fault-resilient 
	Real-Time Systems
Program Committee Member, Fifth IFIP Working Conference on Dependable 
	Computing for Critical Applications
Program Committee Member, Sixteenth IEEE International Real-Time Systems 
	Symposium
Program Committee Member, DIMACS Workshop on Verification and Control 
	of Hybrid Systems
Steering committee, Center for High Integrity Software Systems 
	Assurance (CHISSA), National Institute of Standards and Technology
Member, ISAT Defensive Information Warfare Study Group, Advanced Research 
	Projects Agency
Review committee, Leibniz Center at Hebrew University
Member, IFIP Working Group 2.3 (Programming Methodology)

Awards

Fellow, American Association for Advancement of Science
Fellow, Association for Computing Machinery

Lectures

Proof outlines for programs. 6 lectures. 15th International Summer 
	School, Marktoberdorf, Germany, July 1994.
On the origin of traditions. Banquet speech. 15th International Summer 
	School, Marktoberdorf, Germany, July 1994.
Reasoning about programs by exploiting the environment. AFOSR 
	Grantees/Contractors Meeting In Software and Systems, Washington, 
	D.C., Sept. 1994.
Verifying hybrid systems by exploiting the environment. Symposium on 
	Formal Techniques in Real-Time and Fault-Tolerant Systems. 
	Lubeck, Germany, Sept. 1994.
Panelist: comparative merits of synchronous, partially synchronous, 
	and asynchronous models for safety-critical real-time systems. 
	Symposium on Formal Techniques in Real-Time and Fault-Tolerant 
	Systems. Lubeck, Germany, Sept. 1994.
Moderator: issues in writing formal specifications. Specification and 
	Refinement of Reactive Systems. International Conference and Research 
	Center for Computer Science, Dagstuhl, Germany, Sept. 1994.
Merging policies. Workshop on Computer Support for Policy Analysis and 
	Design. George Mason University, Virginia, Dec. 1994.
Avoiding AAS mistakes. Invited speaker. Air Traffic Management Workshop, 
	NASA Ames Research Center, Feb. 1995.
Reasoning about programs by exploiting the environment. Technical 
	University of Munich. Munich, Germany, Feb. 1995.
Proof outlines of the past. University of North Carolina, Chapel Hill, 
	North Carolina, March 1995.
Adding fault-tolerance, virtually. Distinguished Lecture Series, 
	University of North Carolina, Chapel Hill, North Carolina, March 1995.
Moderator and panel organizer: teaching logic as tool. SIGCSE Technical 
	Symposium on Computer Science Education, Nashville, Tennessee, March 1995.
Proof outlines of the past. Technion, Haifa, Israel, March 1995.
Adding fault-tolerance, virtually. University of Tromsø, Tromsø, Norway, 
	April 1995.
Concurrent programs from specifications. University of Tromsø, Tromsø, 
	Norway, April 1995.
Placing agents on airplanes - a  view of AAS and its successor. ARPA ISAT 
	Defensive Information Warfare Study Group Meeting, Washington, D.C., 
	June 1995.

Publications

Reasoning about programs by exploiting the environment.  Proceedings 21st 
	International Colloquium, ICALP'94   (Jerusalem, Israel, July 1994), 
	Lecture Notes in Computer Science 820, Springer-Verlag, New York, 
	328-339 (with L. Fix).
Notes on proof outline logic. Working Material. 15th International Summer 
	School, Marktoberdorf, Germany, July 1994.
Research on fault-tolerant and real-time computing. Software and Systems 
	Program Summary.   (Bolling Air Force Base, Washington D.C., Sept. 
	1994), Air Force Office of Scientific Research, 75-77.
Hybrid verification by exploiting the environment.  Formal Techniques in 
	Real-Time and Fault-Tolerant Systems  (Lubeck, Germany, September 
	1994), Lecture Notes in Computer Science, Volume 863, Springer-Verlag, 
	New York, 1-18 (with Limor Fix).
Equational propositional logic.  Information Processing Letters  53, 3 
	(February 1995), 145-152 (with D. Gries).
Refinement for fault-tolerance:  An aircraft hand-off protocol.  
	Foundations of Ultradependable Parallel and Distributed Computing, 
	Paradigms for Dependable Applications, Kluwer Academic Publishers, 
	1994, 39-54 (with K. Marzullo and J. Dehn).
Teaching logic as a tool. Proceedings 26th SIGCSE Technical Symposium 
	on Computer Science Education  (Nashville, Tennessee, March 1995), 
	SIGCSE Bulletin 27, 1, 384-385 (with D. Gries).
Operating system support for mobile agents. Proceedings Fifth Workshop on 
	Hot Topics in Operating Systems HOTOS-V  (Orcas Island, Washington, 
	May 1995), 42-45 (with Dag Johansen and Robbert van Renesse).
Verifying programs that use causally-ordered message-passing. Science of 
	Computer Programming  24, 2 (1995), 105-128 (with S. Stoller).
On teaching proof.  Arts & Sciences NewsLetter  16, 2 (Spring 1995), 3  
	(with D. Gries).
A new approach to discrete teaching mathematics. Primus V, 2 (June 1995), 
	113-138  (with D. Gries).



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 24 November 1995 by Denise Moore 
(denise@cs.cornell.edu).

",non-course
"

Charles Van Loan







Charles Van Loan
Professor
PhD University of Michigan, 1973 





We continue to develop new methods for various Kronecker product 
computations.  In particular, we have a method for solving the nearest 
Kronecker product problem when the factor matrices are subjected to 
inhomogeneous constraints.  Some applications in signal processing and 
Markov processes are solved as a result.  Kronecker product descriptions 
for various fast wavelet transforms have also been derived.  Our aim is to 
proceed by analogy to the FFT, where such descriptions have played an 
important role in the development of high-performance algorithms.

Both undergraduate texts on computational science that I have been working 
on for the last four years are now in production.  One is currently being 
translated into C in anticipation of the fall semester.


University Activities

Computer Science Department Undergraduate Curriculum Committee
Department Representative,  Arts and Sciences Chairs'  Meeting
Freshman Admissions Reader,  Arts and Sciences 

Professional Activities

Editor, SIAM Journal of  Matrix Analysis
Member, Wilkinson Prize Committee, SIAM 
Member, DiPrima Prize Committee, SIAM 
Member, Organizing Committee, Householder Conference 
Member, Householder Prize Committee 

Lectures

Applications of the Kronecker product. Linkoping University, Sweden, 
	January 9, 1995.
___. Umea University, Sweden, January 12, 1995.
Building intuition for computational science. Umea University, Sweden, 
	January 12, 1995.
Applications of the Kronecker product. Ohio State University, 
	April 26, 1995.
Building intuition for computational science. Ohio State University, 
	April 27, 1995.

Publications

Optimizing closed loop adaptive optics performance with use of 
	multiple control bandwidths. Journal of the Optical Society of 
	America 11  (1994), 2871-86 (with B. Ellerbroek, N. Pitsianis, 
	and R. Plemmons).



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 25 November 1995 by Denise Moore 
(denise@cs.cornell.edu).

",non-course
"

Catherine M. Wagner




Catherine M. Wagner
Senior Lecturer
PhD Cornell University, 1979 





My primary responsibilities in the Computer Science Department are in 
teaching.  I am working with others in the department to revise the 
curriculum for our lower level courses.  I am specifically interested in 
the development of a course for students who are under-prepared for our 
introductory course in programming.


University Activities

Computer Science Undergraduate Curriculum Committee 

Professional Activities

Association for Symbolic Logic 
Association for Computing Machinery 
Institute of Electrical and Electronics Engineers 
Association for Women in Mathematics 



Return to: 


 
	1994-1995 Annual Report Home Page

 
	Departmental Home Page

If you have questions or comments please contact:
www@cs.cornell.edu.


Last modified: 27 November 1995 by Denise Moore 
(denise@cs.cornell.edu).

",non-course
"

 Faculty Research Interests : Brian Smith 


 Brian Smith 



 bsmith@cs.cornell.edu
 Xerox Professor of Computer Science
 Ph.D., University Of California at Berkeley, 1994
 Office: 4107B Upson Hall
 Office phone: 607-255-1180
 Office hours this semester: Tues & Thurs 3:00 to 4:00



Research Interests
Teaching
Selected Publications
Research Talks
Misc Links


Research Interests

My research goal is to make video a first class data type in our
computing environment. To this end, my research group,
 Project Zeno,
is building technologies supporting the storage, communication, and
processing of continuous media data.  In contrast to other commercial
and research approaches, which require specialized hardware, operating
systems, or networks to be usable, all of these technologies we are
designing fit into the current research environment.  Our premise is
that the current hardware, software, and communication infrastructure
is sufficient to support research into continuous media systems and
applications.  We are verifying this hypothesis by building working
systems.


Our research on storage systems is directed towards building the Zeno
distributed video file server.  The Zeno architecture uses a network of
workstations connected by a generic local area network (e.g., an
ethernet), a common environment in computing research laboratories.
Each workstation can act simultaneously as both a client and a server
of continuous media data.   As a client, a workstation plays video
stored on one or more servers. As a server, a workstation is a file
server for video data.  Each client can receive video stored at several
servers, and each server can service several clients.   Compared with
large centralized servers, the advantages of this design are:


 Scalability.  As new clients are added, new servers are
     automatically added.

 Load balancing. The load generated by serving videos is distributed
     both across machines and across networks (in the case where the
     servers are located on different networks).

 Low initial investment. By utilizing existing infrastructure, the
     Zeno architecture promotes early adoption in research environments
     with almost no initial investment.


Our research on communication systems is centered around best effort
delivery protocols.  Such protocols are built on existing network
protocols and, in contrast to many other research efforts, do not need
to reserve network resources to establish a connection.  Resource
reservation protocols are well suited to the national communication
infrastructure where users can be charged on a per call basis for
bandwidth and connections, but are poorly suited to network
environments where the network is a shared resource equally accessible
by all researchers.  Our approach is appropriate for the latter
environments, commonly found in research laboratories.  The
communication protocol we have developed, called Cyclic-UDP, is built
on top of the UDP datagram protocol, and is designed to transport audio
and video data in playback applications in local, metropolitan, and
wide area networks.  Cyclic-UDP is used by the Zeno file server to
deliver audio and video data to clients.  A
 paper describing cyclic UDP is available
online , as well as the
 slides from a research talk. 

Our research on processing video data has been two-fold.  First, we are
developing algorithms to process video data in the compressed
representation.  Processing video without decompression leads to
dramatic speed-ups in processing performance since it both removes the
time-consuming processes of compression and decompression and reduces
the amount of data that must be processed.  Experiments with an
implementation of these ideas on JPEG compressed image data indicates
that the data can be processed one to two orders of magnitude faster
than what was possible with previous approaches.  We are currently
extending these ideas by parallelizing the algorithms using networks of
workstations and by developing a method for transcoding video in
software.  In video transcoding, video is translated from one
compression format to another, a useful operation for video file
servers that must service heterogeneous clients.
A  paper describing compressed
domain processing  is available online.


Our research on video processing is also exploring methods to simplify
experimentation with video processing by developing a programming
language where video is a first class data type.  This language, called
Rivl (pronounced ""rival""), allows
video processing effects to be specified independent of the resolution
and format of the source material.  The language does for video what
Postscript did for text and graphics: it provides a resolution
independent method for specifying video processing.  Thus, the same
program can process low quality QuickTime video very quickly while
editing decisions are made, and then be used to format a high quality
finished product off-line, in much the same way that Postscript can be
previewed on a workstation at low quality, then sent to a 2600 dpi
printer for camera ready copy. 
A  paper describing RVL 
is available online.


A  talk that reviews our research on
video processing,  both compressed domain processing and Rivl,
is available online.


The common theme of all these efforts is to provide tools to make video
usable in our research environment.
A  talk that reviews this research 
is also available online.


Teaching

At Cornell University, I teach an undergraduate course  (CS 314) on computer
architecture, and a graduate course  (CS
631) on multimedia systems.


Selected Publications

 Jonathan Swartz, Brian C.  Smith
    
A Resolution Independent Video Language 
    Proc. of the Third ACM International Conference on Multimedia, San
    Francisco, CA, November 5-9, 1995. (An
    
    HTML version is also available).

 Asif Ghias, Jonathan Logan, David Chamberlin, Brian C.  Smith
    
Query By Humming -- Large Musical Information
    Retrieval in An Audio Database 
    Proc. of the Third ACM International Conference on Multimedia, San
    Francisco, CA, November 5-9, 1995. (An  HTML version is also available).

 Peter Liu, Brian C. Smith, Lawrence A. Rowe
     Tcl-DP Name Server, 
    Proc. of the 1995 Tcl/TK Workshop, Toronto, Ontario, Canada, July 1993.

 Brian C. Smith, 
    
Cyclic-UDP: A Priority-Driven Best-Effort,
    
 Brian C. Smith, 

Fast Software Processing of Motion JPEG Video, 

Proc. of the Second ACM International Conference on Multimedia, San
Francisco, CA, October 15-20, 1994.

 Lawrence A.Rowe, Ketan Patel, Brian C. Smith, 

MPEG video in software: representation, transmission and playback,

IS&T/SPIE Symposium on Electronic Imaging: Science & Technology, San Jose,
California, February, 1994.

 Brian C. Smith, Lawrence A. Rowe, Stephen C. Yen 

Tcl Distributed Programming,

Proc. of the 1993 Tcl/TK Workshop, Berkeley, CA, June 1993.

 Ketan Patel, Brian C. Smith, and Lawrence A. Rowe, 

Performance of a Software MPEG Video Decoder, 

Proc. of the First ACM International
Conference on Multimedia, Anaheim, CA, August 1-6, 1993, pp 75-82.

 Brian C. Smith, Lawrence A. Rowe, 

A New Family of Algorithms for Manipulating Compressed Images,

IEEE Computer Graphics and Applications, September, 1993.

 Lawrence A. Rowe, Brian C. Smith, 

Continuous Media Player,

Third International Workshop on Network and Operating Systems Support
for Digital Audio and Video, Nov. 12-13, 1992, San Diego, CA.


Selected Research Talks

  
      Distributed Multimedia System's Research at Cornell
      
      My most recent research

  
      A Resolution Independent Video Language,
      
      Talk at Xerox Webster Research Center, June 20, 1995 


  
     A Best-Effort Transmission Protocol for Continuous Media Data
      
  
     Computing with Video: Xerox Site Review, Nov 29, 1994
      
  
     University of Minnesota Colloquium Talk, Feb 6, 1995
      


Misc Links
 
Multimedia Courses on the Web 
   The Art Work of Annette Hanna  
 
	Tcl7.5/Tk4.1 Manual

	MMCN96: Electronic Proceedings

	CMT Documentation
The PriceWeb



",non-course
"Robert L. Constable


Robert L. Constable
Department Chair/Professor
rc@cs.cornell.edu

Ph.D. University of Wisconsin, Madison, 1968
Research

We are engaged in the study of computer systems that provide
mechanical assistance in problem solving, especially in programming
and mathematics.  This involves a long term study of ways to make the
formalization of mathematics feasible and useful.  We have implemented
three such systems in the past tne years: PL/CV, PRL, and Nuprl.

Our major experimentation is with Nuprl, a 60,000-line Lisp
program that implements a constructive theory of types.  Systems such
as Nuprl are useful formalizations of mathematics because they can
express a wide variety of proof and program-building methods as
metalevel programs of the system.  These provide considerable theorem
proving power.  Moreover, Nuprl is especially useful because it can
evaluate the computational content of theorems.  In principle, Nuprl
is both a fomal system of mathematics and a programming language.

We continue to improve Nuprl; the current version used at Cornell is
called Nuprl 4.  It differs from its predecessors in having a new term
editor designed by Stuart Allen and implemented by Richard Eaton.  Its
internal structure is more modular, making the system suitable for he
definition of a wide variety of logics beyond the built-in
constructive type theory.  Also, the entire theorem-proving mechanism
has been rebuilt and stream-lined by Paul Jackson, building on the
work of Douglas Howe.  This contributes to the generic nature of Nuprl
4.  Finally, this version of the system can refer to itself.  There is
an internal description of the language and its logic built
principally by William Aitken using the theory developed by Allen,
Howe, and myself.  Richard Eaton designed a link between the internal
description of the logic and the logic itself, which makes it possible
to prove theorems about the process of proving theorems.

We are also engaged in three exciting joint ventures.  One is with
Miriam Leeser of Electrical ENgineering and the other two are in
Computer Science; with David
Gries on Polya and with  Richard
Zippel on Weyl.  With
Lesser, we are involved in hardware synthesis and verification.
Leeser and her student Mark Aagard have used Nuprl to prove the
correctness of a 1000-line boolean circuit minimization package, Pbs,
used by circuit designers.  This is a component of Leeser's Bedroc
system (it implements the weak division algorithm, which is widely
used in circuit design systems).  This major theorem proving effort
taught us a great deal about the effectiveness of our technology in
the hands of expert users from an application domain.

The second joint venture involves building a model of the Polya programming language and a
program refinement mechanism for it, both designed by David Gries,
which will enable him to write his handbook of algorithms in the
manner that he devised through years of study of the programming
process.  Stuart Allen has givne a formal type-theoretic definition of
Polya.  We expect to be experimenting soon with transforms and trying
to capture the programming style that Gries wants.

We have recently begun a collaboration that we hope to relate to the
Polya effort.  Conal Mannion has been exploring the possibility of
using Nuprl in computational science.  We have been discussing
problems with Richard Zippel and are hoping to connect Zippel's
symbolic algebra system, Weyl, with Nuprl in the near future.  This
will be used to explore the development of scientific computing
software using Weyl and Nuprl together with other tools that Zippel is
building.
Professional Activities

Editor, Journal of Symbolic Computation
Editor, Academic Press
Editor, Journal of Logic and Computation
Editor, Oxford University Press
General Chair, LICS
Program Committee, North American Jumelage
Program Committee, Theoretical Aspects of Computer Software
Referee/Reviewer: NSERC (Canada), NSF, Theoretical Computer Science

University Activities

Chair, Computer Science Recruiting Committee
Computer Science Computing Facilities Committee
Provost's Study Committee on Mathematics

Lectures

Formal theories and software systems: fundamental connections between
computer science and logic.  INRIA's 25th Anniversary Celebration, Paris, 
France, December 1992.
The Nuprl software development system.  Computer Science Colloquium, Ben
Gurion University, Ber Sheva, Israel, January 1993.
Formal theories and software systems.  State of Israel Symposium, Tel Aviv,
Israel, January 1993.
___. Association for Symbolic Logic, Annual Meeting, Notre Dame University,
Notre Dame, Indiana, March 1993.
Metaprogramming in type theory.  State University of New York, Buffalo,
New York, March 1993.
Formal explanations of software.  Formal Methods and Software Engineering
Workshop, University of Pennsylvania, Philadelphia, Pennsylvania, May 1993.

Publications

Formal theories and software systems: fundamental connections between
computer science and logic.  In Future Tendencies in Computer Science,
Control and Applied Mathematics (ed. A Bensoussan and J.-P. Verjus)
Lecture Notes in Computer Science 653, Springer-Verlag (December 1992),
105-127.
Metalevel programming in constructive type theory. In Programming and
Mathematical Method (ed. Manfred Broy), NATO ASI Series F88,
Springer-Verlag (1992), 45-93.

",non-course
"

Adam Florence








      Adam Florence
      4162 Upson Hall
      Cornell University
      Ithaca, NY 14853-7510
      607-255-2219
aflorenc@cs.cornell.edu






I am a first-year Ph.D. student in
computer science at
Cornell University. My professional
interests include simulation and numerical analysis.

Follow these links for find out more about me.

Academics
Research
Work
Interests
   
Athletic
Other



Last updated 22 Sept 1996.
E-mail me
with comments or corrections.


",non-course
"

Marcos Kawazoe Aguilera Home Page


Marcos Kawazoe Aguilera







    Marcos Kawazoe Aguilera
    Department of Computer Science
    Cornell University
    Ithaca NY, 14853-7501
    +1 607 255-7416

      aguilera@CS.Cornell.EDU)
    



About Me
I am a second year PhD student at Cornell University.

Distributed Systems and Algorithms

Randomization and Failure Detection: A Hybrid Approach
  to Solve Consensus
Going on a tour to Brazil?
Check this page for some
  suggestions


   Warning: Permanently Under Construction

Marcos Kawazoe Aguilera (
  
    aguilera@CS.Cornell.EDU)
  



",non-course
"
 


			Alfred's Home Page
	



Alfred Hong



..getting dizzy here..

Office: 319 Upson Hall, Cornell University, Ithaca, NY, 14853, USA
Office Phone: +1 607 255-1041


Worthwhile web sites to check out


        	CNN News


        	SinaNet: Taiwan News in Chinese;
		Chinese OS not required!


		NandoNet


		SunWorld


		JavaWorld

Course stuff:
CORBA: The Essentials; An Annotated 
Bibliography
CS674 Project Report

Alfred Hong (ahong@CS.Cornell.EDU)



",non-course
"

Vineets' Home Page







Vineet Ahuja
M.Engg (95/96)
Department of Computer Science
Cornell University
Ithaca, NY 14850

 
Address:
2506 Hasbrouck Apts.,
Ithaca, NY 14850
(607) 253 5497


E-Mail:
ahuja@cs.cornell.edu


 Academics 
I'm an M. Eng. student in the department of Computer Science at Cornell University. My main areas of interest lie in Parallel Processing, Advanced Architectures, Operating Systems, and Object Oriented Programming.
Coursework at Cornell 
 Fall 96  
 Automata and Computability Theory- CS 481 
 Engineering Computer Networks- CS 519 
 Spring 96  
 High Performance Systems- CS 516     

 Final Project Report  
 Software Design for High Performance Architectures- CS 612      
Final Project Report
Fall 95  
 High Capacity Information Networks- EE 546    
 Multimedia Systems- CS 631      


 Resume 

 PostScript (the Postscript is more recent)
  HTML 


This page has been accessed   times since Feb 1. 1996.

",non-course
"
  Ching-Lan Hu  

 Ching-Lan Hu 
 chinglan@cs.cornell.edu
Master of Engineering Student `96
 Computer Science Department 




C'est beau,Pairs!
 Address: 
 801 E. Seneca St. Rm#4
 Ithaca, NY 14850
 Telephone: 
 (607)256-4488

 This page is still under construction... 


Java Example

Graphics Project

",non-course
"





Alexey Home Page


Alexey I. Vaysburd


alexey@cs.cornell.edu







I am in the Ph.D. Program in 

Computer Science at Cornell University
. 



My research interests include distributed systems, 
group communication, large-scale/wide-area systems, and

object-oriented tools for distributed computing
.

I work within the 

Horus

 group lead by 

Ken Birman
 
and

Robbert van Renesse
.


 Papers: 


Implementing Replicated State Machines Over Partitionable Networks.
Roy Friedman and Alexey Vaysburd. Cornell University TR96-1581.


 Some WWW links: 

 Search Engines: 

Lycos


 Technical Reports: 

Cornell CS Technical Reports

	BROADCAST Technical Report Series

	LSE - Ecole Polytechnique Federale de Lausanne

	The Hebrew University - The Transis Home Page


 Cornell: 

CUINFO (Cornell Gopher)
Directions to and from Cornell
Cornell E-Mail Directory
Cornell Staff Directory
Cornell Student Directory
Courses, Classes, Exams
Cornell Calendar

Cornell Arts -- Music
Bailey Hall Concerts
Cornell Musical Events


 News and Weather: 

Ithaca Weather

	Current conditions & 5-day for Ithaca
World News Briefs


 Odessa: 

OdessaWeb



",non-course
"


Yama's Den





Yama's Den : Hell!
According to Hindu mythology, Yama is the God of Death. He comes down
to earth to give a ride to those who are on their way to Heaven or Hell.
Though he's kind of impartial, its better not to mess with him.....
Amith
Yamasani
M.Engg (95/96) 
Department of Computer Science 
Cornell University 
Ithaca, New York

I make money at:
Sun Microsystems, Inc. 
2550, Garcia Avenue 
Mountain View, CA 94043 
MailStop: UCUP01-102 
(408) 343 1857 
(Cupertino - JavaSoft) 

I watch TV at:
1571, Warburton Avenue, Apt #9 
Santa Clara, CA 95050 
(408) 296 8507 

E-Mail: Amith.Yamasani@Eng.Sun.COM



I am currently
employed with JavaSoft (Sun Microsystems, Inc.) in Cupertino, California. I'm working
in the JavaMedia group
Education

Fall '95 Courses
VLSI : EE439/539

Multimedia : CS631

Software Engineering : CS501



Spring '96 Courses
VLSI : EE439/539

High Performance Computer Systems : CS516

Computer Graphics : CS417
/ CS418



Projects 


CS418 - Ride to Heaven 

This is a train ride simulation for the 418 graphics final project.


The MPEG (3.9M) 
The description 

CS516 - Parallel Ray Tracing in CC++ 

Proposal 
Virtual Reality RailRoad Simulation 
This is my Masters project. It involves the simulation of a railroad
system including the trains the tracks, the switches, stations, landscape,
and user interaction in a two-wall CAVE environment with Stereo vision.
The simulation is done on a 20 processor SGI Onyx system. The software
is written in C++, using the OpenInventor
3D graphics library from Silicon Graphics
. The simulation includes on-the-fly landscape generation, dynamics of
the train and the environment and fly throughs. 
Document
Image Compression Chip
Developed an Image Compression chip for the VLSI course. The chip basically
compresses any 8 bit data stream using the LZW compression algorithm. This
algorithm is better suited for images. The chip controls an external cache
CAM (content addressable memory) where it stores patterns from the input
stream in the hope that the patterns might occur again. The chip is capable
of compressing data at the rate of 1 byte in 80 nano seconds. There's no
way a software routine can compress data at that speed. 

Snap of the chip 


Image and Video Transition FX for Rivl
Proposal


Presentation
and samples 


PyraMania 3D
This is a 3D game developed for the Software Engineering course. Its
written in C++ and uses Tcl for some of the interface and XLib for the
3D rendering. You can take a look at a snapshot of the game screen. 

PyraMania 3D 
Parallelomania 2D
CS516 HW2 


Resume
HTML

Post
Script 


Memories - past, present and future.....



Some of my pals.....(with home pages)
Satya
Prasad 
Avinash
Gupta 
Kartik
H. Kapadia 
Hrishikesh
Dixit 
Jose
Luis Fernandez 
Vineet
Ahuja 


Bookmarks


",non-course
"


Ankit Patel's homepage 





ANKIT  C.  PATEL
914, EAST STATE STREET,
ITHACA. NY-14850.
(607) 277-3812

apatel@cs.cornell.edu





[


	Personal  
 | 
    Photo Galleria
 | 
   Chronologia Curriculum Vitae

]







Cornell University

1996

Resume
Department of Computer Science and Courses Enrolled

Graduate Research Assistant for Prof. Brian Smith in the Multimedia Group Project Zeno
 Canvas3d  : A toolkit for interactive, platform-independent development of high-performance 3D graphics in multimedia and virtual reality applications.
Virtual Reality Video Conferencing
Multimedia Systems :

Readings, Project and Assignments
Project :  Kernel Endpoint for U-Net
An Annotated Bibliography on `Common Object Request Broker Architecture'(CORBA)

A Critique on `Understanding the limitations of Causally and Totally Ordered Communication' by David R. Cheriton and Dale Skeen.






Carnegie-Mellon Summer School of Computer Science

1996
World-Wide Web Technologies  [Spring'96 Course Link]
Real-Time OS Support for Multimedia




Maharaja Sayajirao University

1991-95
Academics
Friends from Techo




Reliance Industries Limited

1995
Job Profile

Life at Reliance



",non-course
"

Ashish Jhaveri






Ashish Jhaveri
Department of Computer Science
Master of Engineering













Resume

HTML
Post Script


Coursework

Advanced Database Systems
CS537
Multimedia Systems
CS631
Engineering Computer Networks
CS519
Programming Languages/Software
Engineering CS501







Ashish Jhaveri




",non-course
"
  Aswin van den Berg  




 Aswin van den Berg 
 Graduate Student 
aswin@cs.cornell.edu

Office: 4153, Upson Hall
        phone: (607) 255-1372
Home:
	 19 Skyacre Drive.
	Ithaca, NY 14850
	phone: (607) 257-2694



I am interested in:

 Programming languages
 Program Transformation

 The  FUN transformation system

My personal life.
 Family Album
 Anneke's WWW Page
 Swing Dancing

 The Swing Dance Server
  The Jean & Aswin Swing Dance Page 
  DeeJayer's Guide for ISDN Record Hops
  My Personal Swing Pictures 

 De Nederlandse Club van Cornell or 
The Cornell Dutch Club

I am a graduate student at
Cornell
",non-course
"

Welcome







Avinash Gupta
M.Engg (95/96)
Department of Computer Science
Cornell University
Ithaca, NY 14850

Home Address:
Apt.601, 10 Magazine Street
Cambridge, MA 02139
(617) 492 9238


E-Mail:
avinash@thecia.net



 Resume




My main areas of interest lie in Computer Graphics, Multimedia and Distributed systems.
Courses
 Operating Systems	: CS415 
 Multimedia		: CS631 
 Software Engineering	: CS501 
 Distributed Systems  : CS514 
 High Performance Systems  : CS516 

Projects

HOCA - An Operating system for CHIP

HOCA (pronounced hodja) is a full-fledged operating system for CHIP (Cornell Hypothetical Instructional Processor) which supports features like Multiple users, Multitasking and Virtual Memory.


Scene Transition Effects for Rivl

Presentation

Pente - A networked game of skill

Pente (meaning five) is a board game of skill requiring 2 players. The objective of the game is to get five points or get five of your own pieces in a row (horizontally, vertically or diagonally). Points can be earned by trapping the opponents pieces between your pieces. Only an even number of pieces can be trapped, i.e. either 2 or 4. For each pair of pieces trapped, you get 1 point. The player reaching five points first wins. 
Requirements:
1. Tcl 7.4, Tk 4.0  
2. Tcl-Dp 3.2  
3. X-Windows 
Screenshot of the game
Download the game NOW.


IPng with v6

A user space implementation of the next generation IP, IPv6
Implement IPng, the next generation Internet Protocol, using an interface that makes it able to run over user space network interfaces like U-Net or Jet-stream.

Proposal
Progress Report



Same caveat applies to my home page as to almost every other page
on the Web - this is still under construction. 

Browsing the Internet

Hytelnet

The WWW Library: Subject Catalog

EINet Galaxy

Planet Earth Home Page

Joel's Hierarchical Subject Index

Yahoo: A Guide to WWW
Webcrawler
Lycos



My Friends...
A - Z Links.
Sign my Guestbook!
This page has been accessed   times since Jan.22 1996.

",non-course
"

Jonathan Barber, in the Flesh





Pooooooooooooooch!



 


That's me.





Jonathan Barber

5133 Upson Hall
255-9189
About Me

              What I'm doing Now

              Course and Research Interests

              My Future

              ""Some Cool Dudes""





About Me!!!

This page has been up for a while now, so I've felt inclined to change the first sentence.  
My birth name is Jonathan Barber, but people usually just call
me Jon (not J-O-H-N!!).  People also call me Ponch or
Pooch.  People used to call me Lake, Fork, Guppie, Skin Mama, Phin,
and the list goes on and on.   I am finishing up my degree as 
a graduate student in the Masters of Engineering Program 
in Computer
Science at Cornell
University.  I was also an undergrad at Cornell, where I got a 
BA in Computer Science as well.  

I grew up in a couple of towns in New Jersey, and attended
Montgomery High School.  I'm currently living in Collegetown which is 
adjacent to the Cornell Campus.  I'm in a cheap summer sublet on
College Ave, which is ultra-convenient, since I can work and play in 
the same half-mile radius.

While a student at Cornell, I went Greek, and spent a lot of time at 

Tau Epsilon Phi, a fraternity on the borders of 
Cayuga Heights.  Its kind of hard to believe that those days are over, 
but on the other hand, its about time.


 What I'm doing Now 


I have finished my Masters of Engineering Project 
with 
Prof. Thorsten von Eicken, where we developed the U-Net Packet Filter.  The
filter works with 
U-Net, which is a high-bandwidth network protocol that 
can bring parallel computing home to personal computers.  

I also taught the 6-week summer session of

CS099: Fundamental Programming Concepts, 
an introductory course to computers and programming.  

This past year, I was a teaching assistant for
CS314: An Introduction to Digital Systems and Computer Organization.
during 
Fall-95 and 

Spring-96.


Course and Research Interests


This past semester, I worked a lot on RivL 
(A Resolution Independent Video Language), 
which is one of the products from the Multimedia Research group at 
Cornell.  The final product of my labor is two project reports.  

Two Parallel Implementations of Continuous Media RivL
An Improved-Implementation of an Object Tracker in RivL


I have also taken an interest in high performance compilers.  My good friend 

Sugata Mukhopadhyay and I are still finishing up a 
class project, in which we implemented a SMPD code generator
for High-Performance Fortran based on a linear algebra 
framework (paper coming soon).

In the previous semester,my other good friend, Greg Weber 
and I, developed WeBar Encryption
, a smart encryption 
protocol for frame-dependent video streams (e.g. MPEG).  
Unfortunately, I don't have the paper in electronic form, so 
you'll have to trust me on this.


The Future Looks Bright, and Wet!


At the end of this summer, I'm packing up my gear, 
and taking a permanent road-trip to Oregon 
(hopefully with some buddies).  If any of you web-surfers are from 
Oregon, and have some information you'd like to share
(good or bad), please write me.

Once there, I'll be working for 
Intel Corp, 
so go ahead and buy a PC.

A live picture taken from my future home in Portland!
Clarification: Actually its not the location of 
my *house* (as some people have thought).  
I would indeed be pretty resourcefull if I set up a camera against my 
living room window, and piped it out to this page.  No, by *home*, I mean
the general location of where I'll living, not the house.



My Favorite People (who are on-line)

My comrade-in-Upson, George Bush, has a really nice page, 
and in it he keeps a listing of
his favorite people.  If you can be found on this page, 
you are indeed one of the lucky.
I was also considering keeping a list of my least-favorite 
people (you know who your are), 
but have decided otherwise.

Ok, here goes:


George Bush
, or as I
	like to call him,  Captain Swirl .
        He's nefarious with a toilet.


         Sugata Mukhopadyay

         Boney Magoo
Fletop

         Bigro

         Dave Koster,  the bot of all bots.


Ponch's official TFFL Bullie's Home Page
uuencoded Graphics needed for Bullie's Page
tar and zipped Graphics needed for Bullie's Page

If you're browsing, and feeling the urge to 
write, send me some mail.


Downloads

graphics
barber.gif
ponch.html
res_html
res_cur
emmitt1
emmitt12



",non-course
" Anindya's Homepage 


Anindya's Homepage

 
I don't really look like this. Click on the photograph for a more recent mugshot.




Locating Anindya 

Work:                                 Home:
4116 Upson Hall,                      209 1/2, Delaware Avenue,
Department of Computer Science,       Apt. 3,
Cornell University,                   Ithaca, NY 14850
Ithaca, NY 14853-7501.		      
Phone: 607-255-9202 (office)          Phone: 607-256-1681
       607-255-8796 (lab)   

Mail: basu@cs.cornell.edu






What Anindya is doing here 
I am a graduate student in 
Computer Science
at Cornell University hoping to complete a PhD by the turn 
of the century. When I am not listening to 
rock music
or goofing off, I work on the
Cornell ATM Cluster Project
with my advisor 

Thorsten von Eicken.




What Anindya thinks is cool
Like most other graduate students from 
India
who went to the 

Indian Institute of Technology, Kanpur, I am a die hard
Pink Floyd
fanatic and finally realized my childhood dream of seeing them perform live
last summer in Philadelphia. The other ""P"" I am in love with is 
Plum who is known to the
great unwashed as Pelham Grenville Wodehouse. And yes, I also attended
Woodstock '94!
For the truly motivated, here is an online

Woodstock review with photographs. Woodstock is where I experienced 

Metallica live for the first time!
I would have loved to see the
soccer worldcup last year, but
unfortunately, it did not happen. I like to cook, and have tried to put
some
recipes that I like online. I also fancy myself as a connoisseur
of good whisky, especially 
single malts.

 Links to some more cool stuff 











The Calvin and Hobbes Archive||

South Asian Writers||

Cheers||

Monty Python||

Beavis and Butthead



Other Useful Stuff

 The CUINFO gopher




And now for something completely different..
I am working on the 
Cornell ATM Cluster Project
which aims at providing a high performance communications layer on clusters of
workstations such that parallel program performance comparable to state of the 
art MPPs can be acheived on such clusters. We have developed a very fast message passing
layer called U-Net and an implementation of Active Messages and Split-C on U-Net that
show performance at par with parallel programs running on the CM-5 and the Meiko CS-2.
In addition TCP/UDP implemented on U-Net shows really low latencies and can saturate
the fibre at low segment sizes. We are also working in collaboration with
the Berkeley 
NoW project team to develop a specification
for a communications layer that would enable fast communication between processes
both in trusted and untrusted environments.

 
Publications on Active Messages and U-Net 

 
Active Messages: a Mechanism for Integrated Communication and Computation,
Thorsten von Eicken, David E. Culler, Seth C. Goldstein, and Klaus E. Schauser,
 Proceedings of the 19th Int'l Symp. on Computer Architecture,
May 1992, Gold Coast, Australia.

Low-Latency Communication over ATM Networks using Active Messages,
Thorsten von Eicken, Veena Avula, Anindya Basu, and Vineet Buch, 
Presented at Hot Interconnects II, Aug 1994, Palo Alto, CA. An abridged
version of the paper appears in IEEE Micro, February 1995.

U-Net: A User-Level Network Interface for Parallel and Distributed Computing,
Thorsten von Eicken, Anindya Basu, Vineet Buch, and Werner Vogels. 
Proceedings of SOSP '95, to appear.





Back to Cornell Computer Science Homepage
Last modified Thu Apr 27 12:01:52 EDT 1995







",non-course
"A Simple Homepage

Ben Hao
Graduate Student
bhao@cs.cornell.edu
Cornell University
Dept. of Computer Science
5139 Upson Hall
Ithaca, NY 14853 

Tel: (607) 255-5578 
Fax: (607) 255-4428


From inside Cornell, try the Net Flea.

I'm a forth-year Ph.D. student in
Computer Science at Cornell,
working on code synthesis for massively parallel processors.

My advisor is Dr. Richard Zippel whom I first heard from Dr. George Taylor
when I was at Sun Microsystems.

My family is in the San Francisco Bay Area.  You can find more information about
the area by reading its local newspapers.
Don't forget to check out its
gorgeous weather.

Life at Cornell

What to do at Cornell


    Where to eat

    Check Ithaca weather

    Go see a movie

    Study in a library 

 CS dept. home page 



 Check these out!
Generally Neat Stuff
 MIT Stocks
 MIT Weather
 UT Maps
 Interactive Frog Dissection
Magazines on the Net
 InterText magazine
 Wired Magazine
A Peek into the Galaxy
 Views of the Solar System
 Shoemaker Levy
 Art and Music
 Le WebLouvre
 Xmorphia
 Gallery of Interactive On-Line Geometry
 Kaleidospace
 JPOP-Overview(1971-1986)
 Bonsai-JPOP
 Seiyuu-JPOP
 Internet Underground Music Archive
Network Navigation
 Global Network Navigator
 WWW Wanderers and Spiders
 The Web's Edge
Library
 Library of Congress
 Martial Art
 Tai-Chi



 Scientific Computing info

 Tutorials

 Internet info

NIH Internet course
The InterNIC Info Guide
CERN Web Seminar



Last Modified Tue Mar 7 00:35:48 EST 1995
 Ben Hao / bhao@cs.cornell.edu 
",non-course
"

Aastha's home page






Aastha Bhardwaj
Department of Computer Science
Master of
Engineeering












Resume

HTML
Post Script




Coursework

Advanced
Database Systems CS537
Multimedia
Systems CS631
Engineering
Computer Networks CS519
Software
Engineering/Programming Languages CS501





Contact Information

2010, Hasbrouck Apartments, Ithaca, New York - 14850

(607)-253-5419

(bhardwaj@cs.cornell.edu)






",non-course
"Bruce Randall Donald









Bruce Randall Donald
Associate Professor
brd@cs.cornell.edu


Ph.D. MIT, 1987
 Weather in Palo Alto.

My Official Departmental Home Page. 
 Cornell Robotics and Vision Laboratory

Dan Huttenlocher and I founded the

Cornell Robotics and Vision Laboratory  in 1991. 



Research
My interests include

robotics,

microelectromechanical systems,

geometric algorithms, and artificial intelligence. 

Robotics is the science that seeks 
to forge an intelligent, computational connection between perception 
and action.

Working with graduate student Jim Jennings, research associate  Daniela
Rus, graduate student 
Russell Brown, and lab alumnus  Jonathan Rees
(now at MIT), we developed a  team of autonomous
mobile robots that can perform sophisticated  distributed manipulation tasks
(such as  moving furniture).  The robots run
robust SPMD protocols that are completely asynchronous and require no
communication. With grad student  Karl
Böhringer and EE Professor Noel MacDonald, we are building a
 massively parallel array of microactuators in the
Cornell National Nanofabrication Laboratory.  The array
is a SCREAM chip containing over 11,000 actuators in 1 square
centemeter, and can orient small parts without sensory
feedback. Our microfabricated actuator arrays could be used to
construct programmable parts-feeders (at any scale), or to build
self-propelled IC's (walking VLSI chips.)  Graduate student  Amy
Briggs worked with Dan Huttenlocher's vision group to develop  a sensor planning and surveillance system for a team of
mobile robots. The robots use on-board vision to detect and
intercept targets in the lab.

 Demos 

Massively parallel micro-fabricated actuator arrays.
 
MPEG video of Tommy chasing Lily. Tommy and Lily are  mobile robots we built. Using algorithms developed
by the 
vision group in  our
lab, Lily can track Tommy and follow him, using visual information
alone. This video shows Lily's view of the `chase.'



Face Morphing.

Selected Recent Publications
  
K.-F. Böhringer, B. R. Donald, and N. C. MacDonald,  Upper and
Lower Bounds for Programmable Vector Fields with Applications to MEMS
and Vibratory Parts Feeders,  International Workshop on the
Algorithmic Foundations of Robotics, Toulouse, France (1996).


 

A.J. Briggs and B. R. Donald,  Robust
Geometric Algorithms for Sensor Planning,  International
Workshop on the Algorithmic Foundations of Robotics, Toulouse,
France (1996).

 

K.-F. Böhringer, B. R. Donald, and N. C. MacDonald, 

Single-Crystal Silicon Actuator Arrays for Micro Manipulation Tasks,
IEEE Workshop on Micro Electro Mechanical Systems (MEMS),
San Diego, California (February 1996).  

 

K.-F. Böhringer, B. R. Donald, and N. C. MacDonald, 

Classification and Lower Bounds for MEMS Arrays	and Vibratory Parts Feeders:
What Programmable Vector Fields Can (and Cannot) Do - Part I,

IEEE International Conference on Robotics and Automation (ICRA),
Minneapolis, Minnesota (April 1996). 

 

 K.-F. Böhringer, B. R. Donald, and N. C. MacDonald, 

 New and
Improved Manipulation Algorithms for MEMS Arrays and Vibratory Parts
Feeders: What Programmable Vector Fields Can (and Cannot) Do - Part
II,

IEEE International Conference on Robotics and Automation
(ICRA), Minneapolis, Minnesota (April 1996). 

   Provably
Good Approximation Algorithms for Optimal Kinodynamic Planning: Robots
with Decoupled Dynamics Bounds  (with P. Xavier)  Algorithmica
 (Vol 14, no 6) (1995). pp. 443-479. 
   Provably
Good Approximation Algorithms for Optimal Kinodynamic Planning for
Cartesian Robots and Open Chain Manipulators (with P. Xavier) 
Algorithmica  (Vol 14, no 6) (1995). pp. 480-530. 
  .

Kinodynamic Motion Planning (with P. Xavier, J.
Canny, and J. Reif)  Journal of the ACM, Vol. 40, No. 5, Nov.,
1993. pp. 1048-1066.

  

Information Invariants for Distributed Manipulation (with J.
Jennings and  D.
Rus) in  International Journal of Robotics Research, (in
press) (1996). 


B. R. Donald, J. Jennings, and D. Rus,  Minimalism +
Distribution = Supermodularity , Journal of Experimental and
Theoretical Artificial Intelligence (JETAI), (in press) 1996. 

  . I am
 writing a book entitled
 Information Invariants in Robotics. A draft of the first
quarter of this book appeared as a paper in Artificial
Intelligence. Here it is:  
Information Invariants in Robotics. Revised MS based on the paper
""On Information Invariants in Robotics,""  Artificial
Intelligence Vol. 72 (Jan, 1995) pp. 217-304.  

 




Distributed Robotic Manipulation: Experiments in
Minimalism, in
 International Symposium on Experimental Robotics, (ISER)
Stanford, CA (1995).

 


Moving Furniture with Teams of Automonous Mobile Robots, (with J.
Jennings and  D.
Rus) in
 Proc.~IEEE/Robotics Society of
Japan International Workshop on Intelligent Robots and Systems, (IROS)
Pittsburgh, PA (1995).

  
 Sensorless
Manipulation Using Massively Parallel Micro-fabricated Actuator
Arrays (with 
K.-F. Böhringer, R.  Mihailovich, and Noel C.  MacDonald),
 Proc. IEEE International Conference on Robotics and
Automation, San Diego, CA (May, 1994).  A 
demo and more detailed explanation.

  .

 Program Mobile Robots in Scheme(with  J. Rees) 

Proc. IEEE International Conference on Robotics and Automation
Nice, France (May, 1992), pp.  2681-2688.

 


Information Invariants for Distributed Manipulation (with J.
Jennings and  D.
Rus) in
 The First Workshop on the Algorithmic Foundations of
Robotics, A. K. Peters, Boston, MA. ed. R. Wilson and
J.-C.Latombe (1994). 
 




Automatic Sensor Configuration for  
Task-Directed Planning (with 

Amy Briggs),  Proceedings 1994
IEEE International Conference on Robotics and Automation, San Diego,
CA (May 1994). 
 Other
Publications.  
Recent Theses and Papers of PhD Students

  Patrick Xavier, PhD 1992. Except for the thesis, these TR's are
  mostly superseded by three, more recent journal papers listed starting here.
 Amy
Briggs, PhD 1994.

  (Her Papers and Thesis).


Russell Brown,  PhD 1995.

  (His Papers and Thesis).


  Jim Jennings.

Karl-F. Böhringer.
 Post-Docs Trained in  Our
Lab
 
  Daniela Rus.
 
  Jonathan Rees.
 
  Dinesh Pai.


More papers are avalable through the 

Cornell CS TR server.
 Some other papers are listed here. 

Cornell CS TR version of my Online Tech Reports  
Cornell Library Catalog
CS TR index

Obtaining Copies of Papers

Copies of our papers are available via anonymous FTP. 
Pictures
 We have developed a  team
of small autonomous mobile robots that can  move
furniture around in our lab. 


<--- Click here for a group portrait of our robots.

 Click here
to see a picture of 
Tommy and Lily mobot pushing a couch. 
 Click here
to see a picture of 
Tommy and Lily rotating a couch. 
 Click here to see a
picture of  
Tommy the mobile robot, drawn by Loretta Pompilio.  

 Click here
to see pictures of people and robots working in the lab.  

 Our lab was on  The Discovery
Channel (""Beyond 2000"") and you can find out more about it here.

Fun

A Poem by Alfred, the Mail Agent. 

Family Pictures. 

 I play in 


Harmful If Swallowed.
 in Ithaca.

 I sometimes play with 

 in California. 

More



Other people and robots in the 
Cornell Robotics and Vision Laboratory.



Cornell Robotics and Vision Laboratory home page.

 Other people in the Cornell CS department 

 Click here
for search tools and information access stuff. 
 Return to Cornell CS Top-Level 

Why I say  click
here.




  ""You will have the tallest, darkest leading man in Hollywood.""

		--- Merian C. Cooper to Fay Wray


















",non-course
"
Claire Cardie



Claire Cardie, Assistant Professor.


4124 Upson Hall
Phone: 607-255-9206
Fax  : 607-255-4428
Email: cardie@cs.cornell.edu

Click on these to see:

RESEARCH INTERESTS
COURSES THAT I TEACH
SELECTED PUBLICATIONS




NLP and ML Links

	My entry in the department annual report  
 
Amalgams softball stats 
 
Finger Lakes Tandem Tour with the Westys, 1995

 Research Interests

Although my research spans a number of subfields within artificial intelligence,
including machine learning, case-based reasoning, and cognitive
modeling, the focus of my research is in the area of natural
language understanding (NLP/NLU).  

The NLP group at Cornell is primarily interested in investigating the use of machine
learning techniques as tools for guiding natural language system development and for
exploring the mechanisms that underly language acquisition.  Our work focuses on two
related areas: (1) the design of user-trained systems that can efficiently and reliably
extract the important information from a document, and (2) the machine learning of natural
language.  


Information Extraction.
As part of Cornell's CSTR project, we are using information extraction techniques to
support content-based browsing of technical texts.


The Kenmore Project.

The focus of the Kenmore project is on developing techniques to automate the knowledge
acquisition tasks that comprise the building of any NLP system. Very generally, Kenmore
acquires linguistic knowledge using a combination of symbolic machine learning
techniques and robust sentence analysis.  It has been used with corpora from two
real-world domains to perform part-of-speech tagging, semantic feature tagging, and
concept activation and to find the antecedents of relative pronouns.  In current work,
we are extending Kenmore to handle larger text corpora and additional disambiguation
tasks.  In all of our work, we evaluate the language learning
components in the context of the larger NLP application in which it is
embedded. The goal of the project is to determine the conditions under which machine 
learning techniques can be expected to offer a cost-effective approach to knowledge
acquisition for NLP systems.  

Teaching


CS674 Natural Language Understanding, Spring 1996

Foundations of Artificial Intelligence (CS472) and Practicum in
Artificial Intelligence (CS473), Fall 1996
Seminar in Natural Language Understanding


Selected Publications


Automating Feature Set Selection for Case-Based Learning of
 Linguistic Knowledge,C. Cardie. Proceedings of the Conference
on Empirical Methods in Natural Language Processing, 113-126, University of Pennsylvania,
1996.



Embedded Machine Learning Systems for Natural Language Processing: A
General Framework,
C. Cardie. In Wermter, S. and Riloff, E.
and Scheler, Gabriele (eds.),  Connectionist, Statistical and
Symbolic Approaches to Learning for Natural Language Processing,
Lecture Notes in Artificial Intelligence, 315-328, Springer,
1996. Originally presented at the Workshop on New Approaches to
Learning for Natural Language Processing, 14th International Joint
Conference on Artificial Intelligence (IJCAI-95), 119-126,
1995. AAAI Press. 



Chapter 1 (Introduction), Ph.D. Thesis,
C. Cardie. Domain-Specific Knowledge Acquisition for Conceptual Sentence Analysis,
Ph.D. Thesis, University of Massachusetts, Amherst, MA,
1994. Note that this file contains just the introductory chapter of the thesis.



Domain-Specific Knowledge Acquisition for Conceptual
Sentence Analysis,
C. Cardie. Ph.D. Thesis, University of Massachusetts, Amherst, MA,
1994. Available as University of Massachusetts, CMPSCI Technical Report
94-74. (178 pages)



A Case-Based Approach to Knowledge Acquisition for 
Domain-Specific Sentence Analysis,
C. Cardie. Proceedings of the Eleventh National Conference on Artificial 
 Intelligence, 798-803, Washington, DC, 1993. AAAI Press / 
 MIT Press.



Using Decision Trees to Improve Case-Based Learning,
C. Cardie. Proceedings of the Tenth International Conference on Machine 
 Learning, 25-32, Amherst, MA, 1993. Morgan Kaufmann.



Corpus-Based Acquisition of Relative Pronoun Disambiguation Heuristics,
C. Cardie. Proceedings of the 30th Annual Conference of the Association for 
 Computational Linguistics, 216-223, Newark, DE, 1992. Association for 
 Computational Linguistics.



Learning to Disambiguate Relative Pronouns,
C. Cardie.  Proceedings of the Tenth National Conference on Artificial 
 Intelligence, 38-43, San Jose, CA, 1992. AAAI Press / MIT Press.



Using Cognitive Biases to Guide Feature Set Selection,
C. Cardie.  Proceedings of the Fourteenth Annual Conference of the Cognitive 
 Science Society, 743-748, Bloomington, IN, Lawrence Erlbaum
Associates, and Working Notes of the AAAI Workshop on
Constraining Learning with Prior Knowledge, 11-18, San Jose, CA,
1992.  



A Cognitively Plausible Approach to Understanding Complicated Syntax,
C. Cardie and W. Lehnert. Proceedings of the Ninth National Conference on Artificial 
 Intelligence, 117-124, Anaheim, CA, 1991. AAAI Press / MIT Press.



 Analyzing Research Papers Using Citation Sentences,
W. Lehnert, C. Cardie, and E. Riloff. Proceedings of the Twelfth Annual Conference of the Cognitive 
 Science Society, 511-518, Cambridge, MA, 1990. Lawrence Erlbaum
Associates. 



NLP and Machine Learning Links


Computational Linguistics
E-print Archive (database of recent CL papers)
ACL
Special Interest Group on Natural Language Learning
Machine Learning Digest
Machine
Learning Resources
Researchers
Machine Learning (links to the home pages of ML researchers)
Penn Treebank II
 CMU's
AI Repository contains has pointers to code for various NLP system components.



",non-course
" Paul Chew 
L. Paul Chew 
Senior Research Associate
PhD, Purdue University, 1981
chew@cs.cornell.edu

Applets

You need a Java-compatible (beta version) Web browser, such as
Netscape 2 to make this work.


 Voronoi/Delaunay Applet: Create a
Voronoi diagram or Delaunay triangulation by clicking points.


Research Agenda 

My primary interest is in geometric algorithms with an emphasis on
practical applications.  These practical applications have included
placement, motion planning, shape comparison, vision, sensing, and 
 mesh generation. 

My work on mesh generation is one example of the geometric issues that
arise as part of the problem of automatically generating scientific
software.  The goal here is to raise the level at which such software is
specified by developing an environment in which scientific software can
be created using the natural, high-level, mathematical concepts of
physics and engineering.  Thus a program is specified implicitly as a
collection of mathematical equations.  Geometric and symbolic techniques
are then used to transform these mathematical expressions into effective
programs.
My
Online Tech Reports
Cornell Department of Computer
Science
The Simlab
Project

Address
    721 Rhodes Hall
    Cornell University
    Ithaca, NY 14853

    Tel: (607) 255-9217
    FAX: (607) 255-4428 

",non-course
"
Chi-Chao Chang's Home Page



 Chi-Chao Chang 
chichao@cs.cornell.edu



I'm a Ph.D. student in the
Department of Computer Science
at Cornell University.
My faculty advisor is

Thorsten von Eicken.
This summer I will be at Microsoft's
NT Networking group.



Click here to get my addresses
and phone numbers.



  Research Interests 

I am interested in the interaction between compilers, runtime and
operating systems towards efficient concurrent programming over
heterogeneous networks. 

ThAM: Compositional C++ with Active Messages

Low-Latency Communication on the IBM Risc System/6000 SP  

MultiMATLAB: MATLAB on Multiple Processors  

Design and Performance of Active Messages on the IBM SP2  



Soccer Anyone?


The Sports Server Latest Soccer News

Brazilian
Soccer Web Page (in portuguese)

World Soccer Results and
Homepages

Oliver's Soccer on U.S.
TV Guide




 Other Cool Stuff 


LUBRASA: Cornell Luso-Brazilian Student Association

U.S. Chess Center

Jornal do Brasil

My Car

StockMaster

Jayhawk Basketball

WWW Tennis
Server






Back to Cornell Computer Science Homepage

Last Modified: Mon Mar 18 19:50:51 EST 1996
 Chi-Chao Chang /
chichao@cs.cornell.edu 
",non-course
"

 Chee-Keong LIAU 





CHEE-KEONG LIAU









Welcome to my Home Page.
I am a graduate student in the Master of Engineering programme...

 Apologies for
the construction work. Hopefully things will improve soon.




GRADUATE SCHOOL




 Computer Science Department,
 Cornell University,
 Ithaca, NY 14853


 Fall 1996 Classes:

CS472 Foundations of Artificial Intelligence
CS501 Programming Languages / Software Engineering
CS519 Engineering Computer Networks
CS537 Advance Database Systems





BACCALAUREATE COURSE




 Department of Information Science,
 Tokyo Institute of Technology, Tokyo, JAPAN






HOME






I come from a small country called SINGAPORE. Don't know where it is? Find out more about it here. (More information is available at the SINGAPORE homepage.)


 
201 Maple Avenue, Apt #D21,  ITHACA , NY 14850
 
(607)277-0899


cl92@cornell.edu


Last updated on Nov 1, 1996


",non-course
"

Thomas F. Coleman





Thomas F. Coleman
Cornell University



I am a Professcp: No match.
ref=http://www.cs.cornell.edu > Computer Science Department 
and the 
Center for Applied Mathematics. 
I also have a strong affiliation with the
 Theory Center 
where I am Director of a research/application group,
the 
Advanced Computing Research Institute .

Finally, I am a member of the 
Cornell Computational Optimization Project (CCOP) ,
a group of Cornell faculty and researchers interested in the broad
field of computational optimization (discrete and continuous).

Research Program
My research program is concerned with the design and understanding of 
practical and efficient numerical algorithms for continuous optimization 
problems.  My primary interest is the development of computational
methods and tools for 
large-scale problems. 

Projects
 
Automatic Differentiation   
  Image Reconstruction/Biomedical Imaging   
 
Parallel Linear Programming   
  Large-scale Minimization with Linear Inequalities   
  Nonlinear Equality Constraints  

  Students, Postdocs, and Professional Activities 
 
Recent Papers, Books  
 
Current and Former PhD Students  
 
Research Associates and Postdocs  
  Software  
  Computational Mathematics Links  
  Curriculum Vitae  
  The Best
 



Thomas F. Coleman, 725 Rhodes Hall, Cornell University, Ithaca, New York.

coleman@cs.cornell.edu 



",non-course
"Karl Crary's home page
Karl F. Crary
crary@cs.cornell.edu
Office Address: 4153 Upson Hall
Office Phone: (607) 255-1372

Research

Broadly speaking, my primary research interests are in type theory and the design, implementation
and semantics of programming languages.  My recent emphasis has been in the areas of subtyping,
object-oriented programming and modularity.  I am implementing a practical programming language KML
which combines these features in a functional programming language, and formulating for it a
type-theoretic semantics.


An interesting view of programming languages is as a tractable approximation to the intractably rich
world of foundational type theories, in which the whole of mathematics can be performed.  New
programming language developments often result from mapping type-theoretic constructions through an
approximation into a programming language setting, and, conversely, new paradigms in programming
languages are often not well understood until they have been formulated type-theoretically.  I am
interested in deepening our understanding of this relationship between type theory and programming
languages, particularly the issues of tractability and approximation and how they can be mitigated.


I am also interested in a model of compilation that views it as a series of translations into
""lower"" intermediate calculi, where each intermediate calculus can be embedded into type theory and
the corresponding interpretation of a program is invariant under each translation.  Such a model
allows us to relate each stage of compilation to an original type-theoretic semantics, which allows
the use of standard compilation techniques and optimizations while guaranteeing safety and
correctness.  Also, careful formulation of such intermediate calculi make possible additional
optimizations that are unavailable in other compilation strategies.


My work forms part of the
Nuprl project here
at Cornell.  The project name comes from the Nuprl system of formal mathematics and logic, a
type theory based on the type theories of Martin-Löf that is also implemented in an automated
reasoning system.


My committee consists of
Robert Constable,
Greg Morrisett,
and Dexter Kozen.
I also work closely with Jason
Hickey.

Selected papers
Other Links

Mark Leone maintains a collection of

programming language research resources.

You can
search computer science technical reports online.

Cornell Grad Life Bible
Studies home page
The Lurker's Guide to Babylon 5.



""Of all the commandments, which is the most important?""

""The most important one,"" answered Jesus, ""is this: 'Hear, O Israel, the
Lord our God, the Lord is one.  Love the Lord your God with all your heart and
with all your soul and with all your mind and with all your strength.' The
second is this: 'Love your neighbor as yourself.'  There is no commandment
greater than these.""
-- Mark 12:29-31


Cornell University home page
Department of Computer Science home page
",non-course
"Chunguang Sun

Chunguang Sun
PhD Pennsylvania State University, 1991 


Welcome To My Home Page!


  I am a Research Associate in the
  
  Advanced Computing Research Institute ,
 
  Cornell Theory Center . 
I am also affiliated with the

Cornell Computational Optimization Project .
I work closely with Professor

Thomas F. Coleman .



 Research Interests 
Parallel scientific computing, sparse matrix 
algorithms, numerical linear algebra and mathematical software.


 Current Projects 

  pPCx: parallel linear programming 
 Parallel solution of rank-deficient sparse linear least squares problems

 Parallel solution of sparse least squares problems with bounds


 Software Packages for Sparse Matrix Computations 

  PSSLS: Parallel Solution of Sparse Least Squares Problems
  PSSPD: Parallel Solution of Sparse Symmetric Positive Definite Systems


Recent Lectures


Parallel solution of sparse linear least squares problems 
containing dense rows,
Second SIAM Conference on Sparse Matrices,
Coeur d'Alene, Idaho, October 9-11, 1996.

Parallel multifrontal solution of sparse linear least squares problems on
distributed-memory multiprocessors, Seventh SIAM Conference on Parallel
Processing for Scientific Computing, San Francisco, February 15-17, 1995.


Selected Publications


 Parallel sparse orthogonal factorization 
on distributed-memory multiprocessors,
SIAM Journal on Scientific Computing, 
Vol.17, No.3, pp.666-685, May 1996.


 Dealing with dense rows in the solution
of sparse linear least squares problems,
Cornell Theory Center Technical Report CTC94TR227,
Cornell University, December 1995.



Parallel solution of sparse linear least squares problems 
on distributed-memory multiprocessors,
Cornell Theory Center Technical Report CTC94TR212, Cornell
University, May 1995.



Parallel multifrontal solution of sparse linear least squares problems on 
distributed-memory multiprocessors,
Proceedings of the Seventh SIAM Conference
on Parallel Processing for Scientific Computing, 
D. H. Bailey, P. E. Bjorstad, J. R. Gilbert, M. V. Mascagni, R. S. Schreiber,
H. D. Simon, V. J. Torczon, and L. T. Watson, eds.,
SIAM, Philadelphia, 1995, 
pp.418-423.



A mapping algorithm for parallel sparse Cholesky
factorization(with A. Pothen),
SIAM Journal on Scientific Computing, Vol. 14, No. 5, pp.1253-1257,
September 1993.



Parallel orthogonal factorizations of large sparse matrices
on distributed-memory multiprocessors(with T. F. Coleman),
Proceedings of the Sixth SIAM Conference on Parallel Processing
for Scientific Computing,
R. F. Sinovec, D. E. Keyes, M. R. Leuze, L. R. Petzold, and D. A. Reed, eds.,
SIAM, Philadelphia, 1993, pp.457-461.



Distributed multifrontal factorization using clique trees(with A. Pothen),
Proceedings of the Fifth SIAM Conference on Parallel Processing
for Scientific Computing,
J. Dongarra, K. Kennedy, P. Messina, D. C. Sorensen and R. G. Voigt, eds.,
SIAM, Philadelphia, 1992, pp.34-40.



Compact clique tree data structures
in sparse matrix factorizations(with A. Pothen),
Large-Scale Numerical Optimization,
T. F. Coleman and Y. Li, eds.,
SIAM, Philadelphia, 1990, pp. 180-204.



Chunguang Sun
  
Advanced Computing Research Institute
  Cornell Theory Center
  Cornell Univeristy 
 Ithaca, NY 18453
 E-mail: csun@cs.cornell.edu
 Phone : (607) 254-8863
 Fax: (607) 254-8888


",non-course
" David Cooper's Home Page 

 David Cooper 

 Postdoctoral Associate
 4112 Upson Hall
 Phone: 607-255-9222
 Email:  dcooper@cs.cornell.edu 


 Current Research 

My current research involves the design and implementation of a security
architecture for 
Horus. The goal of this work is to provide a  layer  to Horus
which will interact with
 The Kerberos
Network Authentication Service and other cryptographic tools in order to
provide privacy and authentication services to processes in a group setting.



The original security architecture for Horus was implemented by Mike Reiter
(see 
A Security Architecture for Fault-Tolerant Systems). In the original
implementation of 
Horus, all process groups supported the virtual synchrony model of
computation. In order to maintain virtual synchrony (in the crash failure
model used in 
Horus), it is necessary for all processes within a group to be honest. As
a result, the original security architecture makes the assumption that any
process which is allowed to join a group is trusted by all of the group members.



In the current version of
 Horus, it is
possible to maintain process groups whose semantics are weaker than those of
virtual synchrony. In such groups, it may be desirable to permit untrusted
processes to join. An example of this might involve allowing untrusted clients
to join a client/server group. In such a setting, servers would communicate
with untrusted clients, but would only accept a limited set of commands from
the clients (and would be responsible for screening out all other messages).



The new  Horus
security architecture will permit arbitrary trust relationships
among the processes within a group. This is accomplished by using a key
management scheme which does not allow one process in a group to impersonate
another group member. Using this scheme, a process group may trivially achieve
the semantics provided by the original security architecture (however with
a slightly higher overhead). However, unlike the original security architecture,
the new architecture enables the implementation of groups (such as
client/server groups) which many have more complicated trust relationships
among group members.


 Thesis Research 

In my thesis, I proposed a set of solutions to the privacy problems inherent
in mobile networks. In a static network, there are two basic types of
information which users may wish to keep private. The first is the contents
of the messages that they send to other users. This information can be hidden
with the proper use of encryption. Users may also wish to prevent outsiders
from determining with whom they are communicating. A solution to maintaining
the unlinkability of message senders and recipients was first proposed in 1981
by  David Chaum
(Communications of the ACM, February 1981). Since then, several
others have made improvements to the original scheme.



In a mobile network, in addition to the types of information in a static
network, there is also location information. Users who carry mobile
communications devices will, in general, desire privacy. However, the
messages that their devices send and receive may reveal private information
about the devices' owners. In my research, I developed, along with my advisor

Ken Birman, a set of protocols to prevent such attacks from both internal
and external adversaries.


 Publications 


David A. Cooper and Kenneth P. Birman. Preserving privacy in a network of
mobile computers. In  Proceedings of the 1995 IEEE Symposium on Security
and Privacy,  pages 26-38, May 1995.



David A. Cooper and Kenneth P. Birman. The design and implementation of a
private message service for mobile computers.  Wireless Networks,  1995.



David Anthony Cooper.

The Design and Implementation of a Private Message Service for Mobile
Computers. Ph.D. dissertation, Cornell University, August 1995.


",non-course
"Dan's Cyber Abode

Dan's Cyber Abode


Greetings,

Ye travelers through digital space,
Welcome to mine humble home. 
Prithee, gentles all,
Surf no further than this shore.
Instead, blink thy teary eyes,
Rest thy weary, keys and mice- borne hands,
And make thyselves home in mine abode.

About Myself...
 
Brief Autobiography
 Resume
 
Project: Deidre (I)  (modeling of facial expressions)
 
Project: Deidre (II)  (modeling six universal emotions)
 
Project: SimNET! (a builder-type game)




Faith

They say that hardly is Faith a prize,
  in this ferro-concrete age.
For sayings of wise men we scorn,
  bending instead our ears,
  to lawyer's tones,
  and scientists' words.
What needs have we, then,
  of a God,
  unseen, unheard, 
  and untouchable?
Yet, in the silence of night,
  how we dread the unknown,
  how we question the uncertain,
  how we yearn for true Faith.

Directions...
 
In the field of the Lord



Love

Warm Friendships - Ah,
Mindless Infatuations - Huh,
Sensual Romances - Hmm,
Burning Passions - Oh -
Love O Love O Love...
(soft sigh)...

Beloved...
 Poetry



Hope

Myth favored not beauteous Pandora,
and ever did men place her at fault,
for her all too human role,
which released the dreaded demon Hope.
Many are those who were led astray,
by a few pretty glimmers of false Hope.
They treaded the torturous, broken roads,
amidst thorns, darkness, and filthy souls.
Disease, pain, and horrors they suffered,
only to reach a feared end in tears.
Yet I say that Pandora cannot be blamed,
for ever as her deeds were told,
burning hope in our hearts take hold,
and the world would never be as of old,
ever frozen in sad sad Misery's cold.

To that which springs eternal...
 


",non-course
"Dean B. Krafft's Selected URLs
Dean's Points of Interest


Cornell Servers:

Cornell CS home page 

CUINFO Web Server


	Engineering Library page 


	Cornell Legal Information Institute 


	Cornell Directories 


CS-TR Project:

 CS-TR public server page 


	DIMUND Document Image
	Understanding and Character Recognition WWW Server 

 SIAM gopher server 


	CS 737 - Information Capture and Access Course


	Illinois Digital Library


	Stanford Digital Library


	Michigan Digital Library


	Berkeley Digital Library


Search Tools:


	The Lycos WWW Search Engine


	Veronica: a GOPHER Search Tool


	The Archie Gateway: search Anonymous FTP sites

	The 
	
	CMU CS Department has put together 
	
	an excellent collection of search tools. 


Network Information:


	Scout Report  at
	Internic.


	Planet Earth and the
	
	Whole Internet Catalog, which is part of the
	Global Network Navigator.


	CERN WWW Reference Page

 All the FAQs


Various Stuff:


	DAT-heads Mailing List

Pro Audio Gear

FolkBook


	Folk Music Home Page


	Ithaca Weather Forecast and the
	weather elsewhere


	Security Reference Index

",non-course
"Dean B. Krafft's Home Page



   dean@cs.cornell.edu 
Dean B. Krafft, Director of Computing Facilities

Address:
4122 Upson Hall
Department of Computer Science
Cornell University
Ithaca, NY  14853-7501
Phone: 607-255-9215
Fax: 607-255-4428



I currently serve both as a researcher and an administrator in
the Computer Science Department at Cornell.  In my guise as an
administrator, I manage the Computer Facilities Support group and
worry about a number of issues including computer security, networking,
and building web services.

On the research side, I am the principal investigator for Cornell's
part of the CS-TR project.
This is an ARPA-funded consortium of the top five computer science
departments and the

Corporation for National Research Initiatives (CNRI).  Our research
is intended to further the rapid dissemination of breaking technical
research over the Internet, as well as making available on-line the
existing libraries of technical reports from the consortium members.

As part of the CS-TR project, two researchers working at Cornell,

Jim Davis, a Xerox employee of the

Design Research Institute (DRI),
and Carl Lagoze, employed by the CS-TR project,
have developed and implemented a protocol and system for the dissemination
over the net of technical reports and similar material.  The system,
called Dienst, is now in use at eight University sites on the net.  A

technical report on Dienst is available.  For more information on
Dienst and the CS-TR project, please send email to cs-tr@cs.cornell.edu.

I've put together

a page of selected URLs, some related to my research,
some to the computing facilities, and some are just things I'm interested
in.
",non-course
" Divakar's Home Page

Divakar Viswanath
divakar@CS.Cornell.EDU



Address

4161, Upson Hall 
Cornell University 
Ithaca, NY 14853 
Off: (607) 255-6835 
Res: (607) 256-2453 




I am a graduate student in Computer Science. My area of interest is
Numerical Analysis. My   adviser's home page  is a good place to find out about 
Numerical Analysis.




 Cornell CS 
",non-course
"

 Diyu Yan's home page

Diyu Yan ( Daisy )
Welcome to my home.
Spring 1996 Courses
 CS514 Practical Distributed Computing
 CS432 Database Systems
 CS412 Compilers and Translators
 CS413 Practicum in Compilers and Translators
Fall 1996 Courses
CS414 Operating System
CS501 Software Engineering
CS537 Advanced Database Systems
ELE E 445 Computer Networks and Telecommunications
M.Eng Project

Original Virtual Reality RailRoad Project



Since you are here, maybe you'd like to  know a little about me? I doubt it. Anyway, currently I'm a Master of Engineering student in the Department of Computer Science  at  Cornell University. Cornell is located at Ithaca, central New York, a gorgeous place to live except in winter. Last year, I received my M.Sc in Applied Physics from  New Jersey Institute of Technology, Newark, New Jersey.

I was brought up in the beautiful campus of Tsinghua Unviersity ,  Beijing,  China. I also received my B.Eng in Engineering Physics from there. I want to say hi to all my friends in China. I miss you.

Useful Links

Java  
HTML  
CGI  
Tcl/Tk

Favorite Sites

Time
CNN
London Times
Washington Post

Chinese Digest

China News Digest
Feng Hua Yuan
Xin Yu Si
Art of China

Local Connections

CTC
Sunlab
Weather
Movies




107 Miller St.
Ithaca, NY 14850
diyu@cs.cornell.edu




  UNDER CONSTRUCTION   

",non-course
"




Dan Huttenlocher's Home Page





Daniel
        Huttenlocher
Associate Professordph@cs.cornell.edu
        607 255 3036
        607 255 4428 (fax)



Research...
My main
        area of research is visual matching and recognition. My
        work in this area ranges from theoretical algorithms
        (using techniques from computational geometry), to
        applications of visual matching in end-to-end systems
        (for remote collaboration, viewing document images over
        wide area networks, video monitoring and target
        recognition). I am also interested in uses of new types
        of electronic documents for communication, remote collaboration
        and education. 

 


» Algorithms for
                comparing geometric structures


» Hausdorff-based methods for visual
                matching and recognition (a C implementation is available)


» Fast
                indexing using an Eigenspace approximation to the Hausdorff fraction
                (a C and Matlab implementation is available)


» Performance evaluation
                and modeling of recognition methods


» Video monitoring, object tracking and identification


» DigiPaper: a highly compact, universally viewable document image format


» CoNote: a system for supporting collaboration with shared documents





Teaching...
Brian
        Smith and I are developing a new course on authoring Web
        documents, CS130, which will be offered for the
        first time in Spring '97. I also teach CS212, an introduction to
        computation and programming, and CS664, a course in computer vision.


Professional Activities...
I work with Xerox PARC on electronic document image
        processing, and am starting a small group investigating
        these problems at Cornell.
        I am program co-chair of CVPR-97, the IEEE conference on
        computer vision and pattern recognition, which will be
        held in San Juan, PR in June 1997.


Other Interests...
Two of my
        favorite non-computer-geek activities are snowboarding
        and mountain biking (but without the
        mtv-extreme-sports-way-too-cool stupid attitude).


 
Last Updated:
        November 3, 1996




",non-course
"

Ashvin M Dsouza

 
Ashvin Dsouza 


dsouza@cs.cornell.edu




I'm a graduate student working with Bard Bloom.
The focus of my thesis research is the development of
tools to support process algebraic methods for the specification and
verification of concurrent systems. By designing these tools with
respect to a metatheory of process algebras, they become immediately
available to a wide class of process algebras. This alleviates the
problem of duplicated effort inherent in custom tools.  For example,
I have designed and prototyped a BDD-based mu-calculus model checker 
for simple GSOS process algebras. The semantics of the process algebra 
forms part of the input, making this tool applicable to many commonly 
used process algebras, including CCS, CSP and basic LOTOS. In addition, 
I am investigating the expressive power of process algebras in order 
to better understand and compare them. Finally, I am exploring
applications of these techniques.


Here's some work on generating BDDs for process algebra
terms, in full
( postscipt ) 
and lite 
( postscript ) versions.
I've also written up some expressiveness results for CCS 
( postscript ). I have presented
the former at  Computer Aided Verification 95 
(LNCS 939), and the latter at 

Foundations of Software Technology and Theoretical Computer
Science  (LNCS 1026). This June, I will be presenting 
work on verifying SOS specifications at COMPASS '96.


",non-course
"
Funda's ever-improving page

Funda Ergün
e:mail: ergun@cs.cornell.edu



Hi there!
Welcome to my home page! My name is Funda Ergun. I am a Ph.D. student
in the Computer Science Dept. here in Cornell. I am working on  program
checking with Prof. Ronitt Rubinfeld. Here is my 
research

page. 
I am also doing a minor on 
painting in the department of fine arts. 

I originally come from Izmir, Turkey. I did my undergrad in Bilkent
University in  Ankara, Turkey. 
 
 
I have some non research related 

stuff  here, but you should be warned that you might encounter
pages written in Turkish or angry dogs if you go there! Go at your own risk!


You are the 

th person to visit this page since Feb 10, 1996.


This page is always under heavy construction.


",non-course
"
 Activities - Éva Tardos 

Éva Tardos
Associate Professor

 
Department of Computer Science
5144 Upson Hall
Cornell University
Ithaca, NY 14853
phone: (607) 255-0984 
fax: (607) 255-4428 
Email:  eva@cs.cornell.edu .
 
School of Operations Research and Industrial Engineering
phone: (607) 255-9140 
FAX: (607) 255 9129
eva@orie.cornell.edu

 
 
Click 

here 

to see my daughter,

Rebecca Julia Shmoys
.  
Current Activities
 Current Research
Recent Publications


Current Research
Broadly speaking, my research interest is the theory of algorithms,
including many aspects of computational complexity theory. I am mostly
working on combinatorial optimization problems, in particular network
problems, approximation algorithms, and linear and integer programming
problems.

Recent Publications
 Research Papers
Survey papers

Research Papers
 D. Shmoys and E. Tardos,  ``An approximation algorithm for the
generalized assignment problem.'' Mathematical Programming A 62, 1993, 
461-474. 
Preliminary version has appeared in the proceeding of the 4th Annual ACM-SIAM 
Symposium on Discrete Algorithms, January 1993.

 S.A. Plotkin and E. Tardos, Improved Bounds on the Max-flow Min-cut
Ratio for Multicommodity Flows. to appear in Combinatorica.
Preliminary version has appeared in the Proceedings of the 25th Annual ACM 
Symposium on Theory of Computing, 1993, pp. 691-697. 
 
ORIE TR-1042. 

 P. Klein, S.  Plotkin, C. Stein and E. Tardos,  ``Faster
approximation algorithms for the unit capacity concurrent flow problem
with applications to routing and finding sparse cuts.'' SIAM Journal on
Computing, 23/3, 1994,. 466-487. Preliminary version has appeared
in the proceedings of the 22nd Annual ACM Symposium on the Theory of Computing
(1990), 310-321.

 T. Leighton, F. Makedon, S. Plotkin, C. Stein, E. Tardos,  S.
Tragoudas: Fast Approximation Algorithms for Multicommodity Flow
Problems,  Journal of Computer and System Sciences, 50 (STOC'91 special issue),
1995, pp. 228--243.
Preliminary version has appeared in the Proceedings of the 23rd Annual
ACM Symposium on the Theory of Computing (1991), 101-110.  
 S.A. Plotkin, D. Shmoys, and E. Tardos,  Fast approximation
algorithms for fractional packing and covering problems, to appear in
Mathematics of Operations Research.

ORIE TR-999.   
Preliminary version has
appeared in the Proceedings of the 32nd Annual IEEE Symposium on the
Foundations of Computer Science (1991), 495-505. 


 M. Goemans, A. Goldberg, S. Plotkin, D. Shmoys, E. Tardos, and D. 
Williamson: Improved approximation algorithms for network design
problems. In the proceeding of the 5th Annual ACM-SIAM Symposium on Discrete
Algorithms, January 1994, pp. 223-232. 

ORIE TR-1116.

 B. Hoppe and E. Tardos: Polynomial Time Algorithms for Some
Evacuation Problems.  In the proceeding of the 5th Annual ACM-SIAM Symposium on
Discrete Algorithms, January 1994, pp. 433-441. 

ORIE TR-1117.

 B. Hoppe and E. Tardos: The Quickest Transshipment Problem, in the
proceeding of the 6th Annual ACM-SIAM Symposium on Discrete Algorithms, 1995
pp. 512-521. 
 
ORIE TR-1118. 

 P. Klein, S. Plotkin, S. Rao and E. Tardos: Approximation
Algorithms for Steiner and Directed Multicuts.

ORIE TR-1119.

 J. Kleinberg and E. Tardos: Approximations for the Disjoint Paths
Problem in High-Diameter Planar Networks, in the Proceedings
of the 27th Annual ACM Symposium on Theory of Computing, 1995, pp 26-35.
 
ORIE TR-1121. 

 J. Kleinberg and E. Tardos: Disjoint Paths in Densely Embedded Graphs.
in the Proceedings of the 34th Annual
IEEE Symposium on the Foundations of Computer Science, 1995, pp. 52-61.
 new version of ORIE TR-1127. 


Y. Rabani and E. Tardos:
Distributed Packet Switching in Arbitrary Networks,
in the 28th  ACM Symposium on Theory of Computing, May, 1996, pp. 366-376.
 ps version.

 L. Fleischer and E. Tardos:
Separating Maximally Violated Comb Inequalities in Planar Graphs,
to appear in IPCO, June 1996.

ORIE TR-1150.

Survey Papers
 A.V. Goldberg, E. Tardos and R. Tarjan, ``Network Flow Algorithms.''
(Sept. 89). in Paths, Flows and VLSI-Design (eds. B. Korte, L. Lovasz
and A. Schrijver) Springer-Verlag, 1990,  101-164.

 E. Tardos: Strongly Polynomial and Combinatorial Algorithms in
Optimization, in the Proceedings of the International Congress of
Mathematicians Kyoto 1990, Springer-Verlag, Tokyo 1991, 1467-1478.

918. D.B. Shmoys and E. Tardos, ``Computational complexity.'' (Aug.
90).  Handbook of Combinatorics (eds. R. Graham, M. Grotschel, and L.
Lovasz), North Holland, to appear. 

 L. Lovasz, D. B. Shmoys and E. Tardos: Combinatorics in Computer
Science, to appear in the Handbook of Combinatorics (eds. R. Graham,
M.Grotschel, and L. Lovasz) North Holland, to appear.

 E. Tardos: Approximate Min-Max Theorems and Fast Approximation
Algorithms for Multicommodity Flow Problems, annotated bibliography. In
Proc. of the Summer School on Combinatorial Optimization, in Maastricht,
The Netherlands, Aug. 1993.

 E. Tardos: Approximate Min-Max Theorems and Fast Approximation
Algorithms for Multicommodity Flow Problems, In Proc. Network
Optimization Theory and  Practice (NETFLOW), in San Miniato (PI) Italy,
Oct. 1993.


",non-course
"

 Francis Chu's Home Page 



 Francis Chu  
 CS Graduate Student 



University of California at Berkeley




Mathematics Department




Computer Science Department




Cornell University




Computer Science Department





Humor





fcc@cs.cornell.edu




",non-course
"

Felix's World...








",non-course
"


Frederick Smith's Homepage



Frederick Smith(Grad Student)
fms@cs.cornell.edu

5154 Upson Hall
Department of Computer Science
Cornell University
Ithaca, NY 14853 
(607) 254-5075 

Papers:


Ernie Cohen, Dexter Kozen, and Frederick Smith.
The complexity of Kleene algebra with tests.
Technical Report TR96-1598, Cornell University, July 1996.


Dexter Kozen and Frederick Smith.
Kleene algebra with tests: completeness and decidability.
Technical Report TR96-1582, Cornell University, April 1996.



 Personally Useful Links:


	Dexter Kozen's Homepage 
 
	Greg Morrisett's Homepage  

	Programming Language Research Page 
 Classes I am taking:  


    	    CS 601:Systems 

            CS 631: Multimedia

            CS 611: Semantics of Programming Languages

            Math 413: Introduction to Analysis



 Fun Links:

  Epicurious : A Food-zine
  CarTalk: Home of Click and Clack.
Catch them on NPR, Sundays at 13:00


Last updated August 28, 1996


",non-course
"

 Not Frank's Web Page 


 This is Not Frank's Web Page 
 (this is not Frank's planet either, for that matter) 
Frank Adelstein, PhD 
Post-Doctoral Associate 
Cornell/Xerox Design Research Institute 
Office Phone: (607) 254-8900 
Electronic Mail:  frank@cs.cornell.edu  or 
 frank@dri.cornell.edu  



For more (and actual) information about Frank, you'll have to check
out his  new and improved  Happy, Fun Page at 
 DRI .

 Last updated Jan. 10th, 1996 


",non-course
"  Jui-Yuan Fred Hsu the Software Engineer  

  Jui-Yuan Fred Hsu The Software Engineer.
  (in current version, only feet are shown)

 Fred1 
 Fred2 
 Fred3 


 my RESUME (.ps)  <- yes! you are looking for this. 


Some of my projects (others will appear soon).

 Distributed HTTP Server

 SCRAMO - A MIDI-Choreographed Animation Model (postscript)

 VPLA  - Visual Programming Language for Animation


Links to current affiliations: 
 HP Massachusetts Language Lab
 HP Computer Languages
 Hewlett Packard
Links to previous affiliations: 
 Cornell Computer Science
 Cornell Theory Center -  Visualization Group
 Cornell University
 Binghamton University
 Lawrence Berkeley Laboratory

Interests and Hobbies: (this section will be developed soon; maybe next year) 
Photography 
Cello, Guitar 
Aquarium 



Cornell Computer Science

Cornell Theory Center.


  home:  (617) 229-5961 (Burling, MA)
  work:  (508) 436-4592 (Chelmsford, MA)
  fax:   (508) 436-5135 
  email: fredhsu@apollo.hp.com
  snail: 300 Apollo Drive, MS CHR-02-DC, Chelmsford, MA 01824 
 http://mll.ch.apollo.hp.com/people/fred/fred.html
",non-course
"

Deepak Balakrishna 















Deepak Balakrishna

Master of Engineering


Department of Computer Science


Cornell University














Resume





Education





Courses





Personal











 Deepak Balakrishna (gbd@cs.cornell.edu) 
 




      Resume



 HTML 
 Postscript 



 Back to the main page






Education






 Undergraduate




 I completed my undergraduate in June '96 at 
 Karnataka Regional Engineering College, Surathkal, India . 
 I majored in Computer Science. My major interest was in Multimedia. Other courses related to Computer Science 
 were Operating Systems, Artificial Intelligence, Compiler Construction, Data Communications and Computer Graphics.
 



 Graduate




 I am presently at Cornell University pursuing a 
 Master of Engineering degree in
  Computer Science. I am specialising in Multimedia and after graduation, I want to be involved in projects
  dealing with multimedia and web server programming.
  

 Back to the main page









Courses





  The following courses listed are those I have taken for the Fall semester:
  



CS 631 : Multimedia Systems  - Prof.Brian Smith
CS 537 : Advanced Database Systems  - Prof. Praveen Seshadri
CS 519 : Engineering Computer Networks  - Prof. Srinivasan Keshav
CS 501 : Software Engineering  - Prof. Michael Godfrey



 Back to the main page








Personal




 Well! Let`s see. Where do I start? OK! Here goes ...
 
 Once upon a time, long, long ago (actually on November 1, 1973), in a land they call Bharat (India for
 the outside world) at precise 12:00pm was born a cute, chubby little baby weighing approximately four pounds. He took on the name Deepak (meaning light)
 and went on (actually he's still in the process) to change the world. Incidentally, (or probably out of divine interference) Aishwarya Rai (Miss World 1994)
  was born on the same day. My! Isn't she lucky to be born on the same day as me?
  
  Leaving out the miniscule details of my earlier life, let's dive straight into high school. Well, I'm lucky to have been to National Public School, Bangalore
  for a greater part of my schooling. Now, that's the place for someone to be!!
  
  And college? Nothings better than  KREC . Thats where I majored in Computer Science.
  I wonder how long it will be before I get another four year holiday. To have been a part of the all-conquering Class of '96
  was a joy never to be matched.
  
  And here I am, at Cornell University pursuing a masters degree in Computer Science. Well, I just hope it gets me somewhere.
  
  
  And finally, heres a link to my friends :
 Ashish
Aastha
 Indira
Ankit
Vineet

 Back to the main page









",non-course
"Asif Uddin Ghias
Asif Uddin Ghias


 Welcome to my

WWW Home Page.

 Me 


 Warning: Under Construction



I am a PhD student in Computer Science and my areas of interest are Distributed Systems and 
Multimedia Systems. I did my Bachelor's degree in Computer 
Systems Engineering from N.E.D. University of Engineering and Technology 
in Karachi, Pakistan. Since then, which was in 1992, I had been working 
in AT&T Global Information Solutions as a Systems Engineer. At present, I am on
a study leave for my master's program here at Cornell. 

My job responsibilities with AT&T included:


 Systems/Application Programming

 Unix System Administration Support

 Education

 Network Management and Installation


So far I've worked on a number of interesting projects here at Cornell. I plan to put them up online some good day (hopefully before year 2000).


Publications

The following interest me too:
 Music
 Cricket
 Astronomy





Asif Uddin Ghias (ghias@cs.cornell.edu)
",non-course
"


Dan's home page has moved!




Dan's home page is now at:
http://www.ced.berkeley.edu/~dglaser/home.html
Please visit it by the millions


",non-course
"
David Gries -Home Page







David Gries
William L. Lewis Professor of Engineering
Dr. rer. nat., Munich Institute of Technology, 1966

My interests are in programming methodology, in particular the formal
development of programs, and in related areas such as programming
languages, programming language semantics, and logic. I am as
interested in the teaching of these topics as I am in further research
in them.  In fact, understanding how logic and formalism can be taught
as a useful tool at the freshman/sophomore college level has been an
overriding concern of mine in the 1990's.
Click on any of the following items for more information.

 Teaching logic as a tool
 Curriculum Vita
 Short biography
 Texts written by Gries
 The programming language Polya
 Announcement of DIMACS Symposium on teaching logic
Links to papers for the symposium.

   Cornell CS Department Home Page




Computer Science, Upson Hall
Cornell University
Ithaca, NY 14853
(607) 255-9207  gries@cs.cornell.edu


Short biography of David Gries
I was born in Flushing, New York, and spent 21 years there before I
escaped.  I received a B.S. Queens College in 1960 and went to work
for the U.S. Naval Weapons laboratory (as a civilian) as a
mathematician-programmer. I met my wife-to-be, Elaine, a few
months later, and we were married in November 1961.
We went to Illinois for more education. I received a Masters degree
in math from Illinois in 1963. My assistantship was to help two
Germans, Manfred Paul and Ruediger Wiehle, write a full Algol compiler
for the IBM 7090 computer --it was fun, figuring out how to implement
recursion efficiently before there were many papers on the topic.

This ended up in my wife and I going to Munich for almost three years.
I received my doctorate under F.L. Bauer and Joseph Stoer from MIT
(the Munich Institute of Technology, Germany) in June 1966. This was
in math, or numerical analysis, since computer science theses were not
yet kosher.
I was an assistant professor of Computer Science at Stanford from
1966 to 1969. While at Stanford, our twins Paul and Susan were born.
What made it more exciting than usual was that they were born on the
birthday of myself and my twin --26 April. So, when my twin is in
town, Elaine makes four birthday cakes.

We left Stanford because it had no weather. We moved to Cornell, which
has weather, in 1969 and have been snowed in ever since. I was
Department Chair in 1982-87, and I became the William L. Lewis
Professor of Engineering in 1992.  I had a Guggenheim Fellowship in
1984-85.

Return to table of contents
I am better known for my
text writing
and my contributions to education than on the
wonderfulness of my research.  Do what you are good at; bloom where
you are planted. I have received a number of awards for contributions
to education: the 1994 IEEE Taylor L. Booth Award, the ACM SIGCSE
award in 1991, a Cornell Outstanding Educator Award in 1990, the Clark
Award from Cornell's College of Arts & Sciences in 1986, and the
American Federation of Information Processing Societies' (AFIPS)
education award in 1985.
I am proud of all my Ph.D. advisees, but two stand out. Susan
Owicki's thesis laid the foundation for proofs of correctness of
parallel programs, with the notion of interference-freeness.
A paper co-authored by us on the topic won the 1977 ACM Award for best
paper in programming langauges and systems. And
T.V. Raman's
thesis just won the ACM best-dissertation award for 1993-94. Raman designed
and implemented a system for ""speaking"" any tex/latex document,
including technical articles and books. The same document can be printed
or spoken. Being able to speak
mathematics in an effective manner was an important goal of his work.
Reading for the Blind is already using his system to produce audio
cassettes.
I served as Chair of the Computing Research Association (then the
Computer Science Board) in the late 1980's when it opened its office
in Washington and began seriously to represent computing research
interests. I also conducted the Taulbee Surveys in the period
1984-1991 and am proud of obtaining essentially complete responses
from PhD-granting computer science departments during that period. No
other comparable survey has had such a response rate.  One year, it
required only 256 telephone calls to get the 150 departments to send
in their questionnaires.  I received the Computing Research
Association's 1991 Service Award for this work on the Surveys and for
chairing the Association during its move toward respectability and
responsibility.
I am currently editor for IPL, Acta Informatica,
Formal Aspects of Computing, and Software Concepts and
Tools.  This editing keeps me busy, but I enjoy it. I try to take
an interest in individual papers, when I know the area, and will
suggest substantial rewrites myself when I believe it will help. Serve
where you can best serve. Fred
B. Schneider and I are co-editors of Springer Verlag Texts and
Monographs in Computer Science.
What do I do in my spare time? It used to be sports like golf,
softball, volleyball, swimming and table tennis. (Once, in China, I
split my pants playing ping pong. An hour later, while giving a
lecture, I mentioned that the audience should not laugh when I turned
around, and I explained why. The interpreter spoke, and everyone
laughed.  However, I don't know whether he told the truth or just
said, ""Gries made a joke, laugh."".) I also used to sing barbershop and
Gilbert and Sullivan. And working around the house --carpentry,
wiring, remodeling-- has taken a lot of time and yielded considerable
satisfaction.
Return to table of contents


",non-course
"


Alex Grinzayd's Homepage



Alex Grinzayd


M.Eng. Student, Computer Science
Cornell University

tel: (607) 277-6419 


email: grinzayd@cs.cornell.edu 



This is myself during the first week at Cornell:


Here are some links:

NECX Direct
Internet Shopping Network
Computer Express
Damark



Warning! This page is boring (I'm just learning HTML).



",non-course
"
 Grzegorz Czajkowski's Homepage 


Grzegorz J. Czajkowski

Department of Computer Science

Cornell University

Ithaca, NY 14853
office: (607) 255-9124 
 grzes@cs.cornell.edu  
 

I'm a second-year student in the Ph.D program in the 
Department of Computer Science
at Cornell University in 
Ithaca, New York.


I completed my master's degree in Computer Science in Krakow, 
Poland. 



I am currently in involved in several projects, and am also in charge of 
administering CUCS's  IBM SP-2. 
My advisor is 
Thorsten Von Eicken .

 
A few links related to my research: 


	U-Net architecture 



	Active Messages 



	Split-C 

 
Last modified:  November 7, 1995.  

 grzes@cs.cornell.edu 

",non-course
"Joe Halpern's Home Page
JOSEPH Y. HALPERN

 


Professor

Cornell University
Computer Science Department
4144 Upson Hall
Ithaca, NY 14853
Tel: (607) 255-9562; Fax: (607) 255-4428
halpern@cs.cornell.edu


My research focuses on reasoning about knowledge and uncertainty, 
and its applications to distributed computing, AI, and game theory,
 although I've also done work (and continue to be interested in) such 
topics as fault tolerance in distributed computing 
programming language semantics.
My work lies at the boundary of a number of fields. 
I recently gave a talk in the economics department at Princeton where 
I described myself as someone with a Ph.D. in mathematics, who calls 
himself a computer scientist, and is giving a talk to economists about
a subject mainly studied by philosophers.  
That's probably the best one-sentence description I can give.  

If you'd like more details,
check my 

 list of publications.

It has pointers to abstracts of all my papers; in many cases, the paper itself is also available.  Other details of my activities are in my  

 resume.


In Fall, 1996, I'm teaching a course on 

 Reasoning About Knowledge (COM S 676). 

 In the fall of 1997, I'll teach a sequel on 

 Reasoning About Uncertainty (COM S 677).

 
Last updated, September 26, 1996 - Joe Halpern

",non-course
"Tsuneshi Hashimoto
Tsuneshi Hashimoto




This is a home page of Tsuneshi Hashimoto.
Now constructing.


CS516




Tsuneshi Hashimoto (hashi@cs.cornell.edu)
",non-course
"

 Mark Hayden 




 Mark Hayden 
 hayden@cs.cornell.edu 

Office:
  4139 Upson
  Cornell University
  Ithaca, NY 14853
  (607)255-4934



This fall I will be teaching CS214: A Taste of Unix and C.

My interests are:

 The Horus distributed communication system.
 The Ensemble distributed communication system.
 The Nuprl proof development system.
 Hockey.

Last updated November 11, 1996


",non-course
"


 Heji's New and Improved Home Page 





<!-- describe the document, avoid context sensitive descriptions >


<!-- keywords for the document >


<!-- should be ""document"" unless providing a search, then ""service"" >


<!-- use global for documents to be indexed outside Cornell >




 Heji 












Hop to My Cyber Pond  






",non-course
"

Jing Huang's home page




 Jing Huang 
 4138 Upson Hall 
 Department of Computer Science  
 Cornell University 
 Ithaca, NY 14853
(607) 255-1158

huang@cs.cornell.edu


 I'm a Ph.D. student in the
Department of Computer Science
at Cornell University.
I received my Bachelor
and Master Degree in Department of Applied Mathematics,
 Tsinghua University, Beijing, 
 China




My academic interest is in  computer vision and  multimedia systems. I work with Professor  Ramin Zabih  on image retrieval, video processing, motion tracking etc.



 Useful Links
   Annotated Computer Vision Bibliography 
   Pattern Recognition Related 
   Machine Learning 
   Optimization 



 Check it out
   Cornell Chinese Christian Fellowship 
   Cornell University Evangelical Fellowships 
   Chinese Christian Resource Center 
   Chinese Christian Mission 


Back to Cornell Computer Science Homepage




",non-course
" Deyu's Home Page>
 Deyu Hu 
 Graduate Student 
 hu@cs.cornell.edu 
Cornell University
Dept. of Computer Science
4104 Upson Hall
Ithaca NY 14853
Tel: (607) 255-8597
Fax: (607) 255-4428


I'm a third-year Ph.D. student in 
Computer Science at Cornell.
I was born in 
Shanghai, 
China. I received my undergraduate degree from CS at UC Berkeley.

My faculty advisor is 

Thorsten von Eicken.

More to come ...

Last Modified Wed Sep 9 14:00:00 EDT 1994
 Deyu Hu / hu@cs.cornell.edu
",non-course
"
 I-Chin Chen's Home Page 

 I-Chin Chen 
 Welcome to my home page 







 

 Current Address: 
	    201 Maple Ave.,Apt. #E29A 
	    Ithaca, NY 14850 
 Tel: (607)256-4973 
 e-mail: 

 icchen@cs.cornell.edu 

 Permanent Address: 
	    7F, No. 223 
	    Sung-Deh Rd. 
	    Taipei,Taiwan 
	    R.O.C. 





 Class of Spring '96 


	CS 417 Computer Graphics 


	CS 514 Practical Distributed System 


	CS 515 Practical Distributed System Practicum 

	NBA 600 Database Management 



 Album 



 My Resume 


 NEWS 

 
 
 
 



 


 China Times 


 

NCTU 



     This page is under construction...
Last modified, 4/9/96

",non-course
"

My Home Page







 Indira Malik
 
           Department of Computer Science

 
           Master of Engineering

 imalik@cs.cornell.edu











 Resume 

 Post Script 




 Courses 



        Programming Systems/Software Engineering CS501
   



    Advanced Database Systems CS537 



        Engineering Computer Networks CS519 



   Multimedia Systems CS631





 Visit my High School: 
 TAPS 






 This page is under construction 

",non-course
"

 Indira Vidyaprakash





 Indira Vidyaprakash
Master of Engineering
Class of 1996
Dept. of Computer Science
Cornell University





Welcome to my homepage.
Currently I am a M.Eng student at the 
Computer Science Department
 at Cornell University in 
Ithaca, NY. 
I have my B.E degree in Computer Science and Engineering from 
PSG College of Technology, 
Coimbatore,INDIA.



Some information about the courses that I have taken at Cornell
University



Fall 1995 
 
CS414 Operating System
 
CS415 Practicum in Operating System Project specification: 

HOCA Operating System
 
CS501 Software Engineering
 
CS631 Multimedia Systems:Project: Audio Processing Toolkit
 NBA610 Management Information Systems Policy




Spring 1996 
 CS417 Computer Graphics
 CS418
Practicum in Computer Graphics :Project:  Animation - The Magic Carpet 
 CS709 Computer Science Colloqium 
 NCC 506 Managerial Finance



Summer 1996 
 CS490 Independent Research: Ray Tracing
in Computer Graphics
 CS790 M.Eng Project: Camera and Perspective
Transforms in Java.





Click here to see a postscript version of my
Resume
Click here to see the JAVA Applet for Camera and Perspective Transforms


Some interesting WEB sites
 Some cool applets from Java's
Gamelan Directory
 Calvin
and Hobbes Gallery 
 GIFS 
 Indian Recipes 




6331 Chickering Wood Drive, Nashville, Tennessee  37215

(615) 661-9333


 indira@cs.cornell.edu


  Last Update: August 14, 1996



",non-course
"

Ioi Lam's Homeless Page


Ioi Lam's Home Page


Ioi K Lam
ioi@cs.cornell.edu


  I am currently a research assistant to 
  Prof. Brian Smith at the 
  Computer Science Department of 
  Cornell University.



Interests


       Multi-media. 
Parallel Programming. 
Tcl/Tk. 

Using Software in the System Lab
Instructions about setting your
   environment to use the system lab software.

Tcl/Tk

  Tcl/Tk Knowledge Base. 
  Tcl/Tk
  Engineering Manual (PDF): Guidelines for writing good Tcl/Tk
  extensions in C code. It doesn't cover much of writing Tcl scripts
  per-se, but it has a section about writing test suites that is
  valuable to both C and Tcl programmers. You can get the PostScript Version and  complete
  Tcl/Tk Engineering Manual package that includes template C
  source files.
              

CVS Documentation

 A short introduction to using CVS
       in the system lab. 

 A short description of CVS (87K, PS).
   CVS User Manual. (543K, PS).
   Using CVS on remote machines (93K, PS).
       
 CVS FAQ
       .
   Index of CVS
       Information.
  
       CVS Tutorial.

What am I doing right now (Week of Sep 23)

 Putting together the Tcl/tk knowledgebase.

   CVS repository for DP has been set up (see dp-cvs.txt).

   Trying to package up SPAM and do a site test on it in the
  ~multimed home directory.
       
   Getting started with VRC -- virtual reality conferencing. More
  details to come ..

   Working on a prototype of a mpeg video file server based on the
  HTTP protocol. More details to come ..

       

CS417 (Spring '96)

 CS 417 homework solutions





",non-course
"Paul Jackson's Home Page
Paul Jackson
 
 Post-Doctoral Associate
Cornell University 


e-mail: 
jackson@cs.cornell.edu
www: 
http://www.cs.cornell.edu/Info/People/jackson/jackson.html

address: 
  Department of Computer Science 
  4158 Upson Hall
  Cornell University
  Ithaca NY 14853
  USA

phone #: 
+1 (607) 255-6046
department fax #: 
+1 (607) 255-4428


Research Interests
Theorem proving environments, formal methods for software and
hardware development, computer algebra, synthesis of scientific programs,
linkage of software tools for engineering design.

Thesis Information
My PhD thesis is entitled  Enhancing the Nuprl Proof Development
System and Applying it to Computational Abstract Algebra.
The 
 abstract (3K)
is available, as is the full text in 
dvi(216K)
and 
postscript(311K)
formats. 


Papers

 
Paul B. Jackson. Exploring Abstract Algebra in Constructive Type Theory.  In A.
Bundy, editor, 12th International Conference on Automated
Deduction, Lecture Notes in Artifical Intelligence. Springer-Verlag, 
June 1994.  

The 
 abstract 
is available, as is the full text in 
dvi(25K)
and 
postscript(59K) formats.


Paul B. Jackson. Nuprl and its use in circuit Design. In R.T. Boute, 
V. Stavridou, T.F.Melham,editors, Proceedings of the 1992 Interational 
Conference on Theorem Provers in Circuit Design , IFIP Transactions
A-10. North-Holland, 1992.

The 
 abstract 
is available, as is the full text in 
dvi(39K)
and 
postscript(76K) formats.

 
Paul B. Jackson. Developing a Toolkit for floating-point hardware in the
Nuprl proof development system. In  Proceedings of the
Advanced Research Workshop on correct Hardware Design Methodologies.
Elsevier, 1991.


Nuprl
The Nuprl project has its own 

World-Wide Web home page . From here, you can access documentation on 
Nuprl and communicate with a live Nuprl session that has some basic 
theories loaded. This collection of Nuprl pages still needs further work
on it to make it more accessible. I or someone else will get
round to paying some attention to this, sometime in the next month or two.

 Hypertext listings  for most of the
theories I developed for my thesis are available.  The listings for
each theory include introductions, summaries of definitions and
theorems, and formatted proofs. The listings for the
polynomial-related theories are not included at the moment, but should
be in the next couple of days.



Last Modified Feb 25th, 1995
 Paul Jackson / jackson@cs.cornell.edu 
",non-course
"

 Hani's Home Page 









",non-course
"Tibor Jánosi
Tibor Jánosi


Welcome to my

WWW Home Page.



 Permanently Under Construction

Office: 4132 Upson Hall, Cornell University, Ithaca, NY 14850, USA
Office Phone: +1 607 255-1179

Interesting Sites:
Project Zeno
Tibor Jánosi (janosi@CS.Cornell.EDU)
",non-course
"


 JanWun Lee   

 Lee,JanWun 
 janwun@cs.cornell.edu 
 Master of Engineering Student `96
 Computer Science Department 

 Address: 
 201 Maple Avenue
 Apt. #B026
 Ithaca, NY 14850
 Telephone: 
 (607)277-1823

",non-course
"

Faculty Research Interests : Greg Morrisett 


 Greg Morrisett 


 jgm@cs.cornell.edu
 Assistant Professor of Computer Science
 Cornell University
 Ithaca, NY  14853-7501
 Office: 4105C Upson Hall
 Office phone: (607) 255-3009


 Table of Contents 

Research Interests
Teaching
Selected Papers
Related Research Links
Personal Information


Research Interests

My primary research interests are in the development and use of
advanced programming languages.  I am particularly interested
in the use of high-level languages, such as Standard ML, for
building systems software, including run-time systems, operating
systems, and distributed systems.  Lately, I have focused on
the implementation issues that have kept high-level, safe
languages from being used in the construction of systems software.
To this end, my research has concentrated on producing code for high-level 
languages that is faster, consumes less memory, and supports
""hacking with the bits"".  

I am also interested in bringing powerful, semantics-based tools
from programming language theory, such as type-directed compilation,
partial evaluation, abstract interpretation, and run-time code generation,
into the design, specification, and construction of real systems
software.  


Teaching

CS 611: Semantics of Programming Languages (Fall 1996) 

CS 512:  Advanced Language Implementation (Spring 1996)


Selected Papers


Semantics of Memory Management for Polymorphic Languages,
 Greg Morrisett and Robert Harper,  
CMU Technical Report CMU-CS-96-176 [Also appears as CMU-CS-FOX-96-04],
September, 1996.

 Compiling with Types, 
Greg Morrisett, (gzipped postscript), Ph.D. Thesis, 
Published as CMU Technical Report CMU-CS-95-226, December, 1995.

 TIL: A Type-Directed Optimizing 
Compiler for ML,
D. Tarditi, G. Morrisett, P. Cheng, C. Stone, R. Harper, P. Lee,
1996 SIGPLAN Conference on Programming Language Design and Implementation.

The TIL/ML Compiler:  Performance and Safety
Through Types,
G. Morrisett, D. Tarditi, P. Cheng, C. Stone, R. Harper, P. Lee,
1996 Workshop on Compiler Support for Systems Software.

 Typed Closure Conversion ,
 Yasuhiko Minamide, Greg Morrisett, and Robert Harper ,
To appear in the 1996 Symposium on Principles of Programming Languages.
Extended version published as CMU Technical Report
 CMU-CS-FOX-95-05 , July 1995.

  Abstract Models of Memory Management,
(dvi version)
 Greg Morrisett, Matthias Felleisen, and Robert Harper,
 1995 Conf. on Functional Programming Languages and
Computer Architecture.  Extended version published as CMU Technical Report
CMU-CS-95-110, (dvi version) also as CMU Fox Note
CMU-CS-95-01.  

  Compiling Polymorphism Using Intensional
Type Analysis, Robert Harper and Greg Morrisett 
Proc. of the 22nd Annual ACM Symposium on 
Principles of Programming Languages, San Francisco,
January 1995.

Optimistic Parallelization
Greg Morrisett and Maurice Herlihy.
CMU-CS-93-171, October 1993.

  Refining First-Class Stores, J. Gregory Morrisett, Proceedings of the ACM SIGPLAN Workshop on State in Programming Languages, Copenhagen, Denmark, June 1993.

  Procs and Locks: A Portable Multiprocessing Platform for Standard ML of New Jersey, J. Gregory Morrisett and Andrew Tolmach, Proceedings of the Fourth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, San Diego, May 1993.

  A Portable Multiprocessing Interface for Standard ML of New Jersey, J. Gregory Morrisett and Andrew Tolmach, CMU-CS-92-155, June 1992.  Also appears as a Princeton TR.

  Adding Threads to Standard ML, Eric Cooper and J. Gregory Morrisett, CMU-CS-90-186, 
December 1990.



 Related Research Links: 

 Mark Leone's Resources for Programming Language Research.

 I used to be a member of the Fox Project at Carnegie Mellon.

On-line information about Standard ML.

Home pages of 

researchers in programming languages.

Home pages of 

research projects in programming languages.

Programming-language oriented 

bibliographies.

Cornell Department of Computer Science



Personal Information

Home Address:


 544 Warren Road #4
 Ithaca, NY  14850
 phone: (607) 257-3211



",non-course
"
 Jiun-hau Lin 





 Lin, Jiun-hau 





Resume...

Java with me










Current Address
201 Maple Avenue, Apt.#E27A
           Ithaca, NY 14850 
           Tel:(607)256-3714 

	   email:jhlin@cs.cornell.edu 


Permanent Address
3F,No3,Aly7,Ln46
           Deh-Shing E. RD
	   Taipei, Taiwan, 111
           R.O.C.





",non-course
"
Jerry Hsu @ CS.CORNELL.EDU





Jerry Hsu





CS519
CS537
CS631

M.Eng Project

Jerry's Homepage






",non-course
"

Jia Wang's Home Page





 Hi, we are twin sisters !!


Jia Wang
PhD Student
 Department 
of Computer Science  
Cornell University

5162 Upson Hall
Ithaca , NY 14853-7501 
Office Phone: (607) 255-7421 
Home Phone/Fax: (607) 253-6522 
Email:  jiawang@cs.cornell.edu  

I'm a first-year PhD student. I graduated from  Department of Computer Science of  State University of New York at Binghamton with a B.S. degree in computer science. Before I transferred to SUNY Binghamton, I was a student of Department of Mathematics of Nankai University, Tianjin, China.


Honor and award

 1995 Barry M. Goldwater Scholar of Mathematics, Science and Engineering
  1996 National Science
Foundation (NSF) Graduate Research Fellowship.  


 My Family and  me
  My twin sister


³B¤k®y
¤K¤ë¤G¤Q¤T¤é¨ì¤E¤ë¤G¤Q¤G¤é



Here are some cool links...

  About Hongkong...
  About Taiwan...
 
Beijing Review 
 
China 
  China
and Chinese Related Web Sites
  China Daily & CBnet 
  China Internet Forum

  ChinaNet 
  China Stamps
 
China Times 
  China Window 
  Chinese
Calendar 
 
Chinese Internet Directory 
 Chinese Magazines
  Chinese Media
Information
 
Chinese Music 
 Chinese News Digest
  Chinese Wed Homepage

  CND Services 
  Education in Taiwan 
 
History & Culture of China
  Hongkong
LaserDiscCenter 
 Internet
Distributed Chinese Magazines
  Multilingual Software Digest 
  Net Taiwan 
  Ryan's
Movieplex 
  Scenery Pictures of China
 
The Art of china 
  Tour & Entertainment in C
hina
  Min Sheng Tian Di
WWW Page

 More in the Future...


Some Interesting WWW Sites... 

  1996
America's Best Graduate Schools: U.S. News Ranking 
  1996
U.S. News Graduate Liberal Arts Rankings, Computer Science 
 ACM
  Film Music 
 IEEE Computer Society
 Money
 National Science 
Foundation
 
Petersons Guide 
 
Postcard Service
  Rank PhD Programs in
Computer Science
  The
Senior's Homepage
  Virtual Tourist World
Map
 Yahoo
 Cornell  Chinese Christian Fellowship (Mandarin)
  CSSA at Cornell University 
  Weather 


Other Universities...

 Binghamton University
 Cornell University
 SUNY Stony Brook
 UCLA
 Universities in China




",non-course
"
Justin Miller - Home Page 
Justin Miller -Home Page 

  That's me, in my Navy uniform.  Currently I am a Master of Engineering student in Computer Science at the College of
Engineering, Cornell University.  This semester I am a teaching assistant for COMS 664 Machine Vision.  During the day (and many, many long nights), I can be found in the 
Robotics and Vision Lab (CSRVL), where I am a research assistant
working for 
Prof. Ramin Zabih.  My primary research interest is
Machine Vision, particularly low-level image processing.  

General Information
Some of My Rantings.
Project Info.
",non-course
"

Jeff Moore



Jeff Moore










Well, currently I am a graduate student at Cornell.  I am working on a Masters
of Engineering in Computer Science.  I received my BS in 
Computer Science from 
Purdue University in West Lafayette, 
Indiana.  I went to high school at 
Hillsboro High School in Hillsboro, Oregon (a suburb of Portland).


Employment
My resume is here for anyone who is interested.  I 
will be working at Intel in the Internet 
Products Division creating cool software.

Spring 1996 Classes

NBA610 - Thriving on the Information Revolution in the 
Entertainment Sector
CS514 - Practical Distributed Systems
CS515 - Practicum in Distributed Systems and the CORNELLopoly game.
CS516 - High Performance Computer Architecture and the $500 Network Computer.
CS790 - Optimal Parallel MPEG Encoding Research

Fall 1995 Classes

CS501 - Software Engineering: Technology/Technique
CS513 - Formal Methods
CS631 - Multimedia Systems and the Research Paper
CS709 - Computer Science Colloquium
CS717 - Cool Software Tools Seminar and presented 
OLE, OpenDoc, and MFC
Optimal Parallel MPEG Encoding Research






Software Companies



Microsoft
Netscape
Lotus

Novell
WordPerfect
Corel

Oracle
Apple
IBM


Hardware Companies



Intel
Silicon Graphics
IBM

Sun
Apple


Magazines



PC Magazine
PC Week
PC Computing

Computer Shopper
Windows Sources
Computer Life

MacUser
MacWeek
Interactive Week

Family PC
Computer Gaming World



Electronic Newspapers



USA Today
Wall Street Journal
New York Times

Philadelphia Online
The Daily News Worldwide
The Dallas Morning News Opinions

The Detroit Free Press Gopher
The Knoxville News-Sentinel
The Leader OnLine

LAT-WP News Service
The Nugget Newspaper for Sisters, Oregon
RWorld From The Orange County Register

The San Francisco Chronicle & Examiner
San Jose Mercury
The Seattle Times

NandO.net
USA Today
Boston Globe

Portland Press Herald - Maine Sunday Telegram



Visitors since 30 January 1996: 


Campus Address:

201 Maple Ave. Apt #F08D

Ithaca, New York 14850

(607) 272-8827

Last Updated: 03 April 1996
jmm@cs.cornell.edu



",non-course
"Jose Luis Fernandez Home Page

Jose Luis Fernandez





Jose Luis Fernandez
Master of Engineering (95/96)
Department of Computer Science
Cornell University
Ithaca, NY 14850

Home Address:
201 Maple Avenue Apt. #E17B
Ithaca, NY 14850


E-Mail:
joseluis@cs.cornell.edu












   If you were using a Java-enabled browser,
   you would see an animated scrolling text sign:
   











 Resume  







 Curriculum Vitae  


 Interests 
My current interests are Distributed Systems, Multimedia,and Computer Graphics.

 Projects 
CS631 Project: Image and Video Transition FX for Rivl /  Examples Page /  Presentation
CS501 Project: ""Pyramania"" 3D Game. 3D Spaceship battle. /  Project Report 
CS415 Project: ""Hoca"" Design and coding of a Operating System implementing Multitasking and  Virtual Memory.

 MENG Project 
CS515 Project: Distributed Systems.Autonomous Vehicle Simulation.











 Hobbies 

Photography.
Click to view some of my pictures
Music
Computers
Writing and directing crazy movies with my Video 8 and some actors recruited from my friends



 Current Time 












   If you were using a Java-enabled browser,
   you would see an animated clock here
        

Clock courtesy of Bill Giel.







You are visitor number:





This page is better if viewed with a Java-Enabled Browser


",non-course
"Julián R. Díaz Hurtado Home Page


Julián R. Díaz Hurtado
(Click here for Curriculum Vitae)



Cornell University
Master of Business Administration (96/97)
Johnson Graduate School of Management
Master of Engineering (95/96)
Department of Computer Science


E-Mail:
jrd11@cornell.edu



""COLOMBIA, qué linda eres!""



 Master of Engineering Project 
CS515 Project: Distributed Systems.Autonomous Vehicle Simulation.



",non-course
"

Janeen's homepage



Janeen W. Reich 


 Welcome to my home page.
 Currently I am at Cornell University, where I am completing the M.Eng. in Computer Science in August.
 In September, I will join the Systems Group of Texas Instruments in Dallas, Texas.

To send me email: jreich@cs.cornell.edu
My resume is currently being added to this page.


 My Most Favorite Things...



",non-course
"

Jody Shapiro









Jody Shapiro

Education 

I received my BS in Computer Systems Engineering from the University of Massachusetts at Amherst.
I am currently here at Cornell getting my MEng in Computer Science;
I'll be graduating in May, 1996 - here's my resume.

Fall 1995 Courses 

CS 631 - Multimedia Systems

CS 501 - Software Engineering

EE 445 - Computer Networks and Telecommunication
CS 790 - Masters Research
Spring 1996 Courses 

CS 664 - Machine Vision

CS 516 - High Performance Computer Systems

EE 546 - High Capacity Computer Networks
NBA 610 - Thriving on the Information Revolution

CS 790 - Masters Research
MAE 386 - Automotive Engineering
Interesting Projects 

Design and Implementation of Dynamically Generated Synchronized Computer Speech And Facial Animation

Low-Cost Portable Desktop Videoconferencing for Windows 95

Parallel Object Recognition and Applications to Facial Recognition
Interests 

My main interests are computers (obviously) and cars. I'm a member
of both the F-Body mailing list (Camaros/Firebirds) and the Do-It-Yourself
Electronic Fuel Injection mailing list (although I don't always
have time to participate).  I'm also on the EFI332 mailing list (designing
an EFI system from ""the ground up"").  The web pages for each list are:

F-Body Home Page
DIY EFI Home Page
EFI332 Home Page


These are some pictures of my cars:

1984 Chevy Camaro Z28 - I sold this car in May 1994





Stock: 305ci HO (L69) engine, 5-speed, and 3.73 gears
Modifications: Hypertech Stage 2 chip, Flowmaster exhaust, Hurst shifter, Grant steering wheel, K&N Filter


1989 Ford Mustang LX 5.0 - I bought this car in September 1994
and still have it...





Stock: 5.0L engine, 5-speed
Modifications: 3.55 gears, Accel plugs, Ford Motorsport 8mm wires
Best 1/4 mile so far: 14.46 @ 95MPH
Best MPG so far: 26

1997 Chevy Camaro Z28 - coming in January 1997... 



F-Body Home Page

1995 Chevy S10 ZR2 4x4 - coming in September 1997... 



4x4 Home Page



Number of visits since 2/6/96: 

Last updated:  5/11/96


",non-course
" Julia's home page
Julia Komissarchik
juliak@cs.cornell.edu
To be continued ... 
",non-course
"  Julian Pelenur  

 Julian Emilio Pelenur 
 julian@cs.cornell.edu 
  
There is a better picture   available 


Master of Engineering,   Cornell University,   Computer Science , May 1995

I graduated from Cornell Computer Science (BS Engineering) in May 1994


 Campus Adress:

114 Summit St. Apt. 2				

Ithaca, NY 14850				

(607) 273-4248 


 Office (Theory Center): 

530 Engineering & Theory Center

Ithaca, NY 14853

(607) 254-8859  

  fax   254-8888

 Office (Computer Science): 

312 Upson Hall

Cornell University

(607) 255-1099


Current occupation: 
 Fulltime student, Teaching Assistant, and Database Administrator at the 
  Cornell Theory Center .

Recent Projects: 
  Global Pointers in C++  : A complete toolkit for writing C++ parallel programs on a network of workstations. Independent of platform, network topology, and compiler. Developed on Sun Sparcstations over both Ethernet and ATM networks.  
  Wfinger, a system for searching home pages and other documents on the World Wide Web.

 Currently under development:

 Cyberserver DFS: There is a growing need for faster HTTP
servers to fulfill the
  increasing demand for WWW services. In addition, with the
  growing commercialization of the Web, fault-tolerance and high
  availability are becoming critical. This paper describes the design
  and implementation of a  distributed, fault-tolerant HTTP server
  using Horus. 
 
 PRVF (Posse Really Fast Video): The
goal is to design and implement a technique to achieve full screen
motion video over a cluster of workstations on an ATM network. We show
that through the use as an innovative  Snarf and Blast technique,
that capitalizes on the hardware, we can produce fast video transfer
with no compression (30 FPS full-color,full-screen) 


",non-course
"

Jason Hickey's Home Page







I am a graduate student at Cornell in the Computer Science Department,
under the supervision of Robert
Constable.
Here's a summary of my current status:




My interests include the theory and practice of programming languages.
There is a great resource at CMU under The
Fox Project Home Page, especially Mark
Leone's resources for programming language research.

My own work in programming languages is mainly software verification.
One of the tools I use for specification is type theory. I use the formal
system Nuprl,
developed here at the Cornell University
Department of Computer Science. In my research I make use of higher-level
modules and abstract data types, and relate them to type-theory. 
Here are some recent papers:


Some papers I have published at Cornell

A bibliography of some papers I published
at Bellcore 

I also have some slides of talks I have
given in the Nuprl seminar. The slides can be pretty technical, but they
give an overview of the work I've done at Cornell.



If you want to see more about me, try a sequence on identification.

Some interests I have include: 

The Fine Arts. Here is a gallery
of mine. There are a lot of other resources for fine arts on the Web. Try
The Art Net Web, or
The FineArt Forum.

CUCS
Hockey 
Backcountry. Take a look at The
Backcountry Home Page. 

I perform a few services for the department: 

Publicly-maintained
Software Czar; 
Hockey and hockey-equipment czar. Go back to Hockey
for more info. 
Theatre czar. Here is the schedule for
the Cornell Center for the Theatre Arts. 



",non-course
"
Koichi Kamijo

Koichi Kamijo

   Welcome to the home page of Koichi Kamijo!! It's under construction now.

 How to reach me after 10/July/1996

















[ English / Japanese ]

I used to have a lot of things to sell before I go back to Japan in July 1996, but most of them are sold out. You can click here if you like, but not for sale any more.


Classes and papers
Hometowns
Education and work experiences



Koichi Kamijo 
 207 Muriel St #2 Ithaca, NY 14850
 (607) 257-0799
kamijo@cs.cornell.edu or kkamijoh@vnet.ibm.com (after going back to IBM Japan)
 (both ID accept both English and Japanese)

Accessed
 times since May 28th, 1996

 Last update May 29th, 19:31


",non-course
"

 Karl-Friedrich Böhringer 




Karl-Friedrich Böhringer

M.S. (Cornell University, 1992) 
Dipl.-Inform. (TU Karlsruhe, 1990) 

Graduate Student 
Cornell University 
Dept. of Computer Science 
4157 Upson Hall 

 Ithaca, NY 14853, USA 


     Tel: (607) 255-1164 
     Lab: (607) 255-2329 ext. 501 
     Fax: (607) 255-4428 
     Email: karl@cs.cornell.edu





My current research interests are micro robotics, manipulation, and
assembly.
At the Cornell Nanofabrication 
Facility I am building 
microfabricated actuator arrays 
that implement
micro manipulation strategies.
More generally I am interested in
new devices for handling and
assembling parts,
and manipulation strategies with
programmable force vector fields.
I have also investigated 
design automation for micro structures.

Earlier work at the 
University of Karlsruhe, 
Germany, has included the development of better 
graph layout algorithms.

My thesis advisor is Professor
Bruce Donald,
who is one of the founders and directors of the Cornell
 
Computer Science Robotics and Vision Laboratory.
My project is in close collaboration with Professor 
Noel MacDonald
and his
research group.





 Publications and Other Documents.

 Conference Announcement and Call for Papers.

 Animations and Videos
 Micro Sculptures

 The 
	Invisible Cantilever

A microfabricated model of 
	Frank Lloyd Wright's Fallingwater.
	
	See the articles in the 
	New York Times Magazine
	(March 10, 1996, p. 21) and
	Wired 
	(4.10, October 1996, p. 41).






If I am not in my office or the 
Nano Lab, I may be working out
in our Tae Kwon Do club, 
or you may find me at the Lindseth 
climbing  wall.


Navigate through my pages:
 previous page
 higher level
 deeper level
 next page

karl@cs.cornell.edu





",non-course
"





David A. Karr




David A. Karr
PhD Student

Department of Computer Science

Cornell University

4144 Upson Hall 

Ithaca, NY 14853


Tel: (607)255-1159

Fax: (607)255-4428

E-mail: karr@cs.cornell.edu



I am a Ph.D. student in the Department of Computer Science
at Cornell University.
I am working on the
Horus project
(a layered architecture for reliable distributed systems)
with
Professor Kenneth P. Birman
and
Dr. Robbert van Renesse.
My minor field is 
mathematics,
concentrating in statistics.

Research Interests

[Engineering layered communication protocols]
--
[Weak consistency]
--
[Performance]
--
[HTML/Java]

Engineering layered communication protocols

My research interests include the problems of specifying,
implementing, and verifying applications 
to run on distributed computer systems.
My dissertation work has concentrated on the formal
specification and verification of the properties of
Horus protocol layers.
Using the 
Temporal Logic of Actions,
one can specify various
interesting fundamental properties of the protocol layers used
in Horus protocol stacks;
furthermore, one can write a formula in the assume/guarantee style
for each layer, specifying the properties it might provide at its
interfaces depending on the properties of the layers above and
below it in the stack.
One can then employ straightforward techniques to verify that a
given stack provides certain desired properties at the
top of the stack under specified conditions, even for unusual
combinations of layers or layers stacked in an atypical stacking order.
Ultimately, users of Horus and other layered communications systems
should be able to call on these verification techniques to help construct
customized stacks that omit unnecessary layers (avoiding their
associated costs), with the confidence 
that the included layers and their stacking order are sufficient
to provide the desired guarantees.


This work is intended to be part of the basis for the
Securing and Hardening Horus project.
I have developed a Java applet that gives a rough demonstration 
of my proposed method of
verifying the properties of Horus protocol stacks.


My initial interest in the Horus project stems from the
promise of the Horus protocol suite to provide various
guarantees of consistency to programmers in message-passing
environments where hosts may crash and messages may be delayed
or lost.
As a software development engineer who has
worked on distributed applications whose components
were prone to failure, I feel the features of Horus offer considerable
promise to application developers.

Weak consistency

While at Cornell I have become interested in the problems of
distribution of computing over wide-area networks,
and have looked into the problems of revision control of files
in a wide-area environment, and in general in a distributed
environment whose network is prone to be partitioned
into disconnected portions.
More generally, I am interested in notions of ``weak consistency'' that would
allow multiple temporarily disconnected sites to make progress concurrently.

Performance

My research at Cornell has concentrated on correctness of protocols,
but other measures such as high availability, low response time, and
efficient use of resources are clearly equally important.
A large part of the problem is the apparently randomized timing of
system loads and activity in distributed applications
(with the notable exception of those that run on dedicated parallel
machines).
This behavior also should be susceptible to some mathematical analysis,
though of a different kind (which encouraged my interest in statistics).

HTML and Java

The World Wide Web itself is an interesting distributed application
with many possibilities to explore.
I've experimented with simple ways to use hypertext to
navigate information (most of these appear in my
Web site about LEGO toys),
and I've been hacking Java applets (executable code that a
Netscape 2.0 browser can download and run),
for example a
birthday puzzle calculator.
and a tool for
verifying properties of Horus protocol stacks.

Professional Affiliations

I am a member of 
IEEE,
ACM,
and
MAA.

Other Information

See
my WWW links
for other topics I find interesting or useful.

Last updated
11 June 1996.
David A. Karr /
karr@cs.cornell.edu


",non-course
"

Welcome to my Home Page







Kartik Kapadia
Master Of Engineering
Class of 1996
Department of Computer Science
Cornell University
Ithaca, NY 14850


Home Address:
10623 Dabney Drive, Apt. 38
San Diego, California 92126
Phone: (619) 689 8804 (Home)
       (619) 651 2063 (Work)
Fax: (619) 658 3292		


E-Mail:
kkapadia@qualcomm.com



Currently I am working as a Software Engineer for Qualcomm Incorporated



My main areas of interest are Computer Graphics, Distributed Systems and Computer Networking.


Courses I took in Spring 1996
Distributed Systems    : CS514 
Computer Graphics    : CS417-CS418 
Architectures of High Capacity Information Networks : EE546 


Courses I took in Fall 1995
Operating Systems    : CS414-CS415 
Multimedia Systems          : CS631 
Software Engineering : CS501 

Projects

HOCA - An Operating system for CHIP

HOCA (pronounced hodja) is a full-fledged operating system for CHIP (Cornell Hypothetical Instructional Processor). It supports features like Multitasking and Virtual Memory.


Hogman - An enjoyable game for a quick break at work.

Hogman is single player game for the X Windows platform. It is coded in C++ interfaced with Tcl/Tk (for the GUI). Hogman is a good source of entertainment while taking a break at work. 

Click here to see a screenshot of the gameboard.

Click here to see a screenshot of the help screen.

Click here to view a postscript of the design document.


Scene transition effects for Rivl

Rivl stands for `Resolution Independent Video Language'. Rivl was developed at Cornell University by Jonathan Swartz and Brian Smith. It is an excellent language for developing Multimedia applications. My project was to enhance Rivl by incorporating primitives for implementing scene transition effects.

Click here to see a presentation.

Simulation of a Railroad System (Master of Engineering project)

The visualization captures the scientific aspects of laying tracks, vehicle modeling and the dynamics of motion. The Graphics are coded using a combination of Open Inventor and OpenGL and are interfaced with the Virtual Reality facility at Cornell




 Click here to view a postscript of my Resume




Some of my favorite Web Sites:
All your favorite stars...

Some cool mpeg clips...

Lots and lots of music...

Some cool graphics for your web page...


Last updated 01/30/96


",non-course
"

if i publish it, it is true.


some of my writings
i've not had much published, but i have written some things i'm proud
of.  some of them have been flames of mine, and others have been more
thought out.  as a conscientious objector to all armed conflict, my
first published letter was published in the grand rapids press a few
years back during the gulf war.  since that time, however, i've
started keeping more of my work online.

lest you wonder, i also do write poetry and other things.  but i'd
probably rather be famous as an essayist anyhow--i like to argue.

so here's some of my writings:

there's a dreadful mess going on in byron center, which is a
suburb 5 miles from where i went to high school.  so i wrote a letter.
the unabomber suspect was a mathematician.  so all mathematicians
are suspected terrorists?  i don't think so...so i wrote a letter to the editor of my newspaper.
my most widely read letter",non-course
"






Katherine Guo's Home Page 






Katherine Guo
kguo@cs.cornell.edu

Cornell University
Dept. of Computer Science
5152 Upson Hall 
Ithaca, NY 14853 
Tel: (607) 255-3495 (w) 
Tel: (607) 273-1245 (h) 
Fax: (607) 255-4428 


I am a Ph.D. student in Computer Science at Cornell,
working in distributed systems.  My interest is in scalable reliable multicast
protocols.  I am working on the Horus Project under the direction of 
Ken Birman,
Robbert Van Renesse and Werner Vogels.


Recent Publications


Katherine Guo, Werner Vogels and Robbert van Renesse.
Structured Virtual Synchrony: Exploring the Bounds of
Virtually Synchronous Group Communication.
To appear in the proceedings of the 7th 
ACM SIGOPS European Workshop, Connemara, Ireland, September 9-11, 1996.



Luis Rodrigues, Katherine Guo and Antonio Sargento, Robbert van Renesse, Brad Glade, Paulo Verisimo, Ken Birman.
A Transparent Light-Weight Group Service.
To appear in the proceedings of the 15th IEEE Symposium
on Reliable Distributed Systems, 
Niagara-on-the-Lake,
Canada, October 23-25, 1996.
 
Also available as 
 
Technical Report 96-1579, 
Department of Computer Science, Cornell University. 

Robbert van Renesse, Kenneth P. Birman, Brad Glade, Katherine Guo, Mark 
Hayden, Takako Hickey, Dalia Malki, Alex Vaysburd and Werner Vogels, 

Horus: A Flexible Group Communications System ,
CS-TR 95-1500 Department of Computer Science, Cornell University. 
 March 23, 1995.



Research Related Info

Distributed Systems
Computer Networks
Cool Tools
Bibliography
Conferences
Journals

Academia and Industry Info

Company Info
School Info
Job Search

Interesting Places

 Ithaca, NY 
 Austin, TX 
 Lisboa, PT 
 Colorado 

Other Info

Art
Books
Cards
Cooking
Fashion
Friends
Insurance
Library
Magazines
Mailing
Map
Music
News
Sports
Stock
Weather

Hunting WWW Info

Research Related Info

Distributed System

Pointers
Horus-the commercial product
Spring
Totem
Transis
x-kernel at Arizona U. 
Tck/Tk at Sun Microsystems
Lab 


Computer Networks

Multicast Protocols
NS from
LBL
GUN


 Cool Tools 

 WWW 

 WWW Consortium 
Lectures about www:  General Info 
and about  the
project 
Lectures about HTML: 

 Simple HTML
 A Beginner's
Guide to HTML
 HTML Quick
Reference 
 HTML
Documentation Table of Contents 

 Info about CGI:
 The Common Gateway Interface 
 About HTTPd: 
 NCSA HTTPd Overview

 How to find images to use in html file-- an image finder 
 Where to get mosaic: 

Source, binary and documentation by FTP: 
XMosaic: 
     FTP.NCSA.UIUC.EDU in /Web/xmosaic  
Others: 
     INFO.CERN.CH in /pub/www/bin, doc, src 


 Java and HotJava 

 Bibliography
Bibliography in Distributed Systems:

  oldindex 
 
index 
 
others 


  Conferences 

 Pointers
 HPDC'97
 FTCS'97
 SOSP
 SIGOPS'96
 SRDS96
 ICDCS
 JSAC


  Journals 

  IEEE 
 ACM
 Elsevier Science



Academia and Industry Info

Company Info

  Motorola
  AMD and its job openings
ibm
dell
tandem
ti
apple
bell atlantic


 School Info

  U. of Texas at Austin 
  CS dept of UCSD 
  Grad
School Advice 
  Grad




Job Search

 Database of US
 Database at UK



Interesting Places

 Ithaca, NY 

Life at Cornell

    Ithaca Weather

    Movies
Bailey Hall Concerts
Library 


 Austin, TX 

 HighTech
in Austin 
 The IC2 Institute


 Lisboa, PT 

INESC


 Colorado 

Copper Mountain Ski Resort - Summit County, Colorado




Other Info

Art

 Le WebLouvre
The World's Women On-Line


Books

 Amazon.com books 

Calvin&Hobbes Archive


Cards

Magic


China

Art of China


 Cooking 

 Electronic Gourmet
Le Cordon
Bleu--Cooking School
 Italy 
 dessert 


 Fashion

all links
A CJLutz Fashion WWWeb Page
with Hearts TM
Express
First View 
@fashion,
Women's Wire
IRC FAQ
Fashion Net
Hair Net
 J. Crew
 Diesel Jeans
 Guess


Friends 

Alan Cheng
 David 
 Deng Shijie 


Insurance

 CAL Plan 
email: cal@grove.ufl.edu


Library

 Library of Congress


Magazines

 InterText
 Wired 
TIME
George Gilder 
Discovery


 Mailing 

 Electronic Postcards



 Map 


UT Maps


 Music 

BMG
 Internet Underground Music Archive
SinaNet


 News

World News Briefs


 Sports 

 US Open
1996 Olympic


 Stock 

  Wall Street
Headlines
  Wall Street Journal on the Web 
  MIT source 



 Weather






Hunting WWW Info

The Lycos Home Page: Hunting WWW Information
Global Network Navigator
Home Page 
Global Network Navigator 
Scout Report
 WWW Wanderers
and Spiders
 The Web's Edge
 Yahoo
 Reference
 Netscape Home Page 





Last Modified Wed Jun 19 17:03:57 EDT 1996
 Katherine Guo/ kguo@cs.cornell.edu 

",non-course
"


 3D WireFrame Rotation 


 3D WireFrame Rotation 

Introduction

This project is desgined as a learning tool for computer graphics. It provides an understanding in the polygons, which are formed by a list of vertices. It is written in Java, which is simple but powerful:

1. Java is a language for creating safe, portable, interactive and object-oriented and multi-threader programs. 

2. Java has a programming environment that is not platform speific.

3. Java can create applets, which is a program that can react to user input and dynamically change.
 Cone
 Cube
 Cylinder
  Tetra
 Torus

",non-course
"

Jon Kleinberg's Homepage


 Jon Kleinberg 


 kleinber@cs.cornell.edu
 Assistant Professor of Computer Science
 Cornell University
 Ithaca, NY  14853-7501



My research interests are in algorithms and combinatorial optimization,
with an emphasis on approximation, computational geometry, 
network optimization and distributed computing, and 
algorithms in molecular biology.
Recent work has included
 approximation algorithms for routing and
disjoint paths problems in networks;
 adversarial queueing theory, an approach to analyzing the stability
of network routing protocols without probabilistic assumptions;
 geometric methods in combinatorial optimization, particularly
the use of positive semi-definite programming; and
 geometric algorithms for studying molecular conformation.

I am spending the 1996-97 academic year visiting the 
IBM Almaden 
Research Center.

Click here to see

Selected Publications
Miscellaneous Links


PAPERS
Approximation Algorithms and Combinatorial Optimization
 J. Kleinberg.  Single-source unsplittable flow.
Proc. 37th IEEE Symposium on Foundations of Computer Science, 1996,
to appear.
 J. Kleinberg, R. Rubinfeld.  Short paths 
in expander graphs.
Proc. 37th IEEE Symposium on Foundations of Computer Science, 1996,
to appear.
 J. Kleinberg, E. Tardos.  Disjoint
paths in densely embedded graphs.
Proc. 36th IEEE Symposium on Foundations of Computer Science,
1995.  
 J. Kleinberg, E. Tardos.  Approximations 
for the disjoint paths problem in high-diameter planar networks.
Proc. 27th ACM Symposium on Theory of Computing, 1995.
 A. Aggarwal, J. Kleinberg, D. Williamson.  Node-disjoint
paths on the mesh, and a new trade-off in VLSI layout.
Proc. 28th ACM Symposium on Theory of Computing, 1995.
 M. Goemans, J. Kleinberg.  An improved
approximation ratio for the minimum latency problem.
Proc. 7th ACM-SIAM Symposium on Discrete Algorithms, 1996.
 J. Kleinberg, M. Goemans.  The Lovasz theta
function and a semi-definite programming relaxation of vertex cover.
To appear in SIAM J. Discrete Math.
On-Line Algorithms
 J. Kleinberg.  The localization problem for
mobile robots.  Proc. 35th IEEE Symposium on Foundations of Computer
Science, 1994.
 J. Kleinberg.  On-line search in a simple
polygon.  Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, 1994.
 J. Kleinberg.  A lower bound for two-server
balancing algorithms.  Information Processing Letters 51(1994).
 R. El-Yaniv, J. Kleinberg.  Geometric two-server
algorithms.  Information Processing Letters 53(1995).
 J. Kleinberg.  On-line algorithms for robot
navigation and server problems.  MIT/LCS/TR-641.  (Master's Thesis.)
Parallel and Distributed Computing
 D.M. Andrews, B. Awerbuch, A. Fernandez, 
J. Kleinberg, F.T. Leighton, Z. Liu.
Universal stability results for greedy 
contention-resolution protocols.
Proc. 37th IEEE Symposium on Foundations of Computer Science, 1996,
to appear.
 A. Borodin, J. Kleinberg, P. Raghavan, M. Sudan, D. Williamson.
Adversarial queueing theory.
Proc. 28th ACM Symposium on Theory of Computing, 1995.
 J. Kleinberg, H. Attiya, N. Lynch.  Trade-offs
between message delivery and quiesce times in connection management
protocols.  Proc. 3rd Israel Symposium on Theory of Computing and Systems,
1995.
 J. Kleinberg, S. Mullainathan.  Resource bounds
and combinations of consensus objects.  Proc. 12th ACM Symposium on
Principles of Distributed Computing, 1993.
Geometric Algorithms
 B. Berger, J. Kleinberg, F.T. Leighton.  Reconstructing a
Three-Dimensional Model with Arbitrary Errors.
Proc. 28th ACM Symposium on Theory of Computing, 1995.
 D. Huttenlocher, J. Kleinberg.  Comparing 
point sets under projection.  Proc. 5th ACM-SIAM Symposium on 
Discrete Algorithms, 1994.
 D. Huttenlocher, K. Kedem, J. Kleinberg.  On 
dynamic Voronoi diagrams and the minimum Hausdorff distance for point
sets under Euclidean motion in the plane.  Proc. 8th ACM Symposium
on Computational Geometry, 1992.
 D. Huttenlocher, J. Kleinberg,  Invariants
of set of points or line segments under projection.  Cornell University
Computer Science Technical Report TR 92-1292, July 1992.
SOME LINKS
Search Tools and Bibliographies

AltaVista.
Infoseek.
Excite.
Yahoo.
NYNEX Yellow Pages.
Glimpse computer science bibliographies.
NCSTRL: Networked Computer Science Technical Reports Library.
David Jones's Hypertext Bibliography Project.

Academic Sites

Cornell University.
Cornell Computer Science.
Cornell Operations Research.
MIT Lab for Computer Science.
MIT LCS Theory of Computation Group.
Stanford Computer Science.
Berkeley Computer Science.
Computing Research Association.
National Science Foundation.

Theory of Computing

TCS Virtual Address Book.
Bibliographies on Theory/Foundations of Computer Science.
Crescenzi/Kann Compendium of NP Optimization Problems.
1996 FOCS conference.
1997 SODA conference.
1997 STOC conference.

Computational Biology

Computational Biology at USC.
CARB Biocomputing Resources.
SDSC's List of Computational Biology Servers.

Computational Geometry

David Eppstein's Geometry Junkyard.
Jeff Erickson's Computational Geometry Page.

Internet Security

MITRE Corp.'s Security Information Resources.
Princeton Safe Internet Programming Group.
Ron Rivest's Cryptography and Security Links.

Miscellaneous

Netscape.
Intellicast.
CNN Interactive.
U.S. Tennis Association.
U.S. Chess Online.
Car Talk.

Jon M. Kleinberg
Department of Computer Science
Upson Hall
Cornell University
Ithaca, NY 14853
(607)255-4117
kleinber@cs.cornell.edu
",non-course
"
 Kaz's Homepage  



Kazushi Ota


kota@cs.cornell.edu
kazushi@ok.cow.melco.co.jp

I'm currently a Master of Engineering student in 
Computer Science at Cornell
University. I received my BS in EE at the University of Tokyo, way back in March 87.


I work for Mitusbishi Electric Corporation in 
Japan, 
and this is where I'll return after I get my degree. 


For what it's worth, this page is

under construction

, but then again, so am I.


This homepage started as an assignment (to get acquainted with html) for
CS 720,
the Cornell CS department Information Superhighway course.  


This homepage will get more interesting as I try to get some  PICTURES 
and  MUSIC  in it.  


 Moving Sale coming your way! 
I'll be taking off to Japan in February. There are a lot of things I want to sell, so I think I'll advertize them 
 HERE... 





Up to the Cornell Computer Science People Page


",non-course
"

Faculty Research Interests: Dexter Kozen



Dexter Kozen
Joseph Newton Pew, Jr. Professor in Engineering
PhD, Cornell University, 1977
Research Interests
My research interests include algorithms and complexity, especially
complexity of decision problems in logic and algebra, and logics and
semantics of programming languages.



Papers Available Online
Kleene algebra |
set constraints |
type inference |
computational algebra
automata theory |
algorithms and complexity |
logic
Bibliography
list of all publications  |
Cornell technical reports
Course Notes
CS212, Structure and Interpretation of Computer Programs
CS481, Automata and Computability Theory
Fun Stuff
Family pictures |
Rugby |
The Effect





Computer Science Department
Upson Hall

Cornell University

Ithaca, New York 14853-7501, USA
kozen@cs.cornell.edu
(607) 255-9209 work, (607) 257-4579 home, (607) 255-4428 fax



",non-course
"



Home page of Christoph Kreitz












My own picture soon



  Christoph Kreitz 





 Research Associate 












 Department of Computer Science
    Cornell University
    Ithaca,            
      NY 14853      
    USA  





Office:

Phone: 
Fax:   
Email: 





 4159 Upson Hall

++ 1 (607) 255 1068
 ++ 1 (607) 255 4428
 kreitz@cs.cornell.edu










Research Topics:



 
	Program Synthesis             
  
	Automated Deduction and Type Theory
 
	Theory of Computation         





 Teaching and Learning (German): 




  Lehre und Lernen  
  Vorlesungsskripte  
  Medienunterstütztes Lehren 











 This is my personal home page. More information will be available soon. 


Last modified:
November 6, 1996



Christoph Kreitz  / 
   t>kreitz@cs.cornell.edu




SOME LINKS




",non-course
"


  Kuen-Heng Lai  

 Lai, Kuen-Heng 
 kuen@cs.cornell.edu 

 kuen@isis.com 
 Master of Engineering `96
 Computer Science Department, Cornell University 

 Address: 
 282 Grove Street, Apt 5 
 Newton, MA 02166 
 U.S.A.
 Telephone: 
 (617)244-0740

 
 Welcome to visit my place!! 
 This is my
Project
 of Multimedia Systems course.
 Would you like to read daily news of 
Taiwan
, my home country? Enjoy it!


 
 This page is still under construction... 
",non-course
"

Carl Lagoze's Personal Home Page





Carl Lagoze 
Project Leader: Digital Library Research Group 

Department of Computer Science
4158 Upson Hall 
Cornell University
Ithaca, NY 14850-7501
Phone: +1-607-255-6046
Fax: +1-607-255-4428
Internet: lagoze@cs.cornell.edu


I lead the Digital Library Research Group
in the Computer Science Department
at Cornell University. Our
group manages the operation and technical development of the Networked Computer Science Technical Reports Library
(NCSTRL). This is an international consortium that maintains a
distributed digital library of computer science research and collaborates
on a number of digital library research issues.

I am co-developer, with Jim Davis, of the
Dienst
software, a protocol and reference implementation that provides
distributed digital library servers accessible over the World
Wide Web. Dienst is the current enabling technology for NCSTRL.
I have authored or co-authored a number of papers on Dienst:

""Drop-in"" publishing with the World Wide Web.
2nd Int'l WWW Conference 1994. 
Dienst - An Architecture for Distributed Document Libraries.
Communications of the ACM, April 1995, Vol 38 No 4 page 47.
A protocol and server for a distributed technical report library.
Cornell Computer Science Technical Report.
Dienst: implementation reference manual.
Cornell Computer Science Technical Report. 
Dienst: Building a Production Technical Report Server.  Chapter 15 in Advances in Digital Libraries, Springer Verlag 1995.


My primary research involves defining the services and protocols
for an interoperable digital library infrastructure. In this area,
I have collaborated with the Corporation for National Research Initiatives
to extend and implement a digital object framework developed
as part of the DARPA-funded Computer Science Technical Report Project.
I have authored or co-authored a number of papers in this area:

Implementation Issues in an Open Architectural Framework for Digital Object Services.
Cornell Computer Science Technical Report.
A Design for Interoperable Secure Object Stores (ISOS).
Cornell Computer Science Technical Report.
A Secure Repository Design for Digital Libraries.
Dlib Magazine, December, 1995. 


As part of this work, I am also a member of the Dlib
working group on repository interfaces
and co-author of the yet-to-be-released final report of the Metadata Workshop II
in Warwick, U.K. Finally, and also as part of this work, I am
very interested in extending the World Wide Web using distributed
object technology. You can read my position paper
for the Joint W3C/OMG Workshop on Distributed Objects and Mobile Code
workshop.


There is more to me than this research. Who knows, you may meet
me at a conference, workshop, or meeting and find that out. As
a poor substitute for personal contact, let me say a little more
about me.

That character on my lap in the picture at the top of this page
is Lucy, my daughter. She rules the majority of my life, outside
of my work time. Toddlers are a constant challenge and joy. Lucy
gives meaning to my life that will never be provided by my work.

I am also an avid outdoor person. Put me in site of fast moving
water or a quiet lakeand I will itch to get out on it in a canoe.
Give me a beautiful day and I will think only about bike riding
along a quiet road or a backwoods trail. Tell me I have a spare
hour in my day and I will put on my running shoes and breath deeply
the fresh air.  I may spend much of my time in the digital world,
but it will never be a substitute for the joys of the physical
nor should it ever interfere with our desire to fight for its
preservation.

Hope to meet you sometime,

Carl 


",non-course
"Lidong Zhou's Homepage
 











Welcome to  
Lidong Zhou's Homepage
 








Department of Computer Science

Cornell University
Ithaca, NY 14853-7501
Tel: (607) 254-5075 (o)


 Fall 96 Courses



		CS 601 -- System Concepts
	(only locally accessible)


		CS 631 -- Multimedia System


 Research Related Materials



		SIGOPS 96 Papers

		OASIS from Cambridge

		DEC SRC Research Reports
 
		Adage -- Authorization for Distributed Applications and Groups 
		

		The ARA Project

		Low Level Security in Java 

		Safe Internet Programming

		Legion

		Project Sirac

		The Kerberos Network Authentication Service
	
		Massively Distributed Systems from IBM

		Ocaml Homepage
Advanced materials on Internet and WWW

		A Standard for Robot Exclusion

		Computer and Network Security


Career WWW Documents


 
	Cornell Career Opportunities
 
	JobTrak
 
	College Grad Job Hunter
 
         Job opening in CS(For Ph.D.'s) 
 
          Career Center Online/Job Services
 CareerMosaic Page 
  JobWeb Home Page 
  Career Mag 
  XJOBS Page


 My Friends' Homepages


 Yingjun Yu
  Fudan 8924 classmates
 Friends at Cornell 


 Information Resourses


 
              Tutorials on Computer languages and Tools

		Big Yellow Book

		Cornell ISSO Homepage
 CND 

		SUNRISE

		Chinese Soccer World
 
    	Edmund's Automobile Buyer's Guides 
 
    	AutoSite--- The Ultimate Auto Buyers Guide 
 
    	Auto insurance Basics 
 
    	Legal Survival Guide  

 Other Links


 Travel Agencies
Rank of CS departments

        How to Succeed in Graduate School 

        Fudan Homepage 





     Back to Index



Last updated on Nov. 4, 1996 
This homepage is under construction.

",non-course
"

Lin Hsian Wang


This Page Is Under Major Construction





Lin Hsian Wang



 
 
 
I am a Master of Eng. student in Computer Science
at Cornell University.
I have a BS degree in Computer and Information Science
at The Ohio-State University. I was born in Fangliao ,a small village on the southern coast of Taiwan in 1970. 







 Still constructing...<!--applet codebase=""http://java.sun.com/applets/applets/UnderConstruction/"" code=""JackhammerDuke.class"" width=300 height=100>





Fall 1995 classes

CS631 Multimedia Systems.   Final project : Orwell: Removal of Tracked Objects in Digital Video

EE445 Computer Networks

EE547 Computer Vision. Final project :  Moment-Based Edge Operator with Bob Amidon

CS790 Automated Video Transcribing and Annotations Research.  My advisor is Prof. Ramin Zabih



Spring 1996 Classes

CS674 Natural Language Processing
CS514 Practical Distributed Computing
CS515 Practicum in Distributed Systems Project TOP : Distributed Network Visualization and Management
CS664 Machine Vision
CS709 Computer Science Colloquim
CS790 M.Eng Project: Orwell: Object Removal for Moving Scenes.

CS516 High Performance Systems (Audition)


 
Programming  in  Java

 
  Webspace




Interesting Web sites, links, and useful stuffs




Cornell Info links

IEEE Computer Society

Taiwan Headline News via Sinanet.com

The WWW of Music

Movie connection from Jon Swartz.

MOVIEWEB - A cool movie site for moviemania.

Cool WWW links also from Jon Swartz.

Click here for some of my GIF collections.

Thinking Pictures

The lists of Top 20 Best-selling CD and New Book Releases from Taiwan published by World Journal Bookstore.

""Quotes""

""Chinese Classics""

Linux Links

Tcl/Tk On-line Resources from CS 401/501 (Software Engineering).

The MIT Gallery of Hacks

The Earth Home Page







Miscellaneous ...

HongKong Bridge + Hong Kong Links

For those who like Japanese animations, take a look at Carlos' Home Page or jump to Anime Links and CJAS and CalAnimage Alpha Chapter at Berkeley.

Totoro's home page


Laputa: Castle in the Sky | 
Nausicaa of The valley of Wind | 
Conan | 
Totoro | 
Dr. Slump 
| Kiki | 
Legend of Galactic Heroes from Ming's Anime page






Campus Address:
Uptown Rd. apt.#4E

Ithaca, New York  14850

Tel:(607) 257-6813


  linhsian@cs.cornell.edu


Last Update: 19 October 1995


",non-course
"



Libby's Home Page




Welcome to Libby's Home Page !!

(Collection of thoughts and essays)





Last update Sept 7th 1996





My fav show !  Download the theme song !

Check out a video clip from the Show !

Take a look at my reading list

A little essay about things (September 7th)

Thought for the day (June 23rd)

(Thought for the day - April 14th)

If you're interested, take a look at my CS 516 Project

Email me

Hits to this Page


(Page counter courtesy of http://www.digits.com/)


",non-course
"

 Li Li 









 Name : Li Li  
 Office : 5162 Upson Hall
 Office Hour : 3:30 PM - 5:00 PM (Wed/Fri)
 Office Tel : (607) 255-7421 
 E-mail Add :
lili@cs.cornell.edu
 TA for :
 
CS414  Operating System 
 Taking Course : 

CS611|
CS681





",non-course
"
 Lloyd N. Trefethen 



Lloyd N. Trefethen
Professor
LNT@cs.cornell.edu


My appointment at Cornell is in the
Computer Science Department.
I am also affiliated with the
Center for Applied Mathematics,
the Department of Mathematics,
and the
Cornell Theory Center.

My field is numerical analysis / scientific computing; I have
a personal view of what this means.
Specific interests include numerical linear algebra, numerical
solution of PDE, numerical conformal mapping, approximation theory,
and fluid mechanics.  In recent years much of my work has
been related to non-normal matrices and operators, that is,
matrices and operators whose eigenvectors are not
orthogonal, and applications.

Textbooks

Finite Difference and Spectral Methods (ODE/PDE textbook)
Numerical Linear Algebra (textbook by Trefethen and Bau, SIAM, 1997)

Recent papers

MultiMATLAB: MATLAB on multiple processors
Matrix iterations: the six gaps between
potential theory and convergence
Pseudospectra of linear operators
Some other recent papers

Other items

Classic papers of numerical analysis
Curriculum vitae
Pseudospectra bibliography
$100
bet with Peter Alfeld

Current PhD students (at Cornell)


Vicki Howle

Guðbjörn Jónsson
 Yohan Kim

Divakar Viswanath

Previous PhD students (at MIT and Cornell)


Jeff Baggett

Toby Driscoll

Alan Edelman
 Louis Howell
 Walter Mascarenhas

Noel Nachtigal

Satish Reddy
 Kim-chuan Toh


Some other colleagues


Jim Demmel

Anne Greenbaum

Martin Gutknecht

Des and 
Nick Higham

Anne Trefethen

Andre Weideman


",non-course
"

Yu(Lucy) Wu's Home Page






 Lucy Wu 
 
 Welcome. 
I am a M.Eng. student at the 
Computer Science Department
 of Cornell University, 
Ithaca, NY.
My interested computer topics are networks, distributed systems, programming
language, internet applications, etc. 

 Hobbies: Tai-Chi, ping-pong, badminton, swimming, travel, photograph, reading and music. 

  Resume    


  $Whiz -      
 Stock Search and Analysis Tools(M.Eng Degree Project)

Spring 1996 Classes
 CS514 Practical Distributed Computing
 
CS515 Practicum in Distributed Systems
 CS432 Database Systems
 NBA600 Database Management 

  

Fall 1995 Classes
 
CS414 Operating System
 
CS501 Software Engineering
 
CS631 Multimedia Systems



Contact?
 818-796-6546
yuwu@cs.cornell.edu

  


My Favorite Web Sites 


Hot software stuff 
Java!
 The Sun Spring Systems
 CORBA
 OMG Home Page
 Silvano Home Page
 GUI
 TCL/TK
CGI
 HTML and WWW
 VRML
 Object Oriented Language
 Database Language
 Operating Systems
 
Network
 Network Management
 Bay Network Products

 Server and Security
PC Lube and Tune 
 Internet
 IPng
IP_ATM

Computer Company
 Netscape 
 Business@Web 
 SAP 
 I-Cube
 SCO
 Sapient
 Sun
 Microsoft
 Novell

 
China
  China/Chinese-Related Web Sites
  Chinese Stuff
 
Misc.
  JOBTRACK
  IRS
  CNN News
  The Artvark Gallery
  MTV
  Internet Underground Music Archive

  

Personal Connections
  Cornell Library Catalog
  Travelers Mail
  Sunlab
  Caltech CCO




",non-course
"
Linda Wu Home Page at Cornell University


Linda Wu 
lxwu@cs.cornell.edu 

I am a Master of Engineering student in Computer Science Department at Cornell Univsersity.  I received my B.S in EE from University of Massachusetts at Lowell in 1992.  Since then,  I worked at  Digital Equipment Corp. and Banyan System Inc.  My main research interests are networking and mulitimedia.  

Click here for Resume

 
Projects


 Native ATM protocol stack on Windows NT

 Using Multicast Group for Layered Video 
 Electronics Commerce -- Kramer Mart 


Courses


Fall '96
CS414 and CS415 Operating System 
CS519 Engineering Computer Networks 
CS631 Multimedia 

Photoes
Useful links 

",non-course
"


Nikolay Mateev



Nikolay Mateev
Graduate Student
mateev@cs.cornell.edu

4156 Upson Hall
Department of Computer Science
Cornell University
Ithaca, NY 14853 
(607) 255-5033 

Last updated July 25, 1996


",non-course
"





Matthew Morgenstern's Home Page


Matthew MorgensternResearcher / Project Leader

Address:
503 Engineering and Theory Center
Xerox Design Research Institute
Cornell University
Ithaca, NY 14853
Phone: 607-255-9899
Fax: 607-254-4742
Email: Morgenstern@cs.cornell.edu

Status:
Visiting Fellow (Cornell Computer Science)
Principal Scientist (Xerox)
Ph.D. MIT Laboratory for Computer Science

Projects:
Distributed Heterogeneous Database Systems - an ARPA funded project.
MetaData Management - for databases and multimedia documents (ARPA)

Will supervise selected student projects in related areas.  Funded
research work during academic year and summers may be available.

Or just stop by to chat!



More information is coming to this page soon.

",non-course
"
Monika Henzinger Homepage
Monika Rauch Henzinger
Assistant Professor
Computer Science Department
Cornell University
Ithaca, NY 14853

Email: mhr@cs.cornell.edu
Phone: (607) 255-1068
Fax: (607) 255-4428

Currently on leave at:
Digital Equipment Corporation Systems Research Center
Homepage

Research Interests
Combinatorial and Graph Algorithms,
especially Dynamic Graph Algorithms and Randomized Data Structures; Graph Theory;
Data Structures; Lower Bounds.

13~

 Recent Publications


 Dynamic Graph Algorithms Project Page


Program Committees:  STOC'96 ,
 SODA'97



 Homepage of CS 681 (Fall 95)

",non-course
"
Min (Stanley) Huang's Home Page
 Min (Stanley) Huang
Master of Engineering Student
mhuang@cs.cornell.edu

317 Sheldon Court
Cornell University 
Ithaca, NY 14850-4666 
Tel: (607)253-7820


Master of Engineering(M.Eng.), Computer Science, Cornell University. class of '96.
Bachelor of Science(B.S.), Computer Science, University of Kentucky, Kentucky. 
Areas of Interests

Operating Systems
Distributed Systems
Database Systems & Information Retrieval
Graphical User Interfaces

Other Interests Movie, Tennis, Horse_Back Riding, Travel, Reading.

I am working on my M.Eng. Project Distributed Computing in Plan9 with my
advisors Werner Vogels
 and Robbert
van Renesse. Objective of the Project is to integrate Horus into Plan9. 
Here are a few links related to the Project.

Plan9
Plan9 distribution
Plan9 Update
Plan9 FAQ
Horus


CS514 Final Exam Paper Collection -- Distributed Shared Memory

Distributed Shared Memory

Some Technical Papers I am interested in:

Group and Communication
Snapshot
U-Net: A User-Level Network Interface Architecture

JOBS

Career Path
Bay Area Jobs
CybeRezumes
Career Opportunities


Useful stuff

Technical Paper Fielded Search
Bell Labs
SP2
Bsd-Sources
Java
RFC


Last Modified Fri Oct 12, 1995 
 Min (Stanley) Huang / mhuang@cs.cornell.edu


",non-course
"
 Lynette Millett's Homepage 




Lynette I. Millett

Department of Computer Science

Cornell University

Ithaca, NY 14853


  millett@cs.cornell.edu  




""As the most participatory
form of mass speech yet developed, the Internet
deserves the highest protection from governmental intrusion.""

 --from 

the decision in ""ACLU v. Reno"" CDA Challenge. 




	Script of the second-year skit for the 1995 CUCS holiday party.



	Personal information.



	A few pictures of our cats.  Last updated: 4 Oct. 1996



A list of personal homepages



A very old list of links




""I myself have never been able to find out precisely what feminism is; I 
only know that people call me a feminist whenver I express sentiments that 
differentiate me from a doormat or a prostitute.""   
-- Rebecca West, 1913






Last modified:  October 22, 1996.  
Comments welcome. 
For a copy of my pgp public key, please look 
 here. 

 millett@cs.cornell.edu 
 Copyright 1996 Lynette I. Millett 

",non-course
"

Mishaal's Home Page


Mishaal's Home Page

Hi, I'm a Kuwaiti student at  Cornell University. I'm in the Master's of Engineering in Computer
Science program (MEng
CS).  I graduated with a double major in Electrical Engineering and
Computer Science from  
Worcester Polytechnic Institute in
Worcester, MA.



 The coolest place on Earth 


 Here's a list of stuff I'm involved or interested in:

Temporary Link to Cornell Services (BearAccess Menu)
Links to courses I'm taking:

CS664 Machine Vision  |  Newgroup

EE546 High Capacity Networks  |  Newgroup
NBA600 Database Management  |  Newgroup


Optimal Video Transmission(MEng Project)  |  CMT Extension


 Kuwait Home Page
My Resume
Check stock quotes


Cooler Links:

My Public WWW Server (hope to offer CoNote soon :)
 Weather in Ithaca
 CNN for the latest news
 Cannes International Film Festival
 Everything is wrong
 The reason why I want to be a kid again!
 Ever been accused of being a nerd? Well, now you can be sure.




| Home
| Interests
| Cool Links
| CS Home Page |




© 1995  Mishaal Almashan
mishaal@cs.cornell.edu
Cornell University



",non-course
"


Mike's Page








This is my page. Yeah.

Hi. For a more up-to-date version of this page, please use a more recent browser. Some stuff here may be quite out of date.
















Would you like to sign my

Guestbook? 

That would be cool.




Here's a chance to make your opinion count!
I bet it's dark in Stockholm right now. 


Take a look and 
 VOTE!

(Or you can 
 look at poll results).





Here are a couple of links to some people I know. 


 Cat.  I guess she's pretty cool.


Ryan.   But we call him Beavis.

 Vitya.
That better be under construction.

 Amy.
Dancing frogs and stuff.

 Maria.
No, no, please don't cry.


Mark Korby.  I don't really know him. But he's got my last name.

 Andrew Corbett. 
He may suck at cards, but he's got a cool nickname.

 
Kevin O'Donnell. 
This guy's got a dog that has my last name. Complete with a lovely picture.







Say Hi to Eryn. She craves attention.



Want to see my movie? 
We had to make it for a graphics class.


 Golf. An amazing animation of a guy playing golf. 
(1.6 MB MPEG)




Here are some links to other places.


Has the Universe stopped expanding? Click
 here 
to find out.

What this world really needs is a
 Beavis 
you can click.

This is my personal pick for 

 Cool Site of the Day 


Look Mom, I made T@P Online's 

Top Ten Student Homepages list!

My lame list of 
Guttermouth links.





This page is now being brought to you by







Just kidding. 
 I'm a member of the Internet Link Exchange















This page is now connected to a whole bunch of others on this line thing.
So, like, come on, let's all join hands now and sing together 
in the spirit of harmony.    Uh, or something.





You're visitor number 2700+  


 (these things keep resetting)

Or check out complete statistics for my page through
 this
 thing
.  It's pretty cool, but not very accuarate.

And stuff.






Mike Korby. Please send me mail at

mak4@cornell.edu




Basically, this page is pretty much over, 
but here's a couple of random images that don't really relate to 
 anything.



Thanks to everybody who's web page ideas I used to make this.






",non-course
"
Nobuhiko Mukai

Nobuhiko Mukai




















This is a home page of Nobuhiko Mukai.  Now, it's under construction.


We researched an effective JPEG compression
on Multimedia systems (CS631) last fall semester (1995). 
I made an animation titled magic
on Computer Graphics (CS418) spring semester (1996).


",non-course
"
 Homepage of Nicholas R. Howe 


Nicholas R. Howe
(Click on photo for B/W image.)
Graduate Student
Department of Computer Science
Cornell University
Ithaca, NY 
email: nihowe@cs.cornell.edu
office: 5139 Upson Hall  
phone: (607) 255-5578  

Resume & references.
Personal Info.
",non-course
"NIKOS CHRISOCHOIDES 

 Nikos Chrisochoides 
 Ph.D.  Computer Sciences Department ,  Purdue University , 1992. 



Dr. Chrisochoides' work has touched many facets of parallel and distributed 
computing. His  work includes (i) research on parallel runtime support and back-end systems for parallel compilers and problem solving environments for 
multicomputers, (ii) parallel algorithms for scheduling, load balancing, 
and data distribution for adaptive computations. He co-designed and 
implemented many key software components of a well-known simulation 
environment,  Parallel ELLPACK . 

 Current Projects 

  AMR Workshop 
  Bernoulli Project 
  PREMA: Portable Runtime Environment for Multicomputer Architecures 

 Computational Sensitive Messages
 Dynamic Load Balancing

  Grid Generation Project at Cornell
  Binary Black Holes Grand Challenge 
 Parallel ELLPACK

   Student Projects  (other  Masters of Engineering Projects ) 
 Students 


 Florian Sukup  (Ph.D) 
 Kodukula Induprakas (Ph.D, with K. Pingali)
 Vineet Ahuja   (Masters)
 Reza Behforooz (Undergraduate)


 Former Students 


 Animesh Chatterjee 
 Rajani Vaidyanathan 


 Selected Papers 

  Task Parallel implementation of the BOWYER-WATSON algorithm,
 N.P. Chrisochoides and F. Sukup,  To appear in Proceedings of
Fifth International Conference on Numerical Grid Generation in
Computational Fluid Dynamics and Related Fields, 1996.
   Multithreaded model for dynamic load balancing parallel adaptive PDE computations. Nikos P. Chrisochoides, CTC95TR221, October 1995.  To appear Applied Numerical Mathematics Journal, 1996.
  Parallel object-oriented software and tools 
 L. V. Kale, N.P. Chrisochoides, J. A. Kohl, K. Yellick.
 To appear in Journal for Scientific Programming, 1996 .
  MENUS-PGG : A Mapping Environment for Unstructured and Structured Numerical Parallel Grid Generation  N.P. Chrisochoides, 
G. C. Fox and Joe Thompson,  Contemporary Mathematics, Vol 180, pp 381-386, Eds D. Keyes and J. Hu, 1995.
  Mapping Algorithms and Software Environment for Data Parallel PDE Iterative Solvers  N. Chrisochoides,
     E. Houstis, and J. Rice, Special Issue of the Journal of Parallel and
    Distributed Computing on Data-Parallel Algorithms and Programming, Vol
    21, No 1, pp 75-95, April, 1994.
  Computational Toolkit for Colliding Black Holes and CFD 
N.P. Chrisochoides, T. Haupt, and G. C. Fox, In the Proceedings of 
    the 25th AIAA Fluid Dynamics Conference, Colorado Springs, CO, June 20-23, 1994.
 An alternative to data-mapping for scalable iterative PDE solvers : Parallel Grid Generation,
 N.P. Chrisochoides. Proceedings of the  Scalable
Parallel Libraries Conference, National Science Foundation Engineering
Research Center for Computational Field Simulation, Mississippi State,
Mississippi , pp 36-44, 1993.
 Partitioning Heuristics for PDE Computations Based on Parallel
Hardware and Geometry Characteristics.
 N.P. Chrisochoides and J.R. Rice.
In   Advances in Computer Methods for Partial Differential
Equations VII, (R. Vichnevetsky. D. Knight and G.  Richter, eds)
IMACS, New Brunswick, NJ, pages 127-133, 1992.
 DOMAIN DECOMPOSER: A Software Tool for Mapping PDE Computations
 to Parallel Architectures  N.P. Chrisochoides, C.E. Houstis, E.N.Houstis
, P.N. Papachiou, S.K. Kortesis,
and J.R. Rice, Domain Decomposition Methods for Partial Differential Equations,
Proceedings of the 4th International Symposium on Domain
Decomposition Methods, Moscow, USSR, May 1990 (Glowinski et al., ed),
SIAM Publications, pages 341-357, 1991.
 Parallel ELLPACK: A numerical Simulation Programming
Environment for Parallel MIMD Machines. E.N. Houstis, J.R. Rice, N.P. Chrisochoides, H.C. Karathanases,
P.N. Papachiou, M.K. Samartzis, E.A. Vavalis, Ko Yang Wang and
S. Weerawarana, Proceedings of the International Conference on
Supercomputing, ACM publications, pages 96-107, 1990.  




 nikosc@cs.cornell.edu
  Advanced Computing Research Institute
  Computer Science  and  Cornell Theory Center
  Cornell Univeristy 
 H. F. Rhodes Hall,  Room 720                    
 Ithaca, NY, 18450              
 Phone : (607) 254-8839
 Fax: (607) 254-8888




",non-course
"WELCOME TO PREMA - PARALLEL RUNTIME SUPPORT SYSTEM

 PREMA: Portable Runtime Environment for Multicomputer Architectures 
 PREMA: Portable Runtime Environment for Multicomputer Architectures  

  Advanced Computing Research Institute,  Cornell Theory Center,  Cornell University 


Overview
  Prema is a runtime support system for parallel compilers and
problem solving environments that target scientific computing
applications. Prema is build on top of  PORTS (Cornell implementation)   and is designed to run on a variety of MPP and SMP computers. PREMA suppots: 

 global address space memory model 
 data and task parallel programming models 
  multi-threaded style of execution 
 
     automatic work-sharing mechanism (dynamic load balancing) 



 Papers 
  
Multithreaded model for dynamic load balancing parallel adaptive PDE
computations.  Nikos P. Chrisochoides, CTC95TR221,
Journal of Applied Numerical Mathematics 6(1996) pp 1--17, 1996.



Related Research

 
PORTS, Portable Runtime Systems Group

  
PCRC , Parallel Compiler Runtime Consortium

 Copyright © 1995  Nikos Chrisochoides  (nikosc@cs.cornell.edu) 

",non-course
"

Nikos' Home Page






 

        Research  
         








Nikos Pitsianis
	5151 Upson Hall
	Dept of Computer Science
	Cornell University
	Ithaca,    NY 14853
	607 255 3042 work, 607 255 4428 fax
	607 277 8219 home
nikos@cs.cornell.edu



 


        Publications
         




 

        Lectures
         




 

        Teaching
         






        Java
         






        Vita
         




 

        Pointers
         




 
Since May 4, 1996: You are visitor number 





",non-course
"Pavel Naumov




Welcome to my  Home Page

I invite you to learn more 
about me and 
my location in the cyberspace and 
the real world. Look at my work for Nuprl project 
and if you are tired take a rest at my 
Art Gallery or visit my Cinema, look at some of my photos, or
play a game on Java that I have written one Sunday.

Or just send me e-mail and go to 
some other place.	

",non-course
"
  David Pearson  



 David Pearson 
 Research Interests 

My thesis investigates highly scalable parallel computers consisting
of very simple processors connected in a 3-dimensional mesh.
The guiding vision of this work is of a time, perhaps 50 years hence,
in which materials science has taken the place of computer architecture,
and computers are crystals, with each processor a molecule in the lattice.
Long before this goal can be realized, we can and should prepare for the
ubiquitous parallelism it will offer.  Our algorithms must heed the laws
of physics and pay attention, as chip designers do now, to spatial layout
and the (currently hidden) cost of communication.  This can be accomplished
by designing our algorithms for a 3-D mesh.

To pursue this vision requires both theoretical and practical work.
So far, my work could be characterized as a feasibility study: I
have produced a 3-D cellular architecture which could
be efficiently realized with current hardware, a simulator for this
architecture, algorithms, programs, and an operating system design
for general-purpose computing.
(I believe that general-purpose computers, not problems like protein
structure, are the grand challenge of parallel architecture.  Parallel
computational power will not really succeed until it becomes a commodity
and is sold for desktop machines or video games.)

Directions for future research include VLSI implementation of this architecture
and the design of a programming language.  Most widely-used languages hide
the details of the machine's instruction set, but reflect the underlying
Von Neumann architecture.  I believe that this connection to the architecture
has been a good thing for algorithm design, and to really exploit parallel
machines we need a language for which the costs of operations are as easy
to estimate as they are for C++ on a Von Neumann machine.

 Publications 

 S. D. Dunten, D. S. Pearson, and W. Y. Arms. ``The Kiewit Network: A
     High-Speed Campus Network''. In  25th IEEE Computer Society
     International Conference  (IEEE COMPCON), pp. 247-254, (Fall 1982).
 D. Pearson, S. U. Pillai, and Y. Lee. ``An Algorithm for Near-Optimal
     Placement of Sensor Elements''.  IEEE Transactions on Information
     Theory   36,  pp. 1280-1284 (1990).
 D. Pearson and V. Vazirani. ``A Fast Parallel Algorithm for Finding a
     Maximal Bipartite Set''. In  Foundations of Software Technology
     and Theoretical Computer Science  10 (FST&TCS), pp. 225-231,
     (1990). Published as  Lecture Notes in Computer Science 
 472. 
 D. Pearson and V. Vazirani. ``Efficient Sequential and
     Parallel Algorithms for Maximal Bipartite Sets''.  Journal of
     Algorithms   14,  pp. 171-179 (1993).
 R. Johnson, D. Pearson, and K. Pingali. ``Finding Regions Fast:
     Single Entry Single Exit and Control Regions in Linear Time''.
     Cornell CS Tech. Report 93-1365.
 R. Johnson, D. Pearson, and K. Pingali. ``The program structure tree:
     Computing control regions in linear time''. In  Proceedings of the
     Sigplan '94 Conference on Programming Language Design and Implementation
      (PLDI), pp. 171-185, (1994).  Published as  ACM SIGPLAN Notices
       29(6).
 D. Pearson. ``A Polynomial-time Algorithm for the
     Change-Making Problem'', Cornell CS Tech. Report 94-1433.
 B. Hao and D. Pearson. ``Instruction Scheduling and Global Register
     Allocation for SIMD Multiprocessors''. In  International Workshop on
     Parallel Algorithms for Irregularly Structured Problems 
     (Irregular 95), pp. 81-86, Sept. 1995.
     Published as  Lecture Notes in Computer Science   980. 
 B. Hao, D. Pearson, and R. Zippel. ``Global Register Allocation for SIMD
     Multiprocessors''.  Journal of Computer Science and Technology, 
     Jan. 1996, Allerton Press.
 D. Pearson. ``A Parallel Implementation of RSA''.
     in  Selected Areas in Cryptography  (SAC), Aug. 1996 (to appear).



Computer Science Department
5133 Upson Hall
Cornell University
Ithaca, New York 14853-7501, USA


Email: pearson@cs.cornell.edu 
Tel: (607) 255-9189 
Fax: (607) 255-4428 


",non-course
" 

Todd Peskin's Web Page









Todd Peskin's Web Page
    Here is a picture of me: 

Contents

  Who am I? 
  Where am I? 
  Where I worked as a Co-op 
  Some of my favorite sites 
  My resume 
  Courses I've taken


 Who am I? 


I am a student in the 

6-year BS/MEng/MBA program at 
Cornell University. 
 This joint degree program is offered jointly through the 
College of Engineering and the 
Johnson Graduate School of Management.
  In May of 1996, I will receive a 

Master of Engineering in 
Computer Science. 
The following year, 1997, I will receive a 

Master of Business Administration.

I am also currently the President of the Cornell Chapter of 

Acacia Fraternity.
If you are a brother of the Cornell Chapter or any other chapter of Acacia and 
you would like to become a part of our mailing list, then please contact me 
through e-mail at tep1@cornell.edu
and I will add you as soon as I can.  If you supply me with your chapter and
your roll number then I will be able to complete your request more quickly.
  


 Where am I? 
Well, the best way to reach me is through e-mail at 
tep1@cornell.edu.
 I check my mail year round so I can always be contacted this way.  Since I 
am an MEng student, I can also be found many times logged on to the CS 
department's computers.  



 Where I worked as a Co-op 
The Fall semester of my Junior year and the following two semesters, I worked
as a Co-op (intern) with BDM International, Inc.
 through
the Engineering Cooperative Program at Cornell.  This program enables Cornell
Undergraduate students in the College of Engineering to supplement their 
classroom knowledge with practical experience working for a company in their
field of experience.  At BDM, I worked on the development and enhancement of 
two national level client/server database systems.  The server software is
run on Sun Microsystem computers and the client software is run on PC's 
running Windows.


 Some of my favorite sites on the Web 

 
ESPN's NHL Web Page
 Stock Quotes Online
 Sun's Java page
 My final project for CS 418 (a large mpeg file)
 The Client Computers Web Page (created for NBA 610)


I have had 
visitors since February 27, 1996


This page is still under construction.  I hope to add some more content to this page 
(possibly including some useful Java applets).  Oh, in case you were wondering, I created the 
""Ticker Tape"" applet at the top.  The construction applet was borrowed (with permission) from 
Sun's Java Developer's Kit.


Todd Peskin (tep1@cornell.edu)



",non-course
"

 Dave Pierce's Home Page 


 David Pierce 
 PhD Student  
 Cornell University  
 Computer Science 

 Address Stuff 

  Office  
     4156 Upson Hall 
     (607) 255-5033


  Home  
     154A Valentine Pl. 
     Ithaca, NY  14850-6140 
     (607) 256-9122



 Personal Stuff 

I am a second year PhD student in computer science.



My most recent home is Pittsburgh, Pennsylvania, although my family
currently resides in Reading, Pennsylvania.  
Reading  is a city approximately halfway between Philadelphia and
Harrisburg.  It is famous for its shopping outlets; otherwise, you
never want to go there.  However, 
Pittsburgh  is a great place, as many of you already know, since
it is impossible to fly in or out of Ithaca without going through
Pittsburgh.


 Fun Stuff 

 This Month's  Favorites 
 The Cornell CS 
Quote  List



 Work Stuff 

  CS 100 Home Page 



David Pierce 
pierce@cs.cornell.edu


",non-course
"
 Induprakas Kodukula's Home Page


 

 
Induprakas Kodukula 
 



710, Engineering and Theory Center 
Cornell University 
Ithaca, NY 14853 
Res: (607) 256-1903 
Off: (607) 254-8833 

 prakas@CS.Cornell.Edu  



I am a Ph.D student in the department of 
 Computer Science at 
 Cornell University. Prior to
that, I did my undergraduate in Computer Science at 
 IIT Madras . 
At Cornell, I work in the 

Bernoulli group 
with 

Prof Keshav Pingali . 
Other members of my group are 
Nawaaz Ahmed,

Vladimir Kotlyar, 

Vijay Menon and 

Paul Stodghill.
I am also affiliated with the 

Advanced Computing Research Institute  and the
 Cornell Theory Center .


   Research  
My work centers on the interplay between  applications,  compilers  and  runtime systems for traditional and
multiprocessor architectures. The applications are derived from
scientific computing, image processing and multimedia. My co-op with
IBM's  VLIW group has
interested me in computer architecture as well.


    Talks  
 I've given a series of talks on dense compiler technology.

The first  talk  at
HP Chelmsford, in Feb '95  was
about the necessity to deal with imperfectly nested loop
transformations to be able to handle non trivial code.

 I presented a  framework 
for performing imperfectly nested loop transformations at the Loop
Parallelization seminar in Schloss Dagstuhl in April '96.

 In summer '95, I presented a talk at  IBM Watson  regarding the use
of loop transformations in a VLIW compiler. 

 In October '96, I presented a talk at  HP Labs (Palo Alto)  regarding
Data-centric Multi-level Blocking.   

   Teaching  
I taught  Systems Programming and
Operating Systems (CS414)  in the summer of 1996.

   Projects  


   Other  
I (aka GNU Czar) install, maintain and support packages available
under the GNU General Public License on the CS department
machines. Check out the  CS GNU home  and
find handy tips to be able to do all this on your own! You can also
find extensive info on all the packages I support.

 
  Random Links    


 
  Personal page  


 Under construction..


",non-course
"

Praveen Seshadri: Home Page



 Praveen Seshadri 




Assistant Professor 

Computer Science Department 

Cornell University.
4108 Upson Hall 
Ithaca, NY 14853,  USA 
Office: (607)255-1045  FAX: (607)255-4428 






 
Advanced Database Systems : CS 537 : Fall 1996



 
The PREDATOR DBMS Project : ""End ADTs as we know them""



 
The Case for Enhanced Abstract Data Types (SIGMOD 97 submission)




Professional 





 
Publications


 
The SEQ project (time to put your database in order)



 
Management of Sequence Data: postscript of my PhD. thesis (in a 94 page tree-saving format).






Personal




513 Warren Road 
Ithaca, NY 14850 
(607)257-7412 



 
Ranjani Ramamurthy



 
Green Bay Packers






",non-course
"

SEQ Home Page
The SEQ Project: Querying Sequence Data
(Document under construction)






Time to put Order in the Database!

Order Time put in the Database!

Time to put the Database in Order!



Document Contents:


Project Objectives
Current Status
Motivating Example
SEQ Data Model
 Sequin  Query Language
Optimization Techniques
SEQ System Development
Publications
Related Work
Contact Information



Project Objectives

 A number of important database applications require the processing
of large amounts of ordered  sequence  data. The domains of these
applications include financial management, historical analysis,
economic and social sciences, metereology, medical sciences and
biological sciences. Existing relational databases are inadequate in 
this regard; data collections are treated as sets, not sequences. 
Consequently, expressing sequence queries is tedious, and evaluating 
them is inefficient.



Databases should 

model the data using the abstraction of  sequences ,
allow data sequences to be queried in a  declarative manner ,
utilizing the ordered semantics
take advantage of the unique opportunities available for query 
optimization and evaluation
integrate sequence data with relational data, so that users can
store and query a combination of relation and sequences

These requirements serve as the goals of the SEQ project.
Various kinds of sequences need to be supported, temporal sequences being the
most important kind. Queries should be expressible using notions like
""next"" and ""previous"" which are natural when considering sequences.
These queries should be optimized so that they can be evaluated efficiently.
These issues need to be studied in theory, and then a database system needs 
to be built that demonstrates the feasibility of the theoretical ideas.




Project Status


The current status of the project is:

We have defined the  SEQ  data model that can support 
most important kinds of sequence data. We have also defined algebraic
query operators that can be composed to form sequence queries (analogous
to the composition of relational algebra operators to form relation queries).
We have described how sequence queries can be efficiently processed,
and have identified various optimization techniques.
We use a sequence query language  Sequin  that can
declaratively express queries over sequences. A  Sequin 
query can include embedded expressions in a relational query language like
SQL, or vice-versa.
We are building a disk-based database system to demonstrate the 
feasibility of our proposals. The system implements the  SEQ  
model using a nested complex object architecture. It is built over the 
SHORE storage manager and can process several megabytes of data.
Relations and sequences are supported in an integrated and extensible 
manner.




Motivating Example of a Sequence Query



A weather monitoring system records information about various meteorological 
phenomena. There is a sequentiality in the occurrence of these phenomena; the 
various meteorological events are sequenced by the time at which they are 
recorded. A scientist asks the query: 

  ""For which volcano eruptions did
the most recent earthquake have a strength greater than 7.0 on the Richter 
scale?"". 

If this query is to be expressed in a relational query language like SQL, 
complex features like groupby clauses, correlated subqueries and aggregate
functions are required. Further, a conventional relational query optimizer 
would not find an efficient query execution plan, even given the knowledge 
that the Earthquakes and Volcano relations are sorted by time.

However a very efficient plan exists, if one models the data as sequences
ordered by time. The two sequences can be scanned in lock step 
(similar to a sort merge join). The most recent earthquake record scanned 
can be stored in a temporary buffer. Whenever a volcano record is 
processed, the value of the most recent earthquake record stored in the 
buffer is checked to see if its strength was greater than 7.0, possibly 
generating an answer. This query can therefore be processed with a single 
scan of the two sequences, and using very little memory. The key to such 
optimization is the sequentiality of the data and the query. 



Data Model


The details of the  SEQ  data model are
described in a published paper (click here 
for postscript version). Here we present the gist of it.

The basic model of a sequence is a set of records mapped to an ordered
domain of ``positions''.
This many-to-many relationship between records and
positions can be viewed in two dual but distinct ways: as a set of records
mapped to each position, or as a set of positions mapped to each record.
These two views are called ``Positional'' and ``Record-Oriented'' respectively,
and each gives rise to a set of query operators based on that view.
Queries on sequences could require operators of either or both flavors. 
The Record-Oriented operators are similar to relational
operators and include various kinds of joins (overlap, containment, etc) and
aggregates. Such operators have been extensively explored by researchers
in the temporal database community.



The Positional operators include Next, Previous, Offset, Moving
Aggregates, etc.  Further operators allow ``zooming'' operations on 
sequences by means of collapsing and expanding the ordering domains 
associated with the sequence. For instance, a daily sequence could be 
``zoomed out'' (i.e.collapsed) to a weekly sequence, or ``zoomed in'' 
(i.e. expanded) to an hourly sequence. 

The last part of the model deals with operations on groups (i.e. sets) of 
sequences. The advantage is that this makes it easy to model queries 
involving sequence collections (which is the case in many real-world
situations). All the sequence operators are extended to work with groups 
of similar sequences, instead of with single sequences. This extension
of the SEQ model indicates that a practical implementation of
SEQ would probably involve a nested complex object system.



 Sequin  Query Language


We have devised a query language called  Sequin  using
which declarative sequence queries can be specified. The language
is similar in flavor to SQL, except that the inputs to queries
as well as the results of queries are sequences. Click 
 here  for a description of the  Sequin 
language with examples.



Optimization Techniques


We have proposed new optimization techniques for sequence queries 
involving Positional operators. There are existing techniques that
have been proposed for queries with Record-Oriented operators.
Our optimizations use query transformations, meta--data, and caching of 
intermediate results to efficiently evaluate a query. An optimal query 
evaluation plan can be generated using an algorithm that relies on cost 
estimates. One of the important observations is that accessing sequence data 
in a single stream is probably very efficient, and evaluation strategies 
should take this into account.

The details of the optimization techniques are
described in a published paper (click here 
for postscript version).



System Development


The SEQ database system has a client-server
architecture, supporting multiple clients via
a multi-threaded server. The server is built on
top of the SHORE  
storage manager. Both  Sequin 
and a subset of SQL are supported as query languages
which can be embedded inside each other. The data model
is a nested complex object model that allows arbitrary
levels of nesting of relations inside sequences and vice
versa. The system is also extensible, providing support
for new data types, new ordering domains, user-defined functions, 
new storage implementations and new query languages. For more details
on the SEQ system, click here.



Publications




Sequence Query Processing 

Praveen Seshadri, Miron Livny and Raghu Ramakrishnan.

Proceedings of the  ACM SIGMOD Conference on Data Management, May 1994.




SEQ: A Framework for Sequence Data

Praveen Seshadri, Miron Livny and Raghu Ramakrishnan.

Proceedings of the  IEEE Conference on Data Engineering, March 1995.




The Design and Implementation of a Sequence Database System

Praveen Seshadri, Miron Livny and Raghu Ramakrishnan.

Submitted to VLDB 96.




What's Next? Sequence Queries

Raghu Ramakrishnan, Michael Cheng, Miron Livny, and Praveen Seshadri.

In Proceedings of the  International Conference on the Management of Data (COMAD), 
December, 1994.




Related Work


The
DEVise 
project is complementary to SEQ. It provides a visualization
environment that can be used to explore sequence data. DEVise can act as
a front-end through which queries can be posed against a SEQ database server,
and the answers can be examined graphically.

Also see:

 SHORE Project: Storage Manager used for SEQ
 People working on SEQ and related projects
 UW-Madison, Database Research Group
 UW-Madison, CS Department Server




Contact Information



For more information, contact 

Praveen Seshadri,
praveen@cs.wisc.edu

Raghu Ramakrishnan,
raghu@cs.wisc.edu

Miron Livny,
miron@cs.wisc.edu


Computer Sciences Department, 
University of Wisconsin, 
1210, W.Dayton Street, 
Madison, WI 53706.




Last modified: Fri Sep 15 1995 by Praveen Seshadri

Praveen Seshadri / praveen@cs.wisc.edu



",non-course
"
Ralph Benzinger












Ralph Benzinger
Wer sich auf seinen Lorbeeren ausruht, trägt sie an der
falschen Stelle.

The story so far ...

 Exchange student from the
     University of Karlsruhe,
     Germany
 German B.Sc. in
     Computer Science
     in August 1995
 Fellow of the Studienstiftung des deutschen Volkes
 Fulbright fellow
 Member of the Siemens
     Internationaler Studentenkreis
 CTY alumnus


At Cornell ...

 Graduate student at the
     Department of Computer Science
 Courses taken:
     
 Advanced Programming Languages
      Design and Analysis of Algorithms
      Reasoning about Knowledge
     


Contact information ...

 E-mail: 
     ralph@cs.cornell.edu
 Office: 4132 Upson Hall
 Phone: (607) 255-1179


More ...





",non-course
" 
Mathematics For Computer Generated Spoken Documents
 Title in audio 


ASTER Demonstration

is dedicated to my 
Guide-Dog.

AsTeR --Audio System For Technical Readings-- is a computing system for
rendering technical documents in audio.  AsTeR was developed by  me for my

PhD. (141 pages)  An audio formatted version of the thesis, 
(approximately 6 hours) produced by AsTeR, is being made available by 
RFB (Recordings For the Blind
 as the first computer generated talking book.   Here is the  abstract  in print, and 
here is an audio formatted version.  


This hypertext document demonstrates the audio renderings generated by AsTeR.
 Here 
is an enhanced demo using inline images.
Each example is made up of three components:

  The original LaTeX input. 
    The audio formatted output produced by AsTeR.
       The speech is produced by a Dectalk, and has been digitized at
       8-bit mulaw
       AsTeR uses stereo to render tables, an effect that is not
       conveyed by the
8-bit mono encoding.  
  The visually formatted version produced by LaTeX and DVIPS. 

 How to use this demo: 

The examples in this demonstration get progressively difficult. 
I suggest you go through the initial sections sequentially;
For short demos, I typically show people the first three sections, and
round it off 
with the continuous fraction in section 4 and a quick overview of Faa
De Bruno's formula.



Here  is the Postscript file containing all the examples, in case
you want to look over them first. 
I am not placing a  single file containing all of the audio examples
since this would be about 9MB. 



Section 1  simple fractions and expressions.

This set of examples demonstrates the use of voice inflection and pauses to
convey grouping of sub-expressions succinctly.



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 


Audio state varied along a dimension in audio space before rendering
sub-expressions.



Section 2  superscripts and subscripts.

To convey subscripts, superscripts, and other visual attributes, vary audio
state along a dimension that is orthogonal  to (independent of ) the dimension
used to convey sub-expressions.
This will allow the nesting of these mutually independent concepts. 



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 3  Knuth's examples of fractions and exponents.

These examples are taken verbatim from the TeX Book, by Donald Knuth.
They are used in the TeX Book to demonstrate the power of the TeX layout
operators.
Notice that all of these examples comprise of the same 6 symbols, but are very
different!
AsTeR can render these as unambiguously as TeX can.




 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 4  A continued fraction.


Moving along a dimension in audio space defines a perceptibly monotonic
change. This notion of perceptible monotonicity is vital in conveying nesting.

 audio 
 LaTeX 
 Postscript 


Section 5  Simple School algebra.



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 6  square roots.


Notice the choice of unambiguous renderings for the following expressions: 


 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 7  Trigonometric identities.

Written mathematical notation can be ambiguous and hard to recognize.
Notice the complete absence of parenthesis in some of the examples below.
AsTeR uses several heuristics to construct the correct tree structure for
these expressions.




 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 8  Logarithms.

Notice the context-specific rendering when speaking the base of the logarithm.
The renderings are chosen to reduce cognitive load; log base a of
x 
as opposed to  log of x to the base a 


 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 9  Series.

Context-specific rendering rules allow AsTeR to interpret the superscripts as
exponents.  Such interpretation is not hard-wired into the renderings; it is
fully customizable by the user.




 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 10  Integrals.

The first of these examples, probably the most innocuous, is also the most
difficult to recognize; it is impossible to determine the variable of
integration.


Notice that AsTeR interprets triple integrals as the nested application of the
integral operator.
A user can browse the triple integral and listen to its sub-pieces.



The integrals  shown in examples 3 and 4 can trick the most experienced of
human readers into an error. 



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 11  Summations.

Notice that the same expression can be written in more than one way. 



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 12  Limits.



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 13  Cross referenced equations.

The following section is meant to illustrate AsTeR's rendering of
cross-references, and is most effective when AsTeR is used interactively.


AsTeR enables the listener to give meaningful names to cross-referenceable
objects, and uses these names when referring to such objects in later
cross-references.



 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 14  Distance formula.


Notice that AsTeR produces good intonational structure when speaking text that
is intermixed with mathematics. 
 audio 
 LaTeX 
 Postscript 


Section 15  Quantified expression.

The quantifiers present an interesting challenge to AsTeR's recognizer.



 audio 
 LaTeX 
 Postscript 


Section 16  Exponentiation.

Once again, perceptible monotonicity allows AsTeR to convey the following
deeply nested expressions succinctly.

These examples were produced with the Emacs Calculator, a full-fledged
symbolic algebra system.
AsTeR  interfaces directly with this calculator, and renders the output just
as well as it can render any document. 




 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 

 audio 
 LaTeX 
 Postscript 



Section 17  A generic matrix.

AsTeR uses stereo effects to convey the two-dimensional structure of the
matrix.  Rendering commences on the left, and moves progressively right as
each element of any row is spoken.

 audio 
 LaTeX 
 Postscript 


Section 18  Faa de Bruno's formula.

This section presents Faa De Bruno's formula, taken from Knuth's Art Of
Computer Programming, Vol. 1.
I first heard it spoken by a RFB reader on a talking book; it took 120 seconds
to speak.


Since the renderings produced by AsTeR utilize features of the audio space
not available to a human reader (I still have not met a reader who can change
the size and shape of her  head as she talks:-)
the rendering takes under 80 seconds.


As you will hear soon, even this is too long; you forget the beginning by the
time you hear the end.


Later, we present rendering using variable substitution, a powerful technique
for conveying top-level structure of complex expressions.


 Notice the proper intonational structure produced for text intermixed
     with mathematics.  
 audio 
 LaTeX
Postscript
  audio 
 LaTeX
 Postscript
 Here is Faa De Bruno's formula in all its glory:-
 Audio (66 seconds)
 LaTeX 
 Postscript 
 

AsTeR can process complex expressions like the above, and upon request,
replace complex sub-expressions with meaningful identifiers. Such renderings
convey top-level structure; the listener can then listen to the
sub-expressions separately.  

Since this substitution process is performed by AsTeR, there is no LaTeX or
Postscript equivalent for the audio output in this case.

 The top-level formula.
 audio (20 seconds) 
 Lower constraint 1. 
      audio (20 seconds) 
 Numerator.  audio (15 seconds) 
 Denominator.  audio (14 seconds) 


T.V. Raman raman@crl.dec.com 

Last modified: Fri Aug  5 10:06:00 1994

 
",non-course
"

 S Ravi Kumar 


  S Ravi Kumar  

 Department of Computer Science  
 Cornell University  
 Ithaca , NY 14832-7501. 
(607) 255-1158 

  ravi@cs.cornell.edu  



  Program Checking: 

  Approximate checking of polynomials and functional equations , 
	 37th IEEE Foundations of Computer Science, 
	October, 1996. 
	[ Funda Erg&uumln , 
	 Ronitt Rubinfeld ]
	  Efficient self-testing/self-correction of linear recurrences , 
	 37th IEEE Foundations of Computer Science,  
	October, 1996. 
	[ D. Sivakumar ]
	  On self-testing without the generator bottleneck , 
	 15th Foundations of Software Technology and Theoretical Computer 
	Science, LNCS 1026, 
	pp. 248-262, December, 1995. 
	[ D. Sivakumar ]
	
  Learning Theory: 

  On learning bounded-width branching programs , 
	 8th ACM Conference on Computational Learning Theory,  
	pp. 361-368, July, 1995. 
	[ Funda Erg&uumln , 
	 Ronitt Rubinfeld ]
	
  Combinatorics: 

  Approximating latin square extensions , 
	 2nd Conference on Computation and Combinatorics, LNCS 1090, 
	pp. 280-289, June, 1996. 
	[ Alexander Russell , 
	Ravi Sundaram]
	
  Parallel Processing: 

  Scalability study of the KSR-1 , 
	 22nd International Conference on Parallel Processing,  
	pp. I:237-240, August, 1993. 
	[ Jeyakumar Muthukumarasamy , 
	 Umakishore Ramachandran ,
	 Gautam Shah ]
	





",non-course
"


Ramin Zabih's Home Page





Ramin Zabih
Assistant Professorrdz@cs.cornell.edu
607 255 8413
607 255 4428 (fax) 

ResearchMy research interests lie in Computer Vision and Multimedia. I am currently interested in 
constructing a search engine for images, using some new methods we have developed. I've recently been thinking about the economic impact of freely available pricing information on the 
Web. My essay on this subject appeared in Phil Agre's electronic newsletter The Network Observer in 
March 1996. 

StudentsI work with PhD students Jing Huang, Vera Kettnaker and Olga Veksler. I also spend a fair amount 
of time with various undergraduates, principally Greg Pass and Justin Voskuhl. Other undergraduates 
include Scott Cytacki, Justin Miller and Rob Szewczyk.
PublicationsMost of these publications are available in postscript or in PDF (acrobat) format. Free PDF readers 
for a variety of different architectures are available from Adobe.
Histogram Refinement for Content-Based Image Retrieval, Greg Pass and Ramin Zabih. IEEE 
Workshop on Applications of Computer Vision. Sarasota, Florida, December 1996.
Comparing Images Using Color Coherence Vectors, Greg Pass, Ramin Zabih and Justin Miller. Fourth 
ACM Conference on Multimedia. Boston, Massachusetts, November 1996.
Feature-Based Algorithms for Detecting and Classifying Scene Breaks, Ramin Zabih, Justin Miller 
and Kevin Mai. Third ACM Conference on Multimedia. San Francisco, California, November 1995.
Non-parametric Local Transforms for Computing Visual Correspondence, Ramin Zabih and John 
Woodfill. Third European Conference on Computer Vision, Stockholm, Sweden, May 1994.


TeachingI am currently teaching CS100B, an introduction to computer programming. In the Spring I will 
teach CS664, a course in computer vision. If you are interested in that course, there are scribe notes 
from my lectures available on the web page. I have also taught CS212, an introduction to computation 
and programming.
Professional ActivitiesI am on the program comittee for CVPR-97, the IEEE conference on computer vision 
and pattern recognition, which will be held in San Juan, PR in June 1997. I am also on the organizing 
committee for the IEEE Workshop on Content-based access of Image and Video Libraries, to be held in 
conjunction with CVPR-97.
AcknowledgementsThis web page design is courtesy of Dan Huttenlocher
 Last Updated: November 3, 1996



",non-course
"
 Roderick Moten's Home Page 









",non-course
"

Ronitt Rubinfeld : HomePage



Ronitt Rubinfeld

I am an assistant professor at the 

Cornell Department of Computer Science.


Some recent 

papers and talks 

Courses: 
  
 
	6.893 Randomness and Computation  Spring 1996 (at MIT) 
 
		CS 681 Fall 1996 
 
	Engineering 150  Fall 1996 


Graduate Students: 

 
Funda Ergun 
 
S Ravi Kumar 


 cv 


Computer Science Fair homepage

 Hal Wasserman's web page describing work/researchers in the area of 
   result-checking 

Address 

Ronitt Rubinfeld
Computer Science Department
5137 Upson Hall
Cornell University
Ithaca, New York 14853
telephone: (607) 255-1146
fax: (607) 255-4428 
email: ronitt@cs.cornell.edu




Pictures of my new nephew, 
Eitan Rubinfeld,  

1


2




",non-course
"





Roy Friedman



Roy Friedman
Post-Doctoral Associate, Cornell University
roy@cs.cornell.edu






I am a post-doctoral associate in the 
Department of Computer Science
at
Cornell University.
I am working with

Ken Birman and

Robbert Van Rennesse
in the area of distributed systems, mainly on the

Horus project.


I received my D.Sc. from the

Department of Computer Science at the

Technion - Israel Institute of Technology.
My advisor was

Hagit Attiya, and my thesis title was

Consistency Conditions for Distributed Shared Memories.


I am currently also involved in the

Millipede project, working with

Assaf Schuster from the

Department of Computer Science at the

Technion - Israel Institute of Technology.

Most Recent Papers


R. Friedman and K. Birman.

Trading Consistency for Availability in Distributed Systems.
 Technical Report 96-1579, Department of Computer Science, Cornell
University. 

R. Friedman and K. Birman.

Using Group Communication Technology to Implement a Reliable and Scalable
Distributed IN Coprocessor.
 To appear in TINA 96. 

R. Friedman and A. Vaysburd.

Implementing a Replicated State Machine Over Partitionable Networks.
 Technical Report 95-1554, Department of Computer Science, Cornell
University. 


For a full list of publications, click

here
.



",non-course
" Daniela's Home Page

 Daniela Rus
 Research Associate / Computer Science
 rus@cs.cornell.edu

 A photograph 



Address
    4154 Upson Hall
    Department of Computer Science
    Cornell University
    Ithaca, NY 14853
    Tel: (607) 255-5691
    FAX: (607) 255-4428

 

 Modeling and Simulation Home Page 
 Recent Papers 

CS version of my Online Tech Reports  
Cornell Library Catalog
CS TR 
CS Dept info
Design Research Institute

",non-course
"





Robbert van Renesse



Robbert van Renesse
Senior Research Associate
Cornell University

rvr@cs.cornell.edu




I am a senior research associate in the 
Department of Computer Science
at
Cornell University
in
Ithaca, NY.
I am working with

Ken Birman
in the area of distributed systems.  My Ph.D. advisor was
Andy Tanenbaum.

Interests

My brand new baby girl!.
Our brand new house.
The Horus system.
The TACOMA project.
CAML/MMM Applets.
NYNET
The Ithaca Ageless Jazz Band.
The Ithaca Swing Dance Network.
Jazz.
Accordion.
Shareware.

Dutch Stuff

Cornell Dutch Club (contains many other links).
The USA and the Netherlands.
Dutch Jazz.

Ithaca

IthacaNet.
The Spinners Ithaca Market Place.

Papers

Software for Reliable Networks (Scientific American)
Design and Performance of Horus:  A Lightweight Group Communications System (html version).
Design and Performance of Horus:  A Lightweight Group Communications System (GIF version).
A Framework for Protocol Composition in Horus.
Protocol Composition in Horus.
Incorporating System Resource Information into Flow Control.
Strong and Weak Virtual Synchrony in Horus.
Horus: A Flexible Group Communications System.
A Security Architecture for Fault-Tolerant Systems.
Support for Complex Multi-Media Applications using the Horus system.
Operating Support for Mobile Agents.



",non-course
"
 Laura Sabel 


 Laura Sabel 
 sabel@cs.cornell.edu 



 Professional Information 

I did my doctoral research with Professor

Keith Marzullo, of the University of California at San Diego,
on failure detection in asynchronous distributed systems.  For
more research on failure detectors, see
 Tushar Chandra's
Failure Detection Page. 

I finally finished my  thesis:
 Approximating Perfect Failure Detectors in Asynchronous
Distributed Systems. 
 Publications 
 Election Vs. Consensus in Asynchronous Systems 
by Laura Sabel and Keith Marzullo.


Cornell University Computer Science Technical Report TR95-1488, February 1995

Submitted to  Information Processing Letters. 

For a postscript copy of the TR, click
 here .

 Approximating Perfect Failure Detectors in Asynchronous
Distributed Systems 
by Laura Sabel and Keith Marzullo.


Versions appear in:

 Proceedings of the 13th Annual Symposium on Principles of Distributed
Computing,  August 1994.

 Proceedings of the 13th Symposium on Reliable Distributed Systems,
 October 1994.

Cornell University Computer Science Technical Report TR94-1413, March 1994
(revised June 1994).

For a postscript copy of the TR, click
 here .

 Using Consistent Subcuts for Detecting Stable Properties 
by Keith Marzullo and Laura Sabel.


Versions appear in:

 Distributed Computing,  8(3), 1995. 

 5th International Workshop on Distributed Algorithms (WDAG-5),
 October 1991. (Proceedings published in Springer-Verlag Lecture
Notes in Computer Science Series, Vol. 579.)

Cornell University Computer Science Technical Report TR91-1205.

For a postscript copy of the TR, click
 here .


  Expanding Your Horizons  
  Cows  
 Some interesting pages:  

 The
  Strawberry Pop-Tart Blow-Torch Experiment  

 AlpacaNet 


 The
  Electronic Gourmet Guide  

 The
Bobbie Awards, especially  The Spam Page


 The Jelly Belly Jelly Beans Page
 (win a free sample by answering a survey)


 The Bingo Zone, where you can
play bingo for fun and cash prizes


",non-course
"
 Samuel Weber


 Samuel Weber 

Acting Assistant Professor
308 Upson Hall
Phone: 607-255-1051
Fax: 607-255-4428
Email: samuel@cs.cornell.edu


Currently, I am an Acting Assistant Professor at Cornell University,
and Assistant Director of the 
Master's of 
Engineering Program in Computer Science.

 Research Interests 

Software Design, Specification and Verification,
 Programming Language Design and Semantics, Distributed Systems

 Courses 


CS 401/501 ""Software Engineering: Technology and Techniques"" (Fall 95)

CS 100 ""Introduction to Computer Programming"" (Spring 96)

 Publications

 
     Weber and Bloom, ""Metatheory of the Pi-Calculus"",
     Technical Report 96-1564,
     Cornell University (submitted for conference publication).
 
 Weber, Bloom and Brown,
""Compiling Joy Into Silicon: a Formally Verified Compiler for
        Delay-Insensitive Circuits"", Technical Report 96-1566, Cornell
University (submitted for journal publication).
 
Weber, ""Process Algebras and Meta-algebras: Theory and Practice"".
 Ph.D. Thesis, Cornell University, August 1995
   Weber, Bloom and Brown, 
""Compiling Joy Into Silicon:  An Exercise
    in Applied Structural Operational Semantics,""
REX Workshop on Semantics: Foundations and Applications 1992,
        Bakker, Roever and Rozenberg, editors, Lecture Notes in
        Computer Science vol. 666, Springer-Verlag, pages 639-659. 1993.

  Weber, Bloom and Brown, 
  ""Compiling Joy into Silicon: A Verified Silicon Compilation Scheme,"" In
        T. Knight and J. Savage, editors, 
Proceedings of the Advanced Research in VLSI and Parallel
        Systems Conference, pages 79-98. 1992.

    Amdur, Weber and Hadzilacos, 
""On the Message Complexity of Binary Byzantine Agreement Under
        Crash Failures,"" Distributed Computing 5, pages 175-186, 1992.
 
Weber, ""Bounds on the Message Complexity of Byzantine Agreement""
        Masters Thesis, University of Toronto, September 1989.

    Seshadri, Wortman, Weber, Yu and Small, 
""Semantic Analysis in a Concurrent Compiler,"" 
Proceedings of the ACM SIGPLAN '88 
Conference on Programming Language Design and Implementation, 
pages 233-240. 1988.

 Samuel Weber (samuel@cs.cornell.edu) 

",non-course
" Faculty Research Interests : Sam Toueg  Sam Toueg












Professor
Ph.D., Princeton University, 1979

Research Interests

My research interests include distributed computing, fault-tolerance
and real-time.  I work on methodologies, paradigms, and algorithms for
fault-tolerant distributed systems, in both message-passing and
shared-memory  systems.  My long-term goal is to bridge the gap
between  theoretical results and the need for efficient and practical
solutions.

In collaboration with
Tushar Chandra
and 
Prasad Jayanti, 
two Ph.D.
Computer Science students, we continued our work on
unreliable failure
detectors for message-passing systems,
and on wait-free objects for shared-memory systems.

A fundamental result of fault-tolerant distributed computing
states that the Consensus problem cannot be solved (with a
deterministic  algorithm) in asynchronous systems.  This impossibility
result  is due to the inherent difficulty of determining whether a
process  has crashed (or is merely very slow) in such a system.  In
our work,  we were able to determine exactly how much information
about  failures is necessary and sufficient to solve Consensus.  We
first  showed one can use W, an unreliable failure detector that can
make an  infinite number of mistakes, to solve Consensus in systems
with a  majority of correct processes.  We then proved that to solve
Consensus, any failure detector has to provide at least as much
information about  failures as W.  Thus, W is the weakest failure
detector for solving  Consensus in asynchronous systems with a
majority of correct  processes.  We are now exploring the practicality
of  implementing W,  and of applications that rely on W for their
correctness.

A concurrent system consists of processes communicating via shared
objects.   A shared object is wait-free if each process that accesses
this  object is guaranteed to get a response even if all the other
processes  crash.  We are now exploring wait-free hierarchies of
object types, where each object (type) is assigned to a level that
corresponds to its  ability in implementing other wait-free objects.
In particular,  Prasad Jayanti has shown that a well-known hierarchy
(Herlihy's)  is not robust:  Informally, in this hierarchy there is an
object at level  2 that can be used to implement wait-free objects at
any  level.  We  are now exploring the question of whether
robust wait-free hierarchies exist.

Selected Publications

 Bracha, G., and S. Toueg.
Asynchronous consensus and broadcast protocols.
 Journal of the ACM, vol. 32, 10, 1985, 824-840.

 Srikanth, T. K., and S. Toueg.
Optimal clock synchronization.
 Journal of the ACM, vol. 34, 3, 1987, 626-645.

 El Abbadi, A., and S. Toueg.
Maintaining availability in partitioned replicated databases.
 ACM Transactions on Database Systems, vol. 14, 2, 1989, 264-290.

 Neiger, G., and S. Toueg.
Automatically increasing the fault-tolerance of distributed algorithms.
 Journal of Algorithms, vol. 11, 3, 1990, 374-419.

 Chandra, T., and S. Toueg.
Unreliable failure
detectors for asynchronous systems.
  Proceedings 10th ACM Symposium on Principles of Distributed Computing
.
August 1991, Montreal, Canada, 257-272.

 Chandra, T.,
V. Hadzilacos
 and S. Toueg.
The weakest failure detector
for solving consensus.
  Proceedings 11th ACM Symposium on Principles of Distributed Computing
 ,
August 1992, Vancouver, Canada, 147-158.

Jayanti, P.,
Chandra, T.,
and S. Toueg.

Fault-tolerant wait-free shared objects.
  Proceedings 33rd IEEE Symposium on Foundations of Computer Science,
October 1992, Pittsburgh, Pennsylvania, 157-166.

 Neiger, G., and S. Toueg.
Simulating synchronized clocks and common knowledge in distributed systems.
 Journal of the ACM, vol. 40, 2, 1993, 334-367.


",non-course
"

Sean C. Landis





Sean Landis, Masters of Engineering, Computer Science




Welcome to my 

Cornell Home Page. 
Here is my resume.
My Cornell information is 

here.


Current Courses:

Advanced Database Systems

CS 537

 
Masters of Engineering Project, CS 790 - A 3D rendering system for Windows 95



Past Courses:

Machine Perception, CS 664. My final project was a system that analyzed 
coloring book drawings. Click
here
for a 6MB postscript version of the project. Here is a sample drawing we
analyzed:




Topics in Computer Graphics, CS 718 - Content-Based Image Retrieval Systems for Interior Design.



 
Masters of Engineering Project, CS 790 - A Windows-based 3D graphics rendering system.

Computer Graphics,  

CS 417
 
Computer Graphics Lab,  

CS 418

Educational Interests:
 
Computer Graphics


Windows NT
 
C++ 
 
Object Oriented Programming
 
Object Oriented Design Patterns


Professional Interests:
 I work for 

Isis Distributed Systems, Inc., a division of 

Stratus Computer, Inc.

 I am project lead of the 

Orbix+Isis
 development team. Our product combines Orbix, a

CORBA compliant Object Request Broker from

 IONA Technologies, Inc. with the 

Isis SDK.

 
I am currently working on release 2.0 of Orbix+Isis.


Personal Interests:
 
Baseball, my favorite team is:


 
Alpine Skiing
 
Golf
 
Playing Softball
 
Baseball Card Collecting


I can be reached at:


scl@isis.com



Educational Rap Sheet:








Last modified: Sean Landis (scl@cs.cornell.edu), 9/17/96



",non-course
"

 Seena K Cherangara







 Seena K Cherangara
Master of Engineering
Class of 1996
Dept. of Computer Science
Cornell University







Welcome to my homepage
Currently I am an M.Eng student at the 
Computer Science Department
 at Cornell University in 
Ithaca, NY. 
I have my B.Tech degree in Computer Science and Engineering from the 
College of Engineering,Trivandrum, 
Kerala, INDIA.





Some information about the courses that I have taken at Cornell
University



Fall 1995 
 
CS414 Operating System
 
CS415 Practicum in Operating System Project specification: 

HOCA Operating System
 
CS501 Software Engineering
 
CS631 Multimedia Systems:Project: Post-Processing
Algorithms for JPEG Artifact Reduction




Spring 1996 
 CS417 Computer Graphics
 CS418
Practicum in Computer Graphics :Project:  Animation - The Magic Carpet 
 CS514 Distributed Systems
 CS709 Computer Science Colloqium 



Summer 1996 
 CS790 M.Eng Project: 3D Graphics Modeling in Java : Parametric Equation Viewer.







Click here to see a postscript version of my
Resume







201 Maple Ave, Apt#G10C, Ithaca, New York  14850

(607) 256-1859


 seena@cs.cornell.edu


  Last Update: June 5,
1996






",non-course
"



   Rosen Sharma  
Office: 5162 Upson Hall 
Email: sharma@cs.cornell.edu 
TA for CS519 



I came to Cornell from Stanford, where I spent a couple of years as a PhD 
student. My work and research at Stanford was about streaming live media,
like audio and video, over the internet. As part of this I  modified
IGMP one of the multicast protocols, developed protocols for multicasting
/unicasting layered video, and  developed the Virtual Classroom system. The 
initial prototype  was deployed in the 1995 Spring and Fall quarters and 
used as an alternative to the Stanford Instructional Television Network 
SITN  program which 
uses microwave links. Students at remote sites used the 
software to asynchronously access class lectures and notes, over the internet.
We also stumbled upon the fact that other media, like text, slides, etc,  
linked with portions of video enhanced its usefulness  greatly.  This lead
to the formation of a company  Vxtreme Inc.,
 Palo Alto, CA.  Vxtreme is a new Silicon Valley start up develop client sever 
applications for streaming multimedia delivery over the internet.

Papers

 Signalling and Operating System Support for Native-Mode ATM Applications , Rosen Sharma and S. Keshav, Sigcomm  94

 Text Segmentation of Mixed Mode Images ,
 Navin Chaddha, Rosen Sharma, Avneesh Agarwal and Anoop Gupta. Asilomar 94

 IGMP  (Internet Group Membership protocol v2.0)  designed by 
Rosen Sharma and Steve Deering release as part of IP multicast v 3.3. Internet
draft written by Bill Fenner.

 Optical Character Recognition Using statistical and structural  methods,
  Rosen Sharma and Niten Malhan. Bachelors thesis, Dept of Computer Science
  Indian Institute of Technology Delhi

Unpublished Stuff 

 Characterizing Variable bit Rate Sources
 Rosen Sharma (term paper)

 Preformance of a Software Video Conferencing 
System.  Rosen Sharma. Internal Report.


Cool Stuff

 Image and Video Manipulation Language 
     
      This is a language with video and images as first class data types. It
      allows operators on images and sequences like blur, speckle, transforms
      like affine, dct, subband, motion estmation. It also makes manipulation
      of image and video data fast and efficient.

      The implementation is writen in tcl/tk and currently has been tested 
      on SGI machines;it supports 24 bit and 8-bit display . To give you
      a flavour of what the language looks like...

         set image [image ${imageFrame}$if -width 80 -height 60]
         iframe $if -nodisplay -file $filename -image $image
         putImageInCanvas $imageFrame $image $if   
      


      There is a predecessor to this implementation (if you hate tcl/tk) which
      uses motif and has a language interpreter written in yacc, with limited 
      shell like scripting.

      Here is a cool shell script that will generate  TK
      widgets. It generates all the files given the name of the widget. The
      files compile and give you a dummy widget.

 X-event snooper, recorder and player 
     
     I consider this one of the coolest things I ever did. It does something
     similar to what Spy++ from Microsoft does for Windows (they just released
     it). It doesnt have a scripting language but just replays what is
     recorded with lots of kludges to fool the X-server.

 Some Postscript
     
  Fractals 
 Creates a file called Y-A-H-O-O in your directory. This used to be 
          a hole but postscript viewers fixed it by dissalowing write calls 
          write.ps


  Semantics of my Name 
Rosen not being an Indian name, this question was often asked ? People gave
the name their own interpretations. Here are some of them


 Some of my chinese friends (makes me wonder?) claim that it means
    
 small horse
     not smart
    
 In hindi, my native tongue
     
 Sharm mean shyness
      Sharmila means shy (And there is an actress called Sharmila Tagore) So          I was nicknamed Sharmila
      Frozen Sharmila or Stupid Horse .....
     
 Some people claim that it is from one of the ealry Jewish leaders...

 What is in a name .......:-) 



",non-course
"
Eric Shim's Home Page

Welcome to Eric's Home Page



Eric Young-Sang Shim

Master of Engineering, Computer Science
Cornell University 

The view of Cornell University.... 



Address  : 502 Dryden Rd. #3
City : Ithaca, NY 14850
Phone: 607-256-7630

 shim@cs.cornell.edu 
















For Korean version of my home page, click on

this 

I have received my BS of Computer Science degree at 

University of California, Irvine
studied 
Information and Computer Science

 My MENG Project Viewing System, Camera Transformation 
 My MENG Project Abstract 
This is my  final project for 3D computer graphics class

I love to ...
play following musical instruments ... 

Acoustic Guitar ... 

Piano ...
	Keyboard ...
	
listen to the musics by ....
	
Stan-Getz ... 
	Antonio Carlos Jobim ... 
	John Coltrane ...
	Miles Davis ...  

Earl Klugh ...
	Pat Metheny ...
	Acoustic Archemy ...
	Chopin ...
	
watch the movies and the musicals ...
	
Cinema Paradiso ... 
 
French Kiss ... 

Les Miserable ... 

Miss Saigon ...




Here are my favorite WWW pages!!!!!
Korea NEWS
Wants to know about Korean Graduate Student Association at Cornell??? 
Does anybody like JAZZ???  Check JAZZ out!
Interested in JAVA? 
My cyberspace friends in HANA...  
I will be working in  MELCO.... 
When was the last time you went to the Movies????  

My friends in the world!
 Ra, Jung-Hwan
... He is my middle school friend back in 80's....
 Victor Ha... 
 Kwan-Hong E!...
Jiyang Kang's Homepage...

Kwan! you can get it  here!

This page has been accessed 
 times
since May 2, 1996

 This Web-Page is still under construction! 
My resume will be available in a near future !!!!
Also, This web page will have the Korean version of it soon!!!!

",non-course
"Amit Singhal's Home Page



Amit Singhal

Department of Computer Science,
Cornell University

singhal@cs.cornell.edu
Phone: 607/255-9211, Fax: 607/255-4428
My research interests are in the area of information retrieval and
text processing. My thesis advisor was (late) Prof. Gerard
Salton. My current thesis supervisors are Dr. Chris Buckley and Prof. Claire
Cardie
Here is a postscript copy of my resume.

The Smart group at Cornell CS department has been
one of the foremost research groups in the field of information
retrieval for last thirty years. Our current research involves:


Document Length Normalization in Information Retrieval
 To fairly retrieve texts of varying sizes, document length
normalization is commonly used in term weighting. We show that
effective systems should retrieve documents of all sizes with chances
similar to their likelihood of relevance. We propose pivoting,
a new technique that can be used to modify existing normalization
functions to yield substantial improvements in retrieval
effectiveness. We also propose a new and effective normalization
technique.Some papers ...
Our TREC
Participation
Text REtrieval Conference (TREC) is a NIST and ARPA co-sponsored
effort to objectively evaluate various information retrieval
techniques on an independent testbed. The Smart system has
consistently been one of the best systems at TREC.Some
papers ...
Automatic Text Structuring and Summarization
Non expository texts are not usually read from cover to
cover. Readers are helped in such circumstances by providing selective
access to text excerpts as needed. We have developed techniques to
analyze the structure of a text and provide tools for selective text
traversal.Some papers ...


Papers
Normalization papers:


Pivoted Document Length Normalization.  Amit Singhal, Chris Buckley, Mandar
Mitra, (Gerard Salton). (TR95-1560)

Document
Length Normalization. Amit Singhal, Gerard Salton, Mandar Mitra
and Chris Buckley. (TR95-1529)

Length
Normalization in Degraded Text Collections. Amit Singhal, Gerard
Salton and Chris Buckley. (TR95-1507)


TREC papers:

 Coming soon: New Retrieval Approaches Using
SMART: TREC 4. Chris Buckley, Amit Singhal, Mandar
Mitra, (Gerard Salton).


Automatic Query Expansion Using SMART: TREC 3. Chris Buckley,
Gerard Salton, James Allan, and Amit Singhal. In Proceedings
of the Third Text Retrieval Conference, NIST Special Publication
500-225, 69-80.


Text structuring papers:

 
Automatic Text Decomposition Using Text Segments and Text
Themes.  Gerard Salton, Amit Singhal, Chris Buckley, and Mandar Mitra,
Hypertext '96 (to appear). (TR95-1555)

 Automatic Text Decomposition and Structuring. Gerard Salton,
James Allan, and Amit Singhal, Information Processing and
Management (to appear).

Automatic Text Browsing Using Vector
Space Model. Amit Singhal and Gerard Salton. In Proceedings of
the Dual-Use Technologies and Applications Conference, May 1995,
318-324.

 
Selective Text Traversal. Gerard Salton and Amit Singhal. (TR95-1549)

 
Automatic Text Theme Generation and the Analysis of Text Structure.
Gerard Salton and Amit Singhal. (TR94-1438)

Automatic Analysis, Theme Generation, and Summarization of Machine
Readable Texts. Gerard Salton, James Allan, Chris Buckley, and Amit
Singhal, Science 264 (3 June, 1994), 1421-1426.


Smart Group

Members of the Smart group are:

Chris Buckley, senior research associate;
Amit Singhal, Ph.D. student;
Mandar Mitra, Ph.D. student;
David Fielding, Masters of Engineering student;

and others as the group slowly fluctuates.

  Thanks for visiting my home page. You are visitor  since Nov. 30, 1995 (that's when I
installed this counter :-).
",non-course
"

S. Keshav


S. Keshav


Email: skeshav@cs.cornell.edu


 Work: 4107 B Upson Hall, Department of Computer Science, Cornell University, Ithaca NY 14853, 
 Tel: (607) 255 5395, Fax: (607) 255 4428
 Home: 199 Christopher Lane, Ithaca NY 14850, 
 Tel: (607) 257 1804
 skeshav@cs.cornell.edu


I am currently an Associate Professor in the Computer Science 
department at Cornell University. Before that, I spent
five years at AT&T Bell Laboratories.
This semester, I am teaching a course called Engineering Computer Networks.
I am teaching from a textbook I just completed, which will be published
by Addison-Wesley this December.


Most of my research is in
flow and congestion control,
mostly for connectionless networks (such as the Internet). 
The one line summary of my thinking is:
The one true religion is round-robin scheduling and packet-pair flow control.
Let me explain what that means.


Users can contend for a shared resource 
in one of two ways: first-come-first-served and round robin.
Unlike first-come-first-served, round robin scheduling automatically 
allocates fair shares of a resource to users and protects well-behaved users 
from hogs. If all queueing points in a network implement round-robin, 
then end-systems can determine their available fair share
service rate implicitly using the packet-pair 
technique.
They can then use the time series of rates to do stable and intelligent
flow control. Thus, round robin does implicit allocation of fair shares,
and packet_pair does implicit determination of the fair share for flow control.
In contrast, current proposals in the ATM Forum for flow control do neither
round robin (considered to be too expensive) nor implicit determination of
the rate (only possible with round robin). Maybe I was wrong the whole time ;-)


I have been working since 1991 in building ATM networks. One of them was 
Xunet,
a wide area ATM network that we built from scratch (routers, switches, all the 
software), which was operational from 1992 to 1996. The other is 
IDLInet in
collaboration with 
IIT Delhi, 
based on no-name PCs and equipment from Fore Systems
and Zeitnet.
IDLInet
source code is now in the public domain and is available from the 
Native-mode ATM home page.
The key feature in 
IDLInet 
is that the protocol stack is native-mode ATM, that is, an application
gets to write directly to an ATM virtual circuit. 
We also support an OS-independent signalling API that is SPANS compliant.


Finally, I have been goofing off building talking heads (facial animation)
and a snooping car (the car sends video in nv format on the MBONE, and can
be driven from a remote site over the Internet).


Links


Papers

Here is a link
to my papers. Most papers are available as postscript.

REAL

I have been building the REAL packet-level simulator since 1989
and still maintain it. It has been installed at over 300 sites
(I have no idea how many people actually use it).
Here is a link to 
REAL version 4.0. 
You can also get the simulator from here.
The latest version is version 4.0, which I released in Fall '93.
Version 5 is in the works, includes a Tcl-based GUI, and should be
out by the end of '96 (if all goes well).

Native_mode ATM Home Page

My Name

In the part of the world I come from (South India, Thanjavur District, to be
precise), people have only one name. They prefix it with their father's
only name (and, sometimes, the village name). 
There is no surname. Thus, my only name is Keshav, and my
father's name is Srinivasan. Unfortunately, when I fit this round peg into
the square hole of US custom, my first name is my last, which can be
confusing!

Quotable Quotes
""One ought, every day at least, to hear a little song, read a good poem,
and, if it were possible, speak a few reasonable words,""
Johann Wolfgang Von Goethe.

Last updated:
Tue Nov 12 10:38:11 EST 1996


",non-course
"  S. Kenneth Li Home Page  
 S. Kenneth Li 



 The road of success is always under construction.  

I'm a MENG from the

 Electrical Engineering  Department.


Since I'm working for Prof. Zabih of the
  CS Department 
, I have a place in the CS 
  Student Page 


This is where I came from:

 Engineering, University of Wisconsin-Madison 


 skl@ee.cornell.edu 

 skl@cs.cornell.edu 

 sli@sunlab.cit.cornell.edu 

 skl5@cornell.edu 
",non-course
"

coming into the clearing...


stepping out of the forest...
what's around the clearing


looking around you, you realize you must have walked much further than
you'd planned to.  there's a wide variety of trees surrounding you on
all sides, but especially oak trees.  the
weather seems fairly overcast, but you somehow can't figure out if
it's going to rain or snow.  perhaps it will do both?

off in the distance you can see a large mountain, where it's quite
clear that it is snowing.  no question about it.  

you hear birds chirping, quite near to where you are--of course, they
may be responding to the sounds inside the clearing. 

but the much much louder sounds are coming from a nearby
waterfall--you can't see it, but it's gotta be big.  you could follow the sound if you wanted--there seems to be a
path leaving that direction.

there are two other paths leaving the clearing.  one is labeled with a
sign that says: ""the hill
school.""  the other is labeled with the sign: ""the hell school."" 

there's also a small wormhole which seems to connect to a nearby
house.
presumably there's a lot of traffic between the two places? 


what's inside the clearing

inside the clearing are a couple of structures.  there's a 10' x 12' shack with a door that's falling off
and a completely modern glass house (with
no stones in front of it).

there's a pile of books, scores, magazines, and random papers scattered all throughout the
clearing as well.  it seems like there's some vague rhyme and reason
to it, but glancing at the topics, there seem to be a few on all sorts
of topics.  you figure that if you'd look at the most recently read books you'd probably have a better
idea of what makes the person in the clearing tick.

there's also a resume that you see.  it
seems somewhat off in the corner--presumably he has more important
things to worry about.

he seems kind of strange.
the guy in the clearing


he smiles over at you and says ""hello.""  he's about 5'8"" and is often
described as being way too thin, especially by his mother.  his most
distinctive feature is his hair, which is bright golden red and quite
long.  he looks vaguely elfin, but you've seen more elf-like people
before.  

(warning: links in next paragraphs not yet written!  i'll get there
soon...) 

more obvious is that he's always doing 15 things at once...he starts
telling you a story, but then stops and hums a tune.  then he starts telling you why
nicholas negroponte is a moron, but if
you've never heard of him, he starts talking to you about gay politics in late twentieth-century america.  then
he pauses and starts talking about some obscure theorem from theoretical computer science.

it's obvious that he's rather well read from listening to him, but he
tends to go on a bit much, so you start looking at his appearance
instead.

he's wearing mostly two colors, purple and a dark turquoise.
everything he's wearing seems to be either silk or linen, and contrasts nicely with his hair.  he
has on glasses as well.

there's a gold ring with an image
of a beaver on his right ring finger (the beaver is pointing away from
him).  on his left ring finger is a silver
ring with an ocean wave pattern on it.  he's also wearing a pewter pentacle around his neck, and
looks altogether more like a neo-hippie than someone who's as
classically intellectual-sounding as he sounds like he is.
other people who visit the clearing

dan starts talking about the people who occasionally visit and whom he
has spent time with.
brian
is an old friend from mit whom i used to live with when i was an
undergrad.  nowadays he works for pointcast, which is an internet news
provider.  
anca
mosoiu (pronounced /m schwa sh oi u/) is my best friend from back
when we were at mit.  i used to eat with her many times a week for two
and a half years, and we went to europe together the summer after we
graduated, in 1995.  oh, and i'm her inner child, by the way.  she
just quit working at one
wave. (don't blame her for that dreadful name.  actually, it used
to be business@web, and before that, it was object power.  feh.) 
daniel is
someone i've gotten to know quite a bit better over the last several
months; i think we met probably sometime last november, but we became
much better friends over the summer.  he's switched out of the ee
department, quite wisely, and is having much more fun as a multimedia
student in the dept. of communications.  for some reason, that's in
the ag school.  he also has a small internet business he co-owns with a friend
of his.

there used to be a link to perry finley's page here.  but there's not
anymore :-( instead, brian has some pictures of perry on his pictures page 


my dad works for  steelcase, which is
the largest manufacturer of office furniture in the world.  the r&d
server that they have on the web is kinda cheesy (it used to just have
the picture of the pyramid), but it is still a neat pic of the
building dad works in. 
tim is a guy i
used to sing with here at cornell.  he just left for japan for a program
called jet which hired him to teach english to high school students there.
in an ideal world i'll visit him next winter or so.
hani graduated
from mit this june and it couldn't have happened to someone who more needed
to get out of that place.  ack.  but he's a great guy even so.
nick is a
good guy who i met about a year and a half ago.  he's a lot cuter than
the somewhat blurry picture on his web page would indicate.

""we are the music makers, and we are the dreamers of
dreams.""--aphex twin

dan brown (snowman@cs.cornell.edu). last updated 9 oct 96


",non-course
"
 My autobiography 


What's Up

Keep on lookin. There will be lots more information on this ultra cool home 
page very soon.
Keep on lookin.


These home pages do take very long to setuup.

How are you doing

Ajay
Manish
Anuj
Mom and Dad

Department Of Computer Science

Search the Net
Entertainment Weekly

Cricket Ratings

 Ashish Soni  /  sonia@cs.cornell.edu 

",non-course
"
Scott Dawson's Pad








If you were using a forms-capable browser, this would be a lot better...


S
C
O
T
T
D
A
W
S
O
N
'
S




HOMEBASE














",non-course
"Paul Stodghill's Home Page
Paul Stodghill
stodghil@cs.cornell.edu

706 Rhodes Hall
607-254-8830
Affiliations

 Department of Computer Science., at
Cornell University.

 The Advanced Computing Research Institute (ACRI), in the Cornell Theory Center
 The Bernoulli Project

Interests

 Ultimate
 
	Hockey
 Scheme

",non-course
"


Scott Stoller's Former Home Page


Scott Stoller's Former Home Page


My Home Page has moved to 
http://www.cs.indiana.edu/hyplan/stoller.html

Last updated August 25, 1996.

",non-course
"
Sugata Mukhopadhyay's home page


 Sugata Mukhopadhyay 


 
Welcome to my home page!
 I am a graduate student in the  Department of
Computer Science  at  Cornell University.
I am working on  
Multimedia Systems  with  
 Prof. Brian Smith.

I am married to the most wonderful person on earth, Ritu.
 
 Spring 1996 
 I am taking  CS 516, 
High Performance Computer Systems ; and 
 
CS 612, Compiler Design for High Performance Architectures. 
 I am also taking NBA 550, Advanced Option Pricing Theory.
 I am the czar of the  Work in Progress Seminar 

  Previous Semesters  
 


   
   
   
   

   
   
   

 
How to contact me

Home phone:
(607) 687 7786
Work phone:
(607) 255 1149
E-mail
sugata@cs.cornell.edu
Address:
Hichory Estates (11E)
Owego, NY 13827

 
sugata@cs.cornell.edu



",non-course
"
 Home Page of Paul Sukhpal Sanghera 


 
 Paul  Sukhpal Sanghera 
  
 PhD Physics,        
  Carleton University, 1992. 
  Presently, M.Eng. Student, Computer Science 
     Cornell University, Ithaca, NY. 
 sukhpal@cs.cornell.edu  

 


 
    Background 
 
    M.Eng. Project 
 
   My Philosophy of Life   
 
    Resume
 
   Other Routes 










 The Clock is Ticking 




You will need a Java capable browser to view the animation!




",non-course
"

 Bilth Gater and the Galactic Empire 



Bilth Gater and the Galactic Empire

Written and Illustrated by Sumedh A. Kanetkar




Email: kanetkar@cs.cornell.edu


This is a series of weekly comic strips that I drew while interning at
Microsoft in the summer of '96.
The strips were posted weekly to the
intern social alias, and were read regularly by over 300 people. As the
summer progressed, I noticed that my artwork had begun leaking to the
full-time employees as well. Whether his highness, Lord Gater, Himself,
read them, I never found out...
Episode 1 - The First Day: This was the first strip
I drew up within a week of arriving in Redmond. I tried to persuade the
Microsoft newsletter to print it, but they perceived it as a PR problem
and declined. They didn't want Microsoft to be portrayed as the ""evil
empire."" I can understand their viewpoint, but as I told them, the comic
strip was an attempt to show how the company is viewed by many in the
outside world, and I personally had no bitter feelings towards either
Bill Gates or his corporation. Heck, I have really enjoyed my two summers
of work there, and I strongly recommend the internship program to anyone
interested in working in the industry.
This first strip makes fun of the ""New Employee Orientation"" (NEO) that
every employee has to suffer through. During this day-long session they
show you videos and fill you up with all kinds of MS trivia. They also make
you sign the non-disclosure agreeement (NDA). It would be fitting if they
made everyone stand at the end of the day, place their hands over their
hearts, and say the Microsoft Pledge of Alleigance - ""A computer on every
desk, in every home, running Microsoft software,"" but they don't.
Anyway...

Episode 2 - The Space Rooster
Episode 3 - The Rebel Threat
Episode 4 - Flame On!
Episode 5 - Lord Gater's Party (Part I)
Episode 6 - The Imperial Insignia
Episode 7 - Lord Gater's Party (Part II)
Episode 8 - Lord Gater's Party (Part III)


",non-course
"

 Kristen Summers 


 Kristen Summers 
 PhD Student, Cornell University 
 summers@cs.cornell.edu 
5132 Upson Hall 
607-255-5577
 Research Interests  
I work with the 
Information Capture and Access
research group on document analysis.  My
long-term goal is to provide support for
sophisticated electronic document manipulation
tools for indexing, browsing, linking, etc.
My primary interest is in discovering logical
structure in arbitrary electronic documents.
The goal is to take an electronic document
representation as input and return a hierarchy
of logical pieces of the document as output.
For example, given a scanned-in or postscript
version of a technical report, I would like to
be able to divide it into sections, paragraphs, etc.
Similarly, in a business letter, the address headings,
body, and closing should be identifiable.
This problem has two primary components:  
segmentation
(dividing the document into logical pieces) and
classification
(categorizing the pieces).
It also raises the questions of evaluation
(previous work differs in descriptions of the correct hierarchy), 
types of logical structures,
and theoretical limitations.
The task is relevant to two of Bruce Croft's
top 10
research issues for information retrieval
(in the 
November
1995 issue of D-Lib Magazine):
number 5, ""interfaces and browsing,"" and number 3,
""efficient, flexible, indexing and retrieval.""  Determining
logical structure enables flexible, hierarchical browsing; doing so
in a general way supports system flexibility and handling of
multiple document types.
 Papers 

Using Non-Textual Cues for Electronic 
Document Browsing
Co-authored with Daniela Rus.
In Digital Libraries:  Current Issues, 
Nabil R. Adam, Bharat K. Bhargava, and Yelena Yesha, editors.
Chapter 9, pp. 129 - 162.  Lecture Notes in Computer Science series.
Springer-Verlag, 1995.
Versions in:
	
""Geometric Algorithms and Experiments for Automated Document Structuring,""
	Mathematical and Computer Modelling, forthcoming.
	""Using 
	White Space for Automated Document Structuring,""
	Cornell University Computer Science Technical Report TR 94-1452.
	Proceedings of the Workshop on the Principles of 
	Document Processing, Seeheim, 1994.  (PODP '94)
	

Toward a Taxonomy of Logical Document Structures

Electronic Publishing and the Information Superhighway:
Proceedings of the Dartmouth Institute for Advanced Graduate Studies,
pp. 124 - 133, Boston, May 1995.

Donald B. Johnson Memorial DAGS Scholar
award for the best student paper, co-recipient.

Near-Wordless Document Structure 
Classification 
Proceedings of the International Conference on Document Analysis
and Recognition, pp. 426 - 456, Montréal, August 1995.




",non-course
"

Masafumi Suzuki




There would be an applet here if your browser suppoted Java 


Masafumi Suzuki
suzuki@cs.cornell.edu


Classes

Fall 1994

 OR&IE 516  Case Studies
OR&IE 520  Operations Research I:  Optimization I
OR&IE 560  Engineering Probability and Statistics II
OR&IE 580  Design and Analysis of Simulated Systems
OR&IE 599  Project

Spring 1995

OR&IE 523  Operations Research II:  Introduction to Stochastic Modeling
OR&IE 599  Project
CS417 Computer Graphics
CS418 Computer Graphics Lab

Summer 1995

CS410 Data Structures

Fall 1995

CS401/501 Software Engineering: Technology and Techniques

            CS414: Systems Programming and Operating Systems
CS631 Multimedia Systems 
            -->Project report
ELE E 445  Computer Networks and Telecommunications
NBA 609, MIS POLICY

Spring 1996

CS432 Introduction to Database Systems
NBA-610:Thriving on the Information Revolution
		--> Sector Web site
NBA 600, DATABASE MANAGEMENT
Independent Project:3D polygon display using Java --> Prototype



resume



",non-course
"
Jonathan Swartz's Home Page



 Jonathan Swartz 
swartz@cs.cornell.edu

I'm a Ph.D. student in the Department
of Computer Science at Cornell University. I spend a lot of my time here
developing

Rivl, a language for multimedia processing.

Here is my
address, phone number, etc.

A little humor to brighten your day

Jon's movie connection

Cool web sites


Last Modified: Mon Jan 16 14:40:10 EST 1995
 Jonathan Swartz /
swartz@cs.cornell.edu 
",non-course
"
Sunil Srivastava Home Page


Welcome to the Home Page of Sunil Srivastava
Master of Engineering Student
Computer Science Department
Cornell University




 Academic Classes
 TA Classes
 M.Eng. Project
 Personal Information
 Useful Links






Comments or questions about this web page? Send mail to sxsrivas@cs.cornell.edu.

",non-course
"

Szu-Wen Huang







Szu-Wen T. Huang

""Defender of Truth,
Champion of Justice,
and All-around Nice Guy.""




all me Steven.  Some years ago, nevermind how long exactly, I
arrived as a second son to a set of proud parents.  If this sounds
like Moby Dick to you, then let me assure you, I have no
intention of finding a ship to hunt a whale.  But I digress.
Brought up in Taiwan until the tender age of seven, my whole
family migrated south to the tropical islands of the Philippines.
There we made our home, and lived some fifteen years.  Here's
a picture of Mom and me when I was around
six years old.


thus became quite fluently bilingual.  As I love to read, the
poetry of the Tang Dynasty, the Arabian Nights - quite naturally,
the children's version, and a host of other stories somewhat 
fulfilled the Wen in my name which means 'Literature'.


class in grade seven was to set the course of my life.  I dove
right into the marvel that was a computer.  Four years later, I
entered the University of the Philippines
with that as my major, and very likely my career.


had found talent in me that draws me to the art and science of
computing, and unabashedly, knew I was quite good at it.  Was also
in College when I met her - and I she met.
In a whirlwind of happiness and peace three years and running, a
woman has become the most important part of my life, effortlessly 
defeating my hobbies of old with her love.


eeking a career more ideal, and higher paying to be blunt, I
enrolled in the Cornell University graduate program.  Thus far,
I have been rewarded with almost everything I have ever wanted and
worked for.  I am a lucky man.""

9 September 1995



Welcome to my home page.  To segregate myself from your everyday
geek, I'd like to think I'm a man of many interests.  Aside from
actually writing a C program, here's what I'd happily do in my
spare time:


 Read anything from Calvin and Hobbes
    to Unix Network Programming;
 Internet Relay Chat - I can generally be
    found as steven on 
LinuxNet;
 Building Lego® things (Of
    course I'm just practicing object-oriented design!);

 Building plastic models of weapons of war;
 Watching suspense-thriller films;
 Listening to the music of Sting,
    U2, and many others;
 Watch Sesame Street® or the
    Discovery Channel; and
 Railroad models, when I get rich enough.


In the field of computers, I also have a rather broad spectrum of
interests, though my studies have concentrated in the areas of
computer graphics and networking.  If you wish to be offended by
some blatant self-promotion, you may want to check out my
resumé.  I'm also highly
interested in Linux, a 
freely-available operating system for the Intel 80386 or compatible
computer.

My Master of Engineering project is a 
3-D Modeler for Blobby Models or Metaballs
under the supervision of Dr. Bruce Land.  I am currently involved 
in another course project involving a survey of techniques
in modeling human faces and a resolution-independent and
portable audio effects editor.



Last Modified:  31 October 1995
Szu-Wen T. Huang


",non-course
"
Tom Henzinger: HyTech
HyTech: The HYbrid TECHnology Tool
We have moved.
",non-course
"
Tom Henzinger
Thomas A. Henzinger:
I HAVE MOVED
Assistant Professor

Computer Science Department
Cornell University
Ithaca, NY 14853

Email: tah@cs.cornell.edu
Phone: (607) 255-3009
Fax: (607) 255-4428
Research
Formal support for the development and analysis of concurrent, real-time,
and embedded systems.
(Related research

at Cornell
and 

worldwide.)

Resume

Publications


Reactive modules: 
a formal methodology for the analysis of concurrent systems

Real-time logics and timed transition systems: 
a formal methodology for the analysis of real-time systems

Clock systems and timed automata: 
more formal methodology for the analysis of real-time systems

Hybrid automata: 
a formal methodology for the analysis of embedded systems

Bibliography: bibtex list of publications

Tools


HyTech: a symbolic model checker for linear hybrid systems

Courses


CS 611 (Fall 95): Advanced Programming Languages

Conferences


HYBRID 95: Verification and Control of Hybrid Systems

CAV 96: Computer-Aided Verification

Last updated on September 1, 1995.
tah@cs.cornell.edu
",non-course
" Takako M. Hickey's Homepage 

 Takako M. Hickey 

Email: takako@cs.cornell.edu
Office: 4157 Upson Hall
Phone: 607-255-1164
Fax: 607-255-4428



I am a Ph.D student in the Department of Computer Science at
Cornell University.  I am co-advised by

Robbert van Renesse and

Fred B. Schneider.


 Research Interests 

 Distributed Systems, Programming Environment, Resource Management
 The Horus Project
 Previous Life


 Other Interests 

 Social Psychology
 Backcountry
 Hockey
 Quotes


 Last Modified: Wed Nov 1, 1996 
",non-course
" Tim_Teitelbaum 



Tim Teitelbaum

Associate Professor

Department of Computer Science

Cornell University

tt@cs.cornell.edu


Research Interests

 
		Incremental Computation
 
		Transformational Programming
 Programming Environments
	 Language-Based Editors
	 Compilers
	 Attribute Grammars
	 Ada

Vita

Last updated 11/21/95.
",non-course
"
Thorsten von Eicken

 Thorsten von Eicken

Assistant Professor
4108 Upson Hall
Phone: 607-255-9188
Fax  : 607-255-4428
Email: tve@cs.cornell.edu


Projects

The U-Net architecture
provides a user-level network interface
for clusters of workstations. It offers low-latency
and high-bandwidth communication over high-speed LANs. The current
implementation uses Sun Workstations interconnected by ATM.

Active Messages.
Several projects are porting Active Messages to new platforms (including
the U-Net ATM cluster and the IBM SP-2 and extending the model to
non-SPMD programs.

Split-C is a simple extension
to C for parallel computing. Split-C has been ported to several new
platforms, including U-Net, shared memory multprocessors running SVR4, and 
the IBM SP-2.



Courses


CS314 Introduction to Digital Systems and Computer
Organization, Fall 1995

CS516 High-Performance Computer Architecture, Spring 1995

CS617 Frontiers of Parallel Systems, Fall 1994

CS614 U-Net User Level Network Architecture Guest Lecture, May
2nd 1995


Departmental Talks & Reports

1993-1994
Departemental Annual Report entry.
Fall Forum 1994 talk slides.
1992-1993
Departemental Annual Report entry.
Fall Forum 1993 talk slides.


Personal Web pages

TvE's pond (with real water, fish, and plants).
Tired of the firewall? Try my MacPPP
which generates the one-time password automatically without you ever
having to think about it (well, after a few months your passwords
suddenly run out and you have to run to 4119...)
and installation
instructions.


Selected Publications

U-Net: A User-Level Network Interface for Parallel and Distributed
Computing,
Thorsten von Eicken, Anindya Basu, Vineet Buch, Werner Vogels, 
CS-TR to appear, June 1995.


Low-Latency Communication over ATM
Networks using Active Messages.
von Eicken, T., V. Avula, A. Basu, V. Buch,
Presented at Hot Interconnects II,
Aug 1994, Palo Alto, CA.
An abridged version of this paper appears in IEEE Micro Magazine, Feb. 1995.


Active Messages: a Mechanism for Integrated Communication and
Computation. von Eicken, T., D. E. Culler, S. C. Goldstein,
and K. E. Schauser,
Proceedings of the 19th Int'l Symp. on Computer Architecture,
May 1992, Gold Coast, Australia.


Active Messages: an Efficient Communication
Architecture for Multiprocessors. von Eicken, T., Ph.D. Thesis,
November 1993, University of California at Berkeley.


Papers published at UC Berkeley
(The links lead to postscript versions of the papers.)


Parallel Programming in Split-C,
D. Culler, A. Dusseau, S. C. Goldstein, A. Krishnamurthy, S. Lumetta,
    T. von Eicken, K. Yelick,
Proceedings of Supercomputing '93,
November 1993,

TAM --- A Compiler Controlled
Threaded Abstract Machine ,
D. Culler, S. C. Goldstein, K. Schauser, T. von Eicken,
Journal of Parallel and Distributed Computing,
    Special Issue on Dataflow, June 1993.


Evaluation of Mechanisms for Fine-Grained Parallel Programs
    in the J-Machine and the CM-5
,
E. Spertus, S. C. Goldstein, K. Schauser, T. von Eicken, D. Culler,
    and W. Dally,
Proc of the 20th Int'l Symp. on Computer Architecture,
San Diego, CA, May 1993.

LogP: Towards a Realistic Model
of Parallel Computation ,
D. Culler, R. Karp, D. Patterson, A. Sahay, K. Schauser, E. Santos,
    R. Subramonian, T. von Eicken,
Proc. of Fourth ACM SIGPLAN Symp. on Principles and Practice
    of Parallel Programming,
San Diego, CA, May 1993.

Two Fundamental Limits on Dataflow
Multiprocessing ,
D. Culler, K. Schauser, T. von Eicken,
Proceedings of the IFIP WG 10.3 Working Conf. on Architectures
    and Compilation Techniques for Fine and Medium Grain Parallelism,
Orlando, FL, Jan 1993.

Active Messages: a Mechanism for
Integrated Communication and Computation,
T. von Eicken, D. Culler, S. C. Goldstein,and K. Schauser,
Proc. of the 19th Int'l Symposium on Computer Architecture,
Gold Coast, Australia, May 1992.

Compiler-controlled Multithreading for
Lenient Parallel Languages,
K. Schauser, D. Culler, and T. von Eicken,
Proceedings of the 1991 Conference on
    Functional Programming Languages and Computer Architecture,
Cambridge, MA, August 1991.

Fine-grain Parallelism with Minimal
Hardware Support: A Compiler-Controlled Threaded Abstract Machine,
D. Culler, A. Sah, K. Schauser, T. von Eicken, and J. Wawrzynek,
Proc. of 4th Int. Conf. on Architectural Support for
    Programming Languages and Operating Systems,
Santa-Clara, CA, April, 1991.

Analysis of Multithreaded Architectures
for Parallel Computing,
R. Saavedra-Barrera, D. Culler, and T. von Eicken,
Proceedings of the 2nd Annual Symp. on Parallel Algorithms and Architectures,
Crete, Greece, July 1990.


That's it...


",non-course
"

Úlfar Erlingsson's Page




Úlfar Erlingsson


 
Specification

I'm Úlfar Erlingsson, a Ph.D. student in
Computer Science at 
Cornell University. 
Apart from this, I enjoy being a somewhat incongruous
Icelander.
Below you can link to some more information on me and what I'm all about. 


Implementation

Background  
Where I'm coming from.
Current Activities  
What I'm up to at the moment.
Schedule  
Where I am at what times.
Research  
What real work I've got done.
Interests  
What I actually like doing.
Acquaintances  
Those I know.
Contact Info  
How to get in touch with me.




Please note: 
These pages are often out of date.
In general assume that all disclaimers apply.


",non-course
"

 QMG project 


 QMG: mesh generation and related software 

The QMG package does finite element mesh generation in two and three
dimensions.  The package includes geometric modeling software, the
mesh generator itself, and a finite element solver.  It is free software
downloadable from the Web.  QMG1.1 runs under Unix and Windows NT.


There are now two releases of QMG:

QMG1.0, released 5 May 1995, and
QMG1.1, released 20 November 1996.



Other useful websites for mesh generation and geometric software 
are:


 Robert Schneiders' 
mesh generation home page.

Ian McPhedran's page of
finite element resources on the Web.

The University of Minnesota Geometry Center's list of
software for computational
geometry.

Jonathan Shewchuk's 
Triangle package.


 Back to Vavasis's home page. 


Stephen A. Vavasis, Computer Science Department, Cornell University,
Ithaca, NY 14853, vavasis@cs.cornell.edu

",non-course
"

 Stephen Vavasis 


 Stephen A. Vavasis 


Associate Professor 
Department of Computer Science 
722 Rhodes Hall 
Cornell University 
Ithaca, NY 14853

email: vavasis@cs.cornell.edu 
phone: 607-255-9213 
fax: 607-255-4428

During the period 6/12/96 to 6/30/97, I am on
sabbatical at: 
MCS Division, Bldg 221 
Argonne National Laboratory 
9700 S. Cass Ave. 
Argonne, IL 60439 
email: vavasis@mcs.anl.gov 
phone: 630-252-6735 
fax: 630-252-5986 
Note change in area code effective 8/3/96.

My research interest is numerical analysis.  (You aren't
sure what numerical analysis is?  Please see the 
essay
by my colleague L. N. Trefethen.)
More specifically,
I am interested in:


Numerical optimization and complexity issues

Numerical methods for boundary value problems

Geometric problems arising in scientific computing

Sparse matrix computations


I have a few recent manuscripts available on-line:


S. Vavasis and Y. Ye, ``A primal dual accelerated interior
point method whose running time depends only on A''
(click here)

P. Hough and  S. Vavasis, ``Complete orthogonal decomposition
for weighted least squares''
(click here)

S. Mitchell and S. Vavasis, ``An aspect ratio bound for triangulating a d-grid
cut by a hyperplane''
(click here)

T. Driscoll and S. Vavasis,
``Numerical conformal mapping using cross-ratios and Delaunay triangulation''
(click here)

The QMG package

I have recently completed a software project on mesh generation for
the finite element method in three dimensions.  The software package,
called QMG, is available at the source code level by anonymous ftp.
With QMG you can construct polyhedral geometric objects with very
complicated topology (holes, internal boundaries, etc.) and
automatically create an unstructured
tetrahedral mesh for them.  
(The mesh generator is based on algorithmic work by Scott Mitchell and me.)
You can also solve an elliptic boundary
value problem (div (c*grad u)=0) on your domain.  The package is
written in C++ and Matlab and is distributed
for free at the source-code level (anonymous ftp distribution
began 5/5/95). 

QMG 1.1 was released on 20 November 1996.  QMG1.1 features many
improvements over QMG1.0, including a faster mesh generation algorithm,
VRML graphics, much cleaner C++ code, a boundary mesh generation algorithm,
compatibility with Microsoft Windows NT as well as Unix, and compatibility
with Tcl/Tk as well as Matlab.

Please
see the on-line documentation.

Vavasis's page from the 1995 annual report
Back to CS home page
",non-course
"

 Arun Verma's homepage 











 You need a Web browser which supports frames, e.g.
 Netscape 2.0 (or higher), to see these pages.




",non-course
"

 Vince Lee 








The browser that you are using is suck! Plz download an up-to-date one (e.g., Netscape 3.0) to 
read my page. Thanks.




",non-course
"

 E M Vitrano 


E M Vitrano Home Page





Hey, I'm just starting this thing - give me a break!




CS519 Internet Engineering Page
CS537 Advanced Database Page
CS631 Multimedia Page



Eric M. Vitrano  (vitrano@cs.cornell.edu)


",non-course
"

KOLLAs Home Ground









Hi there!!!
You are the visitor number to my home page. Are you not happy with that?



My contact info to transmit your thoughts

Friends & Foes

LINKS

A small collection of URL's of relevance to my life.  I used to maintain a large list of my favorite links but now I think that was a waste of time. 
If you are searching for something specific, you might try
Alta Vista,
Yahoo, or the
Inktomi


RESUME

In HTML
In Postscript
In Word Perfect
In ASCII


The current time here is





00:00:00. Go get a good browser. Your browser does not know java.



Dont you have a clock to see your time or do you wanna know what time it is around the world?


You will need a Java capable browser to view the animation!

""This Site is Under Construction""
Wondering why I have so many images and heavy files? Go get a T3 like me.




Note: This home page uses both JAVA and 
GIF89 animations.  No promises are made with regards to the quality of 
your visit using a browser which does not fully support these 
technologies.








",non-course
"Vlad's homely page
Vladimir Kotlyar
vladimir@cs.cornell.edu
 This is what I looked like in Fall of 1994 when 
David Bau and me were
teaching CS720. 






As you might have guessed, I am a graduate student in the department of  Computer Science at Cornell
University. 
I work with 

Prof Keshav Pingali . 
My research interests are Compilers for High Performance Architectures. 
In particular, I am working on the parallelization of sparse matrix codes. 
This work is part of the Bernoulli project. Other members of my group 
are 

Paul Stodghill and

Indu Kodukula


Publications


 Here is what Henry Kissinger has once said about lawyers and professors: 

My friends in the legal profession like to remind me of a comment by a
British judge on the difference between lawyers and professors. ""It's
very simple"", said Lord Denning. ""The function of lawyers is to find a
solution to every difficulty presented to them, whereas the function
of the professors is to find a difficulty with every solution."" Today
the number of difficulties seems to be outpacing the number of
solutions -- either because my lawyer friends are not working hard
enough, or because there are too many professors in the government.



Support privacy on the net through strong encryption 



",non-course
"

Vijay Menon



Vijay Menon 
Graduate Student 
vsm@cs.cornell.edu 

Office Address:            Home Address
  706 Rhodes Hall            301 Maple Ave
  Cornell University         Apt. K1
  Ithaca, NY 14853           Ithaca, NY 14850

  (607) 254-8830             (607) 273-6463
  FAX: (607) 255-4428



 Last updated August 25th, 1996

",non-course
"


Wei Chen's home page


Wei Chen 
 
5132 Upson Hall 
Department of Computer Science
Cornell University
Ithaca, NY 14853
(607) 255-5577  
weichen@cs.cornell.edu

 I am currently a third year Ph.D student at Department of Computer
Science, Cornell University. I received my Bachelor
and Master Degree in Department of Computer Science,
 Tsinghua University, Beijing, 
 China

My interest, academically, is in distributed
systems, fault tolerance, and algorithms. I am now working with Professor
 Sam Toueg 
on failure detection and group membership in
partitionable network systems.  


My interests in my spare time,
if I do have any spare time, are 
  Soccer  
  NBA 
  NFL
 

and more ...



My Resume  


My Bookmarks 

 Last updated August 30, 1996

",non-course
"


		weitsang homepage
	





w e i t s a n g
h o m e p a g e
..................



p e r s o n a l

where  am  i from
what  tv  i watch
what movie i like



c r e a t i o n
 
web pages i wrote
pictures  i  draw



a c a d e m i c
 
x-windows & motif
computing  theory
home page of  vim



i n t e r n e t

searching the web
coolest web sites
shareware archive



m a l a y s i a
 
newspapers online
universities site
",non-course
"
  Wen-Hung Kao  






















 Wen-Hung Kao (Glavine)  
 Address: 201 Maple Avenue  Apt. #E19A Ithaca, NY 14850 
Telephone: (607)256-7925 
  Some photos.....









 Academic Background 
 B.S.graduated from 
	 National Taiwan University Computer Science 1995
	 M.S.plan to graduate from 
	 Cornell University Computer Science  1996
	
	
 Habits 
 sports :
 	Basketball, billiards, table tennis, bowling, tennis, swimming, volleyball etc. 
	 others : 
 	singing, driving, dancing etc....
 	except studying
	 favorite teams :
 	Orlando Magic, Atlanta Braves, SF 49ers
	 favorite players :
	 Anfernee Hardaway , 
	 Tom Glavine






 Technical skills 
 understanding in (distributed) operating system, computer graphics, 
	    multimedia, computer networks, database system ,computer vision and financial calculation
	 extensive C, C++, Windows, Tcl/tk, Java programming
	 Multimedia final Project paper :
	
	Warping & morphing in RIVL 
 partial result of my MEng project :
	
	WebPainter

 Jobs in interest 
 Marketing related to any field of computer science
	 Software development
	 My resume 






 



 This page is still under construction...  
email me.....
  whkao@cs.cornell.edu

",non-course
"

William W. Lee





















You Are Visitor No.

William W. Lee








 
 
Hi, I am from New Jersey, Exit 8A, 10 minutes away from 
Princeton.
I am a Master student in Computer Science
at Cornell University.
I have a BS degree in Computer Engineering
and Mathematics/Computer Science
from Carneige Mellon University, where I did
research projects for Engineering Design Research Center,
and Robotics Institue.
Then I spent a year writing an operating system, XSROS, on HPUX for 
Motorola at
Ft. Lauderdale, Florida.
Besides sleeping and school, I work on projects like Optimal Parallel MPEG Encoder , CORNELLopoly, $500 Network Computer, and Database Sector Analysis with my research partners at the Systems Lab.






I compete in 4.0 USTA
tennis 
tournments in South Florida 
but I could never win.  Somehow it is the parties that I enjoy after weekly matches.  There 
are many very beautiful places to play tennis in 
South Florida. 
Here are some of my faviorite ones:

Boca Raton
Key West (Gets very hot)
Coral Springs (Where I lived)







I have a collection of piano concertos from Beethoven, Chopin, Gershwin, Liszt,
Mendelssohn, Mozart, Rachmaninoff, Ravel, Tchaikovsky.  I also collect violin
concertos.  As you can probably guess by now, I am a ""concerto"" type of guy.
I even wrote my graduate school application essay based on a piano concerto.
That's probably one of the reasons why I got rejected by my own school.




Fall 1995 Classes

CS501 Software 
Engineering: Technology/Technique
CS513 Formal Methods
CS631 Multimedia Systems
CS709 Computer Science Colloquium
CS717 Cool Software Tools Seminar
 --- Purify/Quantify/WARTS Presentation 
CS790 Optimal Parallel MPEG Encoding Research 

Spring 1996 Classes

CS514 Practical Distributed Computing
CS515 Practicum in Distributed Computing and CORNELLopoly

CS516 High Performance Systems and $500 Network Computer
CS790 Optimal Parallel MPEG Encoding Research 
NBA610 Thriving on the Information Revolution and Database Sector


Cool Links
_Leap to a copy frog
Ski Server


Identity Crisis Test
Weather Underground

Inktomi Search Engine
Question Of The Week Archives




Last Updated: 27 Nov 1995

Campus Address:

201 Maple Ave. Apt #E19C

Ithaca, New York 14850

(607) 256-9497
wwlee@cs.cornell.edu



",non-course
"

Welcome to Xichun(Jennifer) Guo's home page


 Welcome
 
Xichun(Jennifer)  Guo 

 

323 Upson Hall 
Department of Computer Science
Cornell University

Ithaca,
NY 14853
Office: (607) 255-1041 
Home:   (607) 273-6700  
xichun@cs.cornell.edu




I am currently a 

Master of Engineering Student  in 

Computer Science  at

Cornell.
I received my Bachelor and Master Degree from Department of Computer Science,
 Zhejiang University, 
Hangzhou, 
 Zhejiang, 
 China. 




Web Site 


 JavaWorld

Sun

High School Alumni.

Zhejiang University Alumni


MEng. Project 
 Phong Shading and Gouraud Shading. 


Current Courses Spring 1996


CS417 Computer Graphics 
EE546 High Capacity Information Networks(ATM)
NBA600 Database Management 


Courses Taken in Fall 1995


CS631 Multimedia Systems

CS501 Software Engineering

CS414 Operating System
EE445 Computer Networks and Communication



Bye
 

",non-course
"


Topics of Interest















",non-course
"


Cachet Related Project: Efficient Incremental Computation


Deriving Incremental Programs

A general systematic transformational approach to improving the efficiency 
of computation.

Theme

Program analysis and transformations for  incrementalization .

Cachet 

An incremental-attribution-based interactive system that uses
systematic program analysis and transformation techniques to derive
incremental programs written in a functional language.

Selected Publications
 Y. A. Liu and T. Teitelbaum.

Systematic derivation of incremental programs.
Science of Computer Programming, 24(1):1-39, February, 1995.

 Y. A. Liu and T. Teitelbaum.

Caching intermediate results for program improvement.
In Proceedings of the ACM SIGPLAN Symposium on
   Partial Evaluation and Semantics-Based Program Manipulation,
pages 190-201, La Jolla, California, June 1995.

 Y. A. Liu, S. D. Stoller, and T. Teitelbaum.

Discovering auxiliary information for incremental computation.
In Proceedings of the 23rd Annual ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages,
St. Petersburg Beach, Florida, January 1996.

 Y. A. Liu.

CACHET: An interactive, incremental-attribution-based program 
  transformation system for deriving incremental programs.
In Proceedings of the 10th Knowledge-Based Software Engineering 
  Conference,
Boston, Massachusetts, November 1995.  IEEE Computer Society Press.

 Y. A. Liu.

Principled strength reduction. July 1996.

People
Y. Annie Liu
Tim Teitelbaum
Keywords 

incremental computation, incremental programs, efficiency improvement,
optimization, program analysis, program transformation, Cachet



Y. Annie Liu yanhong@cs.cornell.edu 
Last updated 7/14/96 

",non-course
"


Yanhong Annie Liu's home page


Yanhong Annie Liu

 I am a Post-Doctorate Associate working with Professor  Tim Teitelbaum.

Research Interests 

General systematic approaches to improving the efficiency of
computations.  Program analysis and transformation techniques for
incremental computation and parallel/concurrent computation.
Applications in optimizing compilers, language-based interactive
systems, algorithm design, program development, software system
organization, and software maintenance.

Selected Publications and Talks
Ph.D. Dissertation
 Yanhong A. Liu.  Incremental Computation: A Semantics-Based
Systematic Transformational Approach, Cornell University, Ithaca,
New York, January 1996.  Also appeared as Cornell Technical Report TR
95-1551, October, 1995.  abstract
Journal Publication
 Y. A. Liu and T. Teitelbaum.

Systematic derivation of incremental programs.
Science of Computer Programming, 24(1):1-39, February 1995.

Refereed Conference Publications
 Y. A. Liu, S. D. Stoller, and T. Teitelbaum.

Discovering auxiliary information for incremental computation.
In Proceedings of the 23rd Annual ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages, pages 157-170,
St. Petersburg Beach, Florida, January 1996.

 Y. A. Liu.

CACHET: An interactive, incremental-attribution-based program
  transformation system for deriving incremental programs.
In Proceedings of the 10th Knowledge-Based Software Engineering
  Conference, pages 19-26,
Boston, Massachusetts, November 1995.  IEEE Computer Society Press.

 Y. A. Liu.
Selectively caching intermediate results for incremental computation.
In Proceedings of the 4th International Conference for
  Young Computer Scientists,
pages 367-374, Beijing, China, July 1995. Peking University Press.

 Y. A. Liu and T. Teitelbaum.

Caching intermediate results for program improvement.
In Proceedings of the ACM SIGPLAN Symposium on
  Partial Evaluation and Semantics-Based Program Manipulation,
pages 190-201, La Jolla, California, June 1995.

 Y. A. Liu.
Deriving incremental programs.
In Proceedings of the 3rd International Conference for 
  Young Computer Scientists,
Beijing, China, July 1993. Tsinghua University Press.

 Y. Liu, B. Zhang, and J. Wang.
A formalized uncertainty reasoning model that combines qualitative
  partitions and quantitative descriptions in multi-factor combination
  problems.
In Proceedings of the 3rd International Fuzzy System Association
  World Congress,
Seattle, Washington, August 1989.

 Y. Liu, B. Zhang, and J. Wang.
The quantitative and qualitative inexactness and reasoning in
  multi-factor combination problems.
In Proceedings of International Symposium for 
  Young Computer Professionals,
Beijing, China, August 1989. The Publishing House of Surveying and Mapping.

Technical Reports
 Y. A. Liu and T. Teitelbaum.

Incremental computation for transformational software development.
Technical Report TR 95-1499, Department of Computer Science, Cornell
  University, Ithaca, New York, March 1995.

 Y. A. Liu and T. Teitelbaum.

Caching intermediate results for program improvement.
Technical Report TR 95-1498, Department of Computer Science, Cornell
  University, Ithaca, New York, March 1995.

 Y. A. Liu and T. Teitelbaum.

Systematic derivation of incremental programs.
Technical Report TR 94-1444, Department of Computer Science, Cornell
  University, Ithaca, New York, August 1994.

 Y. Liu and T. Teitelbaum.

Deriving incremental programs.
Technical Report TR 93-1384, Department of Computer Science, Cornell
  University, Ithaca, New York, September (revised October) 1993.

 Y. Liu and T. Wakayama.
Incremental line breaking algorithms.
Technical Report, Xerox Webster Research Center, 
Webster, New York, August 1992.

Talks
 
  Discovering Auxiliary Information for Incremental Computation. 
   The 23rd Annual ACM SIGPLAN-SIGACT Symposium on
  Principles of Programming Languages, 
  St. Petersburg Beach, Florida, January 23, 1996.

 
  CACHET: A System for Deriving Incremental Programs. 
   The 10th Knowledge-Based Software Engineering Conference, 
  Boston, Massachusetts, November 13, 1995.

 Selectively Caching Intermediate Results for Incremental Computation.
  The 4th  International Conference for Young Computer Scientists, 
  Beijing, China, July 19, 1995.

 Caching Intermediate Results for Program Improvement. ACM
  Symposium on Partial Evaluation and Semantics-Based Program
  Manipulation, La Jolla, California, June 23, 1995 

 Systematic Derivation of Incremental Programs. Kestrel Institute, 
  Palo Alto, California, July 1, 1994.

 Systematic Derivation of Incremental Programs. Dagstuhl-Seminar on 
  Incremental Computation and Dynamic Algorithms, International Conference
  and Research Center for Computer Science, Schloss Dagstuhl, Germany, May
  5, 1994.

 Deriving Incremental Programs. The 3rd International Conference
  for Young Computer Scientists, Beijing, China, July 15, 1993.

 Automatic Derivation of Incremental Programs. System Science
  Laboratory, Xerox Webster Research Center, Webster, New York,
  July 6, 1992.

Software Systems and Documents
 CACHET:
  An incremental-attribution-based interactive system that
  uses systematic program analysis and transformation techniques to
  obtain efficient incremental programs.
  Department of Computer Science, Cornell University, 1993-present.

 OGGEB - An Expert System for the Evaluation of Oil and Gas
  Generation in Basins, with Principle Report, Implementation
  Techniques, Test Report, Usage Manual, and Expert Knowledge Summary.
  Research Institute of Oil Exploration and Development Science
  (CD-RIED) and Tshinghua University, Beijing, 1988-1990.
  Co-authored with J. Song, T. Sun, D. Huang, X. Zhu, B. Zhang, and J. Wang.

Current Projects
  Deriving Incremental Programs
  A general systematic transformational approach to 
  improving the efficiency of computations.

  Composing Efficient Programs
  Optimization and selection techniques for 
  building efficient programs from components.



Department of Computer Science
4141 Upson Hall
Cornell University
Ithaca, NY 14853
(607) 255-5579 (Office)
(607) 255-4428 (Fax)
(607) 277-6468 (Home)
yanhong@cs.cornell.edu
 Last updated November 18, 1995


I have moved on August 17, 1996 to


Computer Science Department
201E Lindley Hall
Indiana University
Bloomington, IN 47405
(812) 855-4373 (Office)
(812) 855-4829 (Fax)
(812) 337-0426 (Home)
liu@cs.indiana.edu
http://www.cs.indiana.edu/people/l/liu.html

",non-course
"

Home Page of Yi-Cheng Huang


Yi-Cheng Huang

5151 Upson Hall
 Department of Computer Science
 Cornell University
 Ithaca,  NY 14853, U.S.A.
Tel: (607) 255-3042
Fax: (607) 255-4428
Email:  ychuang@cs.cornell.edu




I am a  graduate student in the 
 Department of Computer Science at 
 Cornell University.

Favorite Links
 Online Documents
Courses
Project

Accessed by

Visitors

Last modified: Tue Nov  5 12:37:22 1996

 Yi-Cheng Huang (ychuang@cs.cornell.edu) 


",non-course
"

Yoo Sun Chung's Home Page


Welcome Everybody !!!
My name is Yoo Sun Chung

You are the 
th
visitor since April 12, 1996











What am I doing now?
 I am studying Computer Science for Master degree at Cornell University now.
Please check my school. 
Master of Engineering, Computer Science
Cornell University





Where am I from?
 Originally, I came from Seoul, Korea   .
  After I graduated from high school in Korea, I came to America for studying. 
 The schools I went in Korea
Chu-gae Kindergarten (1976 - 1977)
         Chu-gae Elementary School (Mar 1977 - Feb 1983)
         Sang-myoung Junior High School (Mar 1983 - Jul 1983)
         Kang-jin Junior High School (Aug 1983 - Feb 1986)
         Myoung-sung Women's High School (Mar 1986 - Feb 1989)





After I came to America...
 I got B.S. degree for Computer Science at George Mason University
in Virginia on May 1994.




The happiest thing in my life
 I married on April 29, 1995.  My wonderful husband, Sok Hwa Chang, works for
SAIC in Virginia as a computer programmer.
Here is my husband's picture.
 Would you like to see my beautiful moment? (Only if you have JAVA available browser)

Click Here!






 What do I do when I am free? 
 I play the keyboard. (Actually I like to play the piano better than
    keyboard, but my piano is in Korea, not here) 
 I listen to the music.
      What kind of music?  

I like Korean pop music. (I love Shin, Seung-hoon and Lee, Moon-sae)           
           I like classical music, too.
           And so on, and so forth
       

 I browse the World Wide Web 
     Some Useful Links
        
 Are you interested in  JAVA  ?
           You can search what you want using 
this search engine.
 Korean Online Newpaper
          
 Hangook Ilbo 
 Chosun Ilbo 
 Joongang Ilbo 






Would you like to hire me? 
  Here is my resume.
 Resume for Word Perfect Version(*.wpd)




This is my MENG project (I am still working on it) 

 Title : Image Processing Java Applet




Yoosun's Personal Infomation

2250 N.Triphammer Rd. #S1B
Ithaca, NY 14850
Phone    : 607-257-4164
Fax      : 607-257-4164
Emergency: 703-370-1724 (Sok Hwa Chang)
Email    : ychung@cs.cornell.edu
(This email is forwarded to ysc2@cornell.edu and yooschung@aol.com automatically)





This Web-Page is under construction!!!

last modified on November 5, 1996



",non-course
"


Yaron Minsky's Home Page





Yaron Minsky 
Graduate Student 
yminsky@cs.cornell.edu





Department of Computer
Science 
4139 Upson Hall 
Ithaca, NY 14850 
Cornell University 
Phone: (607) 255-4934 Fax: 4428



109 Comstock Place  Apt #3 
Syracuse NY 13210 
(315) 423-9907





I am a CS graduate student, and I'm currently focusing on
fault-tolerant distributed computing. In particular, I am working on the
Tacoma project, which is an attempt to build operating system support for
fault-tolerant agent-based computing.

Flapdragon is no longer new (it's been over a year now) and I no longer live
there, but it's still a great veggie coop (which I crash at often nowadays...)
Here's the slightly outof date 
 
webpage.  It does, however, have a timely notice that Flapdragon has an
opening for starting 12/15!  If you need a place to live, I highly recommend
it.

 I'm a big Go fan, though I don't get to play much.  Go is an ancient
Chinese game with extremly
simple rules but very complicated and satisfying strategy. 
If you'd like to learn more, here's a great  intro page. 
Also, if you want to play Go on the internet (yes, I know it's not
as good as a game with a real live person in front of you, but it's better than
nothing.) and you're on a Unix machine, take a look at cgoban.  It's the nicest go
board program I've seen. And, it makes it trivially easy to play on the
net. 
 I am newly married, and my new wife, Lisa, and I, are living in Syracuse,
where she is going to medical school (at the 

SUNY Health Science Center, 
uniquely qualified as the only medical school within an hour and twenty minutes
of Cornell) and loving every bit of it.
 


Some favorite
poems:

La
Figlia Che Piange 
The
Idea of Order at Key West 
Advice
for Good Love 
Resume


Some interesting
links:


 The Movie Critic 

  I was very impressed by this.  It's a good example how fairly simple AI
  technology can be used to great effect.  This site has an AI engine that takes
  in your ratings of movies, and by comparing that to the ratings of others,
  comes up with recommendations.  I found it almost alarmingly good (in contrast
  to Firefly, which tries to do the same thing, but fails miserably.)
  
 
  Yahoo's Yellow Pages.   
  You put in your home address, and they give you directions to the seven
  closest bakeries.  It's not perfect, but it's better than the other web
  yellow pages I've tried (i.e., bigbook and bigyellow.)  I don't know why they
  don't advertise it more.
The
  New York Times. I don't know why the do it, but it's a great read and
  it's free. Plus, it saves all that paper....(note, if it takes you too
  much time to download, try the text-only
  page)
Slate
  Magazine. As much as I hate to admit it,Microsoft does something right
  every now and then. Thoughtful and well executed. But what do you expect
  with Michael Kinsley running it.
Red
  Hat Linux ...A great company which makes Linux easy to install and
  maintain.

Ithaca
  movie listings 
Amazon.com
  books a very solid discount virtual bookstore. Let's hope they don't
  run the local booksellers out of town.
My 
  brother . 


The following is my PGP public key. 
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: 2.6.3
Comment: Processed by Mailcrypt 3.4, an Emacs/PGP interface

mQBtAzGjOHoAAAEDALFh77LG9JMDG+xO+3VHtNCl9PaiF7Bwd0COtM79h2zIsMf0
gcE7kuIe0GNP9q2q8SWfZbjWxdtyF5t7cGilgJqVeA+rb39yLf+ZWqujcioCZOec
4v+Zx/EYKbNYxtnc8QAFEbQoWWFyb24gTS4gTWluc2t5IDx5bWluc2t5QGNzLmNv
cm5lbGwuZWR1PokAdQMFEDGjOHoYKbNYxtnc8QEBm3sC/3G3Kga7r7sok5R9iN8n
OAZIHjas/uB+gCjs1Aj2j8XNoertfeyLbVHpn0jTSweAbOGzkxAiXP9Nhv/wUmjg
ZsnvI0SpWk7rvZG2d4rojsWmC9+e8IgSq0sbE+22BsBP7w==
=jcwz
-----END PGP PUBLIC KEY BLOCK-----



",non-course
"

Yuichi Tsuchimoto's Home Page


Yuichi Tsuchimoto's Home Page


Course Work
Fall 1996

(Current Semester)



CS414: Systems Programming and Operating Systems


CS501: Programming Languages and Software Engineering

Spring 1996


CS412: Introduction to Compilers and Translators

CS413: Practicum in Compilers and Translators


CS664: Machine Vision

Fall 1995



CS472: Foundations of Artificial Intelligence

CS473: Practicum in Artificial Intelligence


CS481: Introduction to Theory of Computing


I am currently looking for a job in the United State.
Resume: 
GIF format, 
PostScript format.


Yuichi Tsuchimoto
e-address: yuichi@cs.cornell.edu
http://www.cs.cornell.edu/Info/People/yuichi/



Last modification: November 2, 1996
http://www.cs.cornell.edu/Info/People/yuichi/welcome.html



",non-course
"
Cornell Active Messages

Cornell Active Messages 

Cornell Active Messages Implementations

Active Messages for U-Net
A source-code release of U-Net Active Messages is part of the
general U-Net release. It conforms to the GAM-1.1 spec below. For more
information, see the U-Net project pages.
Active Messages for the IBM SP-2 An object-code
release of SP2 AM for AIX 3.2 is available in gam-1.0.aix3.tar.Z. It conforms to the
GAM-1.1 spec below.  Please read README and INSTALL files in the distribution for instructions
on using SP2 AM.  For more information contact: Chi-Chao Chang, Grzegorz Czajkowski, Thorsten von Eicken.

Please read the ReleaseNotes.aix3 file
to find out about the changes from the previous version. The current
version of SP2 AM is 1.0f. 

Also, there is a release for AIX 4.1.: gam-1.0.aix4.tar.Z. The major difference
between the AIX 4.1 release to the 3.2 is a modified
/usr/lpp/ppe.poe/lib/us/libmpci.a, which is included in the
distribution.  Please read the documentation in the package for
details.

We are interested in knowing who is currently using SP2 AM.  Please
click here to send a brief
note letting us know something about you, your organization, and the
uses you intend for SP2 AM.

Selected Publications on Active Messages

Low-Latency Communication on the IBM
RISC System/6000 SP Chi-Chao Chang, Grzegorz Czajkowski,
Chris Hawblitzel, and Thorsten von Eicken, to appear in ACM/IEEE
Supercomputing '96, Pittsburgh, PA, November 1996.



Abstract:

The IBM SP is one of the most powerful commercial MPPs, yet, in spite
of its fast processors and high network bandwidth, the SP's
communication latency is inferior to older machines such as the TMC
CM-5 or Meiko CS-2. This paper investigates the use of Active Messages
(AM) communication primitives as an alternative to the standard
message passing in order to reduce communication overheads and to
offer a good building block for higher layers of software. 
The first part of this paper describes an implementation of Active
Messages (SP AM) which is layered directly on top of the SP's network
adapter (TB2).  With comparable bandwidth, SP AM's low overhead yields
a round-trip latency that is 40% lower than IBM MPL's.  The second
part of the paper demonstrates the power of AM as a communication
substrate by layering Split-C as well as MPI over it. Split-C
benchmarks are used to compare the SP to other MPPs and show that low
message overhead and high throughput compensate for SP's high network
latency.  The MPI implementation is based on the freely available
MPICH version and achieves performance equivalent to IBM's MPI-F on
the NAS benchmarks.
Design and Performance of Active Messages on the 
SP-2
Chi-Chao Chang, Grzegorz Czajkowski, and Thorsten von Eicken,
Cornell CS Technical Report 96-1572, February 1996.

Abstract:

This technical report describes the design, implementation, and
evaluation of Active Messages on the IBM SP-2.  The implementation
benchmarked here uses the standard TB2 network adapter firmware but
does not use any IBM software on the Power2 processor.  We assume
familiarity with the concepts underlying Active Messages.  The main
performance characteristics are a one-word message round-trip time
of 51.0 us and an asymptotic network bandwidth of 34.3 MB/s.
After presenting selected implementation details, the paper focuses
on detailed performance analysis, including a comparison with IBM's
Message Passing Layer (MPL) and Split-C benchmarks.

Generic Active Message Specification, Version 1.1.


The Generic Active Message Specification, Version 1.1 defines an Active
Messages interface which is portable across a variety of parallel machines.
Implementations are available for the
U-Net ATM cluster,
the
Meiko CS-2,
the
HPAM FDDI ring,
the
Paragon,
and the

SP-2.


Low-Latency Communication over ATM Networks
using Active Messages.
Thorsten von Eicken, Veena Avula, Anyndia Basu, Vineet Buch,
Presented at Hot Interconnects II,
Aug 1994, Palo Alto, CA.
An abridged version of this paper appears in IEEE Micro Magazine, Feb. 1995.


Slides from Hot Interconnect talk.

Abstract:

Recent developments in communication architectures for
parallel machines have made significant progress and reduced the
communication overheads and latencies by over an order of magnitude as
compared to earlier proposals. This paper examines whether these
techniques can carry over to clusters of workstations connected by an
ATM network even though clusters use standard operating system
software, are equipped with network interfaces optimized for stream
communication, do not allow direct protected user-level access to the
network, and use networks without reliable transmission or flow
control.

In a first part, this paper describes the differences in
communication characteristics between clusters of workstations built
from standard hardware and software components and state-of-the-art
multiprocessors. The lack of flow control and of operating system
coordination affects the communication layer design significantly and
requires larger buffers at each end than on multiprocessors. A second
part evaluates a prototype implementation of the low-latency Active
Messages communication model on a Sun workstation cluster
interconnected by an ATM network. Measurements show
application-to-application latencies of about 20 microseconds for small
messages which is roughly comparable to the Active Messages
implementation on the Thinking Machines CM-5 multiprocessor.


Active Messages: a Mechanism for Integrated Communication and
Computation.
von Eicken, T., D. E. Culler, S. C. Goldstein, and K. E. Schauser,
Proceedings of the 19th Int'l Symp. on Computer Architecture,
May 1992, Gold Coast, Australia.


Abstract

The design challenge for large-scale multiprocessors is (1) to
minimize communication overhead, (2) allow communication to overlap
computation, and (3) coordinate the two without sacrificing
processor cost/performance.  We show that existing message passing
multiprocessors have unnecessarily high communication costs.  Research
prototypes of message driven machines demonstrate low communication
overhead, but poor processor cost/performance.  We introduce a simple
communication mechanism, Active Messages, show that it is
intrinsic to both architectures, allows cost effective use of the
hardware, and offers tremendous flexibility.  Implementations on nCUBE/2
And CM-5 are described and evaluated using a split-phase shared-memory
extension to C, Split-C.  We further show that active messages
are sufficient to implement the dynamically scheduled languages for
which message driven machines were designed.  With this mechanism,
latency tolerance becomes a programming/compiling concern.  Hardware
support for active messages is desirable and we outline a range of
enhancements to mainstream processors.


Active Messages: an Efficient
Communication Architecture for Multiprocessors. von Eicken, T.,
Ph.D. Thesis, November 1993, University of California at Berkeley.


Projects at other sites

Active Messages
in the Berkeley NoW project


For further information contact
Thorsten von Eicken

",non-course
"Cornell CSRVL


Cornell Robotics and Vision Laboratory

Welcome to the Web niche of the Cornell Robotics and Vision Laboratory. 
cp: No match.
 match.
rrently under development; please don your hard hat.
Questions and comments should be directed to 
mdw@cs.cornell.edu. Thanks.

About the CSRVL 
The Cornell Computer Science Robotics and Vision Laboratory is located 
at Cornell University in Ithaca, N.Y. We have three main areas of
research:

Computer vision (Prof. Daniel Huttenlocher)
Multimedia applications of computer vision (Prof. Ramin Zabih)
Robotics, 
including distributed manipulation and micro-electro mechanical systems (MEMS) 
(Prof. Bruce Donald)


Here is a pictoral tour of the CSRVL.

  Current Projects
The following projects are active at the CSRVL.  They are supervised by
Ramin Zabih.

 Automatic Detection and
Classification of Scene Breaks in Digital Video.
 MPEG Browser, allowing
scene break and global motion-based queries.
 Real-time ATM Video Source,
transmission of full-frame video over ATM for parallel computation on
platforms such as the Cornell/NYNET ATM Cluster.
 A number of projects involving high-performance imaging applications.
These include parallel implementations in 
Split-C for
U-Net and 
symmetric multiprocessors.


We have a list of potential Master's
projects, maintained by 
Justin Miller.


Most of our work has been done under Unix, but we are currently
considering a move to WindowsNT.  There is a discussion of some of the
issues
here.
We are hopeful that this move will be supported by 
Microsoft.


  Selected Publications
The following is a list of selected papers of research done at the
CSRVL. Many of these papers are available via 
anonymous FTP.

Many publications from the Cornell Robotics and Vision Laboratory are 
available from the 
Cornell CS Tech-Reports server. (See below.)
Only those papers not available from the CS-TR server
are listed here.




 Program Mobile Robots in Scheme (B. Donald and J. Rees) 
Proc. IEEE International Conference on Robotics and Automation
Nice, France (May, 1992), pp.  2681-2688.


 
On the Complexity of Computing the Homology Type of a Triangulation 
(B. Donald and D. Chang), 
Revised MS based on the paper IEEE Symposium on the Foundations of 
Computer Science  San Juan, (October 1991), pp.  650-661.



Information Invariants for Distributed Manipulation (B. Donald, J.
Jennings and D. Rus) in  The First Workshop on the Algorithmic 
Foundations of Robotics, A. K. Peters, Boston, MA. ed. R. Wilson and
J.-C.Latombe (1994). 


 
Information Invariants in Robotics (B. Donald)
Revised MS based on a paper submitted to  Artificial Intelligence.


Automatic Sensor Configuration for Task-Directed Planning (B. Donald,
A. Briggs),  Proceedings 1994 IEEE International Conference on 
Robotics and Automation, San Diego, CA (May 1994).



Sensorless Manipulation Using Massively Parallel Microfabricated Actuator
Arrays,
K.-F. Böhringer, B. R. Donald, R. Mihailovich, and N. C. MacDonald, 
 Proc. IEEE International Conference on Robotics and Automation, 
San Diego, CA (May, 1994).



A Theory of Manipulation and Control for Microfabricated Actuator Arrays,
K.-F. Böhringer, B. R. Donald, R. Mihailovich, and N. C. MacDonald, 
Proceedings of the IEEE Workshop on Micro Electro Mechanical Systems, 
Oiso, Japan (January, 1994).


 
A Computational Approach to the Design of Micromechanical Hinged Structures
(extended abstract),
K.-F. Böhringer, 
Proceedings of the ACM/SIGGRAPH Symposium on Solid Modeling and Applications
, Montréal, Quebéc, Canada (May, 1993).



Some other papers are listed 
here.


  Technical Reports by Author
These lists are generated dynamically by the Cornell CS-TR Server.
Here is the  CS-TR server index, 
where you can search for technical reports by author, title, and keyword.
  
Böhringer, Karl
Briggs, Amy
Brown, Russell
Donald, Bruce
Huttenlocher, Daniel
Jennings, Jim
Leventon, Michael
Rucklidge, William
Rus, Daniela

  People at the CSRVL

Karl F. Böhringer
Scott Cytacki
Bruce Donald
      (associate professor)
  Pedro Felzenszwalb
Daniel 
      Huttenlocher (associate professor)
  Ryan Lilien
Michel Maharbiz
Justin Miller
Greg Pass
Daniel Scharstein
Aaron Stump
  Rob Szewczyk
Fernando ""Joe"" Viton
  Justin Voskuhl
Ed Wayt
Matt Welsh
Greg Whelan 
  Ramin Zabih 
      (assistant professor)
  <l",non-course
"





HORUS DISTRIBUTED COMPUTING ENVIRONMENT


HORUS DISTRIBUTED COMPUTING ENVIRONMENT

 Kenneth Birman (ken@cs.cornell.edu)
 Robbert van Renesse (rvr@cs.cornell.edu)


Cornell's

Horus  effort has developed a programming environment for reliable
distributed computing.  During the last year, Horus was used to demonstrate
groupware and fault-tolerance over high performance networks, and was found
to offer higher performance than other similar systems.  Novel features of
Horus are its flexible software architecture, in which applications 
pay only for features that they use, and support for virtually synchronous
process groups, a technology that we developed in our prior work on the
 Isis 
Toolkit, which has become a significant commercial success.  Horus also offers
a fault-tolerant
 security
and privacy  technology, which we view as an important
research advance.

During 1995, we will be extending Horus to provide extremely low latency,
high performance

real-time  capabilities.  Our approach combines elements of
a communication technology called
Active Messages
with a multi-media playback
system called
Continuous Media.  By the end of the year, we expect to 
demonstrate high speed interactive applications with remote multimedia
servers, such as might be used in remote telemedicine applications or video
on demand systems.  All of this will retain the existing fault-tolerance and
security options of Horus, and its virtual synchrony programming model.

Prior work on
 Isis 
has created a substantial user base, and we expect
rapid uptake of Horus within this community as it matures.  Isis users span
a wide range of industries, including telecommunications systems, financial
trading systems, stock market automation, factory-floor process control for
discrete electronic component manufacture, air traffic control, and space-based
communications system management and control.  Applications of Isis are being
explored in several branches of the military, as well as the NSA and other
non-military government branches.  Among the more visible military efforts is
the Naval Hiper-D project, which is exploring the use of Isis in a new system
that prototypes technologies for future enhancements of the AEGIS battle
radar system.  The more demanding applications in this user base would benefit
from access to Horus, and our initial plan is to make it possible to migrate
Isis applications to Horus with few changes, thus benefiting this community
in a direct way.  Technology transition has occured through licensing agreements
with Isis Distributed Systems Inc., a subsidiary of Stratus Computers.  However,
all of our Cornell work is also available to researchers at no fee, and is
described through detailed publications and programming manuals.

Looking to the future, we hope that a mixture of Isis and Horus technologies
will permit us to develop some of the very demanding applications that will be
seen in next-generation groupware and planning systems.  The illustration below
shows such an application: a military mission control and planning system 
that integrates data from a variety of space, air and ground resources and
uses this to coordinate actions of various theatre assets.   Systems of this
sort will demand the utmost in performance, reliability and security, while
also tolerating failures and rapidly reconfiguring to respond to changing 
demands.  Success in our project will thus impact a wide range of both civilian
and military technology efforts.



Dept. of Computer Science / Cornell University / ken@cs.cornell.edu

",non-course
"

Information Capture and Access project


Information Capture and Access

The information capture and access research group works on ways
that computers can locate information in the ever increasing volume of
online data, determine its structure, and extract the information for
human users.  The group was founded by John Hopcroft and Jim Davis
in 1992.

Current areas of research

Extracting structured material from online documents when the
structure is not explicit in the document - e.g. extracting
information presented in tabular form into a relational database.

Constructing summaries and overviews of collections
of texts.

Construction of a nationwide library of computer science
technical reports.  We have begun digitizing the Cornell Computer
Science technical report collection, in order to make the work more
accessible on the Internet.  The collection is available through a WWW server.  In addition to
its utility to the general CS research community, We use this
document collection as test material for our research in information access.


 The group consists of Cornell researchers Dean Krafft and visiting
scientist Jim
Davis as well as a number of graduate and undergraduate students.

 
Fall 95: The project is not active any longer.  - JRD

Publications

James Allan et al. Information
Agents for Building Hyperlinks, Proceedings of the 2nd Conference on
Information and Knowledge Management, 1993.



",non-course
"
Cornell MediaNet Project


MediaNet: A High Performance Platform for Network Media Processing

MediaNet combines 3 technologies developed by researchers at Cornell to
develop a flexible, high performance testbed for storing, transporting, 
processing, and using multimedia data.  MediaNet combines:


 U-Net: User level network architecture.
User level access to the network dramatically improves performance 
and facilitates the development of new communication protocols
The order-of-magnitude improvement in LAN communication
makes parallel computations on workstation clusters practical.

  CM-Horus: Group communication
primitives for multimedia.
We are adapting an industrial strength group communication tool, Horus,
to multimedia applications.
Such secure and reliable group communication primitives are critical for
advanced military and commercial multimedia applications

 CMT: Toolkit approach for 
reliable distributed audio/video applications.
CMT is a portable toolkit for building applications that include
audio and video, facilitating the rapid prototyping of multimedia
applications. 



Funding for the project is provided under contract N00014-95-1-0799 from
the DARPA Information Technology
Office

For further information contact Thorsten
von Eicken or Brian Smith

",non-course
"Cornell Nuprl Automated Reasoning Project

 Nuprl Project 

 	Introduction to Nuprl
 	Nuprl Theory/Theorem Browser
					(Designed and written by Rob Vaughn)
 			Nuprl 4.2 theories and articles
 			Some of Nuprl 4.1 theories and articles
 	Nuprl User Documentation
 	Related Publications and WWW Links
 	CS611 class notes
 		How to run Nuprl under Linux and GCL
 	Announcements.
 	Suggestions and Feedback
 
 
Help with Nuprl/WWW Browser Main Index 
 Nuprl Project / nuprl@cs.cornell.edu 

Curious how many links to this page are out there? Just ask
AltaVista!
",non-course
"  Cornell Modeling and Simulation Project Home Page  






  Cornell Modeling and Simulation Project 
 Enormous effort is currently expended in creating scientific
software, particularly for simulating physical systems defined on
complex geometries, and when using advanced computing hardware.  The
goal of the SimLab project is to reduce this effort by bringing
together technologies such as geometric modeling, symbolic
mathematics, numerical analysis, compilation/code generation, and
formal methods to create tools that raise the semantic level
at which it is possible to create scientific software.



  Overview of the Project 
  The SimLab Software
Package 
 Selected Research Activities: 

  Collaborative Mathematics Environments, a research proposal [a postscript version]
 
Guaranteed-Quality Mesh Generation 
  Microstorage
Architecture 
  The Weyl computer
algebra substrate 
  SPL, a high-level
programming language for synthesizing scientific software 
 The
Chains Algebraic-Topological Programming Language 

Selected Presentations:

  The SimLab Component of the
ARPA/NIST MADEFAST Collaborative Design and Manufacturing Exercise.
 [longer version] 
  New Directions in
Systems Research.  Richard Zippel's presentation on some new ideas
on how systems research should proceed.  Includes brief discussions of
non-contemporaneous communications, microstorage architecture, and the
use of program transformations.

  The Chains
Programming Language.  A language for computing with ``complex
topological systems,'' such as engineering models, numerical
algorithms, etc.  Rick Palmer.


  People 
  Selected Publications and Reports


 Paul Chew / chew@cs.cornell.edu 
",non-course
"

CUCS IBM SP-2

Computer Science IBM SP-2

Using the CUCS SP-2

The machine is called granita. The eight nodes are granita1
through granita8.
If you have a CUCS login, you can use the SP-2.
Log into granita1 or granita2 which we've designated as
interactive nodes. Shells installed: 
sh, bsh, csh, ksh, tcsh, bash, tsh. If you experience problems
during your first login, try to remove operating-system specific stuff
from your shell configuration file (for example, AIX does not have
the arch command; you can use uname instead). 
The file /usr/lpp/bos/README contains 
information
about the release of AIX used on our SP-2. In addition to man
you can use InfoExplorer to get more information about commands
and usage of the machine. To use this program, set up your remote display 
properly 
and type info.
Use poe to run parallel jobs that use neither Active
Massages nor Split-C (and info -l pe
or man poe to read more about poe).
Read below about how to run parallel programs that use Active Messages
or Split-C.

More information about:

IBM SP-2
hardware.
Cornell Theory Center SP-2.


Homegrown software

In general, local software is installed in /usr/u/sww. Be
sure that /usr/u/sww/sp2/bin and 
/usr/u/sww/sp2/gnu/bin are in your path.


Split-C
Split-C is a simple extension to C for
parallel computing. It provides a global address space though global
pointers which can be dereferenced just like regular pointers.
Split-phase assignment statements allow programmers to hide the latency
of remote accesses by overlapping computation and communication.
Examples and makefiles can be found in 
~sww/sp2/split-c-bench/cu-bench.

Before working with Split-C, source 
~sww/sp2/etc/sp2-setenv. Users of non-csh shells
should execute commands in ~sww/sp2/etc/sp2-setenv-non-csh.
To compile Split-C programs, create a Makefile
(look at samples in various directories in 
~sww/sp2/split-c-bench/cu-bench) and type gmake.
You must include Make.split-c in your Makefile!
Split-C programs are run in the same way as
Active Messages programs, i.e. using amr scripts
located in /usr/u/sww/sp-2/bin. For example, to run a program
foo on 3 processors type amr3 ./foo
Debugging Split-C
To debug a Split-C program, the following steps need to be done:

 include split-c/debug.h
 insert splitc_debug() as the first statement to be executed after
splitc_main()
 compile and run your program as described in the previous section
 you will see the following message in node 0 (most commonly run on
granita1): Debugging Split-C -- hit enter to continue:""
 before hitting return, log onto the node you want to debug (if you
want to debug the master node, open a new shell)
 go to the directory where your program source is located
 run gdb
 inside gdb, do: file am_run, and then
attach pid, where pid the
the proc id of the am_run process on the node being debugged
 hit return on node 0 to let computation proceed
 once you've attached gdb to am_run, am_run is stopped by gdb, and
you can set breakpoints, look at stack frames, etc.

Active Messages
Active Messages is a low-overhead communication layer
that offers high-performance communication on many parallel machines.
A native Active Messages layer (SP2AM) is now available for the SP-2.
The main performance characteristics of SP2 AM are a one-word round-trip
latency of 51 us and an asymptotic network bandwidth of 34.3 MB/s.

The SP2AM library is found in /usr/u/sww/sp-2/lib/libsp2gam.a
and the header file is in /usr/u/sww/sp-2/include. Before
running programs that use Active Messages, 
source ~sww/sp2/etc/sp2-setenv and read
/usr/u/sww/sp-2/gam-1.0/doc/RunningPrgms. 
The amr scripts are located also in 
/usr/u/sww/sp-2/bin.
MPI
MPI is a popular
message passing interface for portable parallel programs.  We have an
implementation of MPI (based on the MPICH library) running over
Active Messages on the SP-2.
The header files are located in /usr/u/sww/sp-2/include.
The library file is located in /usr/u/sww/sp-2/lib.
The easiest way to compile and link is with the script file ""ampicc"" (which
is built on top of xlC):

ampicc -O3 foo.c -o foo

You can also compile MPI programs with xlC, gcc, and split-cc (please look
at the examples
in the directory ~sww/sp2/ampi/examples for information about this).
MPI programs are run exactly like
ordinary Active Messages programs (i.e. ""amr4 foo"").
Be sure to source ~sww/sp2/etc/sp2-setenv.





Other software
Software available on granita1 and granita2 also includes 
tcsh, bash, C Set ++ (xlC), Fortran (xlf), xpdbx, X11, matlab. 
GNU software installed in
~sww/sp2/gnu includes 
emacs, gmake, gcc, g++, gdb, bison. Some of it is 
replicated locally in /usr/local/gnu/bin.

Problems

If you experience difficulties with the SP-2, please contact the SP-2
czar 
Grzegorz Czajkowski.


",non-course
"
Cornell Split-C

Cornell Split-C 

Cornell Split-C Implementations

Split-C for U-Net
A source-code release of U-Net Split-C is in preparation.  It is
implemented on top of U-Net Active Messages
For more information contact Thorsten von Eicken.
Split-C for the IBM SP-2 A source-code release of
Split-C for the IBM SP-2 is in split-c-distr.tar.Z. It is implemented
on top of SP2AM. For more information contact
Chi-Chao Chang,
Grzegorz Czajkowski, or Thorsten
von Eicken.
Split-C for SVR4 shared memory multiprocessors
A source-code release of Split-C for Sun multiprocessors running
Solaris is in preparation.
For more information see Matt
Welsh's information page.


Selected Publications on Split-C

Parallel Programming in Split-C. D. Culler, A. Dusseau, S.
C. Goldstein, A. Krishnamurthy, S. Lumetta, T. von Eicken, K. Yelick,
Proceedings of Supercomputing '93, November 1993.

Abstract



Projects at other sites

Split-C
home page at Berkeley.


For further information contact
Thorsten von Eicken

",non-course
"




The U-Net pages have moved. Your browser should redirect in a second.
If not, try http://www2.cs.cornell.edu/U-Net/Default.html.


",non-course
"
Zeno Research Group





Zeno: Cornell's Multimedia Research Group 




    The People

    The Mission

    The Projects

    The Papers

    The Software

    Multimedia Curricula Development

    Potpourri

    Directions







",non-course
"



UTCS Home Page





General Information

 
	Faculty Recruiting 1996-97



 
	Department Overview
 
	Research Groups
 
	Related Programs
 
	Academic Information

	(Admission Requirements, Course Descriptions, Catalogs)
	
 
	Department Publications
 
	Computing Facilities

 Upcoming Events 

 
	Public calendar
 
	Seminars (utcs.talks)
 
	Visitor Schedules

Pages and People

 
	Classes
 
	Personal Pages
 
	Student Organizations
 
	Alumni Links
 
	Finding People
 
	Faculty/Staff Directory



The University



WWW Information


gripe@cs.utexas.edu


",non-course
"

Adam Seligman's home page


Adam Seligman's home page










 Click here to see if I am logged on.


I am a gradual student in UT-Austin's CS program, and I run a
weekly happy hour for the department.

This is my only claim to fame, my undergraduate thesis.  I specified
the type rules and an operational semantics of the OO core of C++.
It's available as a gzipped dvi file
or a gzipped postscript file.  Let me know
what you think of it.
 Here's how to get in touch with me:
Email adams@cs.utexas.edu.
Call me at (512) 860-3225.
Page me with email at
1815205@pagemart.net.

Spy on the graphics lab here.
The lab phone number is (512)471-9598
Read our Progressive VRML paper.




Yes, I am a news junkie.  Here's where you can get a fix from
Reuters at Yahoo.
Alternatively, you could check out the 
Nando Times.


",non-course
"Agapito Sustaita
 Agapito Sustaita 
The University of Texas at Austin

Cognitive Science Interests

- Machine Learning in Language Acquisition (CHILL, specifically)
- Connectionism
- Commonsense reasoning

Schooling

Ph.D. Computer Science, University of Texas at Austin. (hopefully)
M.S. Computer Science, Texas A&M University, College Station.
B.S. Computer Science, University of California, Santa Barbara.

Miscellaneous


Postal Address
The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX  78712-1188 



e-mail: agapito@cs.utexas.edu
phone: 479-1370

",non-course
"UT Artificial Intelligence Laboratory
UT Artificial Intelligence Laboratory

The Artificial Intelligence Laboratory at
The University of Texas at Austin
has a distinguished history and a large number of excellent faculty and
graduate students.

U.S. News and World Report (3/18/96) ranked our AI program 5th in the nation.

The AI Lab is closely linked with the
 UT Computer Science Department.


 Faculty 

 Bob Boyer
       --- Automated Theorem Proving


       Robert L. Causey
       ---  Logic and philosophical foundations
 Benjamin Kuipers
       ---  Qualitative Reasoning
 Vladimir Lifschitz
       --- Reasoning about Action
  Risto Miikkulainen
       ---  Neural Networks
 Dan Miranker --- Rule-Based Systems
  Ray Mooney
       --- Machine Learning
 Gordon Novak ---
      Automatic
          Programming,
      Physics
          Problem-Solving.
  Bruce Porter --- 
      Multi-Functional
          Knowledge Bases

 Emeritus Faculty 

 Woody Bledsoe (deceased Oct. 4, 1995) ---
 Automated
   Theorem Proving 
I had a Dream (1984 AAAI Presidential
        Address). 
 Robert F. Simmons --- In Memoriam

 Postdocs 

 Peter Clark
 Art Souther

 Technical Reports and Software 

FTP directories are currently available for:


 AI Lab
         Technical Reports
 
         Automated Theorem Proving Technical Reports
 Kuipers
 Miikkulainen
 Mooney
 Novak
 Porter


Pointers to Other AI Labs and AI Funding Agencies

Contact: novak@cs.utexas.edu

",non-course
"





Ajita John








Ajita John



PhD Candidate, 
Parallel Programming Group,
Department of Computer Sciences,
University of Texas at Austin,








Hello !

 My Research: 
I am working on a system for automatic parallelization. The programming
framework is based on constraints, which are compiled to parallel
procedural programs. 

 My Advisor: Professor J.C. Browne

My Papers


My work uses the translation routines of the 
CODE Parallel Programming System


If you want to contact me ...



POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9735 (my office, TAYLOR 139)

FAX	+1 512.471.8885





ajohn@cs.utexas.edu





",non-course
"





Vicki L. Almstrum @ UTCS Home Page











Vicki L. Almstrum





About Me

I am an educator and a computer scientist.  I am very interested in 
understanding how people learn what they learn.  I am particularly interested
in the learning of mathematical logic and formal methods.  My doctoral
research was on the topic of Limitations in the Understanding of Mathematical
Logic by Novice Computer Science Students.

I am a lecturer at the University of Texas at Austin.  In addition, I
spent the fall semester of 1995 teaching in Uppsala Sweden.  My 
home page
there is a link into that university.

Other interests include encouraging others to excel in mathematics and computer
science, gardening, travel, crafts such as sewing and woodworking, etc.  
Here's a picture of me with my hubby, Torgny Stadler.



Check these sites out!!:

 
ITICSE '97:  Conference on Integrating Technology 
into Computer Science Education
June 2-4, 1997 (Working groups June 1-5)
Uppsala, Sweden




Other pages that I maintain:

 Classes I teach at UT Austin

 The field of Computer Science Education
(includes research methods, evaluation ...)
 Mentoring Issues
 Some interesting jumping-off points


[This area suffers from spurts of construction frenzy!!]

Home pages for organizations to which I belong:

SIGCSE 
ACM's Special Interest Group on Computer Science Education
SIGSoft 
ACM's Special Interest Group on Software Engineering
ACM 
The Association for Computing Machinery
IEEE
The Institute of Electrical and Electronics Engineers
CPSR
Computer Professionals for Social Responsibility


Connections to other home pages:

UT Austin Computer Sciences    UT Austin    Web Texas    Elsewhere





To Contact Me
 Office: 
 Department of Computer Sciences C0500 
 TAY 2.124, University of Texas at Austin 
 Austin,   TX 78712 USA 
 +1 512.471.7316 (CS main office) 
 +1 512.471.9730 (direct, but seldom there) 
 fax: +1 512.471.8885 

 Home: 
 +1 512.459.8678 
 fax:  +1 512.459.6068 (not always connected; need to forewarn me and leave plenty of time!)
 
 Email address:

almstrum@cs.utexas.edu
 



almstrum@cs.utexas.edu



",non-course
"

 Hung Hing Anthony Pang's home page
Hung Hing Anthony Pang

	Office		: UA9 Rm. 4.118 
	Office hour 	: Monday/Wednesday, 10:30-11:30 am.
	Email 		: anthony@cs.utexas.edu anthony@cs.ust.hk



	information for CS375 compiler course


",non-course
"

Aruna's homepage 

Aruna Addala


Currently:


graduate student
The University of Texas at Austin 
Department of Computer Sciences 
Taylor Hall 2.214
Austin, Tx 78712 


Education:


Bachelor of Engineering in Computer Sciences
S.J. College of Engineering
Mysore


Work Experience:

Lecturer, Fall 1992 to Fall 1994     
Department of Studies in Computer Sciences
University of Mysore
India


I Come From:
Mysore city
India


To Contact Me:


Email  aruna@cs.utexas.edu

Voice  512 418 9647
 

",non-course
"





Home Page for Ashis Tarafdar









Ashis Tarafdar



About Me

I'm just about getting round to letting my existence be known.
Patience, please!

To Contact Me


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9740 (my office)

FAX	+1 512.471.8885



ashis@cs.utexas.edu



",non-course
"Roberto Bayardo's home page
Roberto Bayardo
 Ph.D. Candidate  (Expected completion date: Fall 96!!!)  
Department of Computer Sciences 
The University of Texas at Austin    
 Currently I am also working for  MCC within the  InfoSleuth project. 

 Research Interests 

 Query processing
 Active and expert database systems
 Data mining 
 Constraint satisfaction


My thesis advisor is  Prof. Daniel P. Miranker. 

Some of my  research papers are on-line,
along with a  toolkit for generating
and solving exceptionally hard SAT instances. 
Contact Information

 E-mail address:
 bayardo@cs.utexas.edu
 Campus mailing address:
 University of Texas at Austin
 Dept. of Computer Sciences
 Taylor Hall, rm. 141 (C0500)
 Austin, TX  78712

 History 

 S.B. in Computer Science and Engineering, 
      MIT, 1991.
 S.M. in Electrical Engineering and Computer Science, 
      MIT, 1991, working at the 
      Center for Coordination Science.


This is hit number

 since March 9, 1996.

",non-course
"


Bert Kay




Bert Kay
Research 
Reasoning with and refining imprecise models of physical processes.


An overview
of my research 
My vita

My (network-retrievable)
papers. 
My dissertation entitled Refining Imprecise Models and Their Behaviors. [Abstract]  

Fun Stuff

Sonia and
Nina's page 
Drink of
the Month - Springbank 25 Scotch
Drinks
of Months Past 

Contact Information

Email address: 
bert@cs.utexas.edu 
Office: 
Taylor Hall 5.114, (512) 471-9576 
Address: 
Department of Computer Sciences 
The University of Texas at Austin 
Austin, TX 78712 



",non-course
"
 home page for Bhanu 







Welcome to Bhanu's   homepage














This is my son Akhil Reddy







Thanks for visiting my homepage !! You are visitor number 
.

School
 The University of Texas at Austin
M.S. Computer Science Third  Semester 

Courses




CS 384M Multimedia Systems - Dr. Harrick Vin




CS 388L Introduction to Mathematical Logic - Dr.Vladimir Lifschitz 




  
MIS 381 Datacommunication and Networks - Dr.Anitish Barua

  
CS 352 Computer Systems Architecture - Dr. Schwetman




I

<!--img src=""/users/tammy/Gifs/blacline.gif"" alt=""[line]""->



<!--img src=""/users/tammy/Gifs/blacline.gif"" alt=""[line]""->



<!--img src=""/users/tammy/Gifs/blacline.gif"" alt=""[line]""->

 
Term project of Database Management
",non-course
"Michael Bogomolny
Michael Bogomolny's CogSci Advert
 
 
(although this is not a picture of me, sometimes it is how I feel 
after reading our articles)


 currently in first semester of Computer Science Ph.D. program, 
University of Texas at Austin
 B.A. in Physics and Computer Science, Amherst College, 1994


Research Interests
Note: I intend to work with Jenefer Husman on risk averse decisions for my final project.


Risk averse decisions   
If I were to bet you a quarter on the outcome of a coin toss, 
you would probably accept the bet. 
If I were to bet you $1000 on the same coin toss, 
you would probably reject the bet. Why do people reject fair bets? 
Well, there's a sound economic theory involving maximizing utility 
and the law of diminishing returns that explains this one. 
However, this does not explain why people, 
when asked the same question formulated in both a risk taking 
and a risk preventing manner, will respond differently.  
Here's an example from our beloved Tversky and Kahneman, taken almost verbatim
from ""The Framing of Decisions and the Psychology of Choice"" (Science, 1981):  
Imagine that the US is preparing for the outbreak of an unusual disease which 
is expected to kill 600 people. Two alternative programs to combat the disease have been
proposed. Assume that the exact scientific estimate of the consequences of the programs
are as follows:  
Problem 1: [N=152] 
If program A is adopted, 200 people will be saved. [72%] 
If program B is adopted, there is 1/3 probability that 600 people will be
saved, and 2/3 probability that no people will be saved. [28%]  
Problem 2: [N=155] 
If program A is adopted 400 people will die. [22%] 
If program B is adopted there is a 1/3 probability that nobody will die, and 2/3 
probability that 600 people will die. [78%]  
Which one of the two programs would you favor? 

 Analog vs digital
If humans' brains are made of neurons and neurons fire or not 
depending on the level of electrochemical charge built up at 
their axons does that make a brain analog? (My biological 
foundation here is shaky, by the way, so go ahead and scream 
at me if my hypothesis is wrong.) If computers transfer 
information over a bus and a particular wire has either high 
or low voltage that is then interpreted as 0 or 1, does that 
make computers analog as well?

 Accurate processing with inaccurate outcomes 
Sometimes we simply come up with the ""wrong"" answer. We make 
mistakes in subtraction while balancing our checkbook, or ""remember"" 
an invalid telephone number. (Or maybe she gave me a number that 
wasn't her real telephone number? But that's another story...) 
Nevertheless, we would be hard pressed to point to a misfiring of a 
neuron to account for this error. Can correct processing lead to 
incorrect results? (Is human cognitive processing 'sound' or even 
'complete'?) (REMINDER: Make those quotes italicized.) 


Classes
(append ""Introduction to"" to all these courses)

Graduate Computer Science Research

Cognitive Science

Aritificial Intelligence

Mathematical Logic
Topology (Ghrist)

Operating Systems

(Add my 6 cogsci papers so far and the AI symbolic differentiator, 8-puzzle, 
and theorem prover.)




Contact Information

 Email:  bogo@cs.utexas.edu or, better yet, send me a  postcard
 Phone: (512) 453-4955
 Postal address:

4200 Wilshire Parkway 
Austin, TX  78722 


Update Information
This page was written on 10/30/96 using the text editor ""vi"". It was last updated on 11/22/96.
(Insert empty promises about ""under construction"" and ""will be updated soon"" here.)


For this ad, we were supposed to list some 
hidden 
talents
definition of quantum bogodynamics
definition of bogo-sort
While you're there, feel free to look up bogosity, bogometer, bogus, bogon, bogon filter, bogon flux, bogue out, bogotify, autobogotiphobia, blinkenlights, and Lasherism. I am pleased to say that I or my work are in not way connected with these stupidities.
",non-course
"

Home Page of Robert S. Boyer


Home Page of Robert Stephen Boyer
 Professor, Computer Sciences, Mathematics, and Philosophy
Departments, University of Texas at Austin

How to reach me

Paper mail:  Bob Boyer, Computer Sciences Dept., Univ. of Texas,
Austin, TX 78712, USA

Email: boyer@cs.utexas.edu

FAX: +1 512 471 8885

Physical locations

Classes
Curriculum Vitae

Personal data
Education
Publications
Honors
Jobs
Graduated Ph. D. students
The Boyer-Moore Prover, also known
as Nqthm
1981 photo

 Recommended reading 


Project Vote Smart Web


The QED project



My views on undergraduate education in computer science



        John McCarthy's web page


The Moffett building controversy


NY Times Article About McCune's Robbins Algebra Result and
some 
technical details.



Verification of the floating point division algorithm for AMD's new K5 microprocessor

 
UT's new and wonderful software licensing policy, which permits
the use of the Gnu Public License with close to zero administrative
overhead.  A short course on how
this works. And 
much more about intellectual property at UT.

 The
great books, various enumerations thereof. Ok, I confess to being a
canon thumper.


The possible ending of tenure at some U. S. universities

Standard disclaimer Naturally, nothing on my web pages should
be taken as representing the official position of the University of
Texas at Austin or any other part of the government of the State of
Texas.  (Furthermore, to steal a joke from Peter Deutsch, my having a
web page on a government-owned computer should not be taken as an
indication that I endorse everything that the government does.)

Formal methods have always been risky to use


``Peano was one of the first to use what we now call symbolic logic.
He introduced, for instance, the use of the symbols `(E x)' to mean
`there is an x such that'; and he habitually wrote out all of his
lecture notes in his new symbolism.  He was teaching at a military
academy at the time, and his students were so incensed by his
formalistic approach to mathematics that they rebelled (despite his
promises to pass them all) and got him fired.  Subsequently he found a
more congenial setting at the University of Turin.'' --  Gödel's
Incompleteness Theorems, Rudy Rucker, p. 289.


The Death of Fundamental Science?


""`Fundamental science is on the verge of extinction.' said Harold W.
Kroto of Britain's Sussex University, who shared the 1996 chemistry
prize with Robert F. Curl and Richard E. Smalley of Rice University in
Houston, for their discovery of carbon atoms bound in the shape of a
soccer ball."" -- From the article ""Scientists lament loss of funding,""
Associated Press, December 10, 1996, Daily Texan.



Up

Up to the University of Texas at Austin Computer Sciences Department.

",non-course
"James C. Browne

 
James C. Browne

Regents Chair in Computer Sciences  
Professor of Physics 
Professor of Electrical and Computer Engineering 

B.A. (1956) 
Hendrix College

Ph.D. (1960) 
University of Texas at Austin

Honors and Awards

 Fellow, British Computer Society
 Fellow, American Physical Society

Areas of Interest

Parallel computation with the major focus on parallel programming,
high level specification languages and integration of computer science
with application areas 
Summary of Research

I have been working on parallel programming for more than ten
years. The Computationally Oriented Display Environment (CODE), an
abstract declarative graphical environment for parallel programming,
has evolved through three generations. Ongoing research includes
methods for optimization of parallel computation structures at high
levels of abstraction, integration of parallel structuring through
data partitioning into the generalized data flow model of CODE,
debugging in the graphical/visual environment, compositional
approaches to parallel programming and the addition of intelligence
process control to parallel programs in computational fluid
dynamics. I am also working on design and development of narrow domain
compilable high level specification languages including logic-based
languages and robust methods for programming intelligent real-time
decision systems. 
Selected Recent Publications

J. C. Browne, S. I. Hyder, J. Dongarra, K. Moore, P. Newton, ""Visual Programming and Debugging for Parallel Computing,"" IEEE Parallel and Distributed Technology, Spring 1995, Volume 3, Number 1, 1995.
Compares the visual parallel programming environments HeNCE and CODE 2. (21K)
J. C. Browne, S. I. Hyder, J. Dongarra, K. Moore, P. Newton, ""Visual Programming and Debugging for Parallel Computing"", Technical Report TR94-229, Dept. of Computer Sciences, Univ. of Texas at Austin, 1994.
Compares the visual parallel programming environments HeNCE and CODE 2 (a longer version of the above paper, with more references). (138K)
J. C. Browne, J. S. Werth, et al., ""Interaction of the formal and
practical in the development of a parallel programming environment:
the CODE parallel programming system,"" in Proceedings of the Fourth
Workshop on Languages and Compilers for Parallel Computing, Santa
Cruz, California, August 1991. 
J. C. Browne, R. Jain, and J. S. Werth, ""An experimental study of the
effectiveness of high level parallel programming,"" in Proceedings of
the 5th SIAM Conference on Parallel Processing, 1991. 
J. C. Browne, D. P. Miranker, and C. M. Kuo, ""Parallelizing
compilation of rule-based programs,"" in Proceedings of 1990
International Conference on Parallel Processing, August 1990,
pp. 247-251. 
S. I. Hyder, J. Werth, and J. C. Browne, ""A unified model for concurrent debugging,"" in Proceedings of the 1993 International Conference on Parallel Processing, IEEE Computer Society, August 1993.
M. Kleyn, J.C. Browne, ""A High Level Language for Specifying Graph-Based Languages and their Programming Environments"",  15th International Conference on Software Engineering, Baltimore MD, April, 1993.
The PostScript file is an extended version of the above paper.(88K)
P. Newton and J.C. Browne, ""The CODE 2.0 Graphical Parallel Programming Language"",  Proc. ACM Int. Conf. on Supercomputing, July, 1992.
This paper describes a prototype implementation of CODE 2. Some of the notations have changed, but the ideas are the same.  This paper remains a good broad introduction to CODE because it is brief.(91K)


browne@cs.utexas.edu
",non-course
" UTCS CAD Home page 
 CAD For VLSI Research Group 
Address

Department of Computer Sciences, TAY 2.124, 
The University of Texas at Austin, 
Austin, TX 78712-1188 
 People 
This group is supervised by 
Prof. Martin Wong.
The members of the group are:


 Yao-Wen Chang
 Chung-Ping Chen
Yao-Ping Chen
 Yung-Ming Fang (ECE Department)
 Wei-Kei Mak
 Shashidhar Thakur
 Hai Zhou

 Research
The current interests of the group lie in a wide range of 
areas in VLSI CAD. These areas are broadly classified as follows:

FPGA Placement and Routing.
FPGA Architecture.
Partitioning.
Architectural and Logic Synthesis.
Issues in High Performance VLSI.


The abstracts of some recent publications of the group
can be found by tracing each of the above links. 
 Links of Interest 

 ACM SIGDA.
Special Interest Group on Design Automation of the ACM.

 IEEE.
The Institute of Electrical and Electronics Engineers.

 Information/Comments 



For more information on the CS Department at UT Austin
click here.

For comments, mail thakur@cs.utexas.edu.

",non-course
"

Bill Canfield



Home!



Business

My resume (postscript).

In Spring 1996 I had to give a report to my
	EE382C (""Software for Highly-Available Distributed
	Systems"") class.  The slides talk about
	efforts to use
	
	RT-Mach to implement some of 
	
	Flaviu Cristian's distributed
	algorithms (work done for 
	
	Prof. Al Mok; built on some work by 
	Guangtian Liu).

I am currently working on a hardware verification project at 
IBM in the
RS/6000 division.
It ties in with my Ph.D research under Professor 
Allen Emerson.

Pleasure

Domestic bliss department:  
	photos of my wife Carla and our newborn
	daughter Ruth Claire (3/13/96).

Before parenthood struck, travel and beer were high priorities.
        Somewhere between the two lies the enjoyment I get from peeling
	beer labels off of bottles in foreign
	lands.


Humor from various sources

The 
	Sofasphere II project.
Some haikus about Olestra, the new
	FDA-approved fat substitute.
Speaking of poetry... here is an interesting ode to 
	women.
Some disinformation about 
	Bob Dole.





canfield@cs.utexas.edu
	
Last updated:  29 April 96
Thanks to Todd Peters (peterst@mail.utexas.edu) for many humor links and
the ""Home"" picture above.  (He's too cool for web pages.)
UT CS home page.


",non-course
"
Al Carruth

Al Carruth
Please send mail to 
  carruth@cs.utexas.edu 
if you have any questions or suggestions.

 Introduction 

I am a Ph.D. candidate at  UT-Austin  in the
 Department of Computer
Sciences.
My supervising professor is  Jayadev Misra  and my
dissertation topic is 

 Real-Time UNITY. 
I am a member of Professor Misra's 
 PSP research group. 

I am extending the 
 UNITY 
theory in order to express finite time bounds
on the usual UNITY operators for progress and safety.  I am also
interested in functional programming languages, partial order
semantics and automated theorem proving.


 Contact Information 

  my personal home page 
 Office address: UA-9 4.116G
 Office phone: 512-471-9764
 Home phone: 512-302-3276
 Email address:
  carruth@cs.utexas.edu  
 U.S. mail:

	Al Carruth 
	Department of Computer Sciences 
	Taylor Hall 2.124 
	University of Texas at Austin 
	Austin TX 78712-1188 



 Links to other World Wide Web pages

",non-course
"

Chung-Ping Chen






Chung-Ping Chen
 I am now a Ph.D student in the
 Department of Computer Science 
at the  University of Texas at Austin.  
My fiancee is 
Meng-Yin Tsai  


Currently I am at intel as a summer intern. I am working on buffer
insertion problem.


 Syllabus
 Grading Policy
 Exam Schedule
 Homework Exercises and Schedule
 Office Hours & Locations
 News (utexas.class.cs352j)



CS 352 : Fall 1995 Syllabus

Topics


Chung-Ping Clen, last updated 8 Oct, 1995
If you have any ideas on improving this page, send your suggestions to
  ccp@cs.utexas.edu


",non-course
"






Home Page for Deji Chen










Deji Chen



About Me

Hello! This is the homepage of a Ph.D. student from

 Tongji University, Shanghai, P. R. China


To Contact Me


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin, TX 78712 USA

HOME    3373-A Lake Austin Blvd
        Austin, TX 78703 USA

PHONE	(512) 471-7316 (main office)
	(512) 471-9573 (my office)
	(512) 477-3630 (home)

FAX	(512) 471-8885



cdj@cs.utexas.edu



",non-course
"
Cliff Chaput




Cliff Chaput
The University of Texas at Austin
Department of Computer Sciences
Taylor Hall 2.124
Austin, TX 78712
RobotLab: (512) 471-9563
Home: (512) 453-DULL
chaput@cs.utexas.edu


Cliff got his B.A. in Computer Studies from Northwestern University in 1990, but got
himself employed as a programmer anyway.  He spent two years writing an
email client and a portable visual object library for Odesta Systems Corporation.
He left there for the Institute for the
Learning Sciences in 1992, where he
wrote educational and traning software in Macintosh Common Lisp, and then
implemented a simulated environment for educating high school students
called the GAMES
Project.
Cliff is now a graduate student in the Computer Sciences Ph.D. program at UT Austin.  He hangs out in the Robotics Lab
annoying people with his hair-brained schemes about meaning,
non-symbolic representation, and artificial life.
When not programming, Cliff sleeps.  In his dreams, he reads and writes 
fiction; listens to Ali Farka Toure and Medeski, Martin and Wood; watches 
MST3K reruns; plays on his Korg DS-8; and rides his bike all over.  Turnons 
include: breakfast in bed, new system versions, and raspy-voiced 
Starfleet captains.  Turnoffs: republicans, Microsoft, hangovers.



Fave Sites:

Current Events

Daily News from Reuters
Intellicast 
Weather

Austin, TX
Chicago, IL


Periodicals

Suck
Salon
Mirsky's Worst of 
the Web
The Onion
MacWeek
MacUser

Reference

Hypertext Webster 
Interface
Yahoo
Alta Vista
Cardiff Movie Database
Lycos Road Map
alt.culture

Macintosh Data

Apple Computer

CyberDog
QuickTime
QuickDraw 
3D
Apple Support

MacInTouch
Macintosh Resource
Cyberdog Pound
Info-Mac 
Archive Root

Cool/Weird Stuff

Fringeware
The ACTLab
PBS
NPR




Now Playing:

MST3K Catch Phrase Catalog


Papers and Software

The Résumé
Symbol Emergence and Symbol Grounding
RobotMap for Macintosh (fat)


People

Dave Faloon
Charles Lewis
Jeff Lind
Jeff Sherwood
Brian Slator
Sandy Stone




",non-course
"
Chuanjun Wang's Homepage


 Welcome to 
  	Chuanjun Wang's Page 





 The picture above captures the glorious moment I came to this earth.
Here are the stunning details...




 My Place of Origin 


 I come from a very very old oriental country, called 
CHINA. 

 Check out the 
PKU-Page and get to know 
my hometown: Hubei Province.


 Why am I not in China? 

 While I was a Graduate Student in Tsinghua Univ
 . I decided it is time for a change of p(l)ace.
What better place to go, I thought, than Texas! So, I ended up at the beautiful
University of Texas at Austin, 
where I am currently working on a Ph.D. in Computer Science!  
 Why don't you take a break from reading this Web page and enjoy 
a view of the UT Tower?
 






 (your opinion...)


Nifty things on the Web
""The Web is a lot like Television. Surfing it can be mind numbing and faceless. 
However, one can find brilliant and useful material in this sea of information, if one searches 
like a miner searching for diamonds among millions of rocks."" 
 - unemployed internet philosopher 
 Well, here are a few of my personal diamonds:

 Looking for a real PC and Unix programming magazine? Jump to  
Dobb's Journal.  

  
WORD - Need a fresh view of the world after a hard day? Check out the fine graphic design and 
unusual prose.

 Of course no list would be complete without a link to the 
  Find the Pope in the Porsche Page. 




Write me!
307 E 31st ST., Apt #107
Austin, TX 78705



Return to UT CS Department Home Page


",non-course
"

Welcome to the Homepage of Chin-Tser Huang 







Last updated: December 24th, 1996



Education

 June 12th, 1993
	B.S. Degree, Dept. of Computer Science & Information Engineering,
	National Taiwan University,
	Taipei, Taiwan.

Currently I am a Master's student in Department of Computer Sciences, The University of Texas at Austin.

Research Interests

 Natural Language Processing, Human-Computer Interface 
 Network, Distributed Systems

Experience
I ever worked in Chinese Knowledge Information Processing Group, Institute
of Information Science, Academia Sinica as a research assistant. My major work
is to design a system capable of word segmentation and category tagging using
Hidden Markov Model, and to improve a user-friendly tool allowing user to
execute on-line proof-reading of the result of automatic tagging. The automatic
tagging system now can reach an accuracy of 96%, which can be further improved
because of the continuous expansion of training data.
Personal Interests


Movies, Books and Music.
Literature and Semiology. 
Baseball, Basketball, Table Tennis.
PINBALL!! 


Favorite Sites


China Times
MinSheng Daily
The New York Times
USA Today
The Economist
The Atlantic Monthly

Make Contact

910 E. 40th St. APT#B203
 Austin, Texas 78751

(512)302-5629 (FAX), (512)467-6707

chuang@cs.utexas.edu

Finger me







You are the  visitor.



",non-course
"

Cilk




Cilk
Cilk (pronounced ""silk"")
is a parallel multithreaded C-based language
and runtime system.
Until I find time to put useful information in
this page, you can check out the
Cilk page at MIT.




Last modified: August 8, 1996
Robert Blumofe
rdb@cs.utexas.edu



",non-course
"
Chung Keung Poon's Home Page



 Chung Keung Poon


Department of Computer Sciences
University of Texas at Austin
Austin TX 78712-1124
USA

(512) 471-9547 (office) 


ckpoon@cs.utexas.edu

My plan:
To be a hungry fish!
Why? Ask

Vincent Gogan  please :-) 

My PhD thesis:

On the Complexity of the ST-Connectivity Problem

Some interesting web sites about...
 Theoretical computer science 
 Hong Kong 
 Harmonica 
 my high school 


",non-course
"





Home Page for Chung Kei Wong










Chung Kei Wong


last modified: Dec 11, 1996



About Me

I am a graduate student in the

Department of Computer Sciences

, 

The University of Texas at Austin

.
I am a member of the

Networking Research Lab

which is headed by

Prof. Simon S. Lam

.

Research Related links...


    Java Security Project
    

    NIST Computer Security Division
    

    Computer Security Resource Clearinghouse
    

    Role Based Access Control (RBAC)
    

    Prof. Ron Rivest
    
    's
    
    Cryptography and Security page
    

To Contact Me


EMAIL	ckwong@cs.utexas.edu

POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.9599 (lab - TAY 150K)
	+1 512.471.???? (office - PAI 5.50)
	+1 512.471.7316 (CS dept office)

FAX	+1 512.471.7866

Other links...


    Hyde Park Baptist Church Chinese Mission
    

    Hong Kong Student Association at UT Austin
    

    Linux OS Home Page
    

    NetBSD Project
    

    FreeBSD OS Home Page
    

    OpenBSD Project
    







send me email to

ckwong@cs.utexas.edu





",non-course
"


Dan Clancy



Dan Clancy
Research 
Qualitative reasoning uses incomplete knowledge to compute a description
of the possible behaviors for dynamic systems. For complex systems containing
a large number of variables and constraints, the simulation frequently
is intractable or results in a large, incomprehensible behavioral description.
Abstraction and aggregation techniques are required during the simulation
to eliminate irrelevant details and focus the simulation on the distinctions
of interest. I am developing abstraction and aggregation techniques which
address some of these problems. In particular, I am interested in abstraction
techniques which can be automatically applied during a simulation. This
will facilitate the integration of qualitative simulation techniques with
large scale knowledge bases and automatic model building. The following
techniques have been developed to address these issues:
 Here is my vita. Here is a list of my (network-retrievable)
real papers. 
. 
Contact Information

Email address: 
clancy@cs.utexas.edu 
Office: 
Taylor Hall 5.152, (512) 471-9589 
Address: 
Department of Computer Sciences 
The University of Texas at Austin 
Austin, TX 78712 

Here is my finger information
 My hotlist 
from Netscape. 


",non-course
"

This page in under construction.
Jimbo click below:
 one 
 two 
 three 
 four
 five 
 six 
 seven 
 eight 
 nine 
 ten 
 eleven 


",non-course
"

Chris Chu



Welcome to Chris Chu's Home Page
  
About Myself

My photo:


I am a PhD student in ....




Phone Numbers and Address:
Call me at:

Office: (512) 471-9772   (UA9 4.118E)
Home:   (512) 708-0296


Mailing address:

   University of Texas at Austin
   Department of Computer Sciences
   Taylor Hall 2.124
   Austin, TX  78712-1188

  
Interesting Links

 Austin Chinese Campus Christian Fellowship
 Austin Chinese Church
 Department of Computer Sciences
 UT Austin
 Austin
 Hong Kong
 China


  

Author: Chris C. Chu
Email: cnchu@cs.utexas.edu
Last Updated: January 19, 1996



",non-course
"

CODE Visual Parallel Programming System





























Mastering the lawless science of our law,--
That codeless myriad of precedent,
That wilderness of single instances.
-- Alfred Lord Tennyson




CODE is a visual parallel programming system, allowing users to compose sequential
programs into a parallel one. The parallel program is a directed graph, where
data flows on arcs connecting the nodes representing the sequential programs. The
sequential programs may be written in any language, and CODE will produce parallel
programs for a variety of architectures, as its model is architecture-independent.

Click here for a screen shot.


The CODE system can produce parallel programs for PVM-based networks of machines as well as for the Sequent Symmetry. The newest version (pre-release available below) supports the Cray, Sun SMPs, and MPI.








Announcements



(11/14/96) A pre-release version of the new CODE is now available (and it's FREE)!  Click here to download the software.

This is a major new revision of CODE (click here for a screen shot). It features a sophisticated new user-interface which provides many improvements to the previous version of CODE, making it easier and more pleasant to use. Some of the features include a Mac-like interface (à la MacDraw), multiple windows for subgraph editing, a hierarchy browser and more.

(10/8/96) Article on CODE: HPCwire, the on-line journal of high-performance computing, recently published an article on CODE entitled ""Visual Parallel Programming May Come of Age with CODE"" that they've been kind enough to let us reproduce here.



There is a CODE mailing-list for current (and prospective) CODE users so that they will be notified of releases, new backends, etc.
To join the mailing list, fill in the form below. (If you download CODE, you will also be added to the mailing list.)





First name: 


Last name: 


E-mail address: 











Documentation & Publications


These directories of compressed PostScript files are documentation for the previous version of CODE, but are being made available in lieu of new documentation, which is in the preparation stages. Despite the changes in the user interface, these manuals are still quite useful.

  CODE 2.0 User's Manual 
  CODE 2.0 Reference Manual 


Here is a listing of CODE-related publications, including links to PostScript versions of most of them.






Contact Information

For specific comments regarding CODE, send e-mail to Emery Berger at emery@cs.utexas.edu. To send snail mail to a group member, address it to:


Department of Computer Sciences 
The University of Texas at Austin 
Austin, TX 78712-1188 



The Research Group


Group Leader

Professor James C. Browne


Project Manager

 Emery Berger

Student Members

 Dwip Banerjee: Incorporating dynamic data partitioning into the CODE model.
 Ajita John: Developing a programming system based on constraints for automatic parallelization.

 CODE Alumni 









[Overview] [Announcements] [Software]  

[Researchers] [Publications] [Contacts]





CODE Home Page / emery@cs.utexas.edu / Last updated 2 January 1997




",non-course
" Steve Correl
Steve Correl
Research

Ph.D. Student working in the 

Multifunctional Knowledge-Base Group.

Additional Information

 Currently under construction.

WWW Hotlist


                Search for WWW site

                Search for WWW page

                Search for email address

                Search for AI publication

                Search for CS tech report

Contact Information

 
E-mail: correl@cs.utexas.edu
 
Office: (512) 471-9578
 
Fax: (512) 471-7866
 
Mail:
 Computer Sciences Department
 University of Texas at Austin
 Taylor Hall 2.124
 Austin, Texas  78712-1188
 USA
 
Home address: 
 P.O. Box 8369
 Austin, TX  78713-8369
 USA
 
Home: (512) 451-4513


correl@cs.utexas.edu
",non-course
"

Carlos Puchol


Carlos Puchol

Research Interests


Responsive/Real-time/Reactive Systems in General
	Formal Methods
Specification and Implementation of Real-Time Systems
	Distributed Control
	Robotics
	Esterel, a synchronous programming language.
	Mawl, a language for web applications development.



Check out the UTCS Real-Time Systems Group home page.


Publications

I have a list of publications available for
browsing.

Software
The TempEst Toolset: a package for verifying
safety properties of programs written in the Esterel programming language.



I once wrote one and a half Linux device drivers, one for the
QuantaVision
frame grabber and part of the
joystick
device driver.


Contact Information

Office:

UA9 4.108d

Real-time Systems Lab:

Taylor Hall 3.140



(512) 471-9543 (Lab)
(512) 471-9756 (Office)

Office-

The University of Texas at Austin
Department of Computer Sciences
Austin, TX 78712-1188



E-

cpg@cs.utexas.edu

 Home-

P.O. Box 7817
Austin, TX 78713-7817


Lots-of-Phun Interests

Member of the

The Robot Group. Check the group's Web page.



Latest interest
is the 
Be box.

Originally from
Gandia, in
the province of Valencia,
in Spain




.


",non-course
"

UTCS Real-Time Systems Research Group





The Real-Time Systems research group is headed by
Prof. Aloysius Mok.
In the past few years, we have worked towards laying the groundwork
for establishing a firm theoretical foundation for real-time systems
and also to build design tools based on this foundation. Our work can
be categorized into three areas as follows:


Specification and Modeling: precise formulation of real-time properties of systems.

	Analysis and Verification: reasoning about real-time properties.

        Synthesis: enforcing stringent  timing  constraints  and other real-time properties.

Projects

 RTL (Real-Time Logic)
	 Modechart Toolset
	  Modechart Editor
	      Modechart Verifier
	      Modechart Simulator
	      Modechart Compiler
	
 Timetool
	 Ged
	 Scenario Language

Publications
Abstracts of some of
the group's papers are available
online in PostScript.

Current Members

 Deji Chen
 Carlos Puchol
 Doug Stuart
 Duu-chung Tsou
 Guangtian Liu
 Rwo-Hsi Wang
 Jin Yang

Alumni

 Tei-Wei Kuo
 Paul Clements
 Chih-kan Wang
 Farn Wang
 Supoj Suthandavibul
 Farnam Jahanian



",non-course
"Cindi Thompson
Cindi Thompson
Machine Learning Research Group
University of Texas at Austin


I am participating in a Candlelight Vigil Across the Internet
to help increase awareness of violence against women.


Research

My current research interests in artificial intelligence are primarily
in the area of machine learning.  Specifically, I am interested
in Natural Language Acquisition.  
Learning to produce a deep semantic
representation from an input sentence would be useful in many tasks.
My Ph.D. proposal is on corpus-based lexical acquisition.
I wrote my Master's Thesis 
on a system which learned rules suitable for use in a diagnostic expert 
system. 
I am also interested in mobile robots, and had an exhibit at
Robofest 5 in 1994.  In the spring semester of 1995, I was the TA for 
""Building Intelligent Agents"".
Here's my finger information,
 a picture of me, my vita, 
 and a list of my publications.
Also, see 
the Machine Learning page 
for more information on our group.

Education

 M.A. in Computer Sciences, The University of Texas at Austin, 1993.
   B.S. in Computer Science, North Carolina State University, 1989.

Contact Information

  Office: 
 Taylor Hall 150C  	
Phone: (512) 471-9767 
  Email address: 
 cthomp@cs.utexas.edu 
  Postal address:  

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX  78712-1188 

Some of My Hotlist

  Starting Points for Internet Exploration
 Misc. Computer Science:
  The Consortium for Lexical Research
  A Collection of Computer Science Bibliographies
  The Ada Project - A collection of Resources for Women in Computing
  Computing Research Association
  Robotics Internet Resources Page 
 Artificial Intelligence:
 	CMU AI Repository
  Knowledge Systems Laboratory - Home Page
  Georgia Tech AI Page
  Journal of Artificial Intelligence Research
  Association of Computational Linguistics
  Home Pages of ML & CBR Folks
  Cognitive Science Resource Page
 Miscellaneous Other Stuff:
 	Wolves, Man and Truth
  Re-evaluation Counseling Home Page
 Expanding Your Horizons

",non-course
"

 The Home Page for Xingshan He 








 Welcome to Xingshan He's Home Page! 
 Your browser doesn't seem to support frames. You may want to download
the latest  My school work  
 Me, My family and Our Friends  


cxh@cs.utexas.edu

  512-912-1477



",non-course
"
Mike Dahlin












MIKE 
DAHLIN






General information
Assistant professor of Computer Sciences,

The University of Texas at Austin.

 Ph.D. in Computer Science,

UC Berkeley, 1995.

 M.S. in Computer Science,

UC Berkeley, 1993.

 B.S. in Electrical Engineering,

Rice University, 1991.





Teaching


Fall 1996: 395T Web Operating Systems




Spring 1997: 382M Advanced Computer Architecture



Everyone should read these 

""Technical Classics""


Research


xFS: A ""Serverless"" Network File System



Web Operating Systems


The Lab for Experimental Software Systems (LESS)



Publications list.


Other Information
Technology Trends Page

This page
summarizes some recent technology trends that may be of interest to operating
systems researchers and compter architects, including
historical data I've gathered about the 
prices and capacity/prices of disks and memory.

Personal Information

If this page seems boring, you probably want my working internet root page. (Links to the world.)






Email: 
dahlin@cs.utexas.edu



 Office:                  
 Taylor Hall 4.136
  (512)471-9549


Postal: 
Taylor Hall 2.124
The University of Texas at Austin
Austin, TX 78712-1188






bye...










",non-course
"

 Home Page for Om P. Damani 









Howdy  y'all !
  Being a Ph. D.(Pagal Hai Dekho) student, I'm too busy(read lazy) to update
the homepage regularly. It suffices to say about myself: If
 anything is crazy, it appeals to me. If u don't get some of the  phrases used, 
probably they r ~meant for U. Have fun !


  
 Research Activity: 
I am working in the  Parallel
 and Distributed Sytems Laboratory with  Dr. Vijay Garg .
 
 I am interested in Distributed Systems and Networking.

  Publications 
  





Following the time-honored tradition of web, I feel obliged to provide
something 
In Your Service.

To Contact Me

HOME     2612 Guadulpe St. #202
	 Austin TX 78705

OFFICE   ENS 629
         U. T. Austin

PHONE    (512)-474-5041 (R)
         (512)-471-0188 (O)

FAX     +1 512.471.8885 (Dept.) 


damani@cs.utexas.edu




",non-course
"Dane Marshall
Dane Marshall

 M.A. Student 
 Department of Computer Sciences 
 The University of Texas at Austin 


Research 


Multiresolution rendering systems, Automated modeling, 
BSP trees, Real time systems, Global Illumination, 
Electromechanical Pinball Machine Maintenance.  Above is a view of the
logistics equation with escape set and attractors viewed in the complex plane.
  This isn't my main area of research, but it makes a nice image.


Contact Information

  Work address
 Applied Research Laboratories of UT Austin 
 10000 Burnet Rd, Austin Texas 78758   
 Phone: (512) 835-3743 
  Email address: 

dane@cs.utexas.edu

  School address:  
 The University of Texas at Austin 
 Department of Computer Sciences, TAY 2.124 
 Austin, TX  78712-1188 


OB Unrelated Links.


 The Pinball Pasture 

 The Jupiter Probe 

 The Happy Station 

",non-course
"


Doug Stuart's Welcome Page


Doug Stuart's Home Page
Welcome!

This page is under construction (what page isn't), so bear with me.
I am not sure what I will put here, but for now, there are a number of

links

to interesting places, as well as some information about

Sports

,

science fiction

,

books

in general, and a few

jokes

(test
of latex2html), or a

weather map

and

conditions at Austin
and

New Orleans

.
I guess I am sort of using this as my own personal archive, and am
graciously sharing it with the web.  I'm not sure why, but I'm doing it.
Perhaps because the linking process provides me with an index, and putting
it all here is just as simple as keeping it to myself, and the web
browser provides a useful database browser as well.  I don't know if this
is a good idea or not, but if I'm going to save something, it is just
as easy to save it in a web accessible manner.



Stuff



Mom, click here.



Computer Sciences Calendar



Links



Video Links



Science Fiction



Books



Jokes



Sports



Food



Video



UT Library



Resume




Last updated 11/27/96.

 
DAS


dastuart@cs.utexas.edu



",non-course
"

 Doug's


Which is more annoying:

this

or

this


",non-course
"Diane Law
Diane Law

 PhD Student 
 Department of Computer Sciences 
 The University of Texas at Austin 


Research Interests

The symbol grounding problem
Navigation for robotic agents using neural networks evolved through the
use of genetic algorithms. 

Education

 M.S. in Computer Science, The University
of Texas at Austin, 1994. 
 B.A. in Computer Science, The University
of Texas at Austin, 1991. 
 B.A. in Spanish Literature, Washington
State University, 1978. 
 B.A. in Fine Arts, Washington State
University, 1976.

Contact Information

  Office: 
 Taylor Hall 5.145 
 Phone: (512) 471-9730 
  Email address: 
 dianelaw@cs.utexas.edu 
  Postal address:  
 The University of Texas at Austin 
 Department of Computer Sciences, TAY 2.124 
 Austin, TX  78712-1188 


Local Links


 UTCS Neural Networks home
page  

 AI lab home page
 

 UTCS home page  

 UT Austin home page  

Genetic Algorithm Links


 GANN  -
Genetic Algorithms and Neural Networks 

 IlliGAL Home Page  

 Santa Fe Institute
 

 GA Digest Archive  


University of Michigan GA Research Group  



",non-course
"





Home Page for Dionisis Papadopoulos









Dionisis Papadopoulos



About Me

I am a graduate student in the 
 Department of Computer Sciences at UT.
I was an undergraduate student in the 
Department of 
Computer Engineering and Informatics at the University of Patras in Greece.
I have also worked for the 
Computer Technology Institute of Patras in 
Greece. I was a member of the Software Engineering And Applications 
Reasearch Unit
(RU2).









To Contact Me


Dionisis Papadopoulos            		
University of Texas at Austin          		
Computer Sciences Department			
TAY 2.124                                       
Austin, TX 78712


E-mail: 
         dionisis@cs.utexas.edu 


Links to ...
 



     Mining and Monitoring Databases Homework

    The Panhellenic Students Association
Panathinaikos Athletic Club
Greek News
Hellenic Resources Network
Everything You Always Wanted to Know 
                                About Sex...









",non-course
"David Zuckerman
David Zuckerman


Assistant Professor of Computer Sciences, The University of Texas at Austin.

Contact Information

 Office:

Taylor Hall 3.126, (512) 471-9729

 Fax:

(512) 471-8885
 Email address:

diz@cs.utexas.edu 
 Postal address:


Department of Computer Sciences  

The University of Texas at Austin  

Austin, 

Texas
78712-1188 

 Finger.
Course for Fall, 1996



CS 378, Cryptography


Research Interests

The role of randomness in computation, complexity theory,
expanders and their applications, random walks on graphs, cryptography.
For a one paragraph description as well as other information,
see my

profile in the annual report. 
You can also look at my

C.V.

Some Recent Publications

 
Asymptotically Good Codes Correcting Insertions, Deletions, and Transpositions
(SODA 97)

 
Randomness-Optimal Sampling, Extractors, and Constructive Leader Election
(STOC 96)

 
Multiple Cover Time
(Random Structures and Algorithms, to appear.)

 
Randomness is Linear in Space (JCSS, 1996)

(Preliminary version called ""More Deterministic Simulation in Logspace""
from STOC 93)

 
Simulating BPP Using a General Weak Random Source (Algorithmica,1996)

(Preliminary version in FOCS 91)

 
Tight Analyses of Two Local Load Balancing Algorithms (STOC 95)

 
Derandomized Graph Products (Computational Complexity, 1995)

 
Computing With Very Weak Random Sources (FOCS 94, revised 4/6/96)

 
Expanders that Beat the Eigenvalue Bound: Explicit Construction
and Applications (Combinatorica, to appear.  UTCS Technical report.)

(Preliminary version in STOC 93)

 
Efficient Construction of a Small Hitting Set
for Combinatorial Rectangles in High Dimension
(Combinatorica, to appear, revised 9/9/96)

(Preliminary version in STOC 93)

 
Lower Bounds for Randomized Mutual Exclusion (SICOMP, to appear) 
(Preliminary version in STOC 93)

 
On Unapproximable Versions of NP-Complete Problems (SICOMP, to appear)

(Preliminary version in Structures 93)


Here is a 
 
complete list of publications and abstracts.



Visits to this page since April 6, 1996:



Last modified:  October 21, 1996.
",non-course
"

 Multimedia Lab's Home Page 

 Distributed Multimedia Computing Laboratory  
   The University of Texas at Austin  


    Welcome to the Distributed Multimedia Computing Laboratory !
   

 The main objective of our research is to investigate a wide range
of research issues in the area of Multimedia Systems. Our current
research focuses on the design of  multimedia storage servers,
network and transport protocols for digital audio and video, and
multiresolution multimedia databases.   The Distributed Multimedia
Computing Laboratory (DMCL) is a part of the  Department
of Computer Sciences at the University of Texas at Austin. 

  Sponsors 
 Research work being carried out in the Distributed Multimedia
Computing Laboratory is sponsored by various industrial and federal
institutions including  the AT&T Foundation, IBM, Intel, National Science Foundation,
NASA, Microsoft, Mitsubishi Electric Research Laboratory (MERL), Sun Microsystems
Inc., and The University of Texas at Austin.  

 Table of contents 

   Research Agenda 
   Papers and Relevant Technical Reports
   List of Members 
   Call for Papers 
 

  We would like to hear from you! Send your
comments/suggestions to:  
multimedia@cs.utexas.edu
 



",non-course
"


Don Batory



Don Batory
Software generation is a key to improved programmer productivity, reduced 
maintenance costs, and enhanced application performance. I and my students 
are investigating ways to realize practical, domain-specific component-based 
design methodologies and technologies for large scale software system 
synthesis. This spans the topics of: software architectures, design patterns, 
extensible languages, subjectivity, domain modeling, parameterized 
programming, object-oriented programming, frameworks. The domains of 
current interest are database management, data structures, and avionics.
My current research is building a programming language to support software 
generation. The goal of the Jakarta Project is to build an extensible preprocessor for the Java language. 
Domain-specific generators would be encapsulated, pluggable extensions to Jakarta.
Research funding is from DARPA, Microsoft Research, the University of Texas Applied Research 
Laboratories, and Schlumberger.
Publications, Projects, Students, Software 
Contact Information 


Office: 
Taylor Hall 3.104B 

Email address: 
batory@cs.utexas.edu 

Phone Numbers 
512-471-9713 (Office) 
512-471-8885 (Fax) 

Postal address: 
The University of Texas at Austin 
Department of Computer Sciences , TAY 2.124 
Austin, TX 78712-1188 





",non-course
"





Home Page for Dwip N Banerjee






 Photograph of me  




Dwip Banerjee



About Me

This is some info about me. I'm working in the CODE2.0 Parallel Programming
Group on the methodology of including data partitioning in a graphical
parallel programming system.


Here is the  paper I will be presenting at the
International Parallel Processing Symposium 1996.


Here is a list of my favorite sites:

!
!
.


Some more info about me : I'll insert when I know them myself..

To Contact Me

 Department

POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9734 (my office)

FAX	+1 512.471.8885

 Home

POSTAL	2202 Enfield Road,
	#201
	Austin TX 78703 USA

VOICE	+1 512.469.9209 






dwip@cs.utexas.edu





",non-course
"





Emilio Camahort Gurrea










Emilio Camahort Gurrea



 About my Promise of Setting up a Decent! Home Page After the Summer 


Mmmmm!? After multiple complaints about me not meeting my previous 
home page deadline ..... 



I have come up with another excuse .... :^) :^)



You know .... I HAVE TO get my SIGGRAPH paper finished by January,
15th ....



So that's the only thing I can think 'bout right now ....



And no, I won't make any more promises this time .....



Or else, I'll lose the credibility I have left ..... if any .....



To Contact Me


POSTAL	Computer Sciences C0500
	Taylor 2.124, U.T. Austin
	Austin TX 78712-1188 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9715 (my office)

FAX	+1 512.471.8885



ecamahor@cs.utexas.edu



",non-course
"Ed Posnak
Ed Posnak


  What I Do  

I am a graduate student in 
 Computer Science  at the 
 University of Texas at Austin. 

I am interested in network and operating system support for 
 multimedia  
systems and work in the 
 Distributed Multimedia
Computing Laboratory  
headed by 
 Dr. Harrick Vin 
here at UT.  My 
 research 
is supervised by Dr. Vin and 
 Dr. Greg Lavender 
at the 
 
ISODE Consortium. 





  View Research Summary
    
  View Publications
    


 Ed Posnak /
ejp@cs.utexas.edu

phone: (512) 349-9284. 



",non-course
"

E. Allen Emerson

 
E. Allen Emerson

Bruton Centennial Professor 

Computer Sciences Department 
Taylor Hall 2.124 
University of Texas at Austin 
Austin, Texas 78712 USA 

e-mail: emerson@cs.utexas.edu 

fax: 1 512 471 8885 

phone:  1 512 471 9537 (direct)
 1 512 471 7316 (secretary) 

Areas of Research Interest

 Formal Methods
 Computer Aided Verification 
 Temporal Logic and Automata on Infinite Objects 
 Concurrent and Distributed Systems

Selected Recent Publications

E. A. Emerson, A. K. Mok, A. P. Sistla, J. Srinivasan, ""Quantitative temporal reasoning,"" Journal of Real-Time Systems, vol. 4, pp. 331-352, 1992. 

E. A. Emerson, T. H. Sadler, and J. Srinivasan, ""Efficient temporal satisfiability,"" Journal of Logic and Computation, vol. 2, no. 2, pp. 173-210, 1992. 

E. A. Emerson, ""Real-time and the Mu-calculus,"" in Real-Time: Theory in Practice, J. W. de Bakker et al., Eds. New York: Springer-Verlag Lecture Notes in Computer Science, 1992, no. 600, pp. 176-194. 

E. A. Emerson and C. S. Jutla, ""Tree automata, Mu-calculus, and determinacy,"" in 32nd Annual IEEE Symposium in Foundations of Computing (FOCS), San Juan, Oct. 1991, pp. 368-377. 

E. A. Emerson, ""Temporal and modal logic,"" in Handbook of Theoretical Computer Science, J. van Leeuwen, Ed. Elsevier/The MIT Press, Amsterdam/Cambridge, Mass., 1990, pp. 995-1072. 


",non-course
"

Emery Berger : Home page



Emery Berger







personal

contact info
Mailing address:

	Dept. of Computer Sciences
	


	Taylor Hall
	


	University of Texas at Austin
	

	Austin, TX  78712
Phone:
	(512) 471-9734 (work)
	(512) 454-6126 (home)
Fax:
	 (512) 471-8885
E-mail:
emery@cs.utexas.edu

work

systems analyst
Parallel Programming Group

I am a systems analyst in the parallel programming research group at UT-Austin, working on the CODE visual parallel programming system. For more information about CODE, see the CODE home page.
TICAM, Composite Materials Group

I am also affiliated with TICAM, working in the Composite Materials group (for more information on the project, click on the group name).



academics

functional programming
FP+OOP=Haskell, Emery Berger (UT TR 92-30).

Abstract: The programming language Haskell adds object-oriented functionality (using a concept known as type classes) to a pure functional programming framework. This paper describes these extensions and analyzes its accomplishments as well as some problems.
dvi, 
compressed PostScript, or HTML.


other

My youngest brother Doug has an Aspiring Artist page (the CODE graphic is Doug's handiwork).

	




web links










The CODE Visual Parallel Programming System





TEXbook, the UT Textbook Exchange






GRACS
(Graduate Representative Association for Computer Sciences)




 emery@cs.utexas.edu / Last updated October 1, 1996




Do you believe in Macintosh? Check out 
http://www.evangelist.macaddict.com/
and join the ""EvangeList"" mailing list.




",non-course
"

Emma Y. Wu's Home Page


Emma Y. Wu





Chinese girl coming to US 
on August 18, 1995, to study in the 
Department of Computer Science of 
the University of Texas at Austin.






Interested in what I did in China
?  






Immediately after I get my BS Degree in Computer Science from 

Zhongshan University, I became a Marketing Representative in
IBM China Company, South China Branch, 
trying to deliver the solutions for a small planet to my costomers in 
telecommunication and media industry. 





Hey, this is 

Zhongshan University, you would be surprised to find that I have so many
alumni in US if you enter our  
Alumni Club. 








One nice thing for attending graduate school in Austin is that there are lots 
of intern opportunities for engineering students. This semester, I work as a 
part-time programmer at National Instruments
Inc. 









	Distributed Computing
Managing 
	Information
Automatic
	Programming









Tool Base

Yahoo
Galaxy

    UT Library Online

    US University
Yellow Page 






Mini Library


    Introduction to OOP Using C++

    Fortran 90 Tutorial

    TCL WWW Info








Leisure Time

NewsPage
People's Daily
Arts
Time Magazine
Chinese Magazine
PC Magazine








City I have visited in the US


    New Orleans

    Houston

    San Antonio
San Francisco
Marina, a peaceful city
San Jose, the capital of Silicon Valley
    

I love San Francisco. 









Contact Point

Email:   emmawu@cs.utexas.edu
Phone:   512-338-1295
Mailing: Department of Computer Science, the University of Texas at Austin, 
         Austin, TX 78712







 Last date updated: January 24, 1996.



",non-course
"






Home Page for Emilio Remolina










Emilio Remolina



About Me

Hi, I am Emilio. This is my first Web Page.



A bullet list is easy to include as well:

Here's the first item.
Here's another.
And this is a third.


Here's another paragraph. Don't forget that paragraph break.

 Curriculum Vitae 
To Contact Me


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9xxx (my office)

FAX	+1 512.471.8885



eremolin@cs.utexas.edu



",non-course
"


Levent'in ev sayfasi




Welcome to the home page of Levent Erkok.
I'm a graduate student at the department of Computer Sciences
at the University
of Texas at Austin. My former home page is located in
Turkey and my personal 
information can be reached via there. Just go to http://www.ceng.metu.edu.tr/~erkok

to find more about me. Thanks..



",non-course
"





Esra ERDEM's Homepage







Esra ERDEM  

M.S. Student in the
Department of Computer Sciences ,
at The University of Texas at Austin 




B.S. in Computer Sciences, 
 Department of Computer Engineering and
Information Science, 
Bilkent University , 
Turkey(1996)

Areas of Interest


(Machine) Learning
Inductive Logic Programming
(Non-monotonic) Reasoning



Topics of Interest in Cognitive Science


Learning
Reasoning: children's theories of mind, non-monotonic reasoning, 
commonsense reasoning
Knowledge Representation
Emotions
Philosophy of Mind



Contact Information

 
Postal: Department of Computer Sciences  
        The University of Texas at Austin 
        Austin, TX 78712 
        USA 
Voice: +1 (512) 471-9760 
Fax: +1 (512) 471-8885 
E-Mail: esra@cs.utexas.edu  





<!--
=================================================$

</HTML>


",non-course
"





Mr. Carl's Home Page









Stephen P. Carl


Pardon the Dust! 

So, Who Am I?

I am currently a student working towards a Master of Arts degree in the 
Computer Science department 
of the University of Texas.  
My thesis describes a new system for performing syntactic 
extensions in the Scheme programming language.


I wasn't always a student.  I once had a life...see my
resume if you don't believe me.


A few items of personal interest:


My Plan
My Resume
My Research Interests
A psuedo-random collection of WWW links
The Carl Household

My Daily Dose of Things on the World Wide Web


     Snow on Pike's Peak?  See for Yourself!

     Houston Chronicle Interactive: Sports

     For What It's Worth: Rice Athletics

     The Rice University Marching Owl Band


Getting In Touch


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512-471-7316 (main office - but they don't know me yet!)
	+1 512-471-9575 (my office)

FAX	+1 512-471-8885


esteban@cs.utexas.edu

Return to 



",non-course
"Tara Estlin
Tara Estlin
Machine Learning Research Group
The University of Texas at Austin

Research

Control knowledge improves the performance of a problem solver by
guiding it to more efficient and accurate solutions. My research
involves using a combination of analytical and inductive machine
learning techniques to acquire this control information.  I am
particularly interested in using such methods to improve the
performance of planning and scheduling systems. For more information,
I have included a detailed  description of my
research, my  vita, and a  list of publications. Also, check out the 
Machine Learning Research Group page. 
Education

 M.S. in Computer Science, The University of Texas at Austin, 1994.
   B.S. in Computer Science, Tulane University, 1992.

Contact Information

  Office: 
 Taylor Hall 5.152  	
Phone: (512) 471-9589 
  Email address: 
 estlin@cs.utexas.edu 
  Postal address:  

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX  78712-1188 


estlin@cs.utexas.edu
",non-course
"



Home Page for Francois Barbanson - UTCS version



Home of Francois Barbanson - UTCS version

This page located in the directory : /usr/spool/net/www/users/francois/










francois




About Me

Current research interests :

 is the black forest cake at central market genuine ?
 where can I find real pastries and fruit mousses in Austin ?
 does ******* pack groceries as well as *** swims ?


A forthcoming trip to 
central market should shed some light
on these very interesting research issues.
 
Central market is your one stop shopping for food,
fun and women.

Current research non-interests :

 Have fun ! Crawl in the mud ! Join the foreign legion !
 Today's 

chinese wisdom 





Suggestions :

Watch me play  basketball 
Go to Hyogo, Japan. Check out some 

tank police 

action at

Dominion Tank Police HQ

Check out 
Today's Dilbert



I knew this database class would be nothing but trouble. Not to mention
that parallel computing class.


To Contact Me

POSTAL	Francois Barbanson
	2021 Guadalupe Street
	Suite 100-130, Austin
	Texas 78705

VOICE	+1 512.342.0126 

FAX	in theory : ""same number""
	assuming I can get my fax machine to work

E-MAIL	francois@cs.utexas.edu


francois@cs.utexas.edu


",non-course
"
 Donald S. Fussell 






 Donald S. Fussell 

 Trammell Crow Regents' Professor
 Department of Computer Sciences 

 Director - Advanced Technology Division 
 Information Technology Group 
 Applied Research Laboratory 

 member of
  Computer Engineering Research Center 
  Department of Electrical and Computer Engineering 
 and
  Texas Institute for Computational and Applied Mathematics 

 The University of Texas at Austin 
Austin, TX 78712

Phone: (512) 471-9719
Fax: (512) 471-8885
e-mail: fussell@cs.utexas.edu
Information: http://www.cs.utexas.edu/users/fussell





B.A. in Mathematics and Social Science (1973) 
Dartmouth College

M.S. and Ph.D. in Computer Science (1977, 1980) 
University of Texas at Dallas




 Areas of Interest 

 Computer Architecture
 Computer Graphics
 Database Systems
 Design Automation
 Fault-Tolerant Computing




 Courses 

 
CS354 - Introduction to Computer Graphics 
 
CS384G - Computer Graphics 








  Journal Publications 
  Conference Publications 
 Research Groups 
  Work in Progress 
  Current and Former Students 







",non-course
"

Ajit George
My Generally Useless Web Page

This is my generally useless web page.  I'm not going to lie to you
and say that it's under construction or something.  Odds are good
that you won't find anything here until I start doing research.


Address, etc.

Ajit George
2501 Wickersham Lane #733
Austin, TX  78741
512/443-3022
gajit@cs.utexas.edu

Here are some files (software and/or documentation) that I have found
useful recently.

This file is for David.



Last updated on April 7, 1996



",non-course
"

 Geeta Arora's Home Page 








About me !! 
  I am a Graduate student currently in my 1st year. I'm still trying to
figure out what research and Ph.D. is all about. I did my UnderGrad at 
Indian Institute of Technology, Kanpur, India.


  


To Contact Me

HOME     River Oaks #117
         3001 Medical Arts
         Austin, TX 78705

PHONE    (512)-478-9565


geeta@cs.utexas.edu

  


",non-course
"



Gokul's Home Page


 Finally... 

After receiving countless flames and gripes about the
excessive verbosity of my home page, I have decided to bow to the
collective wish of the masses (it's a democratic world) and put
only the barest minimum out here. Adieu, my outpourings !
All you critics out there (headed by 
Plakal  and Hags), I hope
you sleep easy with untroubled consciences after sending a perfectly
 good home page to an untimely demise.
(Actually, not quite. For those who want to see what kind 
of web page could merit such vitriol, click 
here  at your own risk.)

Maybe your comments can help reinstate my earlier page ! Do sign
in  here . To see some of the less
critical comments, click  here .



 To Contact Me  

 2910 Medical Arts St, Apt 208,
Austin, TX 78705 USA 

 +1 512-320-0072

You were visitor number
 


Send comments/suggestions/criticisms/flames to   
gokul@cs.utexas.edu 




Last Updated :  November 8, 1996 .




",non-course
"


 Gooty's Home Page 






  Subramanyam Gooty  



Intro  |
	Kal(Past)  | 
	Aaj(Present)  |
	I Like ...  |
	Kal(Future)  |
	Hideout 


You are visitor number




 Intro 

Welcome to the Home page of Subramanyam Gooty (as the bold name at the 
start suggests). Continue on reading to get to know me ( hopefully u wont 
be disappointed ).





 Old is Gold 


Well I was born on Sept 1 1973 (somebody interested) in 
 Hyderabad .
This place is in 
 Andhra Pradesh 
(for people interested in geography) a southern state in 
 India. 
For the people who are curious to know about my 
 family.


After schooling, I joined  Osmania University, 
 College of Technology  
for my Bachelor's in Chemical Engineering. Came into contact with people 
from varying background and thoughts. Made a lot of friends. We were always 
proud to call ourselves 
 THE BATCH OF 1990-94 . 


Then in 1994 came over to USA to 
 University of Nebraska-Lincoln .
Had a great gala time there. It was there that I became addicted to 
American football. Except for the cold winter every thing else was
just great. Studied there for one year in Computer Science before 
I transferred over to University of Texas-Austin.



 Life's On ... 


Now I am presently enrolled in the Masters program in the
  Computer Science Department  of 
 University of Texas-Austin. Austin is a real 
cool place to hang around. I especially like the 
 weather 
out here.



Here in Austin also I have made a lot of friends (as usual)
. Here are some of the fun loving and acad caring people 
(I listed this out in alphabetical order. So no ........)



 Abraham 

 Gokul 

 Kumar 

 Mehul 

 Neeraj 

 Shantanu 

 Shailesh 

 Vipin  



 As I like it ... 


One of the things I like the best is to keep on chatting to friends
(I know many of u out there know it !). I also like making new friends
, travelling around. Playing games is another one. I play games like
Chess (any questions), Carrom Board, Racquet Ball, Tennis, Table Tennis
, Cricket, Soccer .... and on and on. I love watching 
 NBA games .

 I like to read some books (not definetly text books). Want to check 
my horoscope for today. Check out ur compatabile love signs.
I also like to listen to old hindi songs. 
Well there is a lot more to write but I would not like to bore you and 
also narrow down my options of some one liking me!!





 Golden Future 


It goes without saying that ""Man Controls His Destiny"". So what ever 
success I have in my life will of course be attributed to my 
""Hardwork"", ""Wil power"" and  all good things. If some thing bad happens 
we can always say ""Man Proposes and God Disposes...."". 




 Hide out.. 

 2910 Medical Arts St,#205
Austin TX-78705

 +1 512- 469- 6050


 gooty@cs.utexas.edu 


Have Fun Fingering me!!



Last Updated :  Feb 23, 1996 .




",non-course
"
 
Position Statement of M. G. Gouda




ACM Computing Surveys
28A(4), December 1996,
http://www.acm.org/surveys/1996/GoudaNetwork/.  Copyright ©
1996 by the Association for Computing Machinery, Inc.  See the permissions statement below.





CITATION PAGE FOR
Network Protocols between Exact Specifications
and Pragmatic Implementations



Mohamed G. Gouda



The University of Texas at Austin,

Department of Computer Sciences
Austin, Texas 78712-1188, USA
gouda@cs.utexas.edu, 

http://www.cs.utexas.edu/users/UTCS/report/1995/profiles/gouda.html





Abstract:

We argue for the study of protocol evolvers that can bridge
the gap between exact specifications and pragmatic implementations of network
protocols.




General Terms: Network Protocols, Formal Specifications, Implementations



Additional Key Words and Phrases: Compilers, Software Tools, 
Protocol Development Methodology






Publication Information

Citation
Gouda, M. G., 1996.  Network Protocols 
Between Exact Specifications and Pragmatic Implementations, Computing Surveys,
      28A(4), December,
      http://www.acm.org/surveys/1996/GoudaNetwork/
Submission date
June 14, 1996

  Revision date (if any)
  October 15, 1996

  Acceptance date
October 31, 1996


Publication Sources

HTML (if available)



Permission to make digital
or hard copies of part or all of this work for personal or classroom
use is granted without fee provided that copies are not made or
distributed for profit or commercial advantage and that copies bear
this notice and the full citation on the first page.  Copyrights for
components of this work owned by others than ACM must be honored.
Abstracting with credit is permitted.  To copy otherwise, to
republish, to post on servers, or to redistribute to lists, requires
prior specific permission and/or a fee.  Request permissions from
Publications Dept, ACM Inc., fax +1 (212) 869-0481, or
permissions@acm.org.



Last modified: Wed Nov 13 11:55:22 CST 1996

Mohamed G. Gouda
<gouda@cs.utexas.edu>
 
",non-course
"

John A. Gunnels
John A. Gunnels

 Department of Computer Science 
            University of Texas at Austin 
gunnels@cs.utexas.edu 


Here are the PLAPACKER minutes.

To see the TRANSPOSE case of the 2nd
395T assignment.
To see the NON-TRANSPOSE case of the 
2nd 395T assignment.



I don't see any connection between the image and the report (except, I guess, I drank a lot of the depicted product while doing the latter).

A report that I co-authored : A Collection of Codes for Sparse Matrix Computations

If you would like to meet my best friend then take a look at Data's Page

Am I logged on? Check here to see.
      Should I be in  CLASS?

You can also get a glimpse of the mysterious land I hail from, 
 Central Oregon  -- my home town
is more or less Redmond, but it doesn't have much of a home page (look who's talking).


You are visitor  -- remember this! There will be a test.
See my .plan
 file -- yes, it's long and boring, that's why it's here and not in .plan.

",non-course
"
Frank G. Tropschuh

Frank G. Tropschuh




+1 (512) 459-4481



gunther@cs.utexas.edu





USA (until 10/3)
Schweiz (after 10/3)


1071 Clayton Ln. Apt #333Austin, TX 78723
Waldhofstrasse 154310 Rheinfelden






Curriculum Vitae

English
Deutsch

Links

Carnegie Mellon University
(1991-1995, undergraduate student)
	
School of Computer
	Science


Universität
Erlangen-Nürnberg (1993-1994, junior year abroad)
	
Institut
	für Mathematische Maschinen und Datenverarbeitung

	Department of Computer Science IV (Operating Systems)


University of Texas at Austin
(1995-1996, graduate student)
	
Department of Computer
	Science




Frank Tropschuh
gunther@.cs.utexas.edu 


",non-course
"



GAO YONGXIANG's Home Page






Merry Christmas
Happy New year 
Welcome to my homepage
Gao Yongxiang



























Several Points
To contact me: Address
Picture of mine in the ceremony of granting master degree in China


Department of Computer Sciences,
University of Texas at Austin,
Austin,
Texas 78712, 
U.S.A.

General Information:
      NAME: GAO YONGXIANG
      Sex:  Male
      Birthday: 08/02/71
      Birth place: HuanAn, JiangSu, P.R.China
      Hobby: Table tennis

Education Background:

 July 10th, 1994
    B.S. in Computer Software from
        University of Science & Technology of China
        in Hefei, China.
 July 12th, 1996 
    M.S. in Computer Software from
        Institute of Software, Chinse Academia Sinica
        in Bejing, China.       

Research Interests

 Software Engineering
 Programming Languages
 Compiler Construction
 Parallelism and Vectorization
 Distributed Systems

Are you interested in our USTC alumni?
   Yes, I want to visit it right now.
Here is the Homepage of our USTC:

in China;
in USA;
 Directory and 
 services.



gyx@cs.utexas.edu


",non-course
"

Home Page for Ge Zhang



   Ge Zhang
   




<!-- img src=""/users/tammy/Gifs/blacline.gif"" alt=""[line]""->

School
The University of Texas at Austin 
M.S. Computer Science Second Semester

Courses

CS 345 Computer Languages - Lin


CS 380D Distributed Computing - Alvisi


CS 387 Database Management - Miranker




<!--img src=""/users/tammy/Gifs/blacline.gif"" alt=""[line]""->



<!--img src=""/users/tammy/Gifs/blacline.gif"" alt=""[line]""->



<!--img src=""/users/tammy/Gifs/blacline.gif alt=""[line]""->

Files
 Term Project of Databse Management 

 Query Form



<!--img src=""/users/tammy/Gifs/blacline.gif alt=""[line]""->


Thanks for stopping by!

gzhang@cs.utexas.edu


",non-course
"
Hai Zhou's Home Page






Alan Hai Zhou (ÖÜº£) 





  Headline News:  
This year's  Turing Award  is given to  Amir Pnueli , a
professor at Weizmann Institute of Science, Israel.


About me ...

I got my BS in Computer Science and MS in Theoretical Compuer Science, 
both from Tsinghua University 
-- one of the most prestige institutes in  China .
An incomplete

list of my undergraduate classmates is kept by 
Alex Zhao.


Currently, I am a Ph.D. student in the 
Department of Computer Sciences at 
University of Texas at Austin.
My research interests are focused on VLSI CAD, where you can find many 
applications of mathematical sciences -- algorithm design and analysis,
combinatorial optimization, computational complexity,  even mathematical
logic. Our 
CAD for VLSI Research
Group is headed by Prof. Martin D.F. Wong.





Publications


Hai Zhou and D.F. Wong, An Optimal Algorithm for
River Routing with Crosstalk Constraints. IEEE/ACM International
Conference on Computer Aided Design, San Jose, CA, 1996.
C.-P. Chen, Hai Zhou and D.F. Wong, Optimal
Non-Uniform Wire-Sizing under the Elmore Delay Model. IEEE/ACM
International Conference on Computer Aided Design, San Jose, CA, 1996.



Study Room

 Academic References
 Technique References
 Industry Directory 
 Job Bulletin 

Living Room

 Periodicals 
  Chinese Staff 
 Movies 
 WWW Search Engines and Internet 





Contact Information:

On Campus:
Department of Computer Sciences
University of Texas at Austin
Taylor Hall 2.124
Austin, TX 78712-1188
Off Campus:
1648-R W. 6th ST
Austin, TX 78703
Voice:
(512) 478-1770(h)  (512) 471-9588(o)
E-mail:
haizhou@cs.utexas.edu




Last modified on Jan. 2, 1997 

The number of visits to this homepage since Jan. 2, 1996 is:


",non-course
"






Welcome to Hao Sun's Home Page 
* under construction * 

 

 
About myself
Now I am a first year Ph.D student in the Department
of Computer Science, University
of Texas at Austin. Want to know more about me? Click hear!
 
 



Education:

08/96 - pres.   Dept of Computer Science, Univ. of Texas at Austin

09/94 - 07/96 National Lab of Software Engineering, Wuhan Univ., China

09/90 - 07/94 Dept of Computer Science, Wuhan Univ., China 

Alumni? Pals? 

Wuhan University Alumni
Home Page 
 China Home Page


Contact me?!
 307 E. 31st St. #107, Austin, Texas 78705-3037

 Can't wait? Email  haosun@cs.utexas.edu
now! 



Or call 1-(512)476-6770.



 You are No. 
visitor since Sept 9, 1996.   


",non-course
"


Micheal Hewett




Micheal Hewett
hewett@cs.utexas.edu

Click here to finger
me. 
Click here to email me. 

Hi
I am a fourth-year PhD student in the Department
of Computer Sciences at the University
of Texas at Austin 
Education: 

M.S. in Computer Science (AI), Stanford
University, 1985. 
B.S. in Computer Science, University
of Kansas, 1983. 
B.S. in Electrical Engineering, University
of Kansas, 1983. 
B.A. in Mathematics (Honors), Washburn
University, 1980. 

Honors: 

First Place, ACM International Collegiate
Programming Contest, 1985.
First Place, KME National Mathematics Competition, 1979.


UTCS Computer Bowl Champion, 1995, with Jun Sawada, Ioannis Smaragdakis, Thomas Wahl
UTCS Computer Bowl Towers of Hanoi Champion, 1995, with Lance Tokuda

UT Intramural Volleyball Champion, Faculty/Grad Division, Fall 1996.
UT Intramural Volleyball Champion, 4-man Open Division, Summer 1996.
UT Intramural Volleyball Champion, Faculty/Grad Division, Spring 1996.
UT Intramural Volleyball Champion, 4-man Open Division, Summer 1995.
UT Intramural Volleyball Champion, Club Division, Fall 1994.

Finished the 1996 Motorola Austin Marathon, 3 hours 23 minutes,
192nd out of 1250 finishers.

You might want to: 

Visit my
favorite WEB pages 
Locate
me 
Learn
about my research interests 
View or download
my publications 
Learn
more about me 

Address and Phone Numbers:
Call me at:

Office: (512) 471-9576 (TAY 5.114) 
Home: (512) 206-0656 8:00 a.m. - 11:00 p.m. Central Time

FAX: (512) 471-8885 

Mailing address:
   University of Texas at Austin
   Department of Computer Sciences
   Taylor Hall 2.124
   Austin, TX  78712-1188



Author: Micheal
S. Hewett
Email: hewett@cs.utexas.edu
Last Updated: Wednesday, January 17, 1996 


",non-course
"




Hiep H. Nguyen








Hiep H Nguyen













About Me


About me: I am a Vietnamese American, born in 1970. I came to the 
United States at the age of five, and have been a resident of Texas
for most of my life. Currently I live in Austin, Texas. I am currently working as a contract programmer and am actively 
seeking clients. I am in the process of starting my own business, providing
high-end Internet software solutions for 
products ranging from video-games to databases. 
 See my Current Work  for more details.


 Resume:   Here's a link to my hypertext
resume. 

Occupation: Currently I am the TA for 
Gordon Novak's CS375 Compiler's Class.

 Education:  I received my B.S. in C.S. and will receive my M.S. in C.S. from the 

The University Of Texas At Austin in May 1996.

 Software Packages:  These are the software packages I have
developed over the years. 

 WWW Resume Database: An online resume database for the Natural Science Placement Center. URL Address: http://www.utexas.edu/cons/nsplace. 
  MC68000 Rexis: A real time, pre-emptive  operating system for 
	the MC68000 board used for robotics research. 
 GDRAW: an Object Oriented C cross-platform graphics library (XWindows, Postscript , Mac).
 Legion: A data flow language used for robot control.
  Flat: A 2-D, Graphical, robotics simulator with realistic specular reflection sonars.  
  Xgcl, XAKCL: (X Gunu Common Lisp) An Xwindows functional interface for AKCL and Gunu Common Lisp. 
TKX: A standalone package written in C++, that provides the functionality
 of the TK package from John Ousterhout's TCL/TK.


 Current Work:  

	 I currently have a contract with the
University to do some of their web and database work, specifically, an
online resume database for 24 access for students. See our  prototype 
for more
details. 
 I am  doing research
with  Java, a C++ like language that will allow easy to build and
maintain networked programs over the web. We are porting  Netrek to Java  to 
explore the methodology for porting large software system written in C to 
Java.

 I am also currently
actively searching for other contracts where my expertise in Internet
software solutions might best be leveraged. 


Other Technical Interests:  I am also interested are in 
 Graphics, and 
 Game Programming especially on the IBM PC's under DOS and 
Windows. I have worked with fast, texture mapping
routines for 3D Animation on the 80x86 processors using C/C++ and Assembly.

Other Interests:  I write 
 Poetry  , and make  
Pottery . I also like 
Outdoors Activities. 

Hot List: 

  Spot, the robot that I worked on. 
 Austin's Robot Group.
  Java Page: http://java.sun.com 
  Netrek Page: http://factoryx.factoryx.com 
  Virtual Reality VRML Page: http://www.sdsc.edu/vrml








To Contact Me


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin, TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9715 (my office)

FAX	+1 512.471.8885








hiep@cs.utexas.edu

Last updated: 16 November 1995




",non-course
"
  Huiqun Liu 


 Huiqun Liu's Home Page



 Hi, nice to meet you on the web. I am a Ph.D student in the
 Department of Computer Science 
at the  University of Texas at Austin. 
I'm a member of the CAD for 
  
VLSI design   research group guided by Professor 
Martin Wong. Here is  
More information about me . 

 



 
World ... ... News  


   the Virtual World Tour  

   Austin City   

   Collection of Chinese Web Sites  
 
   Sunrise  




  
Stuff on  
 Internet   


   
 CS:   

  Researches   

   World's Computer Society  

    IEEE  -and- 
 ACM  

  Computer Giants  

CS Departments  




 Search Tools  
[  Yahoo  |
 InfoSeek  ] 

Internet Directory  
 US Universities  



   Online Career Center  

    Career Mosaic   

    My bookmark 

    Entertainment  







  CS Languages  



  Unix Book   


    Java   and

 the Java Book  


    Tcl/Tk   


    Perl   


   Expect   


   Rosette reference manual   - and - 

   Rosette programming examples   




 
 

  Contact Information: 

 E-mail :  hqliu@cs.utexas.edu
 Phone : (512) 480-9296  
 Address on Campus:

Department of Computer Sciences, Taylor 2.124 
The University of Texas at Austin 
Austin, TX 78712-1188 



This home page is last modified: May 22, 1995. 
For comments, you are welcome to send me email: 
hqliu@cs.utexas.edu  


",non-course
"



Hudson's Home Page




Hudson Turner



PhD student in Computer Sciences 
in the College of Natural Sciences
at The University of Texas at Austin. 
My advisor is Vladimir Lifschitz. 

PhD (Computer Science) (1997, expected) 
UT Austin 
Thesis title: ""Inference Rules and Causality in Representations of
Commonsense Knowledge about Actions""

MSCS (Computer Science) (1991) 
UT Austin 

MLIS (Library and Information Science) (1988) 
UT Austin 

BA (English, 
Philosophy) (1984) 
UT Austin 


My vita (in postscript) is available online.

A draft of my dissertation is also available.

Research Interests

Commonsense reasoning about action
Logic programming and nonmonotonic reasoning


My papers are available online.
Other Research Links

European Colloquium for Spatial
and Temporal Reasoning


To Contact Me

POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9746 (my office)

FAX	+1 512.471.8885


hudson@cs.utexas.edu


",non-course
"
  Yanbin Zhang 


<!--paper_greenwhite.gif""> 


 

 


Welcome to  Yanbin Zhang's  Home Page!

 



 





 
My Little Cutty Allen?


  
 
   I am a graduate student in 
 Department of Computer Science 
at the 
University of Texas at Austin.  . I will graduate in May, 1997. 
Currently, I'm seeking a part time or a full time job for spring'97
(I only have one course left for spring'97),or a full time job after May'97. 
Here is my  resume! Click here 
for  postscript format  



   Computer World  



 IEEE  -and-

 ACM  


 Online Career Center  - and -

 Company Home Pages   


 Computer companies 

you can help me to add more ! 


   
 Languages and More  
 
 Internet Library  
 



  
Having Fun !  


 WebMuseum  

 World Travel  

 My Beautiful Homeland  




  Contact Me   


 E-mail :  hyanbin@cs.utexas.edu  
 Phone : (512) 474-2435  (home) , (512) 471-9703 (Office) 
 Address on Campus: 
 
Department of Computer Sciences, Tarlor 2.124  
The University of Texas at Austin 
Austin, TX 78712-1188  
 Home Address :

3360 Lake Austin Blvd. Apt. C  
Austin, TX 78703 



 


The number of visits to this homepage since Sep. 20, 1996 is:
 
   
This home page is last modified: September 20,1996.  
For comments, you are welcome to send me email:
hyanbin@cs.utexas.edu  


",non-course
"

 Isaac A. Sheldon 




 Isaac A. Sheldon 

 Contact Information 
    Phone: (512) 912-0056
    
    e-mail: 
      isheldon@cs.utexas.edu

    Information: http://www.cs.utexas.edu/users/isheldon
    
 Professional Information 
 I am currently a graduate student at 
          The Univeristy of Texas at Austin 
        in the 
          Department of Computer Science
        and will recive my Masters of Science in December '96 with my
        coursework concentrating on Computer Graphics.
     I recieved my undergraduate degree in Computer Science at
          The Univesity of Mass at Lowell. 
     I have a summer intern job at
          Scientific and Engineering Software Inc.,
        a small Austin company creating Schlaeor-Mellor CASE tools.
    
 Projects 


    Constructive Solid Geometry Using BSPTrees
    
Modular Ray Tracing Framework

    Butte
    
 Personal Information 

 Baby Page

Isaac A. Sheldon
      isheldon@cs.utexas.edu

    Last Update: Aug. 4, 1996
  
",non-course
"

John S. Adair





    John's crinkum-crankum homepage
    












      I live at The Compound


      with my wife, Holly Eileen Taylor,
    

      my son, Evan James Taylor-Adair,
    

      and some other 
      Rice alumni.
    
      Some of my friends who don't live with me include

  



      Joe Carl White, who also does
      Internet consulting,
      



      Matthew Mengerink, who is a fish fanatic and works at
      DejaNews, and
      



      Steve Traylen, who gets me Doctor Who books.
      




  Email to 
  jadair@cs.utexas.edu.


  Back to CS graduate students page.
Back to CS home page.

  Last modified: Sun Nov 24 19:33:10 1996


",non-course
"


John B. Chambers' Home Page






John B. Chambers
Senior Operating Systems Specialist




B.S., Physics, The University of Texas (El Paso)
M.S., Computer Science, Yale University
Ph.D., Operations Research, The University of Texas (Austin)









Research


Papers


Vita




UT CS


Links


E-mail






",non-course
"

Jim Bednar


Jim Bednar


 PhD. Candidate, Dept. of Computer Sciences, The University of Texas at Austin. 


 M.A. in Computer Science, University of Texas at Austin, Austin, Texas, May 1997.
 B.A. in Philosophy, University of Texas at Austin, Austin, Texas, May 1994.
 B.S. in Electrical/Computer Engineering, University of Texas at Austin, Austin, Texas, December 1993.



Research  
My research concentrates on biologically realistic modeling of
cognitive processes using artificial neural networks.  I seek to use
the dramatic advances in computing technology over the past few
decades to make equally dramatic advances in our understanding of the
human mind.  With the computing power now available and soon to be
available, realistic simulations of cortical processing are becoming
practical.  This enables us to make (and, if necessary, refute)
testable hypotheses about brain function.  The overall goal is to make
cognitive research into an empirical science, rather than the purely
philosophical domain it has been for centuries.


My master's thesis, ``Tilt Aftereffects in a Self-Organizing Model of
the Primary Visual Cortex'', is nearly complete.  The abstract:


	Visual illusions and aftereffects have long been studied by
	psychologists and vision researchers because these apparent functional
	failures might offer insight into how visual processing is carried out
	by the brain.  A particular class of visual illusions called tilt
	illusions and tilt aftereffects are thought to arise in the primary
	visual cortex of humans, and thus serve as test cases for theories
	about that area of the brain.  Specifically, several researchers have
	proposed that they result from lateral inhibition between neurons
	receiving visual input. 

		

	The thesis examines tilt illusions and aftereffects in 
	
	RF-LISSOM (Sirosh and Miikkulainen, 1995), a self-organizing model 
	of the primary visual cortex that incorporates such lateral interactions.  
	It is demonstrated that the self-organizing principles driving RF-LISSOM
	result in aftereffects which are qualitatively and quantitatively
	similar to those measured in humans.  On the basis of these results,
	a new explanation for so-called ``indirect effects'' (interactions
	between lines with very different orientations) is proposed in the
	thesis.  The self-organizing model should also apply to other figural
	aftereffects, such as spatial frequency aftereffects, which we predict
	result from the same lateral interaction processes.


A preliminary report of the research is available as 
a PostScript file.  I am also beginning my doctoral research,
which will include further simulations of detailed low-level visual
behavior, using an extension of the RF-LISSOM model.



Contact Information


  Email:    jbednar@cs.utexas.edu  
  Mailing address: 
  The University of Texas at Austin 
  Department of Computer Sciences , 
 TAY  2.124
  Austin ,  TX   78712-1188 

 Information from the  finger  command

 Machines  I am logged into in this department

My resume, in  Postscript or  ASCII format

 Links to the Web   (Probably outdated.)

 Old Papers   (Not too interesting.)





jbednar@cs.utexas.edu

Last updated: July 9, 1996



",non-course
"




HomePage 



HOME OF
JUN
FANG



Hi! Welcome to my homepage.   

:-).


 Testing frames ... 




 I am a graduate student at 

the Computer Science Department
 of 

the University of Texas, at Austin
.



UT library 

is the 5th largest academic library in north America. Go to see its 

catalog




  TA job:  

I am a TA for 

the course CS304P by Professor Novak
.


 Assignments .



  Topics on Computer:  

 
Here is an excellent source of Ethernet info.



ATM technology.

 Special sysadm topic:

Domain Name System DNS  .

 Information about the free UNIXish operating system: the 

Linux Documentation Project Home Page .

 Info. on 

using GNU's debuger GDB .



Transfer LaTeX file to HTML.


Get help on 
C++, UNIX, HTML, email, etc.




  Other stuffs:  

 Visit 
 UTCS ACM
 .


Visit  
Kristina Ross' tutorial  to learn how to construct web pages.

 I was taking Jeff's course 
 
Computer and Network System Administration 
last summer at 

the Florida State University
. 

 Visit  
Edmund's Automobile Buyer's Guides  
 if you want to buy a car.

 Document of the 

Java API package 

and 

Java Language Specification V1.0
.




  PGP  

 See 
 my PGP public key  in ASCII format. 

 What is PGP? Look at 
 PGP (Pretty Good Privacy) Help  .



I like this 

scenery picture
.









 
	jfang@cs.utexas.edu 

	 (512) 494-1148(H)
   


I started to construct my homepage on 8/28/96.
 


You are the visitor number 
 
since Nov. 22, 1996.   





 Testing cgi ...  

 Testing Java applet ...  

",non-course
"





John Prior









John Prior





My  resume. 

 John's Accumulated Knowledge, after 26 years:


 1. Dogs are Good.
 2. If you do something for long enough, it will start to hurt.
 3. You should probably chew nacho chips BEFORE you swallow.
 4. Beer isn't Good. Good Beer is Good.
 5. Sleep is Good.


Contact Information


  Email:  jprior@cs.utexas.edu 
  Mailing address: 
 The University of Texas at Austin
 Department of Computer Sciences, TAY 2.124
 Austin, TX 78712-1188 
 (512)471-9589
  Home address and phone: 
 2900 Swisher St., Apt 203
 Austin, TX 78705
 (512) 708-1765


jprior@cs.utexas.edu



",non-course
"

Jeff Thomas's Homepage


Jeff Thomas's Homepage


Contact Information
Publications
Software Systems Generator Research Group
Photo Album
Favorite Internet Sites
University
of Texas (UT)

Computer Sciences (CS) Department
Applied
Research Laboratories (ARL)
Electrical
and Computer Engineering (ECE) Department
EDS
Financial Trading & Technology Center (FTTC)
Keyword Search UT
Academic
Calendars
UT Sports
Hook'Em.com
(aka ""Ultimate Longhorn Site"")

UT
Football Schedule


Austin
Texas



[
Jeff Thomas |
Computer Sciences Department |
University of Texas |
Austin
]

Last modified: 10 October 1996
jthomas@cs.utexas.edu



",non-course
"


Jianying Luo's Homepage






Welcome to Jianying Luo's Homepage! 




 

  About Me 

 I am a first year Ph.D. Student in
Department of Computer Sciences,
The University of Texas at
Austin.









 B.S.(Computer Science), 
Peking University
,  Beijing,
P.R.China, 1996





  Peking University Alumni 










Computer Science Department of Peking University 

Other departments of
Peking University






 China and Chinese







Chinese Scenery


Chinese Novels

Chinese Classics

Chinese Magazines

Chinese Newspapers






Useful 
links






 UT Registrar


 UT Gradaute Studies

UT Library

UT 
Campus

UTACCESS





About Austin








What's the Weather Today?

Austin City
Limits, lots of exciting stuffs about Austin. 




Miscellaneous








Yahoo


Java Page at Sun


JavaScript Page at Netscape


The Perl Language Home Page


Computing Research Association



Computer Journals/Magzines on the Web


Networked Computer Science Technical
Reports Library



The Collection of Computer Science Bibliographies



International Students, Inc.





Contact Me



  307 E 31st Street, Apt 107,
Austin, Texas 78705


  (512) 476-6770(H)



 jyluo@cs.utexas.edu 



   Finger me


Your comments and suggestions
would be highly appreciated.

You are the th visitor
since October 10, 1996.



",non-course
"










Kedar Namjoshi



About Me

Hi! Thanks for checking up on me.

I'm a doctoral student at  UT-Austin in the department of  Computer Sciences . 
My research advisor is Professor   E. Allen Emerson . I'm interested in the use of temporal logic to 
reason about concurrent programs, in the semantics of concurrency, distributed
algorithms, and automata
theory. 

I came here in Fall 90, after receiving my bachelor's degree in computer 
science from the Indian Institute of Technology, Madras. There is a 
wonderful  IIT-Madras home page
 with lots of fun stuff. If you would like to know more about my interests, 
here's some  personal information .  
 



Contact Information

 	Office phone : (512) 471-9750 
	Home phone : (512) 479-6453 
	Home address : 
 1652 A, West 6th Street, 
 Austin, TX 78703. 



Today's Amul Ad



kedar@cs.utexas.edu

",non-course
"


















Kenneth E. Harker







Kenneth E. Harker
The University of Texas at Austin
Department of the Computer Sciences
Taylor Hall TAY 2.124
Austin, TX 78712-1188

          kharker@cs.utexas.edu














Amateur Radio


Babylon 5




Linux


Rocketry




Cyberspace


My PGP Public Key




Academics


Work




Politics


Fun Stuff




My Resume


My Publications





















Last Updated 10/27/96
kharker@cs.utexas.edu






The World Wide Web facility on www.cs.utexas.edu is provided 
as a service to the faculty, students, staff, and guests of the Department of 
Computer Sciences at The University of Texas at Austin. The views and opinions 
expressed on this page are the sole responsibility of the author, 
Kenneth E.Harker, and do 
not necessarily reflect the views or opinions of the Department of Computer 
Sciences, The University of Texas at Austin, or The University of Texas System 
or its Board of Regents.

",non-course
"David R. Kincaid
 
David R. Kincaid
 
Senior Lecturer
Associate Director, Center for Numerical Analysis
 

B.S. (1965) 
Lamar University 

M.A. (1967), Ph.D. (1971) 
The University of Texas at Austin 

Honors, Awards, and Professional Service

 Certificate of Recognition, ""Creative Developments of a Technical
Innovation, Basic Linear Algebra Subprograms,"" NASA, 1981
 Technical Committee, Computational Linear Algebra, IMACS, 1993-94
 Session Organizer, 13th IMACS World Congress on Computation and
Applied Mathematics, 1994

Areas of Interest

Mathematical software, high performance computers, and  numerical analysis 
Summary of Research
My interest focuses on research using iterative algorithms to solve systems of linear 
algebraic equations 
with large sparse coefficient matrices.  Such systems arise in the solution of elliptic 
partial differential 
equations. The development and implementation of numerical algorithms and software on 
parallel 
computers is another area of interest.

 
Selected Recent Publications

W. Cheney and D. R. Kincaid, Numerical Mathematics and Computing, 3rd ed., Pacific 
Grove, CA, Brooks/Cole, 1994. 

D. R. Kincaid, L. J. Hayes, and D. M. Young, ""ITPACK: Then and now,""  in IMACS 
'94: Proceedings of 14th World 
Congress on Coputational Mathematics, Atlanta, GA, 1994, vol. 1, pp. 264-267.

D. M. Young and D. R. Kincaid, ""Linear stationary second-degree methods for the solution of large linear systems,"" in Topics in Polynomials of One and Several Variables and Their Applications, Rassias et al., eds., World Scientific, River Edge, New Jersey, 1993, 609-630. 
",non-course
"


Mike Kistler's Home Page 




Mike Kistler's Home Page

 
This page is under construction!

 

I am a first year PhD student at the 
University of Texas at
Austin in the
Department of Computer Sciences.
I am also currently employed by 
IBM in the
Personal Software Products
division.

 
My Academic Background
BA in Mathematics and Computer Science, 1982
Susquehanna University, Selinsgrove, PA.

MS in Computer Information Science, 1990
Syracuse University, Syracuse, NY.

Masters of Business Administration, 1991
Stern School of Business
New York University, New York, NY.

 
My Academic Interests
I am interested in parallelism and parallel algorithms,
particularly in how these can be used for commercial data processing.

Press here for 
a random collection of links to information about parallel computing.

 
My Courses
Fall, 1996


CS380D: Distributed Computing I
with Prof. Jayadev Misra.

CS383C: Numerical Analysis: Linear Algebra
with Prof. Alan Cline.

 

You are visitor number:

 
To contact me
 1309 Julies Walk, Pflugerville, TX 78660

 (512) 251-5455

email: kistler@cs.utexas.edu. 



",non-course
"

Jacob Kornerup

Jacob Kornerup



Welcome to my home page ! 


I am a Ph.D. student in candidacy in the Department of Computer Sciences at The University of Texas at Austin.


Research
My dissertation is on Powerlists, a functional notation for describing
synchronous parallel algorithms. In this work I study how the notation can
be mapped efficiently onto different parallel architectures, including
hypercubes and meshes. My advisor is Jayadev Misra, who invented the powerlist
notation and heads the PSP group here at
UT. For more information about my research see my  list of papers.  
Teaching
In the spring and fall semesters of 1995 I taught CS 105 C++ Programming in the Department of Computer Sciences at The University of Texas at Austin.

Contact Information

 Office:

UA-9 4.116G, 2609 University Ave., 471-9766.
 Email address:

kornerup@cs.utexas.edu

 Finger information
 Postal address:

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX 78712-1188 

My  resume is available in  Postscript or Ascii
along with my vitae (html).

 You can find my neighborhood from a map of the US.

My Hotlist

Some frequently-used or interesting WWW nodes I've run across:


 PSP group:

    To make our work available the PSP group (Dr. Misra, Will Adams, Al
    Carruth, Markus Kaltenbach and me) has created a   home page. PSP
    stands for  Programs, Specifications and Proofs 

Formal Methods
    One of my professional goals is to promote the use of formal methods by
introducing them early on in the undergraduate curriculum. A good place to
learn more about this is the 
Formal Methods home page at Oxford. 

Some very good arguments for using formal methods can be made after reading the
ARIANE 5 Flight 501 Failure Report or
looking at my page of quotes that support
the use of formal methods.

The Computer Science Departments Home Page
Our department has a home page with
access to web pages for students, staff and faculty. It also has access to
The University's web server.

CS Tech Reports & Bibliographies:
 

For access to a collection of technical reports have a look at The New Zealand Digital
Library.

The
Collection of Computer Science Bibliographies is a comprehensive
collection of bibliographies in computer science. Hey, I even have entries
there :-)

Volleyball info:

Look at Volleyball WorldWide for
useful info about a great sport. You used to be able go over to Gregory
Gym, here on the UT campus, where you could find pictures of the mostly CS
Grad/Law/faculty/staff intermural champs of 91, 92 and 95, and runners-up
of 93 and 94  High Voltage Spikes and Last Minute.



A Great Day for the First Amendment
News flash (June 11 1996): The indecency provision in the newly passed Telecommunication
Bill has been ruled unconstitutional by a three member panel of federal
judges. For details see the EFF's blue ribbon campaign.

On February 8, 1996 the Telecommunication Bill was signed into law,
making it criminal to transmit indecent material over the net. This means
that our freedom of speech was limited to what does not offend anyone
in Round Rock, TX or Salt Lake City, UT.

Please support the Electronic Frontier Foundation (EFF) and other
organizations in their fight against this law.  You can support this
effort by including the blue ribbon on your page. 

This page was created on April 19, 1994 and has been accessed  
  times since March 13 1996

Jacob Kornerup

",non-course
"Benjamin Kuipers


Benjamin Kuipers

Bruton Centennial Professor of Computer Sciences (No. 1),  
The University of Texas at Austin.
 
  B.A. in Mathematics, Swarthmore College, 1970.
    Ph.D. in Mathematics, MIT, 1977.
 
 Research Interests 

The representation of commonsense and expert knowledge, with
particular emphasis on the effective use of incomplete knowledge.  The
Qualitative Reasoning Research Group
home page describes these research topics, papers, students, and
available software in considerable detail. 

Research accomplishments include:

 the TOUR model of spatial knowledge in the cognitive map, 
  the QSIM algorithm for qualitative simulation,
  Access-Limited Logic for knowledge representation, and
  a robot exploration and mapping strategy
      based on qualitative recognition of distinctive places.

 B. J. Kuipers.  1994.  
Qualitative
Reasoning: Modeling and Simulation with Incomplete Knowledge.  
Cambridge, MA: MIT Press.
  

 Teaching Plans 

 Spring 1996.  CS 378:  Building Intelligent Agents.
  Fall 1996.  CS 395T:  Commonsense Reasoning about the Physical World.
  Spring 1997.  CS 378:  Building Intelligent Agents.
 
Contact Information

 Mail:
   Prof. Benjamin Kuipers
   Computer Science Department
   University of Texas at Austin
   Austin, Texas 78712  
 Email:  kuipers@cs.utexas.edu 
 Phone:  (512) 471-9561 
 Fax:    (512) 471-8885 
 Finger.

BJK
",non-course
"
 Simon S. Lam 
    Simon S. Lam 
Professor of Computer Sciences

Department of Computer Sciences

University of Texas 
Austin, Texas 78712-1188


email:  lam@cs.utexas.edu
phone:  (512) 471-9531
fax:    (512) 471-8885
office:  Taylor Hall 3.112
campus mail:  Computer Science C0500



  Photo and Profile

  Networking Research Laboratory

  CS 395T (Fall 1996)

  CS 356 (Spring 1996)


 Administrative Assistant 
(also editorial assistant for 
IEEE/ACM Transactions on Networking)
Kata Carbone 
email : kata@cs.utexas.edu
phone : (512) 471-9524
fax : (512) 471-8885


information on  electronic submission

News clip

""Tune in, turn on, toss it out:
Can the Internet pre-empt TV?"", Austin American-Statesman, February 20, 1996,

front page(compressed postscript)

cont.(compressed postscript)


",non-course
"
 Networking Research Laboratory, UT-Austin 
 Networking Research Laboratory 


Department of Computer Sciences 

The University of Texas at Austin  


Research activities of the laboratory span the entire development cycle of 
network protocols, from design and specification, to verification, testing, 
performance analysis, implementation, and performance tuning.  Of current
interest are new architectures and protocols that address changes in underlying 
communications technology as well as in networked applications. 

Laboratory research projects are supervised by 

Simon S. Lam, Professor of Computer Sciences.  Research funding has 
been provided by  National Science Foundation, NSA
University Research Program, Texas Advanced Research Program, ATT Foundation,
and Lockheed.




Current research projects and recent papers

  OS and Network support for video
services

  Network security

  Protocol theory



 
Workshop on Integration of IP and ATM , November 14, 1996


 Researchers
",non-course
"

The Home Page of Robert Landrum





The Story on the Mail Virus
Pictures from the Mountain Empire
PCH Retreat
Texas Republican Convention 1996
Backbone Rock
Résumé
Family
Interests 
Christian Council Home Page 
(My home page away from home.)

Graham Gordon Landrum Home Page

The Computer Science Department of
the University of Texas at Austin.
Christian Council

landrum@cs.utexas.edu
Last updated October 6, 1996.


",non-course
"

Greg Lavender, University of Texas at Austin



R. Greg Lavender
Adjunct Assistant Professor

Department of Computer Sciences  and
Department of Electrical and Computer Engineering
The University of Texas at Austin 



 Contact Addresses
 Research Activities
 Computer Science/Computer Engineering Courses
 Recommended Reading
 Biographical Information


Suggestions for improvements to these pages welcome!
Last updated 05/05/96 by lavender@cs.utexas.edu


",non-course
"
  Home Page of James LEE  
 Welcome to my Home Page


Yeap, that's me! Normal looking guy.
Hi to you from the net. 


I'm James LEE, and I'm a PhD student in the 
 
	Department of Computer Sciences


at the 
 
	University of Texas at Austin.




I did my Bachelor of Science and Masters of Science in Computer Science at
the 
 
	Department of Information Systems and Computer Sciences (DISCS) 

at the
 
	National University of Singapore.

My research interests are in Algorithms and Data Structures and VLSI Design
algorithms.


I'm from a small tropical island called
  Singapore  , 
located just 1 degree North of the Equator. 
The 
 
	Singapore Internet Community

is very much alive, and you are welcome to participate to know more about
this island nation and her people.

My wife comes from 
 
Hong Kong. 

We have a boy who is coming to 10 months, who is very active and loves
to smile.


 Contact Information 

 E-mail : 
  leekk@cs.utexas.edu  
 Phone : (512) 474-5072 (home)
 Fax : (512) 474-5072 (home)
 Campus Addr : Department of Computer Sciences, Taylor 2.124 
The University of Texas at Austin 
Austin, TX 78712-1188 

Last Updated: 24th Jul 1996





",non-course
"


Laboratory for Experimental Software Systems (LESS)






Laboratory for Experimental Software Systems
(LESS)
The main objective of our research is to investigate ways to build
reliable, high-performance software for parallel and distributed
systems. The Laboratory for Experimental Software Systems (LESS) is a
part of the Department of Computer
Sciences at the University of
Texas at Austin.


Research Projects
Members of the lab
LESSSS: The LESS Seminar Series
Sponsors


Last modified: December 12, 1996
Robert Blumofe
rdb@cs.utexas.edu 


",non-course
"Calvin Lin

Calvin Lin


Assistant Professor of Computer Sciences



The most important thing you can do is
what you're doing when you're doing it.
When you study, _study_, and when you play, _play_.
- Pete Carril


Research Interests
Compilers and languages for parallel computing, parallel performance
analysis, scientific computing.

See the 
ZPL Programming Language Project home page.

Selected Publications


The Portable Parallel Implementation of Two Novel Mathematical Biology
Algorithms in ZPL, with M. D. Dikaiakos, D. Manoussaki, and D.  Woodward.
the 9th Int'l Conf. on Supercomputing, pp. 365-374, 1995.


Accommodating Polymorphic Data Decompositions in Explicitly Parallel
Programs, with L. Snyder.  Proceedings of the 8th International
Parallel Processing Symposium, April 1994, pp. 68-74.


ZPL: An Array Sublanguage, with L. Snyder.  In Languages and Compilers
for Parallel Computing, U. Banerjee, D.  Gelernter, A. Nicolau and D.
Padua eds.  Springer-Verlag, 1994, pp. 96-114.


A Portable Implementation of SIMPLE, with L. Snyder.
International Journal of Parallel Programming, vol. 20, no. 5, 1991,
pp. 363- 401.


A Comparison of Programming Models for Shared Memory Multiprocessors, with
L. Snyder.  Proceedings of the International Conference on Parallel
Processing 1990, II:163-170, 1990.

Contact Information

 Office:

Taylor Hall 4.138, (512) 471-9560

 Fax:
 (512) 471-8885
 Email address:

lin@cs.utexas.edu
 Postal address:

Department of Computer Sciences
The University of Texas at Austin
Austin, TX 78712-1188

",non-course
"
Guangtian Liu's Home Page







Guangtian Liu's Homepage


Hi
 
Welcome to my home page. I am currently constructing this page and 
will add more contents as time permits. For now I apologize for 
any incompleteness and resulting inconvenience.



Who am I

I am currently a graduate student in the 
Department of Computer Sciences  at the
University of 
Texas at Austin.  


Research

I am a member of Professor Mok's 

Real-Time System Research Group.  
My research interests include real-time
scheduling algorithms, operating systems, network performance 
and distributed systems. I also did some work in data replications and 
knowledge mining during my last two summers' internship in 
 GTE Lab and 
MCC. 


 Contact Information 


Office:
 MAI 2010  ( yes, good view )
	 Phone: (512) 471-9747 
 Email: 
 liugt@cs.utexas.edu 
 Mailing address: 
 The University of Texas at Austin
	 Department of Computer Sciences, TAY 2.124
	 Austin, TX  78712-1188




This page was last updated on Fri Jan 26 00:00:45 CST 1996.
Please send your comments to 
liugt@cs.utexas.edu.



",non-course
" Lorenzo Alvisi Home Page 



Lorenzo Alvisi 

Assistant Professor, Department of Computer Sciences 

Ph.D. in Computer Science:  Cornell, 1996 
M.S. in Computer Science: Cornell, 1994 
Laurea in Physics: Università di Bologna, Italy, 1987  

Office: 4.122 Taylor
Hall Here is a map of the UT Campus
showing the location of Taylor Hall.


Phone: (512) 471-9792 
Fax: (512) 471-8885
E-mail: lorenzo@cs.utexas.edu



 Research Interests
I am interested in Distributed Computing, with a special emphasis on Fault-Tolerance. 

 Courses

CS380D: Distributed Computing I.  Spring 1996. 

CS372: Operating Systems.  Fall 1996. 

CS395T: Hot Topics in Distributed Sytems. Fall 1996.


  
Publications  

  Some (more) photos of Maria  

Last Modified Thu Feb  15 14:17:07 EDT 1994 
 Lorenzo Alvisi / lorenzo@cs.utexas.edu
",non-course
"
 Xue Lu's Home Page 



Xue Lu's Home Page

 Graduate Student 





 Current Work 

TA Work: 
CS 356 Computer Networks


Other Classes


 About Myself 



Tsinghua University
 --My undergraduate institute 



China
 --Where I am from 



Department of Computer Science
 --Where I study



UT Austin 
 --My university



Austin, Texas  
 --Where I live

  

 Academic Links 


Internet and WWW 

Computer Science Areas 


Computer Languages and Systems


IEEE

 ACM 
:  [  SIGCOMM |
  SIGMOD |
  SIGLINK |
  SIGGRAPH |
  SIGMM95 |
  SIGIR ]



Computer Companies 

  

 Other Links 

 Online Shopping 
 -- A Cool Site to Buy Chinese Music


 Current News

Job Hunt 

Weather Forcast 

Dictionary 

  
  Contact Information 



 On Campus:  
 Dept of CS 
 Univ. of Texas at Austin 
 Austin, TX 78712 


 Current addr:
 Microsoft Corporation 
 Tel: (206)936-6485(O) 
          (206)558-4127(H) 


 E-mail: luxue@cs.utexas.edu
 xuelu@microsoft.com  


  


 
Thanks for coming!


Last Modified: Jan 14, 1996 

luxue@cs.utexas.edu 



",non-course
"Laurie Honour Werth


Laurie Honour Werth

Lecturer 
lwerth@cs.utexas.edu



Current Semester: Fall, 1995
Office Hours for Fall, 1995:


 TIMES: (tba)

OFFICE: Taylor 5.110

PHONE: 471-9535


Links to Classes:


CS373 - Software Engineering

CS 378 - Contemporary Issues In Computer Science




Professional Service
Vice-Chair for Education, IEEE Technical Committee on Software Engineering, 1991-present
Co-chair, ACM CSC Conference, 1992-94
Chair, ACM  Professional Development Committee, 1991-present





Areas of Interest
Software engineering and cognitive science 



Summary of Research

My current work centers on the development of software tools and
environments. Other areas include computer-human interface and
software metrics. 




Selected Recent Publications

L. H. Werth, ""Quality assurance for a software engineering project,"" IEEE Transactions on Education, January 1993. 

L. H. Werth, ""Lecture notes on software process improvement,"" CMU/SEI-93-EM-8, Feb. 1993. 

L. H. Werth, ""Industrial-strength CASE tools for software engineering classes,"" in Software Engineering Education, J. Tomayko, Eds. Springer-Verlag, 1991. 

L. H. Werth and John S. Werth, ""Directions in software engineering education,"" in Proceedings from Workshop on Directions in Software Engineering (ICSE), May 1991. 

L. H. Werth, ""Object-oriented programming on the Macintosh,"" Journal of Object-Oriented Programming, Nov.-Dec. 1990. 



Other Useful Links:
University of Texas Computer Science Department Home Page
Faculty Profiles
CS Classes

Last Update: August 13, 1995
",non-course
"

Madhukar Reddy Korupolu



Welcome to Madhukar's Home Page
  
To Reach Me



Home:  4559, Avenue A, #201, Austin, Texas - 78751.
Office:    Taylor Hall 2.124,  Dept of Comp. Science,
 Univ of Texas at Austin,
 Austin,
 Texas,  78712-1188, U.S.A



Home: (512)-467-8735
Office:    (512)-471-9764  (UA9 4.116C)

    madhukar@cs.utexas.edu


  
Some  Links

 The Official IIT Madras
Homepage
  The Ganga Alumni
Class of 94 (IIT Madras)
  UT
Algorithms and Computational Theory Group
  Colloquium on
Computational Complexity
  Info on Cricket Worldwide
  Official Site of NBA 
 ESPNET Sportszone
  CNN Interactive 
 
 Batchu's  India Page 


  

Author: Madhukar Reddy Korupolu
Email: madhukar@cs.utexas.edu



",non-course
"
Richard S. Mallory
Richard S. Mallory
Research
Thesis research is on producing quasi-natural language explanations of Qsim
simulations.  Current implementation works for very simple systems.

Contact

 Email:	mallory@cs.utexas.edu
 Office:	(512) 471-9578 / 5.120 Taylor, UT Austin
 Home:	(512) 458-9445

",non-course
"





Home Page for Marco Schneider





Marco Schneider


Ph.D. candidate, 
Department of Computer Sciences
 at 
The University of Texas at Austin

Research
The title of my dissertation is
 ""Flow Routing in Computer Networks"".
My research interests lie in the areas of network protocols, distributed 
computing, fault-tolerance, and in particular self-stabilizing systems.
 

Implicit in the design of any system is a labeling of its
states as ""legitimate"" or ""illegitimate"". We identify as ""legitimate"" 
those states which occur under the correct (intended) execution of a system.
All other states are considered ""illegitimate"". 
A system is said to be self-stabilizing when
regardless of its initial state, it is guaranteed to converge to
a legitimate state in a finite number of steps. A system
which is not self-stabilizing may stay in an illegitimate state 
forever. 


  My vita in Postscript 



Publications 

  ""Self-Stabilization"" .
 ACM Computing Surveys, Vol. 25, No. 1, March 1993.

  
     ``Self-Stabilizing Real-Time Decision Systems'' . 
In  Responsive Computer Systems: Steps Toward Fault-Tolerant
Real-time Systems,  Kluwer Academic Publishers, 1995.
An earlier version appeared in 
 Proceedings of The Third International Workshop on Responsive Computer 
Systems, October 1993.


``Stabilization of Maximum Flow Trees''. Invited talk:  
Proceedings of the Third Annual Joint Conference on Information Sciences,
November 1994. Submitted to  Information Sciences Journal.
Co-authored with Mohamed G. Gouda.

 ``Maximum Flow Routing''. 
 Proceedings of The Second Workshop on Self-Stabilizing Systems, 
1995. Co-authored with Mohamed G. Gouda.

 ``Minimum Depth Flow Routing''. In preparation, 1995.
Co-authored with Mohamed G. Gouda and Anish Arora. 

  
     ``Memory Requirements for Silent Stabilization'' .
To appear in  The Fifteenth ACM Symposium on Principles of 
Distributed Computing, 1996. 
Co-authored with Shlomi Dolev and Mohamed G. Gouda.

 ``Stabilization of Minimum Spanning Trees''. In preparation, 1995.
Co-authored with Mohamed G. Gouda. 

 ``Implementing Flow Routing on the Internet''. In preparation, 1996.
To be Co-authored with Mohamed G. Gouda.




Personal Interests 

 Here is a  list of links. (under construction)


 Contact Information

 Office:
 Taylor Hall 150A, (512) 471-9763
 Email:
 marco@cs.utexas.edu
 Postal Address:
 The University of Texas at Austin 
Department of Computer Sciences C0500
Taylor 2.124 
Austin, TX 78712-1188 USA



marco@cs.utexas.edu



",non-course
"
Home Page for Mark S. Johnstone

Mark S. Johnstone



Contact Information

 Office:
 Taylor Hall 5.144
 (512) 471-9586
 Postal Address:

The University of Texas at Austin 
Department of Computer Sciences 
Taylor Hall 2.124 
Austin, TX 78712-1188 


You can usually find me in my office, and the best way to reach me is
via email at 

markj@cs.utexas.edu (Mark Johnstone)

You can also look at my full finger information.

This semester I am the TA for CS372 Operating Systems, taught by
Richard Brice (TTH 8-9:30 a.m. TAY 2.106).



In addition, I am the TA for an Object Oriented Design and Analysis
class taught by Glenn Downing for the IBM/Apple Somerset Company.
Please see the  WEB page for this class.



I will be graduating with a Ph.D. in Computer Science this Spring.
After that, I will be working for the IBM/Motorola/Apple Somerset
Design Center


Research Information

I am a member of the  OOPS Research Group in 
the  Department of Computer Sciences at 
The University of Texas at Austin.


As part of my Ph.D. research, I am building a real-time garbage
collector for C and C++.  In addition, I am performing a number of
studies on memory allocation routines.  A postscript copy of my  dissertation
proposal (641K) is available.



For more information, please see my list
of publications (along with brief descriptions). 
 

I have developed a C++ class library that allows for the very precise timing
of routines on an Intel(tm) Pentium running Linux.  This code is
 publicly available.



Here is some Fun Stuff (not related to my research).




Department of Computer Sciences




",non-course
"

 Mark Ka Yau Ng's Home Page 













[  About Myself  
|  Points Of Interest  ] 
[  Visit Also My Friends' Home Pages 
|  The Cub's Den  ]







Last modified Wed Nov 20 1996
by markng@cs.utexas.edu


",non-course
"
Markus Kaltenbach

Markus Kaltenbach


Introduction

Welcome to my home page. I am currently constructing this page and
will add more entries and links as time permits. For the time being I
apologize for any incompleteness and resulting inconvenience.

Research
I am a member of Prof.Misra's
PSP Research Group
and of Prof.Emerson's
Temporal Reasoning Group.

As part of my work I have developed a model checker
for finite state UNITY programs and propositional UNITY logic, the 
UNITY Verifier System.


The most recent version of my Ph.D. thesis is
also available. 

 Contact Information 

 Office:
 Taylor Hall 150B, Phone (512) 471-9777
 Taylor Hall 3.150A, Phone (512) 471-9548
 Email address:
 markus@cs.utexas.edu
 Postal address:

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX 78712-1188 


 Places of Interest 
Here you can find some interesting places on the Internet which are worth a
visit:


 The
UT Computer Science Department
home page.

 The 
OTS Software Archive
for Macintosh computers here at UT.

 Apple Computer's
World Wide Technical Support
home page.

 An ftp link to a
CTAN
site (Comprehensive TeX Archive Network).

 An ftp link to the
AT&T Distribution Archive.



This page was last updated on 25-May-1996.

markus@cs.utexas.edu


",non-course
"

Me





Marty Mayberry



 PhD Student 
 Department of Computer Sciences 
 The University of Texas at Austin 


Research

All kinds of stuff.

Education

 
M.S. in Computer Science, The University of Texas at Austin, 1995.
 
B.S. in Math & Computer Science, The University of Texas at Austin, 1993.

Contact Information

  Office: 
 Taylor Hall 5.142 
 Phone: (512) 471-9585 
  Email address: 
 martym@cs.utexas.edu 
  Postal address:  
 The University of Texas at Austin 
 Department of Computer Sciences, TAY 2.124 
 Austin, TX  78712-1188 







Click on the applet to pause/resume display.







Local Links


 UTCS Neural Networks home
page  

 AI lab home page
 

 UTCS home page  

 UT Austin home page  

Hotlist


 Downtown Anywhere - a virtual
city 
 
The  Internet
Restaurant Guide  
 
The 
Virtual Pub  

 TNS
Technology Demonstrations  
 
Read the 
Daily Texan  




",non-course
"





Home Page for Norm McCain










Norm McCain



About Me

PhD student in Computer Sciences 
in the College of Natural Sciences
at The University of Texas at Austin. 
My advisor is Vladimir Lifschitz. 

PhD, Computer Science (1997, expected) 
UT Austin 
Thesis title: ""Causality in Commonsense Reasoning about Actions""

MS, Computer Science (1982) 
University of Kansas 

BA, Philosophy (1972) 
Baker University 


My vita (in postscript) is available online.

Research Interests

Commonsense reasoning about action
Logic programming and nonmonotonic reasoning


My papers are available online.

To Contact Me


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.471.7316 (main office)
	+1 512.471.9746 (my office)

FAX	+1 512.471.8885



mccain@cs.utexas.edu



",non-course
"Mary Elaine Califf
Mary Elaine Califf
Machine Learning Research Group
University of Texas at Austin

Research

My current research interests are in using machine learning, especially
inductive logic programming (ILP), for natural language acquisition.  For
more info about me, check out my  vita. 
Education

 M.S. in Computer Science, Baylor University, 1993.
   M.A. in English, Baylor University, 1989.
   B.A. in English, Baylor University, 1985.

Contact Information

  Office: 
 Taylor Hall 5.152  	
Phone: (512) 471-9589 
  Email address: 
 mecaliff@cs.utexas.edu 
  Postal address:  

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX  78712-1188 


",non-course
"UT Knowledge-Based Systems Group




Knowledge-Based Systems Group



      
              Bruce Porter    Rich Mallory    Peter Clark
     Art Souther        Fred Prado   Charles Callaway

    and (not shown above): Carl Andersen, Steve Correl.
Overview

Our group is part of the 
Department of Computer Sciences at
Univ. Texas at Austin.
The long-term goal of our research is to develop technology for
constructing and using large, multifunctional knowledge bases on
computers.  These knowledge bases would significantly improve current
expert systems and tutoring systems because they contain the broad
knowledge of a domain required to perform multiple tasks and to
explain domain knowledge from multiple viewpoints.

During the past eight years, we have built a large knowledge base in
one area of biology, and developed methods for automatically answering
a variety of questions using the knowledge base.  Containing about
180,000 facts concerning 30,000 concepts, our knowledge base is one of
the largest of its kind (i.e. its content is structured and formally
represented).  In addition to expanding this knowledge base, we are
also beginning to construct similar knowledge bases in other domains,
most notably, the domain of Distributed Computing.

We are especially encouraged by the results from using our knowledge
base for a variety of AI tasks.  Most recently, James Lester used the
biology knowledge base to test his system for explanation generation.
The system generated about 60 explanations, expressed in English,
concerning biological objects and events.  In a controlled experiment,
domain experts found little difference between these explanations and
those written by their colleagues.  

Currently, we are extending the types of questions that can be
answered using automated reasoning with a large knowledge base.  Jeff
Rickel developed a method for ""compositional modeling"", the task
of constructing a model appropriate for answering a prediction
(""what-if"") question.  Performing this task well requires building the
simplest model that can adequately answer the question - a daunting
requirement since knowledge bases like ours implicitly contain MANY
models at numerous levels of detail.  The Qualitative Process Compiler
and QSIM are used to simulate the models built by Jeff's program.

Finally, we are testing the generality of our research results by
building a knowledge base in another domain - distributed computing
environments (focussing on OSF's DCE) - to construct a help-desk
assistant for automatically answering a proportion of customer's
questions which would otherwise be phoned in to a normal help-desk.

Research Projects

Our completed and ongoing research projects include:

 KM/KQL 
	- our knowledge representation language,
 KnEd 
	- the knowledge base editor,
 BKB 
	- the biology knowledge base,
 KASTL 
	- the viewpoint retriever,
 KNIGHT 
	- explanation and text planning,
 FARE
        - natural language generation of text plans,
 LexEd
        - computer-aided maintenance for KB lexicons,
 TRIPEL 
	- compositional modeling for answering prediction questions,
 Help-Desk Assistant 
	- the DCE Help-Desk Assistant project.

Researchers

 Bruce Porter
	(porter@cs.utexas.edu)
 Rich Mallory
	(mallory@cs.utexas.edu)
 Art Souther
	(souther@cs.utexas.edu)
 Charles Callaway
	(theorist@cs.utexas.edu)
 Fred Prado (prado@cs.utexas.edu)
 Carl Andersen (searcher@cs.utexas.edu)
 Steve Correl (correl@cs.utexas.edu)

Recent alumni and alumnae:

 Liane Acker (acker@austin.ibm.com)
 Erik Eilerts
	 (eilerts@cs.utexas.edu)

 	Ray Bareiss     (bareiss@ils.nwu.edu)
 Brad Blumenthal
 Karl Branting
	   (karl@eolus.uwyo.edu)
 Peter Clark
	(clarkp@redwood.rt.cs.boeing.com)
 
	James Lester (lester@adm.csc.ncsu.edu)
 Ken Murray (murray@cyc.com)
 Jeff Rickel (rickel@isi.edu)

Publications

Click 
here to see some selected publications from our group.

Other Related KB Projects

Click here
for an extensive collection of pointers to other KB projects around
the world.



porter@cs.utexas.edu

",non-course
" Daniel Miranker's home page 
 Welcome to
 Daniel Miranker's 
 Belated Web Presence 

(under construction, see something you'd like finished, don't hold your breath,
just send me a note, miranker@cs.utexas.edu, I'll get it to you the old fashion
way.  My students pages wouldn't be a bad place to go either.}


 On Rule Matching   

If you are here to learn more about the TREAT algorithm and its
comparison to RETE, be warned that both have been rendered obsolete by
the  LEAPS  algorithm.

 Current Research Interests 

My current research goals encompass the Venus rule language, its use
as the basis of Active, Distributed Databases and the fundamental
computer science problems and corollaries that have evolved from that
goal.

 (CSP) Constraint Satisfaction Search

 Query Optimization, both relational and 
object-oriented.
 Parallel Execution of Rule-Based programs

 Knowledge Compilation 

 Bibliographies, sometimes linked to papers (coming soon) 
 Miranker and group: text, bibtex

 Rule Matching: text, bibtex

 RETE vs. TREAT, 
text , bibtex 

 Students 
 Current Ph.D. Candidates 
 Roberto Bayardo 
David Gadbois
 Lance Obermeyer
 Vasilis Samoladis
  Robert Schrag 
 Masters Candidates 
 Srinivasan Vaidyaraman
 Lane Warshaw

 Past Ph.D. Students 
Archie Andrews
David Brant
Chin-Ming Kuo
Shiow-Yang Wu

 Past (Ph.D.student)-1 
 Salvatore J. Stolfo
",non-course
"
Jayadev Misra
 
Jayadev Misra

Regents' Chair in Computer Sciences 
Department Chair 

B.Tech. (1969) 
Indian Institute of Technology, Kanpur 

Ph.D. (1972) 
Johns Hopkins University 

Honors, Awards, and Professional Service

 John Simon Guggenheim Fellow, 1989
 IEEE Fellow
 ACM Fellow

Areas of Interest

Parallel programming 
Summary of Research

My interest is in applying formal methods in practice, particularly in
the specifications and designs of synchronous and asynchronous
systems.
Selected Recent Publications

J. Misra, ""Powerlist: a structure for parallel recursion,"" in A Classical Mind: Essays in Honor of C. A. R. Hoare, Prentice-Hall, January 1994. 

J. Misra, ""Loosely coupled processes,"" Future Generations Computer Systems (8), pp. 269-286, North Holland, 1992. 

J. Misra, ""Phase synchronization,"" Information Processing Letters, vol. 38, pp. 81-85, 1991. 

J. Misra, ""Equational reasoning about nondeterministic processes,"" Formal Aspects of Computing, vol. 2, no. 2, pp. 167-195, 1990. 

J. Misra and K. M. Chandy, Parallel Program Design: a Foundation, Addison-Wesley, 1988. 


My research group, the PSP group, has a home
page, with more information about my work and electronic access to other
papers.

My current research project, Seuss, has an
overview and a
postscript version
accessible from here.",non-course
"UTCS Machine Learning Research Group
<!-- <img align =top src= ""http://www.cs.utexas.edu/users/ml/tower1.gif"">


 The Machine Learning research group is supervised by  Professor Ray Mooney. Our research focuses
on combining empirical and knowledge-based learning techniques,
including applications such as natural language acquisition, knowledge
refinement, and learning for planning.


This group is part of the 
Artificial Intelligence Lab and the Computer Science Department, at
the  University of Texas at
Austin.  

For a picture of our group click here. 

 Graduate Students 

 Mary Elaine Califf --- (mecaliff@cs.utexas.edu)
 Tara Estlin --- (estlin@cs.utexas.edu)
 Ulf Hermjakob --- (ulf@cs.utexas.edu)
 Sowmya Ramachandran --- (sowmya@cs.utexas.edu)
 Cindi Thompson --- (cthomp@cs.utexas.edu)

 Alumni 

 Paul Baffes --- (baffes@scicomp.com)
 Jeff Mahoney --- (mahoney@firstadvisors.com)
 Hwee Tou Ng --- (nhweetou@trantor.dso.gov.sg)
 Dirk Ourston --- (dirk_ourston@cpqm.saic.com)
 Bradley Richards --- (bradley@ai-lab.fh-furtwangen.de)
 Siddarth Subramanian --- (sid@georgetown.com)
 John Zelle --- (jz6011r@acad.drake.edu)

 Research Areas and Publications


Abduction

Inductive Logic Programming

Natural Language Acquisition

Qualitative Modeling & Diagnosis

Speedup Learning and Learning for Planning

Student Modelling for Intelligent Tutoring Systems

Theory Refinement

Uncertain Reasoning



Here is a complete 
 list of publications. 
 Research Software 

 ACCEL -  An abductive reasoning system.
 NEITHER - A theory revision system for propositional rule bases.
 FORTE - A theory revision system for first-order rule bases.
 CHILLIN - An inductive logic programming system with predicate invention.
 FOIDL - An inductive logic programming system for first-order decision lists.
 DOLPHIN - An ILP/EBL speedup-learning system for adding search-control to Prolog programs.
 ML Programs - A set of standard inductive classification algorithms and software for automated experimentation and system comparison.


 Data Repositories

 Language-learning data (in a form for ILP)




 Some Related WWW Sites 
 Associations and Groups 

 AAAI
- American Association for AI 

 ACL Association for Computational Linguistics

  ILPNet - European Inductive Logic Programming Scientific Network

  SIGART - ACM Special Interest Group on Artificial Intelligence 

  SIGNLL - ACL Special Interest Group on Natural Language Learning


 Conferences 

  International Joint Conference on Aritficial Intelligence  (IJCAI-97) 

  National Conference on Artificial Intelligence  (AAAI-97) 

   International Conference on Machine Learning  (ICML-97) 

   Fourth European Conference on Planning  (ECP-97) 


 Information Sources 

  AI Subject Index 
  AI Biblio Query 
  Index to Machine
Learning Home Pages
  Machine Learning Information Services
 Computation and Language Paper Archive

 Journals 

 AIJ
- Artificial Intelligence Journal

 Computational Linguistics 
- Journal of the ACL

 JAIR - Journal of Artificial 
Intelligence Research 

 MLJ
- Machine Learning Journal


 Learning Systems 

 FOIL - J. R. Quinlan's inductive learner  

  PRODIGY  - Problem solving system for 
planning and learning at Carnegie Mellon

  
UCPOP -
Partial-Order Planner at University of Washington


 Research Groups 

  Explanation-Based Learning Group - University of Illinois

  Inductive Learning Group - University of Illinois

 
Machine Learning Research Group - Oxford University

  Machine Learning Research Group - UC Irvine

 
Natural Language Acquisition Group - University of Texas at Austin 

  
Machine Learning Research Group - University of Wisconsin at Madison 




estlin@cs.utexas.edu
",non-course
"Raymond J. Mooney's Homepage
Raymond J. Mooney


Associate Professor of Computer
Sciences,  The University of Texas at Austin.


 B.S. in Computer Engineering, University of Illinois at Urbana/Champaign, 1983
 M.S. in Computer Science, University of Illinois at Urbana/Champaign, 1985
 Ph.D. in Computer Science, University of Illinois at Urbana/Champaign,
1988

Research Interests

My current research interests in artificial intelligence are primarily
in the area of machine learning.  They include:

 Natural Language Acquisition: Learning parsers, lexicons,
     information extraction, and word sense disambiguation from examples.
 Inductive Logic Programming: Learning Prolog programs from examples. 
 Knowledge-Base and Theory Refinement: Automatically modifying rule bases and Bayesian networks 
     to fit empirical data.  
 Search-Control Acquisition: Learning to improve planning efficiency and quality.
 Comparing and combining neural-network and symbolic learning.


For more information and publications, see the   
machine learning home page .

Here's my vita and my finger information.

Course Information
Fall 1996

 CS 351: LISP and Symbolic Programming
 CS 395T: Machine Learning

Spring 1997

 CS 395T: Artificial Intelligence II

Personal History

I grew up in the 60's and 70's in the small town of O'Fallon Illinois where
starting in 1975 I attended  O'Fallon
Township Highschool. Starting in the fall of 1979, I went to the University of Illinois in Champaign-Urbana
to obtain all of the degrees listed above. In December 1987, I completed my
Ph.D. thesis in the Explanation-Based Learning
Group under the direction of Prof.
Gerald Dejong and then began my position here in The Department of Computer Sciences at the  The University of Texas at Austin.

Contact Information

 Office:

4.130B Taylor Hall, (512) 471-9558

 Email address:

mooney@cs.utexas.edu 
 Fax:

(512) 471-8885
 Postal address:


Department of Computer Sciences  

The University of Texas at Austin  

Austin, 

Texas
78712-1188 
U.S.A.
 Home address:

11919 Meadowfire Dr.  
Austin, 
    Texas 78758
U.S.A.

",non-course
"Dave Moriarty
Dave Moriarty

 PhD Student 
 Department of Computer Sciences 
 The University of Texas at Austin 


Research

Sequential decision tasks appear in many practical real-world problems
including control, resource allocation, and routing.  Such tasks can
be characterized by the following scenario: An agent observes a state
of a dynamic system and selects from a finite set of actions.  The
system then enters a new state upon which the agent must select
another action.  The system may return a payoff for each decision made
or for a sequence of decisions.  The objective is to select the
sequence of actions that return the highest total or cumulative
payoff.  In my research, I evolve Neural Networks with Genetic
Algorithms to learn and perform sequential decision tasks.  I am
particularly interested in tasks where problem-specific knowledge is
currently unavailable or costly to obtain.  Some domains that I have
studied include game playing, intelligent control, and constraint
satisfaction.  For more information, see my  list of publications. 
Education

 M.S. in Computer Science, The University
of Texas at Austin, 1994. 
 B.S. in Computer Science,  Tulane University, 1992.

Contact Information

  Office: 
 Taylor Hall 5.142 
 Phone: (512) 471-9585 
  Email address: 
 moriarty@cs.utexas.edu 
  Postal address:  
 The University of Texas at Austin 
 Department of Computer Sciences, TAY 2.124 
 Austin, TX  78712-1188 


Local Links


 UTCS Neural Networks home
page  

 AI lab home page
 

 UTCS home page  

 UT Austin home page  

Other Useful Links



Research Links  


Sports Links  


Misc. Links  



visitor number 
",non-course
"


M. Wade Barnes


M. Wade Barnes
mwbarnes@cs.utexas.edu

Research work



Helpful Web Pages


Type Mapping Literature


Literature research notes


Classes


Background information

Ph.D. student,

Department of Computer Sciences,

The University of Texas at Austin.

Education:

 M.Sc. Computer Sciences,

The University of Texas at Austin, 1996.
 M.Sc. Mining Engineering,

University of Utah, 1989.
 B.Sc. Mining Engineering,

University of Utah, 1978.


How to reach me

Home:

12011 Tanglebriar Trail
Austin, TX 78750
Ph: (512) 258-5159
On Campus:

No office yet
E-mail:


   mwbarnes@cs.utexas.edu



Author: M. Wade Barnes
Email: mwbarnes@cs.utexas.edu
Last Updated: Monday, December 23, 1996



",non-course
"Professor Nell B. Dale Website





Professor Nell B. Dale:Home Pages

University of Texas Computer Science Department

Welcome to my home page.  You have reached the web address of Dr. Nell B.
Dale, retired Senior Lecturer in Computer Sciences at the University of
Texas at Austin.  I received my Ph.D. in Computer Sciences in 1972 from UT
Austin and have been on the faculty here since 1975. I retired from
full-time teaching in the summer of 1994. I now teach a full load each Fall
and spend the Spring and Summer writing and traveling.


Please feel free to browse in any of my rooms: the resume room, which contains my curriculum vita, the bibliography room, which contains information on the text books I have authored or co-authored, the research room, which contains abstracts of
dissertations that I have co-chaired recently, and the personal room, which
contains mementos of my nontechnical interests.
Please direct any
correspondence to my e-mail account: ndale@cs.utexas.edu.


Professional Profile
Publications
Research Interests
Personal Interests





Nell B. Dale, 1200 Westlake Dr., Austin, Tx. 78746 (fax-office) 512-471-8885



This document was created with the assistance ofF.J.S.I. All rights reserved.
Last updated: Aug. 18, 1996.",non-course
"

 Neeraj's Pages 










 
 Your browser does not support frames... 
  
 
      To view my home page you can either  download
       Netscape Navigator 
      or view it  without frames .  
   

  

  NOTE: If you choose the latter, please keep in mind that my pages were designed to be viewed with Netscape
  2.0+...the pretty background colors I have chosen to use on some of my pages don't work with all browsers. 
  If you see an obnoxious chartreuse color on any of my pages, don't blame me...get Netscape 2.0+!!




",non-course
"Gnan's home page


Gnana Kumar Natarajan's Home Page 
Department of Computer Sciences
University of Texas - Austin

I am a graduate student in the Computer Science
department here at The University of Texas-Austin
  

 More about me .. 





 mail me 


ngk@cs.utexas.edu





Find out if i am logged in

",non-course
"

 NIMAR SINGH ARORA's home page 





Nimar S. Arora 
3001 Medical Arts # 117
Austin TX 78705.
home ph.: (512)-478 9565
off. ph.: (512)-471 9757.


Hi! I'm a typical first year PhD student who doesn't quite know
what his area of interest should be. 

You can look at my resume to know more about me. 

Alternatively you can look at my bookmarks
to get a clearer picture ;-). 

To contact me click here.


 L y c o s ~ S e a r c h ~ T o o l 


Query: 
Max-hits:
Min-terms:
Min-score:
Terse output:




You are visitor number  

",non-course
"UTCS Natural Language Acquistion Group

Natural Language Acquisition Group
at the Department of Computer Sciences  of the University of Texas at Austin

<!-- This is a comment>





We explore and discuss papers in the area of natural language acquisition
and learning. 
Our fall 1996 meetings, usually every other Wednesday at 2pm in TAY 2.122, have
drawn to a close.
We will probably resume our meetings during the second or third week of January 1997.





Currently proposed papers
-
Previously discussed papers
(1992,
1993,
1994,
1995,
1996)



Current participants include 
 Prof. Ray Mooney,
 Prof. Risto Miikkulainen, 
Bobby D. Bryant,
Mary Elaine Califf,
 Ulf Hermjakob,
Marty Mayberry,
Rupert Tang Lap Poon,
Cindi Thompson.

For more information, please contact the group's coordinator,
Ulf Hermjakob,
at  ulf@cs.utexas.edu



 Related Web Sites 

 
     Association for Computational Linguistics (ACL) 
  SIGNLL
(ACL Special Interest Group on Natural Language Learning) 
 The Computation and Language E-Print Archive 
  UTCS Machine Learning Research Group
  UTCS Neural Networks Research Group
AI Lab in the 
Department of Computer Sciences of
the  University of Texas at
Austin





Last updated on November 25, 1996 by 
 Ulf Hermjakob

",non-course
"

UTCS Neural Nets Research Group







The UTCS Neural Nets research group is supervised by Prof. Risto
Miikkulainen. The group is part of the 
Artificial Intelligence Lab and the Computer Science Department, at the
 University of Texas at
Austin.  Our research concentrates on artificial intelligence and
cognitive science, including natural language processing, schema-based
vision, cortical self-organization, episodic memory, decision making,
and evolving neural networks with genetic algorithms.  Click on the map
below for more details. 
New: Check out the hypertext book on  Lateral Interactions in the
Cortex: Structure and Function.






 Risto Miikkulainen |
   Graduate Students |
   Alumni & Visitors |
   Publications |

 Demos & Posters |
   Software |
   Home Pages |
   Conferences |

 Newsgroups |
   Archives |
   Information Sources |
   General Tools |

 Private Links





wusage





martym@cs.utexas.edu

",non-course
"


Gordon S. Novak Jr.








Gordon S. Novak Jr.



Support Free Speech on the Internet!


Associate Professor of
Computer Sciences at
The University of Texas at Austin.

Director, Artificial Intelligence
Laboratory.

  B.S.E.E., with highest honors, University of Texas at Austin, 1969.
    M.A., Computer Science, 1971.
    Ph.D., Computer Science, 1976.
 
Research:

Automatic Programming by reuse of generic
algorithms
Solving Physics Problems that are specified
informally
Artificial Intelligence

Curriculum Vitae:

Publications
Employment
Grants
Professional Activities, Honors
Curriculum Vitae

Free Software:

TMYCIN: an EMYCIN-like expert system shell.
X Interface for Gnu Common Lisp
Conversion of Units of Measurement

Software Demos: Some (*) are Under Construction.

Automatic Programming Server: (*)
Create Programs in Lisp or C.
VIP Demo:
Write Programs and Do Physics by Connecting Diagrams.
Unit Conversion Demo:
Convert Units of Measurement.
Isaac Demo:
Solve Physics Problems stated in English.
Lisp Server: Run Interactive Lisp.
Lisp / X Demo:
Interactive X Graphics from Lisp.
Draw:
Interactive Drawing using X Graphics from Lisp.

Classes:

CS 304P: Computer Science I using Scheme
CS 375: Compilers
CS 381K: Artificial Intelligence
CS 395T: Automatic Programming

Web Links
Weather
Addresses:

Gordon S. Novak Jr.
Computer Sciences C0500
TAY 2.124, Univ. of Texas at Austin
Austin
Texas 78712
USA

+1 512.471.9569 (my office)
+1 512.471.7316 (CS office)
+1 512.471.8885 FAX


novak@cs.utexas.edu



",non-course
"
Meghan O'Brien

Hi, I'm Meghan.  Welcome to my home page. (Please wipe your feet before
 entering.)



Due to many complaints about my ""crappy"", ""laughing stock of the Internet""  Web Page, I have removed all the links until I get a chance to work on it.  Thanks to all who sent in your insults.  


 Don't Panic 

Don't panic, you can still download that gorgeous picture of me and blow it up to poster size.  

  Beauty Queen   

 We have a date !!! 

For those of you waiting to hear, Paul and I are getting married on August 17.  Hope you can come (except for those of you who insulted my Web page). 





If anyone wants to give me a job, feel free to do so.  Here's my  resume.  


email: obrien@cs.utexas.edu


",non-course
"
Oguer Gutierrez




Oguer Gutierrez

The 
Department of Computer Sciences at The
University of Texas at Austin

Projects

OMI
OS
WWH

Links

Conferences on Database Systems

The World


Email:
oguer@cs.utexas.edu
",non-course
"

OOPS Research Group


OOPS Research Group

This is the home page for OOPS Research Group, supervised by 
 Prof. Paul R. Wilson. The graduate students
in the group are:


  Stephen Paul Carl
  Ajit George
  Mark S. Johnstone
  Sheetal V. Kakkad
  Scott F. Kaplan
  Donovan Kolbly
  Michael Neely
  Zhu Qing
  Douglas M. Van Wieren


 Research Areas 

 Memory hierarchies, especially persistent object stores,
distributed virtual memories, and caches.  We have developed a simple,
high-performance persistent store for C++, called  Texas, which uses  pointer swizzling at page fault time to
implement large address spaces efficiently on stock hardware and
operating systems, using standard compilers.

 Basic studies of program behavior and memory allocation, which
attempt to repair the damage done by three decades of mostly unsound
studies of memory allocation.  (See our extensive
 allocator survey  and
 (NEW!) Mike Neely's masters thesis.)

 Automatic storage management, especially real-time, generational
and distributed.  See Wilson's 
large and  small surveys on
garbage collection, and papers on efficiency and 
 locality of garbage collectors.
We have recently developed a hard 
real-time garbage collector (written in C++) which we use with C++
(via a ""smart pointer"" interface) and our object-oriented Scheme.

  Adaptive memory management
for virtual memory and file systems, especially dynamic grouping and
compression in log-structured file systems, and checkpointing for
fault tolerance and time-travel debugging.

 Implementation of highly extensible and portable programming
systems, including our new object-oriented extended Scheme system, RScheme,
which has threads, sockets, real-time GC, a TK interface, etc.  See
 Donovan Kolbly's home
page for more info, alpha release source code, etc.  Paul Wilson's
 course notes
on Scheme, Scheme interpretation and compilation (in raw
ASCII text), and
RScheme
are also available via ftp.

For a description our integrated macro-processing algorithm to
support extensible languages and open compilers, see
 (NEW!)
Stephen Carl's masters thesis (Note: this thesis
contains references to a couple of new papers we're writing which
aren't available yet, but will be (in draft form anyway) sometime
soon.) 

Also online is a draft of most of Paul Wilson's book-in-progress,
 (NEW!) An Introduction to Scheme and its Implementation  in html
format for web browsing.  This contains most (but not all) of the material
from the ASCII course notes on Scheme, in a much improved and expanded
presentation.  (It's about 300 standard texinfo pages so far.  More material
is in the works, including an intro to object systems and metaobjects.)
Besides being a good general introduction to the Scheme 
language, Scheme programming, and interpreters and compilers, it provides
a general introduction to things like macros---making it good background
reading for Stephen Carl's masters thesis.


A list of our papers, with brief descriptions,
is also available.


More papers, a bibliography on heap management, and the  source code for
Texas Persistent Store are available via anonymous ftp at 
ftp.cs.utexas.edu:/pub/garbage. The 
 README 
file lists all the available material including subdirectories which
contain collected papers from the 
1991 and 
1993 OOPSLA 
Garbage Collection and Memory Management Workshops.



People interested in garbage collection may also be interested in
 Henry Baker's
ftp site, although it's on an overloaded site and may not
be accessible (keep trying).  Another site of great interest is
 Hans Boehm's which
contains several papers as well as free source code for several
garbage collectors used with C, C++ and other languages.


Sheetal V. Kakkad


",non-course
"

Robert Otuomagie


Address

910 E 40 #B101,Austin, TX 78751

Phone

(512) 244-2443

Email

otu@cs.utexas.edu


Univerversity and Department Info
University


The CS Department at the University of T
xas

",non-course
"



Don Padgett




Don Padgett

Dissertation Research

I am working with Professor J.C. Browne on the design and
implementation of device control software (a.k.a. device drivers).  
We are investigating the creation of a domain-specific 
programming environment for constructing this class of 
software.


The focus of our work thus far has been on language and compiler 
technologies.  We have devised a prototype domain-specific language for 
specifying device control softare called VDL (Virtual Device Language).  
This language contains various features for reducing the effort 
required to construct this class of software.  A reference manual
for VDL is currently being constructed.  A  
postscript draft  of the manual is available for viewing.  
Example VDL specifications are also available for viewing.


VDL specifications for the 8253 Counter Component are available in 
the following files:

  c8253.pcn  (physical component interface file) 
  c8253.vcm  (virtual component implementation file) 
  c8253.vcx  (virtual component export file) 
  c8253.vcn  (virtual component interface file) 


VDL specifications for the PC-LPM-16 Multifunction I/O Device are 
available in the following files:

  lpm.pdn  (physical device interface file) 
  lpm.vdm  (virtual device implementation file) 
  lpm.vdx  (virtual device export file) 
  lpm.vdn  (virtual device interface file) 

 Transparencies  used in a recent presentation 
are also available for viewing.  They were created using Microsoft PowerPoint
Version 7.0b for Windows 95.


To Contact Me

EMAIL   padgett@cs.utexas.edu

POSTAL	Department of Computer Sciences 
	TAY 2.124, UT Austin
	Austin TX 78712 USA

FAX	+1 512.471.8885



",non-course
"

Home Page for Philip A. Hardin






Philip Hardin





About Me



*************************************************************
*                                                           *
* I plan to eliminate all bugs in all software, everywhere. *
*                                                           *
*************************************************************





But failing that, my fallback plan is to write a few games.

BattleBall(223k) is now accessible through this page!
The binary executable file is for the AIX 3.2 operating system, and unfortunately that's the only OS for which it's available (I want to port it to SunOS/Solaris, but I'm working and going to school...who has the time?)


BattleBall is a 3-D multiplayer game I wrote which runs
under X Windows.  It's about 7000 lines of C++ code that uses the C++
Standard Template Library and
A. T. Campbell's Binary Space Partition (BSP) tree library.
The image at the top of this page is a screenshot from BattleBall.


I'm a student here at the University of Texas at Austin in the (you guessed it) Computer Sciences department.  I'm interested in two research areas:
Geometric modeling/graphics

 the BSP tree - a really cool geometric model, and my main research interest
 CS 384G Computer Graphics

Software reuse/engineering

 Software Systems Generator Research Group
 CS 395T Automatic Programming


To Contact Me

EMAIL   pahardin@cs.utexas.edu

POSTAL  Computer Sciences C0500
        TAY 2.124, U.T. Austin
        Austin TX 78712 USA

NETREK  servers:  pita.nms.unt.edu, curly.cc.utexas.edu
        handle:   DigitalDisaster
                  (just look for the guy getting plastered, that's me)






Congradulations!  You are the 
th smartest person in
the universe.



",non-course
"

Paul McQuesten



Paul H. McQuesten


PhD Student
Department of Computer Science 
The University of Texas at Austin 

I'm interested in the interaction of learning and evolution.
Further, I think there are mechanisms in natural evolution that might be
practical additions to our current computer techniques:
for example, death is not usually studied explicitly.



Email:
paulmcq@cs.utexas.edu
Office:  Taylor Hall 5.142
Phone:  (512) 471-9585
Postal address: 
The University of Texas at Austin
Department of Computer Sciences, TAY 2.124
Austin, TX  78712-1188



Spring '96: I'm the Head TA for
CS304P:
Introduction to Pascal Programming
More neuro-evolution in

Moriarty's Research Links 
Learning and evolution at

CNR, Rome

Neural Networks research group 

Artificial Intelligence lab 

Course schedules: 
Computer Science department 

Handy access to
UT Library Online 

University of Texas at Austin 
Serious reflection at 
Dave Winer's Website 
If you need a pointer to how to waste hours web-surfing, check out
 
 Cynbe's Humongous Hotlist: Mixed Net Knowledge, Knick-Knacks & Nuts 


Last updated 1/10/96


",non-course
" Pawan Goyal's  Home Page 
  Research Summary
  Publications  

  Multimedia Network Protocols 
  Multimedia File Systems 
  Multimedia Operating Systems 

  Affiliation  
I am with the Multimedia Group at 
the  Department of Computer Sciences at  
The University of Texas at Austin.
 
 Getting in touch ... 

 
 email : pawang@cs.utexas.edu 
 
 Res (512) 371-3968  
Off  (512) 471-9507 
 Fax  (512) 471-7866 
 
 Res: 
      	109 W 39th St #214, 
       	Austin, TX 78751. 
Off: 
	The University of Texas at Austin 
	Department of Computer Sciences, TAY 2.124 
	Austin, TX 78712-1188 

 

For more information, you can  finger pawang@cs.utexas.edu.
 You can also check if I am logged on.

 


Comments to pawang@cs.utexas.edu 

",non-course
"












  Jose N. Pecina 












Jose N. Pecina



About Me

I obtained a PhD in Physics in May 1992
from the University of Texas at Austin. Previously I had completed a master in
Nuclear Engineering. Currently I am finishing a thesis to obtain the MSc in 
 Computer Sciences Department at The 
University of Texas at Austin.  During my graduate studies in physics I worked
investigating a gauge theory of gravity based on the group ISL(4,R). The aim 
was to quantize the gravitational field. I calculated the invariants for this 
group and their unitary irreducible representations. This was published in 
three joint papers with one of my dissertation advisors, Yuval Ne'eman (my 
other dissertation advisor was George Sudarshan) and with Jurgen Lemke from
Cologne, Germany. My previous position was in the Bureau of Economic Geology. 
I spent a year in a half working in seismic inversion tomography. My 
supervisor was Bob Hardage (Editor of GEOPHYSICS Journal of the Society of 
Exploration Geophysicists). My research interests in computer science is in 
algorithms, numerical analysis, parallel computation, cryptography, and the 
quantum computer. I have also been a research visitor in the Theory Group of The
Physics Department in Carnegie Mellon University, Pittsburgh, PA. Currently 
I have opened a company in scientific software development. I am interested in 
fill the gap between scientific and comercial software. My current interest in 
physics is in CPT symmetry, Lie algebras, Lie groups and its representations and 
invariants. I am also exploring numerical (sequential and parallel) solutions
in General Relativity problems and also in Quantum Chromodynamics



My Curriculum Vita

 click here 
if you want to print out my C.V.


To Contact Me



        Center for Particle Theory
        Physics Department
        The University of Texas at Austin
        Austin, TX 78712

or
        Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	   (512) 471-7316 (main office)
           (512) 499-8410 (my home in Austin)

FAX	   (512) 477-1553 (home)



E-mail -pecina@cs.utexas.edu 

or

pecina@physics.utexas.edu 

or

pecina@defoe.phys.cmu.edu 



",non-course
"
  P. K. Nettle  


Welcome to Kay's Unix corner


Info
Like anyone would want to know, so I'll make it really short.  Blah
blah, AIX System Adm, woof woof, X windows, TeX, blah, and other stuff


 
Eeek, the Unix staff escaped from the 4th floor again





""What do you mean the IBMs don't know what a .dvi file is after
I installed PTF12345?""

(The above story is true the name of the PTF was changed to protect the
innocent.)

Here is an experimental  FAQ  that I'm working one, 
please let me know what you think.

Some other useful or neat pages.


  
     IBM pages
     
 
     Cool Comic Page
     
 
     Buena Vista MoviePlex
     


Where can you find me
Your chances of finding me would increase drastically if you could employ
an Improbability Drive.  If you don't have one of those, send me mail.


pkn@cs.utexas.edu
 
",non-course
"

Greg Plaxton




Greg Plaxton
Greg Plaxton

Contact Information


Email:
plaxton@cs.utexas.edu


Phone:(512) 471-9751


Fax:(512) 471-8885


Office:Taylor Hall 3.132


Postal:
Department of Computer Science
Taylor Hall 2.124
University of Texas at Austin
Austin,
Texas 78712-1188



Other Information



annual report profile


publications.





Last modified: December 15, 1996
Greg Plaxton
plaxton@cs.utexas.edu



",non-course
"Bruce W. Porter
 
Bruce W. Porter

Associate Professor
 Faculty Fellow in Computer Sciences 

B.S. in Computer Science (1977), M.S. (1982), Ph.D. (1984) 
University of California, Irvine 

Honors, Awards, and Professional Service

 Presidential Young Investigator, 1988-93
 Editor, Machine Learning, 1990-present

Areas of Interest

Artificial intelligence, machine learning, and knowledge-based systems 
Summary of Research

Head of the 

knowledge-based systems research group.
Our research develops methods for building very large knowledge bases
and using them to solve problems and answer questions. Other research
interests are machine learning and case-based learning. 
Selected Recent Publications

 J. Rickel and B. Porter (1994),
Automated Modeling for Answering Prediction Questions: Selecting the
Time Scale and System Boundary, AAAI-94, pp. 1191-1198,
Cambridge, MA: AAIT/MIT Press. 
(
Abstract and

postscript).

 K. Branting and B. Porter (1991).
Rules and Precedents as Complementary Warrants,
AAAI-91, pp. 3-9.
(Abstract).

 R. Bareiss, B. Porter and R. Holte (1990).
Concept Learning and Heuristic Classification in Weak-Theory Domains,
Artificial Intelligence Journal, v45 (nos. 1-2), pp. 229-264.
(Abstract
and 

postscript).

WWW Hotlist


		Search for WWW site

		Search for WWW page

		Search for email address

		Search for AI publication

		Search for CS tech report


porter@cs.utexas.edu
",non-course
"




PSP group at UT Austin


PSP Group at UT Austin

This is the home page for the PSP group in the Department of Computer Sciences at The University of Texas at
Austin. PSP stands for Programs,
Specifications and Proofs.  The emphasis of the work of our group is to derive
parallel and distributed programs in a rigorous manner. The group is
supervised by Jayadev Misra, who developed the theories
 we work on. The research areas are: UNITY,
Powerlists and Seuss. 

Current and former members of the group
include:


 Jayadev Misra
 Will Adams
 Al Carruth
 Ernie Cohen  (graduated 1992)
 Rajeev Joshi
 Markus Kaltenbach (graduated 1996)
 Edgar Knapp (graduated 1992)
 Jacob Kornerup
 Ingolf Krüger (graduated 1996)
 Josyula R Rao (graduated 1992)
 Mark Staskauskas (graduated 1992)



Publications

Below we summarize the areas we work in; wherever possible we give links to
papers that are available electronically. 
 UNITY 

UNITY is a programming notation and a logic to reason about parallel and
distributed programs. Unity is presented in the book: J. Misra and K.
M. Chandy, Parallel Program Design: A Foundation,
Addison-Wesley, 1988. 

The notes on UNITY is a series of
papers presenting various results about UNITY and its applications. The
notes assumes a basic understanding of the UNITY theory as presented in
Chandy and Misra's book. 

Since the publication of the book several improvements have been made in
the theory, some of which are reflected in the notes on UNITY, Jayadev Misra has written a
manuscript for a book that presents the New
UNITY, this includes the introduction of a new temporal operator
co for specifying safety.

See further UNITY references for
references to other papers and implementations.
Markus Kaltenbach is currently writing a
symbolic model checker for
finite state UNITY programs, called the UNITY
Verifier (UV).
Al Carruth has extended the UNITY logic to
include real time aspects of computing and hybrid systems.

 Powerlists 

Powerlists is a notation for synchronous parallel programs and circuits.
The data structure is a list of length equal to a power of two, with two
different operations for balanced divisions of lists. Many parallel
algorithms have a succinct presentation  and simple proofs in the
powerlist notation. Jayadev Misra's paper Powerlists:
A Structure for Parallel Recursion presents the notation and gives
numerous examples of algorithms and proofs of their correctness,
including the Fast Fourier Transform and Batcher's sorting network.

Will Adams has studied how different arithmetic circuits, such as
adders and multipliers, can be specified and proved correct in the
powerlist notation. His paper Verifying adder
circuits using powerlists is available.
Jacob Kornerup has studied how powerlist programs
can be mapped efficiently to different parallel architectures, specially
hypercubes.  See his List of
papers for details.

 Seuss 

Seuss is an offspring of the work on UNITY. It addresses the issue of
program composition, by restricting how program components can
interfere with each other. For an introduction to Seuss, read the Overview of Seuss.  A few chapters from
a monograph A
Discipline of Multiprogramming written by Jayadev Misra are also
available. A compiler for Seuss that genrates C++ code and PVM calls
for message communicating networks is described in the thesis An
experiment in compiler design for a concurrent object-based
programming language of Ingolf
Krüger.

 FTP site 
Many of the above papers can be found in the
PSP ftp-site



Jacob Kornerup



",non-course
"

 Qiming Huang






 Qiming Huang 



Department of Computer Sciences
University of Texas at Austin 
Austin, Texas 78712


phone:  (512) 249-1874


email:  qiming@cs.utexas.edu



Received:
B.S. in Computer Science from Nankai University, Tianjin, PRC 
M.S. in Information & Computer Science from Univerisity of Hawaii at Manoa, Hawaii

Working on:
Ph.D. in Computer Science from University of Texas at Austin, Austin

Courses for Spring 1996 
Advanced Telecommunication(EE381k)
Client/Server System Development(MIS381)
Applied Data Communication Systems(MIS373)

 Academic Resources 
UT TeamWeb
 Information Center 
UTCSSA
Daily Texan
Stock Room
 Attractions 
Pictures
Images
Chinese Pop
Sending Cards by Electric Postcard
 On-line Jobs 
JobTrak
UT Placement Center
 Connections 
UT Gopher
FTP to CS
CS News
Telnet CS
Chen Yue's Junk Staff



Your are the 

th person to visit this page.  Please sign my guest book.

Guest Information and Comments



Guest Name:    
Guest Email:   
Guest Comments:









This page is under construction.
  Last modified: March 27, 1996
Mail comment to: qiming@cs.utexas.edu


",non-course
"Qualitative Reasoning Research at UTexas


Qualitative Reasoning Research at UTexas

The Qualitative Reasoning (QR) research group does research in 
several areas.


  Qualitative Reasoning about the
Physical World (QSIM). 

  Indexed bibliography of our
research papers.
    QSIM Users: applications of QSIM-like systems.
   
  Spatial Reasoning and Intelligent
Robotics (TOUR and SSH). 

  Indexed bibliography of our
research papers.
   
  Access-Limited Logic for Knowledge
Representation (Algernon). 

  Indexed bibliography of our
research papers.
   


The QR group is supervised by Professor  Benjamin
Kuipers (kuipers@cs.utexas.edu).  It is part of the  Artificial Intelligence Lab and the Computer Science Department, at
the  University of Texas at
Austin.
  
 Pointers 

 What's New. 
 The Qualitative Reasoning book 
 Graduate students: 
  
 in Qualitative Reasoning,
    in Robotics,
    in Knowledge Representation.
  
 Alumni (including dissertations) and visitors all over the world.
  
 Dissertation abstracts,
  
 Yellow Pages.


Papers and software are most easily accessible via the research area
descriptions, but you can also visit our:
 
 
       FTP directory for papers;
   
       FTP directory for software and other documents.
 

BJK
",non-course
"



Qiang Zuo (John)'s Home Page














Qiang Zuo (John) 

's  Home Page








  since 02/20/96.  Thanks for comming. 
: Austin Time 


Who am I: Self Introduction ?
I'm currently in the Master program of 
Computer Sciences Department,
University of Texas at Austin.
Please click here 
for more information.

 
SERIOUS
JUNK





 Computer Courses 



                 CS Languages 


 About UNIX 



 Computer Graphics 


 Linux 


Windows Programming




                        X Programming 



                        Technical CS Lib 



                     Java





 
REAL
JUNK

  Sports 
  Games 
  News 




 
STRUGGLE
FOR
LIVING





 Institutes 


 Job & Resume 


 Organizations 



 Net Starting Points 



                        Free World Dialup Service 


 Net and Net 



 Finance 


 Reference Book 


 Company Profile 







To Contact Me

Campus Addres: 5106 N. Lamar #109, Austin, TX 78751
 Campus Phone: +1-(512)-459-9287 (H)
Home Address:  9001 S. Braeswood, Apt 1201, Houston, TX 77074 
Phone       :  +1 (713) 988-4967 
<qzuo@cs.utexas.edu> 


 Guestbook  


This page is still underconstruction.
Welcome Back

/Last modificat
ion: 01/22/96.


 copyright Qiang Zuo 1995



",non-course
"

Robert Blumofe




Robert Blumofe
I generally go by ""Bobby,""
and my last name is pronounced ""Bloom-off.""

General information
Assistant Professor of
Computer Sciences,

The University of Texas at Austin.

 Ph.D. in Computer Science,

Massachusetts Institute of Technology, 1995.
 M.S. in Computer Science,

Massachusetts Institute of Technology, 1992.
 Sc.B. in Computer Science,

Brown University, 1988.

I work on the Cilk
multithreaded language and runtime system in the Laboratory for Experimental Software Systems
(LESS).
I have compiled a list of my papers.
Papers and other documents are also available from my ftp directory.
This semester (Spring 1997), I am teaching CS328:
Abstract Data Types.

Contact information


Email:
rdb@cs.utexas.edu


Phone:(512) 471-9557


Fax:(512) 471-8885


Office:4.118 Taylor Hall


Postal:
Department of Computer Sciences
Taylor Hall 2.124
The University of Texas at Austin
Austin,
Texas 78712-1188






Last modified: December 18, 1996
Robert Blumofe
rdb@cs.utexas.edu



",non-course
"
Rwo-Hsi Wang's Homepage


Rwo-Hsi Wang

Welcome!  I am currently constructing this page and 
will add more contents as time permits.

About Myself

 I am currently a PhD candidate in the University of 
Texas at Austin.  

 My research interests include
 real-time systems,
rule-based program timing analysis, software engineering,
artificial intelligence, and computer Go.

Publications

I have a list of publications available for browsing,
if you have interest.



This page was last updated on Tue Jan 16 02:25:08 CST 1996.
Please send your comments to 
rhwang@cs.utexas.edu.



",non-course
"Risto Miikkulainen
Risto Miikkulainen


Associate Professor of Computer
Sciences,  the University of
Texas at Austin.


 Ph.D. in Computer Science, UCLA, 1990
 M.S. in Applied Mathematics, Helsinki University of Technology, 1986

Research Interests

The research in my group concentrates on modeling cognitive processes
with artificial neural networks. Current work includes models of language
acquisition, episodic memory, self-organization of the visual cortex,
and schema-based vision.  We are also working on evolving neural networks
with genetic algorithms, where the goal is to automatically discover
sequential decision strategies for problem solving and robotics.

For more details, see the   
UTCS Neural Networks Research Group home page .

Classes



Spring 1996:
 CS381K Artificial Intelligence  (graduate lecture course)
Fall 1996:
 CS378  Neural Networks  (undergraduate lecture course)
Fall 1996:
 CS395T Cognitive Science  (graduate seminar)
Spring 1997:
 CS381K Artificial Intelligence  (graduate lecture course)
Contact Information

 Office: 4.142A Taylor Hall
 Email address: risto@cs.utexas.edu 
 Phone: (512) 471-9571
 Fax: (512) 471-8885
 Postal address:

Department of Computer Sciences 
The University of Texas at Austin 
Austin, TX  78712-1188 USA 

 Finger. 
",non-course
"












rong@bigfoot.com




",non-course
"

Rajmohan Rajaraman's home page



Rajmohan Rajaraman

 I am a graduate student in the Department of Computer Sciences at
the  University of Texas at
Austin.  I am planning to complete my Ph.D. in Spring 1997.  My
dissertation supervisor is Greg
Plaxton.  


Research: I am a member of the UT Algorithms and
Computational Theory Group.  I am particularly interested in
combinatorics, distributed network algorithms, online algorithms,
parallel models of computation, and randomness.  Here are a list of my
publications and my curriculum vita.



Some useful links related to computer science


Miscellaneous links



Contact Information

 Email: 

rraj@cs.utexas.edu
 Home:
 
109, W39th, #214 
Austin, TX 78751 
Phone: (512) 371 3968   
 Office: 

UA9 4.106E
Phone: (512) 471 9750
 Postal:

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124
Austin, TX 78712-1188 


rraj@cs.utexas.edu


",non-course
"

Rong Tan's Homepage



A  RONG TAN 
 HOMEPAGE
 From Here to China





China homepage.

Jinan, my
hometown, and the capital of Shandong Province.

Tsinghua University, where I got
my B.E. in Department of Computer
Science and Technology.

Beijing, the capital of
the People's Republic of
China, and where I spent my five college years.

Hua Xia Wen Zhai.

Sinanet Homepage.



 Austin, Texas




Austin, the city I now live in.


Weather for Austin.


Apartments for rent in Austin.



 The Graduate, in UTCS




The University of Texas at Austin.

Department of Computer Sciences.

UTNetCAT:
the Web-browsable online catalog of UT libraries.

utACCESS: UT Austin
Information Services.

Login to UTCAT/utACCESS.

Courses for fall, 1996:


CS 395T: Web Operating Systems
Dynamic file replication -- our final project.


CS 384G: Computer Graphics

CS 388L: Introduction to Mathematical Logic

CS 195T: Introduction to Graduate Computer Science




 All Those Movies





Austin Chronicle Film Times.


Yahoo! - Entertainment: Movies and Films

Microsoft Cinemania Online
All-Movie Guide
Hollywood Online
Internet Movie Database
Roger Ebert on Movies
Visit my movie page.





CONTACT

Mailing Address
4003 Red River St. #A104
Austin, TX 78751

Telephone
(512)302-5762 

Email
rtan@cs.utexas.edu 

Finger
click here 




LAST MODIFIED: Dec 7, 1996


",non-course
"


Rupert Tang's Home Page




 Rupert Tang 

 Ph.D. student, Dept of Computer Sciences, 
    The University of Texas at Austin. 

B.S. in Computer Sciences, The University of Texas at Austin, Austin, TX, May 1995.


""It is almost a miracle that modern teaching methods have not yet entirely strangled the holy curiousity of inquiry; for what this delicate little plant needs more than anything, besides stimulation, is freedom."" 

""I think life would really be empty if one is deprived of opportunities, if one always has to choose alternatives to his distaste, or if one is denied of actualization of his little wish or aspiration under a fearful duress of the ""fate"". I would think such a life is not much different from that of a car, a truck, or a washing machine.""


Nice to meet you here.






 A Completely Cool and New Service 

 Just to let you know

 Academic Interests 

 Research

 Messy Area 









 This page is under construction as it will always be. 



  rupert@cs.utexas.edu  
 Updated: Aug 26, 1996 


",non-course
"

Ruwei Hu's Homepage










Frame ALERT! 
If you are seeing this message, you are using a browser that do not support FRAMES. 
 
Click  here  to see a non-frame version of this 
document. 
 
Or, you could download Netscape Navigator




",non-course
"Robert A. van de Geijn

 
Robert A. van de Geijn


Associate Professor
 

  Department of Computer Sciences 
 and
  Texas Institute for Computational and Applied
Mathematics 
  The University of Texas at Austin 
 Austin, TX 78712
 Phone: (512) 471-9720
 Fax: (512) 471-8885
 e-mail: rvdg@cs.utexas.edu
 www: http://www.cs.utexas.edu/users/rvdg
 

B.S. in Mathematics and Computer Science (1981) 
University of Wisconsin-Madison 

Ph.D. in 

Applied Mathematics  (1987) 
University of Maryland College Park 

Areas of Interest

Numerical analysis, parallel supercomputing, scientific 
computing 
Summary of Research

The introduction of parallel computers has forced a re-evaluation of
traditional numerical methods that were developed for sequential
machines. In some cases, the techniques continue to be useful; in
other cases, new methods may prove to perform better. My research
concentrates on the development of parallel techniques for
implementing numerical methods as well as an environment that allows
such methods to be easily implemented on various parallel
processors. 

 More Information about our Graduate Programs 

  Computer Sciences 
  Computational and Applied Mathematics 



 Workshops 


 Parallel Infrastructures for Applications,  
 April 22-23, 1996,  UT-Austin.


 Current Projects 


  The InterCom Project  

  The PLAPACK Project  

  The SL_library  



 Publications 


  Books  

  Journal Publications  

  Conference Publications  

 Technical Reports  

  Tutorials  



  Major Software Efforts   


 Classes 

  Fall 1996: CS 367 

  Schedule  

  Current and Former Students  


  Meet the Family  

",non-course
"


Sundeep Abraham's Home Page





Sundeep
Abraham 

 I am a Masters Student in the 
Computer
Sciences Dept. at University
of Texas at Austin. I did my undergraduate studies in Computer Sciences
and Engineering at 
Regional Engg College, Calicut in India. 

My home country is India .
In India I hail from the state of Kerala . 



To know how to contact me click here 

This home page is under construction (i.e. I tinker
with it from time to time). 

Hi, you are visitor number :  


",non-course
"

Sammy at UT












  AltaVista 
  StartingPoint 
  Yahoo 
  Lycos 
  Maps 
  Reference 
  Weather 
  White Pages 
  Yellow Pages 
  CNN 







 Department of Computer Science 
            University of Texas at Austin 
sammy@cs.utexas.edu 





 






Congress shall make no law respecting an establishment of religion, or
prohibiting the free exercise thereof; or abridging the freedom of
speech, or of the press; or the right of the people peaceably to
assemble, and to petition the government for a redress of grievances.




 The Constitution of the United States of America 






  Research

  Prof. Calvin Lin 
  Prof. Robert van de Geijn 
  The ZPL Project 
  Parallel Linear Algebra Package 



  Schedule 

 
			cs381k - Artificial Intelligence 
 
			cs395T - Topics in Distributed Computing 
 
			cs395T - Parallel Languages and Compilers 
 
			cs380L - Advanced Operating Systems 





  Projects/Experiments 

  World Wide Herbarium 
  PLAPACKERs Sign-In Page 
  Hypertext C-code 
  Anagram Server 



   University of Texas  

 Department of Computer Science 
 UT Library (WWW) 
 UT Library (tn3270)





  Friends 

 Nils ""Virtual-Man"" Reker
 Yanni (not the musician)
 Jeff (aka Mr. Hockey)
 Andrea 
 Hamilton Technologies, Inc.



  Family

 ""Pops"" Guyer: JHU Public Health 
  Mom: Northwestern Anthropology 
 Kate
	   Nate
	




  Activities 

 Texas Swimming
 Swimming Links 
  The Yellow Pages of Swimming 



  Entertainment 

  Mr. Showbiz
	           
 The Austin Chronicle
  Pollstar Concert Database
	           
 







  Computers 

  HTML Quick Reference Guide 
  CLC Research 
  Dell 
  Fringe Ryder Laptop Info 
  World Wide Web Consortium 



  Miscellaneous 

  The Boston-Cam 
  HotList-List 
  Travelocity 











 Office Address 
      Taylor Hall 5.112 
      Department of Computer Science 
      University of Texas at Austin 
      Austin, TX 78712 
      (512) 471-9578
    

 Home Address
      9417 Great Hills Trl Apt 2048 
      Austin, TX 78759-6363 
      (512) 349-2419
    





    sammy@cs.utexas.edu


The opinions expressed here are mine and do not necessarily represent the views of the University of Texas. 

 Last Update: 9/9/96  


",non-course
"


Jun Sawada
Jun Sawada
Contact information:

 Email address:
 sawada@cs.utexas.edu
 office:
 Main 2003, (512)471-9744
 Mailing Address:
 Univ. of Texas, Department of Computer Science,
 Taylor Hall 2.124, Austin, TX, 78712-1188, USA
 Home Mailing Address:
 2001 Wooten Dr., Austin, TX, 78757, (512)206-0656

Dissertation Oral Proposal:
  Time, Place and Abstract 
  Proposal Paper  PS File - 119kB
  Supplementary Technical Report  PS File - 241kB

Resources:
 Acl2
 Common Lisp Language, 2nd Edition
 Bowen's Formal Methods Page
 BYU Formal methods around the world
 PVS
Other Frequently Accessed Pages:
 UT Austin CS Department
 
       My Teachers and Fellows
 Computational Logic Inc
 Boyer's Class Information
",non-course
"


SSGRG Title Page



Welcome to the home page of the Software Systems Generator 
Research Group! 
Software system generators are tools for assembling complex software from 
interchangeable, reusable components. We have developed GenVoca, a 
domain-independent model of software construction that defines systems as algebraic 
equations, where terms are components. GenVoca has been successfully applied to 
many domains including database management systems, avionics, and data structures. 
Our results have demonstrated GenVoca generators can substantially improve 
productivity and application run-time performance. 
If this is your first visit and you have questions on what is the best place to start, take a look at Getting Started. 



Research Group Members 
Getting Started 
Project Index 
Publications 
Software Distributions 



Related Web Pages:  UTCS General 


 Members 
Don Batory Professor
Angela Dappert Ph.D. Student
Guillermo Jimenez-PerezPh.D. Student
Jeff ThomasPh.D. Student
Lance Tokuda Ph.D. Student
Yannis Smaragdakis Ph.D. Student
K.T ShepherdResearch Associate

Former Members 
and Graduation DatesDinesh DasPh.D. May 1995
Millie VillarrealPh.D. December 1994
Bart GeraciPostdoc Sep 1993 - Sep 1994
Marty SirkinPh.D. March 1994
Sankar DasariM.Sc. May 1994


Overview (Getting Started)
Software components that are used by generators to build software systems are not typical software modules. Components 
encapsulate a feature of a domain that many systems of that domain may share. For this to be possible, components must encapsulate 
refinements of many different parts (e.g., classes) of a software system. Some of these refinements require the manipulation of 
metadata and reflective computations. Thus, it is likely that our basic approach goes beyond simple object-orientation to that of 
large-scale program transformations. 

To get a feel for the basic issues involved and the breadth of 
GenVoca's applicability, I'd recommend the following papers for 
starters (and read them in this order): 
Scalable Software Libraries 
Creating Reference Architectures... 
The Design and Implementation... 
Composition Validation and Subjectivity... 



If you are looking for specific results (improvement in productivity, 
performance) that can be delivered by generators, or the 
relationship of our work to design patterns, check out (in order): 
Reengineering a Complex Application... 
P2: A Lightweight DBMS Generator 
Memory Simulators and Software Generators
Automated Software Evolution via Design Patterns... 



For further information, please contact Don Batory (batory@cs.utexas.edu). Periodically, I release lecture notes for my tutorial on 
""Software System Generators, Architectures, and Reuse"". When available, lecture notes are distributed as a tar file containing 
compressed postscript files. 

Last modified: December 24, 1996

Don Batory (batory@cs.utexas.edu) 


",non-course
"Scott's Really Basic Home Page
Scott's Really Basic Home Page

Okay, long overdue, a slight update to my pages.  That doesn't mean that they're going to look at all fancy--expect very little.  But at least they'll be a little more current.

If you're interested here's some 
information about me.

Work stuff:

The University of Texas at Austin CS department.  I've finished one year, and I'm trying not to think of how many more I have to go.
The OOPS Group, the research group with which I'm working within UTCS.  Interesting systems and languages research (I think).
The class for which I am the TA, Object-Oriented Design in C++.  The instructor for that class is Glenn Downing.
Amherst College, a great place to spend your undergraduate days.  While there, most of my time was spent (not unpredictably) with the Amherst College CS department.
The Santa Fe Institute.  An amazing place where I spent one summer working.  A different kind of research, and not only CS-oriented.

Hobby stuff

It's not perfect, but Linux is invaluable to me.
Texas Squash home page
The Mead home page.  Like wine and/or beer? (Who doesn't?) Try this stuff.
Psion, Inc.  Makers of a very cool palmtop.  Without it, I would forget my own name.

People stuff:

Ted Anastasiou.  You wanted more people to check your page, Ted?  Well, I'm trying.
Dan Sharp.  An amazing home page, and a guy with too much free time.

Neat-o stuff:
Just a few miscellaneous items, in no particular order.

If you're in Austin, check out the Austin Dining Guide.  Actually this page has more than just that information about Austin, but I think that's the most important part.
Citizen Poke.  A good humor rag from Amherst, published in PDF.
Apple Computer.  They still do some things right, and my IIci lasted forever.  Alas, I'm no longer so sure that they have a very bright future.
Be.   A new type of machine, the BeBox, looks like it could be neat.


It's a simple page, but it'll do.  Better than nothing, and hey, you probably didn't have to wait for five minutes for it to load, right?  If you want to send me email, this page is maintained by me: sfkaplan@cs.utexas.edu.  But before you do that, you might want to grab my PGP key, which includes some links to information on PGP and encryption in general.

",non-course
"

 Prashant Shenoy's Home Page 



  
Prashant Shenoy  
 Welcome to my home Page !  


  

 Getting in touch ... 

 
 email : shenoy@cs.utexas.edu 
 
  +1-512-454-3070 Res 
  +1-512-471-9780 Off 
  +1-512-471-7866 Fax 
 
 Res: 
      	4003 Red River, # A-102, 
       	Austin, TX 78751. 
Off: 
	The University of Texas at Austin 
	Department of Computer Sciences, TAY 2.124 
	Austin, TX 78712-1188 
 My office :
 Main Tower 2002  (20th floor of the 
Main Building)  

 
For more information, you can  finger shenoy@cs.utexas.edu.
 You can also check if I am logged on.

 
 What I do .. 

I am with the Multimedia Group at 
the  Department of Computer Sciences at  
The University of Texas at Austin.
 A list of my recent publications is available  online .
 Comments to shenoy@cs.utexas.edu 




",non-course
"


 Shaobing Ma's Cyberhome 






Welcome to the Cyberhome of
 Shaobing Ma 





 

 
	Currently I am Ph.D Student in the 
	Department of Computer Science,
	University of Texas at Austin. 
	Want to know more about me? check with 




 
 

Ongoing Works

 
 Hardvare Verifcation 
 Computer Networking 
	 VLSI Final Project(Fall, 95)

  


Bookshelf


  


 Coffee table 

  

UT campus and Austin city
  

 
Make Contact
 
	1300 S. Pleasant Valley #181, Austin, TX 78741
  
	(512)448-9682
 

	shma@cs.utexas.edu
 

	Finger me



",non-course
"


Shailesh Kumar



Shailesh Kumar




The University of Texas at Austin
Department of Computer Sciences
Taylor Hall 2.124
Austin, TX 78712
skumar@cs.utexas.edu


My Resume
Research Interests and Publications
Contact me
SRCM : My Spiritual Affiliation
What Internet has to offer


Some Links

Cognitive Science
UTCS Neural Network Research
UTCS Machine Learning Research group


Research Interest

 Artificial Intelligence / Artificial Life
 Neuroevolution  
 Neural Network applications 
 Genetic Algorithms 
 Cellular Automata
 Chaos and nonlinear dynamics
 Fuzzy Logic 
 Massively Parallel Processors 


Publications

ON-LINE ADAPTATION OF  A SIGNAL PREDISTORTER THROUGH DUAL REINFORCEMENT LEARNING (7 pages) 
Patrick Goetz(1), Shailesh Kumar(2) and Risto Miikkulainen(2) 
    (1) Computational and Applied Mathematics, The University of Texas at Austin. 
    (2) Department of Computer Sciences, The University of Texas at Austin. 
    Machine Learning: Proceedings of the 13th Annual Conference (Bari, Italy), 1996. 
OBJECT BASED EVOLUTION PROGRAMMING : Shailesh Kumar,S.V.Borde, Y.P.Singh : Symposium on Genetic Algorithms, (Aprl, 1995, India)


Contact me
 Snail mail  2808, Whitis Avenue Apt # 101, Austin, TX-78705, USA.
 Phone 
home  : +1-512-474-9556
office: +1-512-471-9779


What Internet has to offer

Net Assistance
S/w Quality Institute
India
Some Music!!

",non-course
"


Smaragdakis Yannis, UTCS





Yannis Smaragdakis,  UTCS
 Position:   Graduate Student

 Interests:   Alchemy 

 Project:   Turning lead into gold (moderate success so far)


 Plan:   a scheme for making, doing, or arranging something;
project; program. (Webster's New World Dictionary)
 But Seriously... 
I am a PhD student in the UT Department of Computer Sciences. My main research interests lie in the areas of meta-programming systems and applications (particularly software generators).














Research   |   Photo Album   |   Favorite Sites





smaragd@cs.utexas.edu
Yannis Smaragdakis
University of Texas at Austin 
Computer Sciences Department
TAY 2.124
Austin, TX 78712
Phone: (512) 471-9711
Fax: (512) 471-7866



",non-course
" My Homepage (Edward M Son)



Danger! Construction Site! 
-Falling Asphalt Bodies-

-My Resume-



	""tell me, do you like to dance under the shadow of the moonlight?""

  

	
	^
click to email

	email: son@cs.utexas.edu


	
	Personal Data 
	Strictly on need to know basis.	
	Please send what you can- your effort is duly noted.

	Pictures
 Some Interesting Links 


The Greatest Experience 

Stimulating the Nerve Center 

I Wouldn't Go Here... I mean absolutely do not ""GO HERE""! 

And Please Don't Ever Go in Here 

For the Dying Man 

Ignore the Previous Link

 Other Links 

  minion1 
  minion2 
  minion3 

 Recent Additions 


	    Field Trip

	    His Pania 

	    What's Up? 


Haiku
like a leaf afloat
		a winding stream,
		eddys, and waterfalls,
the meaning of life.
WoW!

        - you were visitor -
	1,102,731

",non-course
"
Art Souther
Art Souther
Research
Building KBs. Member of the 

knowledge-based systems research group.


Contact Information

 Email:  souther@cs.utexas.edu 
 Work:   (512) 471-9574
 Mail:
   Computer Science Department
   University of Texas at Austin
   Austin, Texas 78712

WWW Hotlist


		Search for WWW site

		Search for WWW page

		Search for email address

		Search for AI publication

		Search for CS tech report


souther@cs.utexas.edu
",non-course
"Sowmya Ramachandran
Sowmya Ramachandran
Machine Learning Research Group
University of Texas at Austin

Research

My research is in the area of Machine Learning in the field of
Artifical Intelligence. I am interested in the problem of learning
Bayesian networks from examples. Learning a Bayesian network with
hidden variables is a challenge. My approach is to apply 
symbolic and connectionist theory revision techniques to address this
problem.

I am also very interested in designing and creating multimedia
applications. 

Here is my resume,  and a list of my 
papers. 


Education

 M.S. in Computer Sciences,  Rutgers University, 1991.
   B.Tech. in Computer Science,  Indian Institute of Technology,  Madras, India 1987.

Contact Information

  Office: 
 Taylor Hall 150C  	
Phone: (512) 471-9767 
  Email address: 
 sowmya@cs.utexas.edu 
  Postal address:  

The University of Texas at Austin 
Department of Computer Sciences, TAY 2.124 
Austin, TX  78712-1188 

",non-course
"


 Sriram Rao - Home Page 









Sriram Rao

Current Research:

Involved in the design/implementation of a Multimedia File System

Operating Systems support for Multimedia

I am working in the Multimedia
Group at the Computer Sciences
Department ,
The University of Texas at Austin.
My advisor is Prof. Harrick
Vin
Publications
Mine
Group

Contact Information



Office






TAY 4.115A
(512) 471-9507


TAY 5.152
(512) 471-9589



Email :
sriram@cs.utexas.edu




Department of Computer Sciences, TAY 2.124
The University of Texas at Austin
Austin, TX 78712-1188




Miscellaneous
Other
Interesting WWW Pages
Pictures
of UT Tower
Austin is
the capital of Texas and is located in the Central Texas hill country.
Click Here
for more information on Austin Kannada Koota.
Click Here for information
about Austin Tamil Sangam.
If you have comments,
please free to send me e-mail.


",non-course
"

The Tiger's Den 








Frame ALERT!
 
If you are seeing this message, you are using a frame challenged browser. 


Click  here  to see a non-frame version of this 
document. 

 
Or, you could download Netscape Navigator








",non-course
"

Sunghee Choi


Sunghee Choi

Welcome to my home page. This page is under construction.
Hi!
   
I am in Master's program in the Department of Computer Sciences at the University of Texas at Austin.

Education:

  B.S. in Computer Engineering, Seoul National University, Seoul, Korea, 
August, 1995. 
 

Work Experiences:

 1996.6 - present : System Administrator for the Department of Chemical Engineering at the University of Texas at Austin.
   1995.9 - 1996.5   : Graduate Research Assistant for  Prof. Aloysius Mok in  UTCS Real-time Systems Research Group.
  

Contact Information:

Work: (512) 471-1024 (CPE 5.440)   
Home: 1700 Nueces #102 Austin, TX 78701  (512) 472-9128  


Click here to see the list of machines I'm currently logged in.  
Click here to finger me.



Author: Sunghee Choi
Email: sunghee@cs.utexas.edu
Last Updated: September 24, 1996


|  UTCS home |
  UT home |


",non-course
"

Home Page for Sheetal V. Kakkad


Sheetal V. Kakkad
Contact Information

 Office:
 Taylor Hall 5.144 
 Postal Address:

The University of Texas at Austin 
Department of Computer Sciences 
Taylor Hall 2.124 
Austin, TX 78712-1188 


I am usually available in my office, but the best way to reach me is
via email.  Here's my full finger information.
Research Information

I am a member of the  OOPS Research Group in
the  Department of Computer Sciences at 
The University of Texas at Austin.


As part of my Ph.D. research, I have implemented a persistent storage
system, called Texas, for C++. It provides easy persistence,
while using a novel technique called ""pointer swizzling at page fault
time"" to efficiently support large addresses on standard hardware.

For more information, please see the list of my
publications (along with brief descriptions). 

I plan to graduate with a Ph.D. in Computer Science in May 1996. My
resume is available in Postscript. 

I am currently working at Motorola at Somerset Design Center, while
finishing up my Ph.D. in Computer Science.



January 29, 1996 
Sheetal V. Kakkad 
Department of Computer Sciences, 
The University of Texas at Austin 
svkakkad@cs.utexas.edu



",non-course
"



Home Page for YU, SHENGMING





 



Welcome to  Shengming Yu's Homepage





About Me

I am Ph.D Student in the
        Department of Computer Science
,
        University of Texas at Austin
.

        Want to know more about me? check here.









My classmates







Class 8811  of University of Sci
ence and Technology of China (USTC) 

Class 9381 of the Graduate school of Chinese Academy of 
Sciences








Useful UT links






UT campus

 UT Registrar


 UT Gradaute Studies

UT Library

utACCESS

Chinese Students and Scholars Association






China and Chinese






China

Internet Distribut
ed Chinese Magazines

Tsinghua WWW and BBS

NCIC WWW and BBS

Chinese Novels

Chinese Classics







About Austin








What's the Weather Today?

Austin City
Limits

Classified Ads.

Items for sale in Austin






To Contact Me


        Address: 2910 Medical Arts, Apt. 306, Austin, Texas 78705



        Voice:  (512) 494-1148 (H)



        Email: syu@cs.utexas.edu



        Finger me





Your comments and suggestions are
 highly appreciated.


You are the th visitor
since October 25, 1996.




",non-course
"

Tao Wang










Frame ALERT! 
If you are seeing this message, you are using a browser that do not support FRAMES. 
 
Click  here  to see a non-frame version of this 
document. 
 
Or, you could download Netscape Navigator




",non-course
"

 
 Welcome to my home page 



 This page is under construction .... 



",non-course
" 
Renu Tewari




Renu Tewari
What's up Doc?



Address

HOME: 203, W 39th St. #201 
Austin TX 78751
 
 (512)-419-0629 Home 
 (512)-471-9572 Off (TAY 5.104) 
 (512)-471-9507 Lab (TAY 4.115A) 
 (512)-471-9738 Lab (TAY 2.148)  
 (512)-471-9735 Lab (TAY 139) 
 (914)-592-3558 NY 
Email:  <tewari@cs.utexas.edu>


 All Work.. 
 Multimedia Computing   

 Dept. of Computer Science 


 University of Texas at Austin


  Austin TX  


 PUBLICATIONS 

Some of the work was done during my internship at the  
T.J. Watson Research Center 


 And some play... 
Interesting Sites 

Bored? Send Comments..



Your name (optional)








 
",non-course
"
Lyn Tumlin Pierce



(photo by Brenda Ladd Photography)
Lyn Tumlin Pierce

 Interesting random stuff 

Coming soon!  Stay tuned!. 


 Research 

I am interested in issues of security in distributed systems.  At present I
am studying formalisms (e.g. BAN logic) for developing and analyzing authentication
protocols.

I have done some work in the use of formal methods for synthesis, 
specification and verification of parallel and distributed systems.  I am
working on a paper on the synthesis of resource controllers that communicate
with their clients by means of queued messages.  (For a draft of this paper,
see ""Synthesis of Distributed Control Systems"".)

In addition, I am a student research assistant at Applied Research Laboratories.  I am currently working a project to investigate using evolutionary computation techniques (e.g. genetic algorithms) to develop finite state machines.  For more information on this project, click here.

My resume is available here in both HTML and PostScript formats. 


 Contact Information 

 Office:
 Taylor Hall 5.104, Phone (512) 471-9572
 Email address:
 tumlin@cs.utexas.edu
 Postal address:

12166 Metric Blvd. #270 
Austin, TX 78758 



This page was last updated on 4-November-1996.
This page has been accessed 
 times since November 4 1996.

tumlin@cs.utexas.edu



",non-course
"



Tong Wang's Home Page




Netscape 2 is recommended to view Chinese and listen to this page. This page contains Java Applets. 






 Visit our MPEG Viewer Demo Page! It's written in pure Java. 








Tong Wang (ÍõÍ®)




About Me ...
From Nanjing (Nanking, ÄÏ¾©), People's Republic of China (ÖÐ¹ú).
 I'm currently in the Ph.D. program of Computer Sciences Department,

 University of Texas at Austin.
I'm seeking a full-time job, here is my resume in HTML format! Click here for postscript format. 

 B.S., Shanghai Jiao Tong Univeristy (ÉÏº£½»Í¨´óÑ§), Shanghai, P.R.China, 1992
 M.S., Tsinghua University (Çå»ª´óÑ§), Beijing, P.R.China,1995


New Jersey Summer
Lucent Technologies ( a new systems and technology company formed as
a result of AT&T's planned restructuring ), Bell Laboratories 
is the company I was working for this
summer. Here is another homepage for Lucent Technologies.




Life in UT-Austin
 Course Work




 Spring 1996


Fall 1995 


Fall 1996 




 
	Distributed Computing II 
	(Prof. Misra)
    Communication Networks (Prof. Gouda)
    Theory of Computation
	(Prof. Zuckerman )




 
	Distributed Computing I 
	(Prof. Misra)
    Database Systems Implementation
	(Prof. Batory)
    Algorithms: Technique and theory (Prof. Plexton)




 
		Computer Graphics 
        (Prof. Fussell)
     
	Network Performance 
        (Prof. Lam)
    
                Multimedia Systems 
        (Prof. Vin)






 Teaching Assistant 

 CS372 : Introduction to Operating Systems, Fall 1995.
  CS105 : C++ Programming, Spring 1996.
  CS387H : Database Implementation, Fall 1996.

 Presentation 

 Fault-Tolerant Clock Synchronization in Distributed Real-Time Systems , April 25th, 1996.
 Mobile Host Protocol, Nov., 1996.


 Projects

 Mini-SQL Database Management System. C/UNIX ( CS387H course project )
   Network Design Tools. C++/UNIX/AT&T Standard Component Libary ( Lucent )
   Robot Arm. C/OpenGL/Tcl/Tk/GLUT/UNIX ( CS384G course project )
   MPEG decoder/player in Java. Java/UNIX ( CS384M course project ) we're working on it, if you can't play mpeg on this page by the end of this semester, you know we're in trouble. ( He He... We made it!!!  Visit our MPEG Viewer Demo Page!  )



Music
 My favorites and my recommendations:





	Mariah 


 
	Boyz II Men 



	Babyface 























You can get some movie and sound clips, here is some




samples:




















Misc
 Chinese on WWW. Netscape 2.0 
 In China, we have our own Chinese Zodiac. Each person is associated with one of 12 different animals.  So what kind animal am I associated with? Find out in this page.  
  My friend from the High School Attached to Nanjing Normal University. My old friend, Haiqing Lin.
  My friends from Shanghai Jiao Tong University. Maintained by Shenfeng Chen, Thanks to him.
 My friends from Tsinghua University. Quite a lot!
 Ò»µØ¼¦Ã« (Chinese HZ).


Learning
  WWW info 
 C++ 
 PERL   
 Java Tutorial  


To Reach Me

	3501 Lake Austin Blvd #109 
       Austin, TX 78703 
 512-472-3421(H Austin, TX) 
	512-471-9771 (O UT-Austin)
 twang@cs.utexas.edu




This page is still underconstruction.
You can check out any time you like, but you can never leave. -- Eagles (1976)


copyright  Tong Wang 1995, created 11/95, last modified 11/96
The background song ""Deskmate"" was performed by Lao Lang.

You are the th visitor according to web-counter since 12/19/95. Don't trust it!! :)
Here is the log book. 



",non-course
"

Ulf Hermjakob Home Page


Ulf Hermjakob




Hello and welcome! I am a 
graduate student 
at the
Dept. of Computer Sciences
 at the University of Texas at Austin
and working on my dissertation about

Example Based Decision Making in Context Oriented Parsing and Machine Translation
under the supervision of
 Prof.
 Raymond Mooney.

Active in the 
 UTCS Natural Language Acquisition Group
and the
 UTCS Machine Learning Research Group.

 Places of Interest 

 Association for Computational Linguistics (ACL)
 SIGNLL (ACL Special Interest Group on Natural Language Learning)
 The Computation and Language E-Print Archive 
 European Student Association (ESA)







Search engines:
 AltaVista,
 EINet Galaxy,
 infoseek,
 Lycos,
 Yahoo,
News:
ABC,
 All Things Considered,
 CNN,
 Dernières Nouvelles d'Alsace,
 Deutsche Welle,
FOCUS,
 New York Times,
País,
Spiegel,
Svenska Dagbladet,
Tagesspiegel,
Vanguardia,
Welt,
Zeit
plus
ACM,
 Austin weather,
 CS resources,
 Deep Thoughts,
 dictionaries,
 Dilbert,
 Earth & Sky,
GI,
 GRACS,
Java,
 LCM,
 linguistics,
 MCC,
 MT,
Quantum Infopool
(Postleitzahlen),
 Rechtschreibreform,
 Skat
 rules,
 student organizations at UT,
 Switchboard,
 US Postal Service
(Zip Codes),
 WWW
( Latin-1)
and  more links



Contact Information
 


E-mail:  ulf@cs.utexas.edu
WWW locator: http://www.cs.utexas.edu/users/ulf/
Office location: Taylor Hall 150B
Office address:
University of Texas at Austin
Department of Computer Sciences
    Campus Mail Code C0500
Austin, 
    TX 78712
U.S.A.
Phone: +1 (512) 471-9777




Home address:
600 W 26th St #A308
Austin, 
    TX 78705
U.S.A.
Phone: +1 (512) 320-0650 (voice & fax)
Permanent address:
Moltkestr. 40a
    32257 Bünde
Germany
Phone: +49 (5223) 2663 (voice & fax)






Last updated: January 3, 1997



",non-course
"



Lance Tokuda, University of Texas at Austin


















 Lance Tokuda  


 
                   Software Systems Generator Research Group

                 Department of Computer Science
 
                 University of Texas at Austin

                 unicron@cs.utexas.edu


Twelve time Intramural Sports Champion !

















              Directory

              Entertainment

              Finance

              Intramural Sports





              Magic: The Gathering

              News

              Organizations

            People

              Reference




Research
Schedule

              Software

              Sports








































  
  Home  
            301 W 21st St. #27
Austin, 
            Texas  
            78705 
            (512) 708-9088
          



  Office   
      Taylor 3.104C 
      (512) 471-9711 
Schedule

  Permanent   
      46-237 Heeia Street 
Kaneohe,
Hawaii
      96744 
      (808) 247-2721
    







",non-course
"Woodrow W. Bledsoe
 
Woodrow W. Bledsoe

Peter O'Donnell Jr. Centennial Chair Emeritus in Computing Systems; Professor Emeritus of Mathematics 

B.S. in Mathematics (1948) 
University of Utah, Salt Lake City 

Ph.D. in Mathematics (1953) 
University of California, Berkeley 

Honors, Awards, and Professional Service

 Third Milestone Award for Automated Theorem Proving, American
Mathematical Society, 1991
 Distinguished Service Award of the International Joint
Conferences on AI, 1991
 President, American Association for Artificial Intelligence,
1984-1985
 Board of Trustees, International Joint Conferences on Artificial
Intelligence, 1976-83
 Chair, Board of Trustees, International Joint Conferences on
Artificial Intelligence, 1976-1978
 Board of Editors, International Journal of Artificial
Intelligence, 1972-present

Areas of Interest

Automatic theorem proving and artificial intelligence 
Summary of Research


My research focuses on automated theorem proving and automatic theorem
proof checking. This involves the use of heuristics and higher level
plans, as well as the use of examples and of analogy. I am also
interested in research on analogy and learning in artificial
intelligence. 
Previous profile 
Index 
Next profile 
",non-course
"John S. Werth
 
John S. Werth

Senior Lecturer; Research Scientist 

B.S. in Mathematics (1962), M.S. in Mathematics (1963) 
Emory University 

Ph.D. in Mathematics (1968) 
University of Washington 

Professional Service

 Chair, ACM Education Board, 1992-94
 Computing Research Association Board, 1992-94
 Computer Science Accreditation Board, 1992-95
 Vice-Chair for Education, Technical Committee on Software
Engineering, IEEE-CS, 1991-present
 Co-chair, 1994 ACM CSC, 1992-94

Areas of Interest

Parallel programming, software engineering, compilers, and computer
science education 
Summary of Research

My current interest is in programming environments for parallel
programming and the associated software engineering, compilation, and
implementation issues. I am also active in setting directions in
computer science education on both local and national levels. 
Selected Recent Publications

S. I. Hyder, J. Werth, and J. C. Browne, ""A unified model for concurrent debugging,"" in Proceedings of the 1993 International Conference on Parallel Processing, IEEE Computer Society, August 1993. 

J. Werth, J. C. Browne, S. Sobek, T. J. Lee, P. Newton, and R. Jain, ""The interaction of the formal and the practical in parallel programming environment development: CODE,"" Lecture Notes on Computer Science, vol. 589, New York: Springer Verlag, 1992. 

R. Jain, J. S. Werth, and J. C. Browne, ""Scheduling parallel I/O operations in multiple bus systems,"" Journal of Parallel and Distributed Computing, December 1992. 

R. Jain, J. S. Werth, and J. C. Browne, ""A general model for scheduling of parallel computations and its application to parallel I/O operations,"" in Proceedings of 1991 International Conference on Parallel Processing, August 1991. 

J. S. Werth and L. H. Werth, ""Directions in software engineering education,"" in Proceedings of Thirteenth International Conference on Software Engineering,  May 1991. 
Previous profile 
Index 
Next profile 
",non-course
"Alfred G. Dale
 
Alfred G. Dale
No personal page.


Trammel Crow Regents Professor Emeritus in Computer Sciences 

B.A. (1951) 
Exeter College, Oxford, England 

M.B.A. (1953), Ph.D. (1961) 
University of Texas at Austin 

Areas of Interest

Database management systems and database architecture 
Summary of Research

My area of interest involves applications of a parallel multi-stage
I/O architecture to database management. Problems being studied
include data distribution strategies, distributed indexing, and
mapping of relational algebraic operations to the architecture. 

Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Jeffrey A. Brumfield
 
Jeffrey A. Brumfield

Senior Lecturer 

B.S. in Math and Computer Science (1975), M.A. in Mathematics (1977), 
University of Georgia 

M.S. in Computer Science (1979), Ph.D. in Computer Science (1982), 
Purdue University 

Honors and Awards

 College of Natural Sciences Teaching Excellence Award, 1985 & 1988

Areas of Interest

Performance analysis, distributed systems, and operating systems 
Summary of Research

I am interested in the role models play in computer science. Designers
of computing systems use mathematical models to study the performance
of existing and proposed systems. In a queueing network model, each
resource in the computer system is represented by a queue of tasks
awaiting service. The solution of the model involves the computation
of response times, queue lengths, and throughputs. 
Selected Recent Publications

J. A. Brumfield, V. Y. Shen, C. Richter, and M. L. Graf, ""VERDI:
a visual environment for designing distributed systems,"" Journal of
Parallel and Distributed Computing, vol. 9, pp. 128-137, 1990. 

J. A. Brumfield, J. L. Miller, and H. Chou, ""Performance modeling
of distributed object-oriented database systems,"" in 1988
International Symposium on Databases in Parallel and Distributed
Systems, Austin, Texas, December 1988. 

J. A. Brumfield, ""Concurrent programming in Modula-2,"" in
Proceedings of the 18th ACM SIGCSE Technical Symposium, St. Louis,
Feb. 1987, SIGCSE Bulletin, vol. 19, no. 1, pp. 191-200. 

Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Alan K. Cline
 
Alan K. Cline

David Bruton, Jr. Centennial Professor in Computer Sciences;
Professor of Mathematics 

B.S. in Applied Mathematics (1967), 
M.A. in Mathematics (1968), 
Ph.D. in Mathematics (1970) 
University of Michigan 

Professional Service

 Editor, Algorithms, Communications of the ACM, 1973-1975
 Associate Editor, ACM Transactions on Mathematical Software, 1975-1976
 Editorial Board, SIAM Journal for Scientific and Statistical
Computing, 1984-92
 Director, Special Interest Group on Numerical Mathematics, ACM, 1981-84
 Southern Regional Director, Computer Professionals for Social
Responsibility, 1987-89

Areas of Interest

Mathematical software and numerical analysis 
Summary of Research

I am interested in the transformation of mathematics into tools which
can be applied to scientific problems. This involves the construction
of mathematical software and the exploration of methodologies for
mathematical software. In particular, my major software development
has been a package of over one hundred subprograms for curve and
surface fitting employing tension splines. 
Selected Recent Publications

R. J. Renka and A. K. Cline, ""Scattered data fitting using a constrained Delaunay Triangulation,"" in IMACS Transactions on Scientific Computing 91, AI, Expert Systems, and Symbolic Computation, vol. 3, North Holland, 1992. 

A. K. Cline, D. H. King, and J. M. Meyering, ""Routing and scheduling coast guard buoy tenders,"" Interfaces, vol. 22, pp. 56-72, 1992. 

A. K. Cline and R. J. Renka, ""A constrained two dimensional triangulation and the solution of closest node problems in the presence of barriers,"" SIAM Journal of Numerical Analysis, vol. 27, pp. 1305-1321, 1990. 

A. K. Cline and R. K. Rew,""A set of counter-examples to three condition number estimators,"" SIAM Journal of Scientific and Statistical Computing, vol. 4, pp. 602-611, 1983. 

A. K. Cline, C. B. Moler, G. W. Stewart, and J. H. Wilkinson, ""An estimate for the condition number of a matrix,"" SIAM Journal of Numerical Analysis, vol. 16, pp. 368-375, 1979. 

Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Edsger Wybe Dijkstra
 
Edsger Wybe Dijkstra
Schlumberger Centennial Chair in Computer Sciences

Professor of Mathematics
Kandidaatsexamen, Mathematics and Physics (1951), 

Doctoraal Examen, Theoretical Physics (1956)

University of Leyden
Ph.D. (1959), University of Amsterdam
Honors  and Awards

ACM Turing Award, 1972
Foreign Honorary Member, American Academy of Arts and Sciences
Member, Royal Netherlands Academy of Arts and Sciences
Distinguished Fellow, British Computer Society
AFIPS Harry Goode Memorial Award, 1974
Doctor of Science Honoris Causa, The Queen's University of Belfast

Areas of Interest  
Program correctness, mathematical methodology algorithms, and systems
Summary of Research 
My area of interest focuses on the streamlining of the mathematical argument
so as to increase our powers of reasoning, in particular, by the use of
formal techniques.


Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 



",non-course
"Chris C. Edmondson-Yurkanan
 
Chris C. Edmondson-Yurkanan

Lecturer 

B.A. in Mathematics and Computer Sciences (1974),
M.A. in Computer Sciences (1980) 
University of Texas at Austin 

Professional Service

 Secretary/Treasurer, ACM SIGCOMM, 1991-95

Areas of Interest

Computer networks, computer science education, managing large software projects, mobile networking, and database design 
Summary of Research

My research interests are in protocols for high-speed communications,
protocol specification, and internetworking. 
Selected Recent Publications 

J. A. Cobb, C. C. Edmondson-Yurkanan, and
M. G. Gouda, ""Universal mobile addressing in the Internet,"" in
Proceedings of the 1st Annual Computer Theory and Informatics
Conference, in press.


Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Suzy C. Gallagher
 
Suzy C. Gallagher

Lecturer; Coordinator of Academic Programs 

B.S. in Secondary Education (1962) 
Loyola University 

M.S. in Computer Science (1985) 
University of Southwestern Louisiana 

Professional Service

 SIGCSE Conference Committee, 1991 NECC Conference Committee, 1992
CSC Conference Committee, 1993-94

Areas of Interest

Computer science education and library and information processing 
Summary of Research

My interests are in the area of 1) student services: recruitment and
retention of women and minorities, improvement of computer science
education in secondary schools and local-area universities; and 2)
IS&R Systems: retrieval techniques. 

Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Roy M. Jenevein, Jr.
 
Roy M. Jenevein, Jr.

Senior Lecturer 

B.S. in Chemistry (1964), Ph.D. in Chemistry (1969) 
Louisiana State University in New Orleans 

Areas of Interest

Interconnection networks and parallel processing in computer architecture 
Summary of Research

My research in computer architecture focuses on interconnection
networks.  The success or failure of parallel computing systems rests
in the ability to devise appropriate cost/performance interconnection
structures. The most recent work on interconnections involves the
development of a wafer scale optical interconnection. A special kind
of laser and wave guide has been designed and is being
investigated. This technique leads to very fault-tolerant parallel
systems on the wafer. This same optical interconnection is being
applied to optical systems busses and optical communication
switches. Work on the performance of processor systems is
continuing. A methodology for measuring processor performance
portability across machines has been developed. In contrast to
benchmarking, it represents true measurement of a processor/memory
system. 
Selected Recent Publications

R. M. Jenevein and B. L. Menezes, ""The KYKLOS multicomputer networks: interconnection strategies, properties, applications.,"" IEEE Transactions on Computers, vol. C-40, no. 6, pp. 693-705, June 1991. 

R. M. Jenevein, L. Laranjeira, and M. M. Malek, ""NEST: a nested predicate scheme for fault tolerance,"" IEEE Transactions on Computers, in press, 1993 

R. M. Jenevein and N. Ullah, ""MetriX: a precise methodology for computer system performance measurement,"" in Proceedings of the 1993 International Conference for Computer Applications in Industry and Engineering, December 1993. 

R. M. Jenevein, B. L. Menezes, A. Johnson, M. M. Malek, and K. Yau, ""Fault impact and fault tolerance in multiprocessor interconnection networks,"" Journal of Quality and Reliability Engineering, vol. 8, pp. 485-500, October 1992. 

R. M. Jenevein and J. C. Campbell,  ""A wafer scale optical bus interconnection prototype,"" in Proceedings of the 1992 International Conference on Wafer Scale Integration, pp. 182-191, January 1992. 


Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Norman M. Martin
 
Norman M. Martin

Professor Emeritus of Computer Sciences; Professor Emeritus of
Philosophy 

M.A. in Philosophy (1947) 
University of Chicago 

Ph.D. in Philosophy (1952) 
University of California, Los Angeles 

Areas of Interest

Mathematical logic and computer architecture 
Summary of Research

My current activity concentrates on abstract structures as
interpretations of logical theory, centering on closure spaces, which
exploits the notion of deductive closure; on logical operations; and
on intensional models of classical mathematics. My most significant
earlier research was on computer architecture and logical design,
especially for missile and space vehicle applications, tracking
algorithms for track-while-scan radars, functional completeness in
many-valued and delay logic and logical metatheory. 

Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"Aloysius K. Mok
 
Aloysius K. Mok

Associate Professor
Faculty Fellow in Computer Sciences 

B.S. in Electrical Engineering (1977), M.S. (1977), Ph.D. (1983) 
Massachusetts Institute of Technology 

Professional Service

 Associate Editor, Real Time Systems: The International Journal of
	Time-Critical Computing Systems, present
 Editorial Board, International Journal of Formal Methods in System
Design, present
 Program Committee, International Computer Symposium, Taiwan, 1992
 Vice-Chair, IEEE Technical Committee on Real-Time Systems, 1993
 Chair, IEEE Technical Committee on Real-Time Systems, present
 Working Group on Real-Time Programming, International Federation
of Automatic Control, present

Areas of Interest

Fault-tolerant hard-real-time systems, system architecture,
computer-aided system design tools, and software engineering 
Summary of Research

I am currently conducting fundamental research in the area of
distributed real-time systems. My primary concerns include
specification techniques for real-time systems, algorithms for
guaranteeing stringent timing constraints and understanding the
trade-off between the robustness and response times of time-critical
systems. The goal is to develop a formal framework for automating the
analysis and synthesis of robust real-time systems. Application areas
include robot control systems, avionics software and industrial
process control systems. Funding is being provided by the Office of
Naval Research to develop a highly automated design environment for
real-time systems. 
Selected Recent Publications

A. K. Mok, ""Towards mechanization of real-time system design,"" Foundations of Real-Time Computing, Formal Specifications and Methods, A. van Tilborg et al., Eds. Kluwer Academic Publishers, 1992. 

C. Heitmeyer, B. Labaw, P. Clements,  and A. K. Mok, ""Engineering CASE tools to support formal methods for real-time software development,"" in Proceedings of the Fifth International Workshop on Computer-Aided Software Engineering, Montreal, July 1992. 

F. Wang, A. K. Mok, and E. A. Emerson, ""Formal specification of asynchronous, distributed real-time systems in APTL,"" in Proceedings 14th International Conference on Software Engineering, Melbourne, May 1992. 

T. W. Kuo and A. K. Mok, ""Load adjustment in adaptive real-time systems,"" in Proceedings of Real-Time Systems Symposium, San Antonio, December 1991. 

C. K. Wang, D. C. Tsou, R. H. Wang, Aloysius K. Mok, and J. C. Browne, ""Automated analysis of bounded response time for two NASA expert systems,"" in Proceedings of IEEE SIGSOFT'91 Conference, New Orleans, December 1991. 

Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 

",non-course
"

Hamilton Richards, Jr.


 
Hamilton Richards, Jr.
Senior Lecturer
B.A. in Engineering and Applied Physics (1960), B.S. (1962), Harvard College
M.S. in Aero- and Astronautics Engineering (1966), Stanford University
Ph.D. in Computer Science (1976), Iowa State University

Professional Service

Coordinator, The University of Texas at Austin Year of Programming,
1987 
Series Editor, UT-YOP, 4 vols., Addison Wesley, 1990

Areas of Interest 
Functional programming, concurrent processing, object-oriented programming,
and undergraduate education

Summary of Research 
I maintain a long-standing interest in functional programming, its potential
for concurrent processing, and its suitability for formal reasoning. In
Fall 1995 I am using a functional programming language in teaching a section
of CS1, and I am working as time permits on a functional-language implementation
of a real microcomputer application. A longer-term project is a book on
functional algorithms.


Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 



",non-course
"

Abraham Silberschatz


 
Abraham Silberschatz
Professorship in Computer Sciences
M.S. (1973), Ph.D. (1976), S.U.N.Y. at Stony Brook

Honors, Awards, and Professional Service

IEEE Computer Society Outstanding Paper Award, IEEE-TSE journal paper,
1978 
Advisory Committee, National Science Foundation Division of Information,
Robotics, and Intelligent Systems 1990-1993
General Conference Chair, Seventh and Eighth ACM Sigact/Sigmod Symposium
on Principles of Database Systems (PODS), 1988-1989
Organizer (with J. Ullman), NSF Invitational Workshop on the Future
of Database Systems Research, 1990, 1995
Program Chair: PODS 1986, IEEE Symposium on Parallel and Distributed
Systems 1988, International Conference on Knowledge Management 1995

Areas of Interest 
Database systems, operating systems, distributed systems, and  knowledge-based
systems

Summary of Research 
My main area of specialization is concurrent processing. My most recent
research has been concentrated in the areas of multidatabase transaction
management, parallel processing of knowledge-based systems, real-time database
systems, multiresolution database systems, continuous-media storage servers,
and high-performance transaction systems.

Selected Recent Publications
S. Ganguly, A. Silberschatz, and S. Tsur, ""Mapping datalog program
execution to networks of processors,"" IEEE Transactions on Knowledge
and Data Engineering, no. 7, vol. 3, pp. 351-361, June 1995.

H. Jagadish, D. Lieuwen, R. Rastogi, A. Silberschatz, and S. Sudarshan,
""Dali: a high performance main memory storage manager,"" International
Conference on Very Large Databases, September 1994. 

B. Ozden, A. Biliris, R. Rastogi, A. Silberschatz, ""A low-cost storage
server for movie on demand databases,"" International Conference on
Very Large Databases, September 1994.

B. Ozden, R. Rastogi, and A. Silberschatz, ""A framework for the storage
and retrieval of continuous media data,"" IEEE International Conference
on Multimedia Computing and Systems, May 1995.

R. Read, D. Fussell, and A. Silberschatz, ""A multi-resolution relational
data model,"" International Conference on Very Large Databases, August
1992.


Additional information can be obtained from
individual faculty members'
home pages. 
Back to List of Faculty Profiles 



",non-course
"

Robert F. Simmons


 
Robert F. Simmons
Quincy Lee Centennial Professor Emeritus in Computer Sciences; Professor
Emeritus of Psychology

May 14, 1925-November 30, 1994

Back to List of Faculty Profiles 



",non-course
"
Home page of V. B. Balayoghan

V. B. Balayoghan

Contact Information

Email:
	vbb@cs.utexas.edu
Office:
	Painter Hall 5.54
	Telephone: (512) 471 9790
Postal Address:
	The University of Texas at Austin
	Department of Computer Sciences
	Taylor Hall 2.124
	Austin TX 78712-1188



Click here to...

 send me an email
 finger my CS account, or
 find out whether I'm logged in




EOSDIS Bookmarks




vbb@cs.utexas.edu


",non-course
"Harrick M. Vin




Harrick M. Vin

 Assistant Professor  of Computer Sciences at
the University of Texas at
Austin 
 Director,  Distributed Multimedia
Computing Laboratory


  Education 

B. Tech. in Computer Science and Engineering (1987) 
Indian Institute of Technology, Bombay 

M. S. in Computer Science (1988) 
Colorado State University 

Ph.D. in Computer Science (1993) 
University of California, San Diego 

  Honors, Awards, and Professional Service 

 NSF CAREER Award, 1996-2000
 IBM Faculty Development Award, 1995
 NSF Research Initiation Award, 1994-97
 San Diego Supercomputer Center Creative Computing Award, 1992
 NCR Innovation Award, 1989
 Editorial Board,  IEEE Multimedia 
 Vice-Chair for the area of Distributed Multimedia Systems, 
17th International Conference on Distributed Computing Systems (ICDCS)

 Co-Chair, Program Committee,  Multimedia Computing and
Networking 1997 
 Co-Chair, Program Committee,  Multimedia Computing and
Networking 1996 
 Member, Program Committee: (1) ACM Multimedia'96, (2) Electronic
Imaging and Multimedia Systems, Beijing, China, November 1996, (3)
International Conference on Networking and Multimedia, Kaohsiung,
Taiwan, December 1996, (4) 4th Eurographics Workshop on Multimedia,
Rostock, Germany, (5) ACM Multimedia'95, (6) Second International
Conference on Distributed Multimedia Systems and Applications 1995,
and (7) Third International Eurographics Symposium on Multimedia
Systems 1994 


  Areas of Interest

Multimedia systems, high-speed networking, databases, mobile
computing, and distributed systems 

  Summary of Research 

The main objective of our research is to design and implement an
end-to-end system architecture for enabling a wide range of
distributed multimedia applications. Specifically, we are developing:
(1) an integrated multimedia file system, (2) algorithms and protocols
for efficient transmission of digital audio and video over networks,
and (3) large-scale multimedia databases.


  Selected Recent Publications 

H. M. Vin, P.J. Shenoy, and S. Rao, ``Efficient Failure Recovery in
Multi-Disk Multimedia Servers'', In  Proceedings of the 25th Annual
International Symposium on Fault Tolerant Computing (FTCS-25), 
Pasadena, California, Pages 12-21, June 1995 

D.J. Gemmell, H. M. Vin, D.D. Kandlur, P. Venkat Rangan, and L. Rowe,
``Multimedia Storage Servers: A Tutorial'',  IEEE Computer, 
Vol. 28, No. 5, Pages 40-49, May 1995 

H. M. Vin, S. Rao and P. Goyal, ``Optimizing the Placement of
Multimedia Objects on Disk Arrays'', In  Proceedings of the IEEE
International Conference on Multimedia Computing and Systems
(ICMCS'95),  Washington, D.C., Pages 158-165, May 1995 

P. Goyal, S.S. Lam, and H.M. Vin, ``Determining End-to-End Delay
Bounds in Heterogeneous Networks'', In  Proceedings of the 5th
International Workshop on Network and Operating System Support for
Digital Audio and Video (NOSSDAV'95),  Durham, New Hampshire,
April 1995 

H. M. Vin, A. Goyal and P. Goyal, ``Algorithms for Designing
Multimedia Servers'',  Computer Communications, 
Vol. 18, No. 3, Pages 192-203, March 1995 

  Sponsors 
 Our research work is sponsored by various industrial and federal
institutions including  IBM, Intel, National Science Foundation
Research Initiation Award, NSF CAREER Award, NASA, Mitsubishi Electric
Research Laboratory (MERL), Sun Microsystems Inc., Electrospace
Systems Inc., and The University of Texas at Austin.  

  Courses 

  
CS380L: Advanced Operating Systems 
 
CS384M: Multimedia Systems 
 
CS395T: Multimedia Communication and Databases 


  Contact Information 


  Email :  vin@cs.utexas.edu 

 Phone : (512) 471-9732  
 Fax : (512) 471-8885  

 Mailing Address : 
	Department of Computer Sciences 
	Taylor Hall 2.124 
        The University of Texas at Austin 	
        Austin, TX 78712-1188, USA 



",non-course
"


Vipin's Home Page 






Vipin's Home 







        Just haven't found time to put things here, shall be updating soon!

 Yeah! I know the bg color does not match in the above picture.



Courses  |
	Interests  |
	Reports  |
	Activities  |
	Guestbook  |
	Resume  (Please give me a job!)


 About Me!

I am a graduate student at  University of Texas  at  Austin 
 in  Department of Computer Sciences. I did my undergraduate
from  IIT, Delhi,  India .



Academic Interests

Course Work (the list is more or less incomplete, I haven't passed this semester, so I am not taking any risks by putting them here!) 

Other Interests

Reports



You are visitor number:
 and I am not going to reset it, so this number only increases, never decreases.




 To contact me 
  2910 Medical Arts Street, #205, Austin, TX 78705

  1 512 469 6050

 Am I logged in? 


Be sure to sign my guestbook!, though I don't have too many guests out there.

If you have comments / suggestions, please send me an 
email. 




",non-course
"Vijaya Ramachandran
Vijaya Ramachandran

Blakemore Regents Professor of Computer Sciences 
The University of Texas at Austin.


 Ph.D., 1983, Princeton University. 

Research Interests

My research interests are in algorithms and computational theory, primarily
in the area of parallel computation and algorithm design. They include: 

 the design and analysis of efficient parallel and sequential algorithms; 
 the design and evaluation of models for parallel machines; and 
 the experimental evaluation of algorithms. 


You can access copies of recent papers of mine.


A complete listing of my publications is available in my 
vita. 

Here is my official faculty profile.


Contact Information

 Office:

3.152 Taylor Hall, (512) 471-9554

 Email address:

vlr@cs.utexas.edu 
 Fax:

(512) 471-8885
 Postal address:



Department of Computer Sciences  

The University of Texas at Austin  

Austin, 

Texas
78712-1188 
U.S.A.
 
Number of visits to this page since April 30, 1996:


",non-course
"UT Algorithms and Computational Theory Group
UT Algorithms and Computational Theory Group

The algorithms and computational theory group focuses 
on the theoretical foundations of computer science.
The current research interests of faculty in the group 
include algorithm design, complexity theory, parallel 
computation, graph theory, and probabilistic methods.
A major focus of the group is on the design and 
analysis of provably efficient algorithms for solving fundamental 
computational problems, where efficiency can be measured 
in terms of different resources such as time, space, 
number of processors, and number of random bits.

 Faculty 

 Greg Plaxton (plaxton@cs.utexas.edu)
       --- Parallel computation; algorithm design and analysis; combinatorics; 
lower bounds; randomization.
 Vijaya Ramachandran (vlr@cs.utexas.edu)
       --- Parallel computation; algorithm design and analysis; machine models; 
graph theory and graph algorithms. 
 David Zuckerman (diz@cs.utexas.edu)
       --- Randomness and computation; complexity theory; random walks;
       graph theory; cryptography.


 Affiliated Folks  (Postdocs, students, alumni, etc.)

 Sanjoy Baruah (sanjoy@emba.uvm.edu) 
  Tsan-sheng Hsu (tshsu@iis.sinica.edu.tw)
  Pierre Kelsen (kelsen@mpi-sb.mpg.de)
  Madhukar Korupolu (madhukar@cs.utexas.edu)
  Phil MacKenzie (philmac@cs.idbsu.edu) 
  Ramgopal Mettu (ramgopal@cs.utexas.edu)
  C. K. Poon (ckpoon@cs.utexas.edu)
  Rajmohan Rajaraman (rraj@cs.utexas.edu)
  Santanu Sinha (ssinha@cs.utexas.edu)
  Torsten Suel (suel@cs.berkeley.edu) 
  Yuke Zhou (yuke@cs.utexas.edu)

 The `algorithms' Mailing List 

The algorithms mailing list is an electronic mailing list 
on which announcements related to seminars and activities 
in theoretical computer science are posted. This is a low
volume mailing list with typically no more than a dozen 
messages a semester. You can add yourself to this mailing list 
by sending an e-mail message to vlr@cs.utexas.edu expressing 
your interest in being added to the algorithms mailing list. 
You can remove your name from this mailing list at any time 
by sending a message requesting removal to gripe@cs.utexas.edu. 

 WARM 

WARM stands for the Workshop on Algorithms Research in the
Midsouth (or Midsouthwest). This is a forum 
for researchers in theoretical computer science in Texas and 
surrounding states that meets once or twice a year at different 
locations. Each meeting consists of several talks by researchers 
in the region on their recent research results. Often there is
a distinguished keynote speaker. 

 

The first WARM was organized by Vijaya Ramachandran at
UT Austin in the Spring of 1990. Greg Plaxton organized
another WARM at UT Austin in Fall 1994. WARM has been held 
at several other locations including Texas A&M, UT Dallas, 
Southern Methodist University, University of North Texas, 
Louisiana State University, University of Southwestern Louisiana 
and University of Oklahoma. The next WARM is scheduled to be
held at UT Dallas on November 9, 1996.



Program announcements about WARM are sent out on the algorithms
mailing list when they become available. Also, we usually
try to car-pool to attend WARM when it takes place outside of
Austin. Announcements regarding these arrangements are also  
sent out on the algorithms mailing list.
 
 ACM SIGACT 

SIGACT stands for the ACM Special Interest Group on Algorithms
and Computational Theory. This is a very active group that
includes many distinguished computer scientists. SIGACT sponsors
the ACM Symposium on Theory of Computing (STOC) and is a
co-sponsor of the ACM-SIAM Symposium on Discrete Algorithms
(SODA) and the ACM Symposium on Parallel Algorithms and
Architectures (SPAA). Other important conferences of interest
are the IEEE Symposium on the Foundations of Computer Science
(FOCS) and the IEEE Symposium on Computational Complexity.
Vijaya Ramachandran serves as an elected member of the
SIGACT Executive Committee.

 
 Useful Pointers 

  ACM SIGACT 
  Theory Calendar 
 
ECCC - The Electronic Colloquium on Computational Complexity
 
TCS Virtual Rolodex
 
Bibliographies on Theory/Foundations of Computer Science 
 
MIT Hypertext Bibliography Project
  U.S. Universities 
  UT Dept. of Computer Sciences 


",non-course
"Vladimir Lifschitz

When feeling burdened or downcast,... the human mind will gladly turn to the
realms of Mathematics, where a lucid and precise grasp of objectivities is
obtained and insight is gained so pleasantly through appropriate concept
formation.  Here the human spirit feels at home. -- Paul Bernays, 1955

Vladimir Lifschitz

Gottesman Family Centennial Professor in
Computer Sciences
at The University of Texas
at Austin 
Fellow of the
American Association for
Artificial Intelligence

B.S. in Mathematics (1968),
St. Petersburg University,
Russia 

Ph.D. in Mathematics (1971),
St. Petersburg Branch
of the Steklov Mathematical Institute, Russia 

Areas of Interest

Temporal reasoning
and reasoning about
actions
Logic programming
and nonmonotonic reasoning

Teaching
Other Professional Activities
Papers on line

 Lecture notes and surveys
 Research papers by Lifschitz 
 Research papers and dissertations by
Lifschitz's students

Recommended Reading: Edsger Dijkstra's
     convocation speech
Good news

 Madeleine Albright is nominated for
     Secretary of State
 Germany became a better place to live
 Germany regained books taken by the Soviet
     Army
 Daniel Ortega lost again
 There is no need to recycle paper
 Helms-Burton Act

Bad news

 Wang Dan is sentenced to 11 years in
     prison
 Torture is used by police in a democratic
     country
 A law sequesters important archeological
     evidence
 World's most closed society

Notes on the race problem in America

 Blacks win re-election in recently
     redrawn districts
 California Civil Rights Initiative
 The same ratio of whites and blacks finish
     high school
 UT will admit students on a race-neutral
     basis

Other notes

 From Amnesty International
 On scientists and science
 My favorite stories
 Three silly jokes
 Quote of the month


Contact Information

 Office:

Taylor Hall 3.150B 
 Phone Numbers:

(512) 471-9564 (Office) 
(512) 471-8885 (Fax) 
 Postal address:

Department of Computer Sciences
University of Texas at Austin
Austin, TX 78712-1188
USA

vl@cs.utexas.edu
",non-course
"
Srinivasan Vaidyaraman

  Srinivasan Vaidyaraman
  email :  vsr@cs.utexas.edu
     Office: UA9   4.116 
     Phone(office) : (512) 471-9762
     Phone(home) : (512) 478-8021  

",non-course
"


SENGUL VURGUN




SENGUL
VURGUN 


Background and Interests
I am an MS student in Computer Science Department. I am
mainly interested in Artificial Intelligence : neural networks and evolutionary
algorithms. 
The term paper topics that interest me, in the order of
preference, are 

Memory (Representation of knowledge, howto retrieve it)
Learning Theories (Problem solving and cognitive skill
acquisition, search vs understanding)
Visual Attention 
Connectionist Approach as the Architecture of Mind

To Contact Me
POSTAL  Computer Sciences C0500
        TAY 2.124, U.T. Austin
        Austin TX 78712 USA

VOICE   +1 512.912.1593 

FAX     +1 512.471.8885



vurgun@cs.utexas.edu


",non-course
"

Walbourn's Home Page





Chuck Walbourn
My personal web page is located on Charybdis Enterprises, Inc. Web Server

",non-course
"

Henry MacKay Walker








 Henry MacKay Walker 
 Visiting Senior Lecturer 
 
Department of Computer Sciences 
 
The University of Texas at Austin 

 Professor of Mathematics and Computer Science
 
Department of Mathematics and Computer Science 
 
Grinnell College 

walker@math.grin.edu






A regular, tenured member of the Grinnell College faculty, Professor
Walker visits The University of Texas at Austin periodically to teach
and for various professional activities.  Formal appointments to the 
Computer sciences department have been as follows:

 1988-1989 academic year
 Summers 1990, 1991, 1992, 1993
 Fall, 1995


More complete information is available from Professor Walker's home page at
Grinnell College: 
http://www.math.grin.edu/~walker.



created September 25, 1995
last revised September 25, 1995
photograph by Jack Robertson


",non-course
"





Home Page for Lane Warshaw











Lane Warshaw


 mike is cool 


About Me

I am a Senior Computer Science student who has recently been accepted into graduate school at the University of Texas at Austin.  My graduate work will be in the area of active databases and rule-based systems.
My current position at the Applied Research Laboratory
involves maintaining Venus, a rule-based language developed
at the University of Texas at Austin by  Dan Miranker  and
at the Applied Research Laboratories by Lance Obermeyer.



The following is the list of my research papers.

Warshaw, L. and Miranker, D.  A Case Study of Venus and a Declarative Basis for Rule Modules. Unpublished, 1996.


Warshaw, L. and Miranker, D.  A Case Study of Venus and a Declarative Basis for Rule Modules. Conference on Information and Knowledge Management, Nov. 12 -16, 1996.

To Contact Me


POSTAL	Computer Sciences C0500
	TAY 2.124, U.T. Austin
	Austin TX 78712 USA

VOICE	+1 512.418.7249 (Home)
	+1 512.835.3840 (ARL)

FAX	+1 512.471.8885



warshaw@arlut.utexas.edu



",non-course
" 
  Wan Chen
 


    Wan Chen
    
 Master student, Computer Science Dept., UT Austin, Texas 

 M.S. in Computer Science, UT Austin, December 1996
     M.A. in Mathematics, UT Austin, August 1995
     B.S. in Mathematics, Fudan University, China, July 1992
    



  Office: 
 RLM 13.162
     phone: (512)-471-1242-ext8
  Email: 
 wan@math.utexas.edu or wchen@cs.utexas.edu
  Mailing address: 
 RLM 13.150
     Center for Numerical Analysis
     University of Texas at Austin 
     Austin, TX  78712, USA
    



Useful links

  Unix Book 

 Tcl/Tk   

 Expect   
 
 Perl   and its
  ftp site  
 
 Java   and 

 Java demo  
 
 Rosette reference manual   - and - 

 Rosette programming examples   

 CGI  ...Common Gateway Interface 




 CS378 MPI sample programs.
 Please click  here 
         to down load the tar file. 
    
    Comments to: 
wchen@cs.utexas.edu 


",non-course
"Home Page for Paul R. Wilson 
Paul R. Wilson 
Contact Information

 Office:
 Taylor Hall 3.134
 Postal Address:

The University of Texas at Austin 
Department of Computer Sciences 
Taylor Hall 2.124 
Austin, TX 78712-1188 


The best way to reach me is via email at 
&ltwilson@cs.utexas.edu>.



Here's the usual headshot.  (For novelty, I thought I'd use a cross-section. Yes, it is me.)


Research Information

I lead the  OOPS Research Group in 
the  Department of Computer Sciences at 
The University of Texas at Austin.


The OOPS (Object-Oriented Programming Systems) Research Group works
on memory management and programming language design and implementation.

Teaching
In Fall 1996, I'm teaching  CS 345,
Programming Languages.


Department of Computer Sciences


Note: This page is under construction!!
",non-course
"

Arthur Mak's homepage--""My Two Cents""




How I became a Christian


I made a major decision in my life and believed in Jesus Christ only a
little more than two months after coming to the U.S. This was totally
unexpected. Though religious studies was a compulsory class at the
Christian high school I attended in Hong Kong, I had no intention to
become a Christian at that time. I thought that the record of Jesus's
life in the bible was quite credible, and his teaching was good, but 
I did not take time to think about it deeply as how it related to my
life. Also, my misconception of the meaning of becoming a Christian
was not cleared until I came to the U.S. 

In the past, I thought there was no difference between any Christian
and me. We all do wrongs and sin. And I thought that if God loved
every one of us, then it did not matter whether I decided to be a
Christian or not. Also, I used to think that a true Christian should
be virtuous and holy, so I was not good enough to be a Christian.
However, after listening to the friends in the church and the
fellowship, I realized things I did not see before. 

It is true that Christians also have sins when they were born, they
will also stumble and do wrongs. However, God became flesh, though he
is sinless he is able to sympathize with our weaknesses, and  if we
confess our sins, he is faithful and just to forgive us our sins, and
to cleanse us from all unrighteousness (I John 1:9).  The difference
between Christians and other people is that they trust Jesus Christ as
their saviour. They have gratefully accepted Christ's redemption for
their sins. Therefore a man is justified by faith without the deeds of
the law (Romans 3:28). 

There is no doubt that a Christian should live a holy life, but we
do not have to be holy before we can become Christians. On the
contrary, we should rely on God and through the strength he gives
us to become holy. And Jesus has said, ""They that be whole need not
a physician, but they that are sick."" (Matthew 9:12) If we count on
our own strength, we are not able to become holy. 

We do not know the number of days we have, so we ought to seek the
truth as early as we can.
Don't hesitate and start to seek now. I thank
God for leading me to the U.S. to give me the opportunity to really 
know him.



Wai-Kei Mak (wkmak@cs.utexas.edu)


",non-course
"  WAN YIK LEE 

Wan Yik Lee
	



 Hello Visitor Number  

 Topics 

Research Interests

Other Interests

Pictures of Robots I Have Worked On

Research Robots Worked On

Educational/Fun Robots Worked On

Publications

My Hotlist

Personal Interests

Miscellaneous

Sending Comments

Contact Information



 Research Interests 
 
	Mobile robot exploration, map learning and navigation.
 
	Intelligent control. 

My Ph.D. research work
is primarily on the Spatial Semantic Hierarchy approach to mobile
robot exploration, map learning and navigation. 



 Other Interests 

Software Engineering and Development in areas ranging from

 
artificial intelligence including machine learning, neural networks,
qualitative reasoning and machine vision, 

 
operating system, networking system, embedded system and graphical user interface to 

 
multimedia.



 Pictures of Robots I Have Worked On
















 Research Robots Worked On

  Spot is a Real 
	World Interface robot with a ring of 12 ultrasonic range sensors.

  Rover is a 
	home-built 150+ lb, 3.5 ft tall robot with a ring of 16 ultrasonic
      	range sensors. 

   Rhino Robotics Manipulator
        is	a commercial robotics manipulator from Rhino Robots 
	Inc.



 Educational/Fun Robots Worked On

 RoboCacing is a Robotics Worm
	built specifically for Robofest 5 1994 organized by the 
        Robot Group in Austin, TX.

  RoboKreta-Besar and 
        RoboKreta-Kicik
        are two intelligent autonomous toy cars built using the chassis
	and motors of two fast remote-controlled (RC) toy racing cars.




 Publication  

Some of  my papers on robotics and
qualitative reasoning research are available online.
My doctoral dissertation titled ""The Spatial Semantic Hierarchy for
a Physical Mobile Robot is also online""




My Hotlist

 
     	The Robot Group WWW Home Page
  The ""Official"" Robot Group WWW Home Page
 
	Starting Points for Internet Exploration
 
	Engineering And Technology Resources
 
	World Wide Web Catalog
 

 
	Usenet Frequently Asked Questions
 
	Robotics Internet Resources Page
 
     	Internet Resources Meta-Index at NCSA
 
     	Malaysia-Online
 
     	Badminton HomePage
 
     	Yahoo




Sending Comments 
If you have any comments or notes on topics we may have a common interest in, 
please email them to wylee@cs.utexas.edu



Personal Interests
Avid  badminton player.
Member of the 

United States Badminton Association (USBA).



 Badminton WEB page 


Member of the Robot Group.
	



Love playing the guitar and the clarinet.

 Some interesting  WWW pages on guitar.

 Some interesting  WWW pages on clarinet.





Miscellaneous
Interested in 
Martial Arts as well as Martial Arts movies.




Contact Information

 Email:  wylee@cs.utexas.edu 
 Office: Taylor Hall 5.104
 Phone:  (512) 471-9572 (off.) 
 Phone:  (512) 471-9563 (lab.) 
 Fax:    (512) 471-8885 
 Mail:
   Computer Science Department
   University of Texas at Austin
   Austin, Texas 78712
 Finger me.



	Back to Topics list.


	To UTexas Austin Qualitative Reasoning Research Group WEB page.


	To UTexas Austin Robotics Research Group WEB page.

WYL
",non-course
"To contact me:

 xfeng@cs.utexas.edu 


Address: 
1652 W6th St. APT Q
Austin, TX 78703

Phone(h):
(512)482-8523

Address  - from Nov. 5th
1616 West 6th St. APT 420
Austin, TX 78703

Phone(h):
(512)478-9703
",non-course
"

 Xingang Guo's Home Page 



 Xingang Guo 







[ 35mm Photography 
| Classical Music 
| Mid-fi Audio 
| PC 
| Sports 
| Travel 

]


Welcome to my home page!

 About me 
I've been hanging around at 
the University of Texas at Austin for a while. Being a Ph.D student in 
 Department of Computer Science ,
I work in 
Distributed Multimedia Computing Lab headed by 
Dr. Harrick Vin. 
This year, the graduate program of UT-CS is 
ranked 7th in the nation,
what a delightful surprise. No, not really a surprise, we've been doing pretty 
well,
do we? 

A picture of me? Well,
it's hard to take a picture of myself. I'm working on it, my picture as
well as more interesting stuff will be on line soon. Right now, as a temporary
resort, you can imagine of me as ... , Hopefully, as time goes by, I'll
gradually walk out of that paper and present a clearer image. 

I create a link if I find it interesting, I create a page when I feel I have
something to say. I'm watching you. 

  FAP  (Frequently Accessed Pointers) 

  ...But Seriously. 
  Austin Foliage  
 The Marvelous Search Engines: 
	 Alta Vista  (String search)
	and
	 Infoseek  (Keyword search)
  Miata Fun Club 
 
	United Morning Newspaper ÁªºÏÔç±¨ 
 
 :
	American Express. (Financial, Travel and Student Cards)
 
 :
	The New York Times.
 
 :
	The Atlantic Monthly.
  
	´óÁ¬Àí¹¤´óÑ§ (DUT) : 
	there's a page for 
	China Soccer major league group A&B .
 
	Dr. Laura Schlessinger. : and
	 
	Listen to her  (Require RealAudio 3.0) 




  Pointer Garage  
Pointers I don't visit that often anymore yet don't want to discard them 
completely.



 Contact information 

	Email:	xguo@cs.utexas.edu
	Postal:	Department of Computer Science
		University of Texas at Austin
		Austin, TX 78712
	Phone:	(512) 471-9738 (Taylor Hall 2.148)
		(512) 482-8236 (Home)



 
Last modified: Jan. 4 1997 
Email your Comments.






",non-course
"
Geoffrey Xie's home page






moved to new address 





",non-course
"

Yang Yang 







Frame ALERT!
 
If you are seeing this message, you are using a frame challenged browser. 


Click  here  to see a non-frame version of this 
document. 

 
Or, you could download Netscape Navigator




",non-course
"

David Yau's Corner on the WWW




David Yau's corner on the WWW




 Hello! Whatever took you here, welcome and make yourself at home! 




  
Establishing contact 

 
 915 E. 41st Street #201 
     Austin, TX 78751 

     Department of Computer Sciences 
     TAY 150K 
     The University of Texas at Austin 
     Austin, TX 78712-1188 
 
 Internet: yau@cs.utexas.edu 
 
 Home: 512-374-9171 
     UTCS: 512-471-9599 
     UTCS Fax:  512-471-8885 



Getting into business 

What I do for research? 



Outside of work, but let's still try to be serious 

Some of my favorite quotes. 

 Words of hope 
for daily meditation.




How about some fun stuff now? 



Classical guitar: 
A concert by
the Assad brothers
in the Hong Kong Arts Festival (must have been '81 or '82)
first introduced me to the beauty of the classical guitar.
Christopher Parkening
is a guitarist with an interesting life story to tell: he once grew tired of
concertizing, retiring at age 30; then reconciliation with God through 
Jesus Christ rekindled his passion for his art. There is also the
Amsterdam Guitar Trio. 
The French are rich in artistic flair, like their national football team led by Michel Platini, and the 

Label France Magazine
published by le Minist&egravere des Affaires &eacutetrang&egraveres. 



Amy Chow, the US woman gymnast.



Thanks for dropping by. You are visitor number 
 since Sept 1, 1996.
UTCS homepage 


",non-course
"

Yanbin Liu 







Frame ALERT!
 
If you are seeing this message, you are using a frame challenged browser. 


Click  here  to see a non-frame version of this 
document. 

 
Or, you could download Netscape Navigator




",non-course
"
Yuan-Kai Pei's Home Page








Oops! You're using an old browser.
Please click here to continue.


",non-course
"


YONG LU'S HOMEPAGE





To Yong Lu's Homepage




You are number  visitor since 4/16/1996





About Yong Lu 

From Beijing
, China. I'm 
currently in the Ph.D. program of Computer Sciences, University of Texas at Austin. Before I settled down here, I stayed at the  Mathematics graduate program of Rutgers University at New Brunswick for one year.  New Jersey is a beautiful place and I met My Wife there. 
.

 B.S., Tsinghua University, Beijing, P.R.China, 1993




AC Milan
Italian Soccer
King of Soccer
NBA Site
FOX Sports
Chicago Bulls
Michael Jordan
NFL
NHL
CS Ranking
Married with children
Seinfeld



Computer Sciences


UTILITIES

HTML Converters
Image Collections



SYSTEMS

HTML
LaTeX
CGI
Tcl/Tk
JavaSoft
JavaWorld
Gamelan
Perl
Motif


ORGANIZATIONS
ACM
IEEE

COMPANIES
Sun
Microsoft
IBM
AT&T

Misc


Internet Travel Network(ITN)
United Parcel Service(UPS)
United States Postal Service(USPS)
FedEx
Used Car Guide


Fun ...


USA Today
US News
Starwave
Supermodels


How To Contact Me

 4003 Red River Street
 A104  Austin, TX 78751
 (512) 302-5762
finger me
 yonglu@cs.utexas.edu





This page is under heavy construction ... 



Last Modified by Yong Lu at Sun Sun Nov  3 21:36:08 CST 1996




",non-course
"David M. Young
 
David M. Young

Ashbel Smith Professor; Professor of Computer Sciences; Professor of
Mathematics; Director, Center for Numerical Analysis 

B.S. (1944) 
Webb Institute of Naval Architecture 

M.S. in Mathematics (1947), Ph.D. in Mathematics (1950) 
Harvard University 

Honors, Awards, and Professional Service

 Fellow, American Association for the Advancement of Science
 ACM Award for Outstanding Contribution to Computer Science, 1990
 Journal of Linear Algebra and Its Applications, Special Issue
Dedication, 1992
 Chair, Applied Mathematics Committee, American Mathematical
Society, 1961-64
 Board of Trustees, Argonne Universities Association, 1975-81
 Associate Editor, SIAM Journal of Matrices and Matrix
Applications, 1989-91

Areas of Interest

Numerical analysis, partial differential equations, and numerical
linear algebra 
Summary of Research

My research activity focuses on the numerical solution of partial
differential equations based on the use of finite difference methods
and on the use of iterative methods to solve associated systems of
linear algebraic equations involving matrices which are very large and
sparse. Several computer software packages have been developed based
on this research as part of the ITPACK project. The research is being
extended to include methods suitable for shared memory and distributed
memory parallel computers. More rapidly convergent iterative methods
based on the use of parallel multilevel procedures are also being
developed. 
Selected Recent Publications

D. M. Young and D. R. Kincaid, ""Linear stationary second-degree methods for the solution of large linear systems,"" in Topics in Polynomials of One and Several Variables and Their Applications, Th. M. Rassias, H. M. Srivasiava, and A. Yanushauska, eds. World Scientific Publ. Company, Singapore, pp. 609-629, 1993. 

D. M. Young and B. R. Vona, ""On the use of rational iterative methods for solving large sparse linear systems,"" Applied Numerical Mathematics, vol. 10, pp. 261-278, 1992. 

D. M. Young and T. Mai, ""The search for omega,"" Iterative Methods for Large Linear Systems, D. Kincaid et al., Eds. Academic Press, 1990. 

D. M. Young, G. Carey, D. Kincaid, and K. Sepehrnoori, ""Vector and parallel iterative solutions of large sparse systems for PDEs,"" Science and Engineering on Cray Computers, Minneapolis: Cray Research, pp. 215-243, 1989. 

D. M. Young, ""The search for Ôhigh level' parallelism for iterative sparse linear systems solvers,"" Parallel Supercomputing: Methods, Algorithms, and Applications,  Graham Carey, Ed. John Wiley and Sons, 1989. 
Previous profile 
Index 
Next profile 
",non-course
" Yoonsuck Choe 


 Yoonsuck Choe 
   
Photo to be added.



 Ph.D. student, Dept of Computer Sciences, The University of Texas at Austin.



 M.A. in Computer Science, The University of Texas at Austin, Austin, TX, December 1995.
 B.S. in Computer Science, Yonsei University , Seoul,  Korea , August 1993.


 Welcome to my WWW homepage. You are the th visitor since Mar 20, 96. 


 Research 

I am interested in modeling cortical structures in Neural Networks.
Currently, I am working on a hand-written digit recognition system
based on lateraly interconnected synergetically self organizing feature map(LISSOM:developed by
 Joseph Sirosh and 
 Prof. Risto Miikkulainen  
at  UTCS Neural Networks Research 
Group . Recent work includes extending the LISSOM model to have actual
spiking events. The new model called Spiking LISSOM (SLISSOM) can be
self-organized as LISSOM and can segment multiple objects in the retina
by synchronizing spikes within a group representing the same object,
and desynchronizing spikes between groups representing different objects.



 Publications 

 To see related publications from our 
	research group, go to the 
	UTCS NN group publications page

 Yoonsuck Choe and Risto Miikkulainen
	 ""Self-organization and Segmentation with Laterally Connected 
	Spiking Neurons"" ,
	Technical Report AI96-251, Department of Computer Sciences,
	University of Texas at Austin, September 1996.
	 Joseph Sirosh, Risto Miikkulainen, and Yoonsuck Choe 
	(1996). 
 Lateral Interactions in the Cortex: Structure and Function..
	Electronic book, ISBN 0-9647060-0-8.
	 Yoonsuck Choe, Joseph Sirosh, and Risto Miikkulainen. 
	 ""Laterally Interconnected 
	Self-Organizing Maps in Hand-Written Digit Recognition"" , To appear in 
	D.S.Touretzky, M.C.Mozer, and M.E.Hasselmo. (Editors), Advances in 
	Neural Information Processing Systems 8, Cambridge, MA: MIT Press, 1996.
	 Yoonsuck Choe.  ""Laterally 
	Interconnected Self-Organizing Feature Map in Handwritten Digit Recognition"",
	Techical Report AI95-236, Department of Computer Sciences,
	University of Texas at Austin, August 1995 [Masters Thesis]



 Bunch of Links : Totally unordered!

	Click on here to see what I find interesting



Contact Information



 Office:
 TAY 5.142 
 Phone: (512) 471-1024, 471-9585 
  Email:  yschoe@cs.utexas.edu 
  Mailing address: 
 The University of Texas at Austin
 Department of Computer Sciences, TAY 2.124
 Austin, TX  78712-1188





This page is maintained by Yoonsuck Choe (yschoe@cs.utexas.edu).
 Last Updated : 
Sat Sep 14 14:01:09 CDT 1996

 |  UTCS home |
  UT home |
 KSA newsgroup summary

",non-course
"
Yuanjing Xu


Winter Break : 12/18/96 -- 1/12/97
Updated Address

Pictures of me and my family
  
Department of Computer Sciences,
University of Texas at Austin,
Austin,
Texas 78712, 
U.S.A. 
Spring 1997
Time Table |
Selected Course Schedule

CS 378 ... Object Oriented Software Engr. (  Browne )
EE 382M ... Logic Synthesis ( Aziz )
MIS 381 ... 17-Client/Server Systems Development ( Gang Yu )

Previous Semesters

  
 
China Page
Chinese Students Association  at UT Austin 
China Alumni Page
ÖÐ¹ú¼ÆËã»ú±¨
 


  
 

 Where I worked or studied 
 
  


University
of Science and Technology of China at Hefei,
P.R.China
Institute of Mathematics, 
Chinese Academy of Sciences at 
Beijing, P.R.China
University of Munich at
Munich, 
Germany
University of Manchester at 
Manchester, UK  
... Prof. Nick Higham



Family: Wang, Lifan |
Xu, Hong |
Chen, Guizhong

USTC 831: 
Ma, Yuan |
Cai, Hailiang |
Yang, Yuhong

Friends: 
Zou, Lin

Software: 
Programming in Java |
Java |
Perl |
Common Gateway Interface (CGI)

Links: 
Yahoo |
Publisher


",non-course
"
Yu Feng





 Yu   Feng 

Visitor Number: (Since 9/1/96)




 Proud to present our 
Java Mpeg Decoder and Player! It's all written in Java.






About Me...

	I'm a graduate student in  
	Department of Computer Science  at
        
        The University of Texas at
        Austin.
          I got my B.S degree in 
        physics from  
        Peking University in 
         China . 
	Peking University is the 
   	top one university in China, and has the most 
	 
	beautiful campus.
         Before I came to Austin,
        I stayed in  Miami 
        for almost three years doing research on 
	 Marine Physics at
	 University of Miami. 
	I had so much fun there.
	 Here come my wonderful wife 
	and my cool MuStang.
      






My Spare Time



             Travel
 
             Camping

 
             Fishing

 
             Tenis








My Fave Games



             X-4war 

             Pig Game (Java-capable browser required) 

             Mahjong (Java-capable browser required) 

             Multigame Machine (Java-capable browser required) 







People from My College and High School 



             Physics '87, Peking University
 
             Peking University Oversea Alumni
 
             NanKai High School Oversea Alumni








Teaching Assistant



             cs304P (Pascal)  -- Fall95, Spring96, Summer96
         
             cs378 (Network) -- Fall96 
		







Jobs



             Natural Science Career Center 







News and Maganizes



             CND and ""Hua Xia Wen Zhai""

             Multiworld and ""Da Qian Shi Jie""

             News Papers in Chinese

             CNN Interactive

             USA Today

             New York Times

             Computer News Daily

             The Wall Street Journal Interactive Edition







Reference Room 



             Austin Wheather Forecast

             Money

             Datek Online Trading

             Java

             C and C++

             X-Windows

             POSIX Threads

             Windows

             Linux

             Dictionary of Computing

             HowTo: Read Chinese in Netscape2.0












Home Address:
    
	2901 Barton Skyway
	#1601
	Austin, TX 78746
 
	512-327-7452
        







Yu Feng
<yufeng@cs.utexas.edu>
Finger me!
Add My PGP Public Key to Your ""Ring""! 



Last modified: Thu Sep 24 16:24:02 CDT 1996


",non-course
"


Zhiying Chen's Home Page









Zhiying Chen




About Me
From Guangzhou(Canton), People's Republic of China.
 I'm currently in the Master's program of Computer Sciences Department,

 University of Texas at Austin.
I'm seeking for a full-time job from May 1997. Here is my resume! Click  here for my resume in postcript format!

 B.S.,  Zhongshan University(Please view it with Chinese GB), Guangzhou, P.R.China,1994


Life in UT-Austin
 Fall 1995
 Spring 1996 
 TA of M408D : Calculus II, Fall 1995.
 TA of CS352 : Computer Architecture, Spring 1996.


Misc
 In China, we have our own Chinese Zodiac. Each person is associated with one of 12 different animals.  So what kind animal am I associated with? Find out in this page.  
  My friends from Zhongshan University. Maintained by John Dong, Thanks to him.
 What else?


World Wide Web
  WWW info 


To Contact Me

 1700 Burton Dr. #159, Austin, TX 78741  
 1-512-912-9134
 zchen@cs.utexas.edu




This page is still under construction.


copyright  Zhiying Chen 1996, created 1/96, last modified 9/10/96

You are the th visitor according to web-counter since 1/10/96. 


",non-course
"
  Maggie Xiao Zhou 

	Maggie Xiao Zhou 
Home Page  




Education and Assistantship 
 Graduate Student,
Teaching Assistant for CS347 Database Management,
 Department of Computer Sciences
at the  University of Texas at Austin.
 B.E., BUAA,
 Beijing,
P.R.China,1992


   Life In Austin 
  
Current Work (Fall 1996)  


CS384M: Multimedia Systems 


CS388G ... Algorithms 

 
MIS381 ... Data Communication/Networks/Distributed Processes 
     
 Work in Spring 1996 and Fall 1995 

   
 Look Around 
 
Campus Kaleidoscope  

 China --The Land of Beauty   
 
Visit The World  

 People's Daily 


    China News Digest 


Hua Xia Wen Zhai  

Chinese Magazine

 NewsPage

Time Magazine

PC Magazine  




  Entertainment 
  Movies 

 Stamps

   
  Computer World


     World's Computer Society 


     IEEE 

  ACM 

C++ on the Web


  Computer Giants 


     Online Career Center 


 Company Home Pages  

 Internet Search 
[  Yahoo  |
 Galaxy  |
 Lycos  |
 
Internet Directory  |
 US Universities  ] 


A guide to HTML and CGI scripts | 
  
 
 Online Library  





  Contact Information 


 E-mail :  zhouxiao@cs.utexas.edu
 URL: http://www.cs.utexas.edu/users/zhouxiao/
 Office :  Main Building Room 2004, UT campus
 Office Phone: 512-471-9749
 Address on Campus:

Department of Computer Sciences, Taylor 2.124 
The University of Texas at Austin 
Austin, TX 78712-1188 





This home page is last modified: Sept 9, 1996. 
For comments, you are welcome to send me email: 
zhouxiao@cs.utexas.edu 



",non-course
"

ZHU QING's Homepage


  
Zhu Qing







Hi, friend! Welcome to my homepage. As you know, I am a graduate student in
the Department of Computer Scinces,
the University of Texas at Austin.


I was born in Beijing, the capital city of 
China. I got my Bachelor degree in Peking University. You will meet a lot of

my friends and former classmates in Peking University. Here you can find
more people in the Peking
University Alumni Home Page (Overseas). 





Now I enjoy living in Austin, 
Texas.


Peeking through the following sites, you will know what I am doing,
what I like, and what I am, as well as find lots of valuable information
and fun!



Professional

Internet
PC-related
Mac-related

After Work

Netscape Dynamic Document Test
Twins-Elder
Twins-Younger
Netscape Dynamic Document Test2
Animation 2
Dancing Title
Dancing Title Test2
Another Netscape Dynamic Document Test
Yet Another Netscape Dynamic Document Test

Friends
This is a China Travel 
Site maintained by my former classmate Xue, Xiaohai.

Here is one of my best friend in China -- Shan, 
Shinan.
Clike here to see.
Clike there, student.

You are visitor number

, 
since October 5, 1995.



This site is under construction!
Last modified: Oct 9, 1995

Zhu, Qing
University of Texas at Austin 
Department of Computer Sciences
Austin, TX 78712
zhuqing@cs.utexas.edu



",non-course
"


	   Univ. of Washington Computer Science & Engineering
	















       Steam Powered Parallel Computing
      mural, circa 1986. 







GENERALINFORMATION


Including an overview of the department, 
visitor schedule,
colloquia,
televised talks,
what's new in our web,
construction
progress of our new building,
department
newsletter, and more.






EDUCATION


Including a
time
schedule of classes, course
list
and
webs, 
information about the
full-time
graduate program,
the professional
masters program, and the undergraduate
computer
science and
computer engineering programs,
final exam 
schedules, and more.






RESEARCH


Including
research project web pages,
technical reports and 
abstracts,
Computing Research Association, 
and more.






PEOPLE &
ORGANIZATIONS


Including faculty, staff, students, visitors, organizations,
our
Affiliates Program,
our  graduating Ph.D.
students, and more.






THE REGION


Including local information,
desktop references,  
links to elsewhere,
and more.






SPOTLIGHT


UW
wins Pacific Regionals of ACM International Student Programming
Contest
Two
videos highlighting educational initiatives
Our
colloquia are now live on the MBONE
Major
donation from Intel Corporation
Dick
Karp receives National Medal of Science
Professional
Masters Program


Department
Overview
""The
Impact of a Research University:  An IT Perspective""
Faculty/Staff
Positions Available
""A Half Century of Exponential Progress in Information Technology""








CSE for  in

All pages
        People
        The Region
        Courses
        CS Laboratory
        Research
        News










Can't handle tables? Click here.





      Department of Computer Science 
      & Engineering
University of Washington
    Box 352350
    Seattle, WA  98195-2350
    (206) 543-1695 voice, (206) 543-2969 FAX
    


	Comments to 

	webmaster@cs.washington.edu







",non-course
"

Andrew Berman's Home Page


Andrew P. Berman

aberman@cs.washington.edu
Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA


Papers

 Berman, Andrew; Bourassa, Virgil; Selberg, Erik. TRON: Process-Specific 
File Protection for the UNIX Operating System in both
postscript and
HTML.
Proceedings of the 1995 Winter USENIX Conference.
   Berman, Andrew.  A New Data Structure for Fast Approximate Matching in
  postscript format.
   Berman, Andrew; Shapiro, Linda: Efficient Image Retrieval with Multiple Distance Measures.
  Available in Postscript format.  To appear in SPIE 97.



 Special Links 

My wife, Debbie.
Debbie and I have a beautiful daughter, Melanie.

 Miscellaneous 
Don't eat the Poison Donuts!
How Stupid Is Stupid
my bookmarks





",non-course
"

Adam Finkelstein







-







 Adam Finkelstein 
 adam@cs.washington.edu 
Department of Computer Science
University of Washington 
Seattle, Washington USA






Before I started drinking 8 cups of coffee a day, my hair was limp and
lacked body.






After six years of living the good life as a graduate student, I 
finally finished my doctorate in 
	
	computer graphics.
For the fall quarter I will do a post doc here at the UW.
Early in 1997 I will join the
Computer Science Department at
Princeton University.



From 1987 to 1990, I was a software engineer at 
	
	TIBCO
	(formerly Teknekron Software Systems)
in Palo Alto; I wrote software for people who trade stock.
Before that, I was an undergraduate student at 
	
	Swarthmore College
(class of 87) where I studied physics, occasionally.





 

A
 recent research project has to do with finding specific images in a
large database of images.  






Since then, we've been working on something called
 
""multiresolution video"".





Here are a few photos.



 

I play ultimate frisbee on a team called
Umatata.



 

To get my address or phone number, look at my
"".plan"" file.





I ran across this photocopy of a fax of a photocopy of a fax of ... of the
hilarious menu from Seattle's least-visited coffee house,
Caffe Lardo.



 

A recent chilly night visit to Snoqualmie Pass made for an excellent view of 
Comet Hyakutake.
Here 
are some great pictures taken by my friend Marcus.






Here are some cool images that I made for fun:








glass sculpture





dithering mona





JFK-MM





Web Gothic









",non-course
"

James Ahrens's Home Page

 James Ahrens's Home Page 
 
     Address: Computer Science & Engineering Department 
     University of Washington -- Box 352350  	
     Seattle, WA 98195  
     Email: ahrens@cs.washington.edu 
     Phone: (206) 543-3368 


 Research Interests 

  Visualization, Parallel and Distributed Computing, Scientific Database Management  


 Projects 
 
  University of Washington --- Database Environment for Vision Research    
   Los Alamos National Laboratory --- ACL Visualization Project   


 Publications 


James P. Ahrens and Charles D. Hansen,  Cost-Effective Data-Parallel Load Balancing ,  International Conference on Parallel Processing, August 1995.



Load balancing algorithms typically improve a program's performance on
unbalanced datasets, but degrade its performance on balanced datasets,
because unnecessary load redistributions occur. This paper presents a
 cost-effective  data-parallel load balancing algorithm which
performs load redistributions only when the possible savings outweigh
the redistribution costs. Experiments with a data-parallel polygon
renderer show a performance improvement of up to a factor of 34 on
unbalanced datasets and a performance loss of only 27 percent on
balanced datasets when using this algorithm. 



Linda G. Shapiro, Steven L. Tanimoto, James F. Brinkley, James P. Ahrens,
 Rex M. Jakobovits and Lara M. Lewis,  A Visual Database System for Data and Experiment Management in Model-Based Computer Vision,  Proceedings of the Second CAD-Based Vision Workshop, February 1994.



This paper presents the design of a visual database system for data and experiment management. Our system was designed as a general scientific database system, but motivated by and intended for use in model-based computer vision. We provide a unified data model, a highly graphical user interface, an advanced query facility and an interactive laboratory notebook. The system aids in scientific experimentation and promote data sharing in the computer vision community.



Frank A. Ortega, Charles D. Hansen and James P. Ahrens,  Fast Data Parallel Polygon Rendering ,  Supercomputing, November 1993.



This paper describes a data parallel method for polygon rendering on a massively parallel machine. This method, based on a simple shading model, is targeted for applications which require very fast rendering for extremely large sets of polygons. Such sets are found in many scientific visualization applications. The renderer can handle arbitrarily complex polygons which need not be meshed. Issues involving load balancing are addressed and a data parallel load balancing algorithm is presented. This rendering toolkit enables a scientist to display 3D shaded polygons directly from a parallel machine avoiding the transmission of huge amounts of data to a post-processing rendering system.



James P. Ahrens and Charles D. Hansen, 
Cost-Effective Data-Parallel Load Balancing, University of
Washington, Department of Computer Science and Engineering, TR
#95-04-02, April 1995. 



A longer version of the ICPP paper which also describes a fast data-parallel 
load redistribution algorithm.


 

Last modified: 2/22/96 



",non-course
"

Database Environment for Vision Research

 Database Environment for Vision Research 




 Overview  

The Database Environment for Vision Research was
designed as a general scientific database system, but motivated by and
intended for use in model-based computer vision. We provide a unified
data model, a highly graphical user interface, an advanced query
facility and an interactive laboratory notebook. The Database
Environment for Vision Research aids in scientific experimentation and
promotes data sharing in the computer vision community.  

In DEVR, entities are stored in hierarchical, relational data
structures.  The schema for each entity contains a name, a set of
properties, a set of parts, a set of attributed relations among the
parts and a set of graphic definitions which describe how to build
instance-specific visualizations.


 We are studying many different image database research topics including:
 Visual Interfaces 
 Multi-Level Queries 
 Experiment Management 

 People 

 Principal Investigators 

  Linda Shapiro 
  Steven Tanimoto 
  Jim Brinkley 

 Graduate Students 

  James Ahrens 
   Rex Jakobovits 
 Lara Lewis


 Publications 

  Linda G. Shapiro, Steven L. Tanimoto, James F. Brinkley, James P. Ahrens,
 Rex M. Jakobovits and Lara M. Lewis, 
A Visual Database System for Data and Experiment Management in
Model-Based Computer Vision,  Proceedings of the Second
CAD-Based Vision Workshop, February 1994.  Presents an overview of the DEVR project.

  Lara Lewis, Linda Shapiro,
Steven Tanimoto,  Flexible
Data Organization with Visualization Support for a Visual Database
System ,  IS&T / SPIE Symposium on Electronic Imaging: Science
and Technology , February 1995. 


  Rex Jakobovits, Linda Shapiro, Steven Tanimoto,  Implementing Multi-level Queries in a Database Environment for Vision Research ,  IS&T / SPIE Symposium on Electronic Imaging: Science and Technology , February 1995. 


 

email: ahrens@cs.washington.edu 
Last modified: 2/29/96


",non-course
"
 AJ's Page 

 A.J. Bernheim 
 ajb@cs.washington.edu  



I've just started computer science graduate school at the 
University of Washington
, so this page is still under construction.



I just graduated from 
Williams College with a BA in 
 computer science 
and  math .

  


When I'm not in front of a computer I'm playing 
ultimate frisbee.


Autumn Quarter Classes 

 505  Programming
Languages 
 531   Automata 
 567  Principles of
Digital Systems Design 
 590B 
	Computer Graphics Seminar
 590O 
  Parallel Programming Environments




Outdoor Related Links 

  The  National Parks 
 the WOC Home Page
  GORP a guide
to outdoor recreation


Fun Links

  Christian's and Scott's 
 Interactive Top Ten List 
 Dr. Fun
 a
big ole pile of Cool Links
 A blast from the past with 
 Scooby-Doo



Educational Links 

  A great reference for  Women Undergrads in Computer Science
  Peterson's Education Center ,
	a source of information about graduate schools and other educational
	opportunities!
 Information about the CRA Distributed Mentorship Project. 
The CRA Mentorship Project allows women undergraduates to spend a summer
working on research with a female mentor.  I had a great experience and highly
recommend this program!


Back to the UW CS Home Page

Last modified 9/27/96



",non-course
"

Amir Michail




Amir Michail

Graduate Student


I am a second year graduate student in the department of Computer Science
at the University of Washington. My research interests include the following
areas: algorithm design, software engineering, and educational software.

I have a Master's Degree from the University
of Toronto. My master's thesis is on optimal broadcast and summation
for hierarchical ring architectures. Shift-click here
to obtain the compressed postscript file.
Recently, I have been experimenting with new ways to teach algorithms.
In particular, I have built Opsis, a Java applet
designed to teach balanced binary tree algorithms in a way that combines
programming, proof, and animation. 
Finally, here is a 3D Lunar Lander style game
that I wrote for the SGI as part of an undergraduate graphics course. 
Some quotations from computer scientists: 

""Mathematicians tend to be conservative, and many are unwilling
to consider that there might be a better way of writing proofs. But, I
am told that mathematicians are embarrassed to learn that they published
incorrect theorems, so they are motivated to avoid errors. I believe they
will like structured proofs if they can be persuaded to try them. 
Computer scientists are more willing to explore unconventional proof
styles. Unfortunately, I have found that few of them care whether they
have published incorrect results. They often seem glad that an error was
not caught by the referees, since that would have meant one fewer publication.
I fear that few computer scientists will be motivated to use a proof style
that is likely to reveal their mistakes."" -- Leslie Lamport 
""There are two ways of constructing a software design: One way
is to make it so simple that there are obviously no deficiencies, and the
other way is to make it so complicated that there are no obvious deficiencies.""
-- C. A. R. Hoare 



",non-course
"
Richard Anderson's Home Page


 Richard Anderson, Associate Professor, graduated with a B.A. in
Mathematics from  Reed College  in 1981,
and a Ph.D. in Computer Science from Stanford
in 1985.  He joined the University of Washington in 1986, after a
one-year Postdoc at the  Mathematical Science 
Research Institute  in
Berkeley, CA.  In 1987 he received an NSF Presidential Young
Investigator award.  He spent the 1993-1994 academic year
as a visiting professor at the  
Indian Institute of Science, in Bangalore, India.

Richard Anderson's main research interests are in the theory and implementation
of algorithms, including parallel algorithms, computational geometry, and 
scientific applications. 

Work: 

     Computer Science & Engineering Department,

     University of Washington, Box 352350, 

 Seattle, WA  98195, USA 
+1 (206) 543-1695
FAX (206) 543-2969


 Teaching
 Some papers and work in progress
 Research Projects
 Qualifying Evaluation Projects
 Travel:  notes from my year visiting the
Indian Institute of Science.
 Resume
 Travelling Tourist Project 
 Pictures 
 Recent Talks



anderson@cs.washington.edu


",non-course
"AnHai Doan's HomePage
AnHai Doan
 This page is being reconstructed. Please revisit soon.



Hi, I was born and brought up in Vietnam.  After finishing high school in 1987, I
went to Hungary to study Computer Science.  I graduated from Kossuth Lajos University of Arts and
Sciences, Debrecen, Hungary, with a B.S. in 1993, and received a
M.S. -- also in Computer Science -- from the University of Wisconsin-Milwaukee in
1995. Starting Fall 1996, I am in the Ph.D.  program at the Department of Computer Science and
Engineering, University of
Washington-Seattle.

My research interests are mostly in Artificial Intelligence.  I am
currently investigating decision making under
uncertainty, decision-theoretic planning, Markov decision processes,
and qualitative decision theory. Non-academic interests include reading, traveling,
and listening to music (mostly jazz and blues).

An interesting thing about my first name, AnHai (meaning ""calm sea"" in
Vietnamese): It is made by combining the last syllable of the name of
my mother's birthplace, NgheAn, and the first syllable of the name of
my father's birthplace, HaiPhong. This shows how creative my folks
were. Or so I thought up to the birth of my younger brother, when they
simply switched the two syllables and gave him the name
HaiAn. Hmm...


Contents

 Research Interests

 Probabilistic Planning
 Knowledge Representation
 Recent Papers


 Research Library

 Curriculum Vitae

 Research Interests
 Education
 Employment History
 Awards and Honors
 Publications


 Teaching

 CSE 373 Data Structures and
 Algorithms If you are taking this course, you should check out 
TA Information (TA's office hours, locations, etc).


 Personal Interests

 Comtemporary Vietnamese Affairs
 Literature
 Writing
 Music
 Paintings
 Foreign Languages
 Traveling


 General Purpose Library

 Life Snapshots


anhai@cs.washington.edu",non-course
"Joel Auslander


Joel Auslander


 
 Joel Auslander

 


at age 24

About me ...

I'm a PhD hopeful at:

Department of Computer Science and Engineering
at the University of Washington.  



Here's a picture of the Spring 1996 Computer Animation class. Click on
it for the original.


 


Last quarter I completed my quals project: 

Run Time Code Generation under the Multiflow compiler.


Office: 427 Sieg Hall              Home:
        University of Washington                
        Box 352350                      5212 Univ. Way NE #206
        Seattle, WA 98195-2350          Seattle, WA 98105
	(206)543-5118                   (206)523-3713


My 

resume .

I've written the following papers:

 
 Fast, Effective Dynamic Compilation,
 J. Auslander, M. Philipose, C. Chambers, S.J. Eggers and
B.N. Bershad. PLDI '96
 
 Automatic Dynamic Compilation Support for Event Dispatching in
Extensible Systems,
 C. Chambers, S.J. Eggers, J. Auslander, M. Philipose, M. Mock and
P. Pardyak. 
Workshop on Compiler
Support for Systems Software (February 1996)
 
 Further Experience with Controller-Based Automatic Motion Synthesis
for Articulated Figures,
 J. Auslander, A. Fukunaga, H. Partovi, J.
Christensen, L. Hsu, P. Reiss, A. Shuman, J.  Marks, J.T. Ngo, ACM
Transactions on Graphics (vol. 14 no. 4, pages 311--336)
 This paper also has a web site. 


""Optimal Leapfrogging"", J. Auslander, A. T. Benjamin,
D. S. Wilkerson. Mathematics Magazine (vol. 66 no. 1, pages
14-19, 1993).


Here is a (very lossily compressed)
mpeg animation
that goes with the motion synthesis paper. The last sequence shows my
work: how the computer can piece together some cartwheels, a jump, and
shuffle into an animation without having the figure fall down and
collapse. The brown figure is using my algorithm, the orange figure is
just trying to to switch between motions without any consideration to
smoothness or physics.

Autumn '95 I took 
557
and did the super-short animation,
""Bug""
(or try
""this""
double speed small version)
for my final project.

Until I find a better place for them, here are some 
slides 
from the
talk on singular value decomposition I gave in the graphics seminar
(590b). 


ausland@cs.washington.edu

",non-course
"

Not a girl named Brian


 A man named Brian 


BOINGee BOINGee BOINGee...

Brian Michalowski
Department of Computer Science and Engineering
Mail Stop 352350
University of Washington
Seattle, WA 98195-2350

Office location: 428 Sieg 
Office phone:    (206) 685-2723

Currently taking:     LING 461
		      CSE 531
		      CSE 567
Currently co-editing: Mossy Bits
Thank you for visiting this page.  You are visitor number 
 This page is worst viewed using Headscape
Whenever
 I'm a second-year CS grad
student at UW who's actually a liberal artist interested in
linguistics.  Confused?  Good. You're getting to know me already.  
My ultrahotlist - my favorite few Web sites of
all time.
 Search the web or look up some online references if you're looking for
something my glorified hotlist doesn't
have. Or use URouLette
to go to a random URL in the Web.

Find out about me - past institutions (few of
which were mental), résumé, personal info, quote file, favorite songs
and poems, fictitious thrash band, purity test, and original works.
 How to
keep in touch - finger info, mail info,
guestbook, and PGP info 
Pages
from a few friends
 The idea for including ASL
fingerspelling snapshots was blatantly stolen from Brad Chamberlain. 
Brian Michalowski / Dept. of CSE (Complete Sanity
Eradication?) / bam@cs.washington.edu 

",non-course
"


Paul Beame



Paul Beame




Paul Beame is an Associate Professor in the

Department of Computer Science & Engineering
at the

University of Washington.


Paul received his B.Sc. in Mathematics in 1981, an M.Sc. in Computer Science
in 1982, and Ph.D. in Computer Science in 1987, 
all from the  University of Toronto.
He was a Post-doctoral Research Associate at M.I.T. for the 1986-87 academic
year and joined the University of Washington in Autumn 1987.  
In 1988 he received an NSF Presidential
Young Investigator Award.


Paul's research is concerned primarily with computational
complexity and the theoretical aspects of parallel
and distributed computing.   
His recent research has concentrated on connections between computational
complexity and proof theory, in particular, on the complexity of proofs in
propositional proof systems.

Paul enjoys squash and softball and other sports where enthusiasm can
compensate for a lack of talent.


  Some Recent Papers 
 Quals Projects 



beame@cs.washington.edu


",non-course
"

David Becker



David Becker
Contact info |
X marks my spot.

 Stuff I do 

 SPIN
 Much of my time goes to making
SPIN
a real, in-use, operating system.  
I have responsibility for the low level code we borrow from OSF,
the device model, device drvier support, the build environment, code management,
and keeping our development platforms functioning.  Someday I will get
to do performance measurement and optimization.
 Sport
 I've tried a bunch.  
Ultimate frisbee  is my favorite.

 All-conference triple jump (Minnesota Athletic Conference, Bethel College '88) 
 Ultimate Frisbee (UNC IM Champions '93)
 Volleyball (UNC IM Mens Grad/Fac Champions '93)
 Team sports I play:

ultimate
softball
volleyball
basketball
broomball
football
soccer
team-handball

 and I also play
racquetball
golf
tennis
 done this too:
bridge
camping
canoeing
disc-golf
foosball
hiking
paintball
ski
snorkeling
snowboard
track
wallyball
water-skiing
weightlifting

whitewater rafting
horseback riding
mountain biking
in-line skating

 Interests ( the library)

 Economic topics particularly interest me:
Free banking,
Anti-trust,

Currency 

 SSTO RLVs.   DC-X 

 Theology

 19th centuray railroads.  How to boot a locomotive 
. 




 


",non-course
"

Brian Bershad




 Brian N. Bershad  
 bershad@cs.washington.edu

Work: 

     Computer Science & Engineering Department,

     University of Washington, FR-35, 

     Seattle, WA 98195, USA 
+1 (206) 543-6707
FAX (206) 543-2969
Home: 
4240 124th Street NE.
    Seattle, WA 98125, USA


 Brian Bershad , Assistant Professor, has been at the University of
Washington since 1986.  After receiving his PhD from the University of
Washington in 1990, he took a brief respite from Seattle between 1990
and 1993 to experiment with post-industrial culture in the Northeast.
In 1993, he returned to the Northwest for the coffee.

Bershad does research in operating systems, distributed systems,
networking, parallel systems, and architecture.  A lot of his work has
appeared in TOCS, SOSP, ASPLOS and ISCA, although he can't seem to get a
SIGMETRICS paper published to save his life.  

Besides working, Bershad runs, plays squash, and hangs out on the
stairmaster.  


 Projects include

  SPIN -- Extensible
Operating Systems 
  Mobile Computing .
 Memory management for operating systems and architectures.
 The Midway Project. (at 
Carnegie Mellon)
 Parallel
Networking for Scalable I/O

 Rocky2 The
sequel.
 Etch -- x86 binary instrumentation and optimization

Courses (Winter 96)

 CS&E 451. 

 Looking for a masters or quals project?

Click here for a list of projects you
might do for a masters degree, a quals project, or just for fun.   


 Some recent papers

 
A Trace-driven Comparison of Algorithms for 
Parallel Prefetching and Caching
Tracy Kimbrel, Andrew Tomkins, R. Hugo Patterson, Brian Bershad, Pei Cao,
Edward W. Felten, Garth A. Gibson, Anna R. Karlin, and Kai Li.
1996 ACM SIGOPS/USENIX Association Symposium on
Operating System Design and Implemenation.
October 96.


 Dynamic Binding for Extensible
Systems Przemyslaw Pardyak and Brian N. Bershad.  OSDI II.  
1996 ACM SIGOPS/USENIX Association Symposium on
Operating System Design and Implemenation.
October 96.

 
The Structure and Performance of Interpreters 
Theodore H. Romer, Dennis Lee, Geoffrey M. Voelker, Alec Wolman,
Wayne A. Wong, Jean-Loup Baer, Brian N. Bershad and Henry M. Levy.
ASPLOS VII.  October 96.


 
Fast, Effective Dynamic
Compilation, Conference on Programming Language Design and Implementation
J. Auslander, M. Philipose, C. Chambers, S.J. Eggers and B.N. Bershad.  May 1996. 


 
An Extensible Protocol Architecture for Application-Specific Networking 
Marc E. Fiuczynski and Brian N. Bershad

  
Writing an Operating System Using Modula-3
Emin Gun Sirer, Stefan Savage, Przemyslaw Pardyak, Greg DeFouw,
Mary Ann Alapat, 
Brian Bershad,
Appeared in the  Workshop on Compiler Support for System Software,
February 1996.


  
 Language Support for Extensible Operating Systems , 
Wilson Hsieh, Marc Fiuczynski, Charles Garrett, Stefan Savage,
David Becker, Brian Bershad,
Appeared in the  Workshop on Compiler Support for System Software,
February 1996.




Safe Dynamic Linking in an Extensible Operating System
     Emin Gun Sirer, Marc Fiuczynski, Przemyslaw Pardyak, Brian Bershad, Appeared in the
     Workshop on Compiler Support for System Software, February 1996. 



Automatic Dynamic Compilation Support for Event Dispatching in Extensible Systems
C. Chambers, S.J. Eggers, J. Auslander, M. Philipose, M. Mock and P. Pardyak.
Workshop on Compiler Support for Systems Software, February 1996. 





 Extensibility,
Safety and Performance in the SPIN Operating System   Bershad et.al. SOSP96.


 
Reducing TLB and Memory Overhead Using Online
Superpage Promotion. Romer, Ohlrich, Karlin and Bershad. ISCA 95.

 Write Detection for a Distributed Shared
Memory. Zekauskas, Sawdon and Bershad. This paper appeared
in the 1994 OSDI Conference.

 Dynamic Page Mapping Policies for Cache Conflict
Resolution on Standard Hardware.Romer, Lee, Bershad and Chen. 
This paper  appeared in the 1994 OSDI Conference.

 Mobisaic.  Voelker, Bershad. This paper appeared in
the 1994 Mobile Computing Workshop.

 
Issues in extensible operating systems.   Savage, Bershad.

  Avoiding Conflict Misses Dynamically in Large Direct-Mapped
Caches.  Bershad, Chen, Lee and Romer   ASPLOS VI.

 
SPIN -- An Extensible Microkernel for
Application-specific Operating System Services.   Bershad, et. al.  UW
Technical Report.

  
Efficient Packet Demultiplexing for Multiple Endpoints and Large Messages. 
Yuhara, Bershad, Maeda and Moss. Winter USENIX 94.

  
The Impact of Operating System Structure on Memory System Performance.
 Chen and Bershad.  SOSP 93.

  
Protocol Service Decomposition for High Performance Networking.
 Maeda and Bershad. SOSP 93.


 
Practical Considerations for Non-Blocking Concurrent Objects. 
Bershad. DCS 93.

  
Fast Interrupt Priority Management in Operating System Kernels. 
USENIX Microkernels Workshop. 1993.

 
The Midway Distributed Shared Memory System 
Bershad, Zekauskas and Sawdon.  IEEE Compcon 93.


  Local Area Mobile Computing on Stock Hardware and
Mostly Stock Software 
Watson and Bershad.  USENIX MOBLIC 93.

  
Consistency Management for Virtually Indexed Caches.
 Wheeler and Bershad. ASPLOS 92.


 
Fast Mutual Exclusion for Uniprocessors. 
Bershad, Redell and Ellis. ASPLOS 92.



 
 Using the Mach Communication Primitives in X11 
Ginsburg, Baron and Bershad.  MACHNIX 92.


 
Using Microbenchmarks to Evaluate System Performance 
Draves, Bershad and Forin.  WWOS IV. 1992.

 
Networking Performance for Microkernels.
Maeda and Bershad.  WWOS IV. 1992.

 
The Increasing Irrelevance of IPC Performance for Micro-kernel Based Operating Systems. .
Bershad.  USENIX Microkernels Workshop. 1991.

 
An I/O System for Mach. 
Forin, Golub and Bershad.  MACHNIX 91.

 
Using Continuations to Implement Thread Management and Communication in
Operating Systems. 
Draves, Bershad, Rashid and Dean. SOSP 91.



 Other information 

 ARPA-related information
 Rain-City Hash House Harriers Related Information
 A 
relative was once abducted by an alien.





",non-course
"

Bob Doorenbos' Home Page


Bob Doorenbos' Home Page

Department of Computer Science and Engineering
University of Washington
Box 352350 
Seattle,
   WA 98195 

Office: 423 Sieg Hall; (206) 543-3368; bobd@cs.washington.edu; 
FAX (206) 543-2969



Currently working at: 
Netbot Inc.
4530 Union Bay Place NE, Suite 208 
Seattle,
   WA 98105 

Voice (206) 522-7800 ext. 109; FAX (206) 522-7800 ext. 114


 Daily web pages: 

 Comedy:
     Dilbert Strips,
     Mr. Boffo,
     David Letterman's Top Ten List
 Geeky news:
     News.com, 
     ZDNet Anchordesk,
     ZD Magazines
 Other good stuff:
     Shortcut to today's
     Cool Tool

 Research: 

 Current:  Postdoc working with 
     Oren Etzioni,
     Steve 
        Hanks, and
     Dan Weld on the
     Softbot project (see also AI at U-W)
 In particular: 
     ShopBot,
     an internet shopping agent.
 Previous:  The Soar 
        project
 My
        Thesis (1.7 meg)

 AI, CS, and science web sites: 

 AI Collections:  
     U-W AI Pointers,
     CMU AI Repository, 
     Canada NRC KSL AI Pointers,
     ML& CBR Home Pages
 Organizations:
     ACM, 
     SIGART,
     AAAI,
     Computing Research Association
 Journals and Conferences:
     JAIR,
     Computational Intelligence, 
     Machine Learning, 
     IJCAI
 SPEC data:  
     SPEC Organization,
     current spectable
 Java links:  
     Sun,
     Gamelan,
     The
       Java Developer,
     JavaNotes,
     UW 
       jump page,
     UW
       CSE 590S,
     Local copy of Sun's java tutorial
 Perl links:
     Adam Rifkin's 
       Perl links,
     Perl5
       manual,
     www.perl.com
 Miscellaneous: 
     On-line CS tech reports, 
     CS Dept. Front Doors & Gophers
 Science:
     Scientific American,
     Sigma Xi/American Scientist

 Miscellaneous other links: 

 Web Meta-Searching: 
     MetaCrawler,
     SavvySearch
 Web Searching:
     Alta Vista,
     Lycos,
     Inktomi,
     Open Text,
     InfoSeek,
     Excite,
     Web Crawler,
     HotBot
 Web Directories (hierarchical or more selective): 
     Yahoo,
     Magellan,
     a2z,
     PointCom,
     Top of the Web
 Lists of Search Engines: 
     Guide to Searching the Net
 Other Online Searches:
     FTP search
 Telephone Directories:
     World Yellow Pages Network,
     Big Yellow,
     555-1212.com,
     Switchboard White Pages,
     List of Other Directories
 News:
     CNN,
     CNNfn,
     NewsHour,
     Washington Post,
     USA Today,
     Reuters Headlines (from Yahoo),
     News Page (from The Social Cafe),
     US News and World Report,
     Boston Globe,
     C-SPAN,
     Seattle Times
 Views:
     Slate,
     Feed,
     Salon,
     Atlantic Monthly,
     Harper's
 Sports: 
     ESPN Sports Zone
 U.S. Government:
     FedWorld Index,
     White House, 
     Congress,
     IRS,
     NSF,
     ARPA
 The Federal Budget Deficit:
     U.S. National Debt Clock,
     The Concord Coalition,
     Try Your Hand at Balancing the Budget,
     Bipartisan Commission on Entitlement and Tax Reform,
     The Budget
 American Universities
 Web Museums

 Links from my past life in 
Pittsburgh at 
CMU: 

 Upcoming 
birthdays
 CMU-SCS 
home page, 
personal home pages, and
fun page


bobd@cs.washington.edu


",non-course
"
Alan Borning's home page


Alan Borning's home page

I am a professor in the 
Department of Computer Science and Engineering at the  University of Washington.  My principal
research interests are constraint-based languages and systems,
object-oriented languages, logic programming languages, human-computer
interaction, and computers and society.  


Current research activities

UW
Constraints Page: contains links to recent papers, and to public-domain
source code for constraint satisfaction algorithms.  
UW Media,
Technology, and Democracy Group


UW students: also see 
ideas for quals
projects.


Teaching

Here are web pages for courses I've taught recently:

  
     CSE 341: Programming Languages (Autumn 1995)
  
     CSE 505: Concepts of Programming Languages (Autumn 1994)
  
     CSE 500: Computers and Society (Winter 1996)
  
     CSE 590H: Human-Computer Interaction (Spring 1995)


Other Information

History ... I grew up in Idaho, and graduated from Reed College in 1971
with a B.A. in mathematics.  I did graduate work in computer science at
Stanford University, receiving an M.S. degree in 1974 and a Ph.D. in 1979.
My dissertation research, which was done in association with Xerox Palo
Alto Research Center, concerned a constraint-oriented simulation
laboratory.  After receiving my PhD, I spent a year as an NSF post-doctoral
fellow at the Department of Artificial Intelligence at the University of
Edinburgh in Scotland, working on mechanics problem solving and symbolic
algebra.  I joined the Computer Science Department at UW in 1980, and
except for a sabbatical spent at Xerox EuroPARC in Cambridge, England, have
been here since.



Address: 
 Dept. of Computer Science and Engineering 
     University of Washington 
     Box 352350 
     Seattle, WA  98195-2350 
     USA 
Phone:  (206) 543-6678
Fax:    (206) 543-2969
Email: borning@cs.washington.edu
WWW:  http://www.cs.washington.edu/homes/borning


",non-course
"

Brad's Home Page


Brad Chamberlain

Photo Credit: Mike Perkowitz


Things you probably couldn't care less about.
(office, address, etc.) 
Things I work on 
Things I like 
Things I have added to the web (a subset of
the above) 



 brad@cs.washington.edu


",non-course
"
Brendan's Home Page

Brendan Mumey


I am a Ph.D. student in the 
Department of Computer Science
at the
University of Washington.
I entered in the fall of 1992 and expect to graduate around the fall of 1996.

Contact Information
E-mail: brendan@cs.washington.edu

For my address, etc. click here.
Curriculum Vitae
In 
html
or
postscript
format.

Academic interests
I would call myself an applied 

theoretical computer scientist.
My current work is in 
computational biology.
At the moment I am looking at the problem of 
physical mapping; building a rough map of the location of landmarks in
a genome.  Generally speaking I am interested in using CS theory and math to
solve reasonably practical problems. I have also done some work in
computational astrophysics with the 
HPCC/ESS group
here at UW.

Online papers

B. Mumey. A powerful clone overlap test.
html,
postscript
(Poster presentation at ISMB'96 conference.)
B. Mumey. Some computational aspects of physical mapping with probes.
html,
postscript
(Survey paper written to fulfill my PhD candidacy requirement.) 
B. Mumey. Finding clusters quickly in parallel.
html,
postscript.
(Presented at the 1994 DIMACS challenge.)
M. Klawe and B. Mumey. Upper and lower bounds on constructing 
alphabetic binary trees.
html,
postscript.
(Presented at the 1993 SODA conference.  Also in the Nov-95 SIAM J. of
Discrete Mathematics.)

Note: The html versions were produced with latex2html and contain
some errors.  They should be readable for the most part.

Recreation
Hiking,cycling,
skiing, 
climbing, 
and 
drinking coffee
to name a few.  I used to do some sailing
and hope to do some more sometime.
I like to play bridge.
Some older photos:
first gallery,
second gallery.

My bookmarks


",non-course
"

Lauren Bricker



Lauren Bricker


Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA



Click here if you need a clue.



Research Info
 My research interest is primarly graphical user
interfaces, although I am a self-proclaimed graphics groupie.  I'm
I'm currently working with Steve
Tanimoto on the Mathematics
Experiences Through Image Processing (METIP) project.  The goal of
this project is interest junior high school kids in mathematics using
exploratory rather than rote learning methods.  In particular, I'm
interested in developing Computer Supported
Collaborative Learning (CSCL) user interfaces that can be used in
this, as well as other, projects.

Workin' lawk a dawg

 Ark Interface
A fairly extensive resume


School daze

This quarter


590D

Other quarters

Human-Computer Interaction course from Spring quarter 1995
And writeups for hw1, hw2, and the final project writeup

What am I doing in a
systems
 course?
A very interesting course in Computers in
Society


 Oh so exciting hobbies I used to enjoy in a not-so-busy life

Sports
Cooking
Pottery (I even have my own studio in the garage, not that it's been used in 5 years...)
Other fun stuff

Because Ron asked for it

Addresses


 

  bricker@cs.washington.edu 
  Last modified: Monday 5 June 1995


",non-course
"


Adam Carlson






Adam Carlson 
<carlson@cs.washington.edu> 


Computer Science & Engineering Department 
University of Washington
Box 352350 
Seattle, WA 98195-2350 USA

      


This page is under construction, in fact, I've done almost nothing with it.

You can take a look at classes I've taken or
TAed, research I've been involved in, and some fun stuff.


For finger information: 


carlson@cs.washington.edu



To send mail:


Adam Carlson <carlson@cs.washington.edu>



",non-course
"

Andrew Certain's Home Page 


 Andrew Certain
certain@cs.washington.edu

 9/5/96 - Server is fixed!  Give it a try. 
 Note:  This page is only interesting if you follow the directions, download the
viewer and look at the models.

I am currently working with Tony
Derose, David Salesin, Werner Stuetzle, Tom DuChamp, and Jovan Popovic on the 3D-Scanning
project.  I am currently building a viewer which you can download here (requires SGI
graphics workstation).

Our paper is here.


Once you have the viewer, you can use it to look at our models,
once you have modified Netscape in this way. (It should
also work with other browsers if you modify them in a similar way).


Computer Science & Engineering Department, 
University of Washington, 352350, 
Seattle, WA 98195-2350 USA



",non-course
"


 Pai Chou 







Pai Chou  

Hi! Welcome to my homepage. I am a grad student in computer
science at the U of Washington.
We are in Seattle.  The picture on the right is me on the first day of 
school in the Fall quarter, 1996.  Ross thinks it's scary.

School Related Info

The 
   Chinook project
My Fall 1996 schedule
My list of Publications
CODES 97:
   Int'l Workshop on hW/SW Codesign

Personal

Personal info about me.
I am from Taiwan,
not Greece.
Resume

Food
I enjoy cooking. Some people say I should open a restaurant. Some of
people's favorite dishes include stir-fried rice noodles and my BBQ beef
skewers. My recipes are now on-line. 
Toys
Being a computer geek, I have computers
and cool toys. 
Taiwanese
I am also promoting the use of the Taiwanese
language. I am currently developing computer tools for Taiwanese. Be sure
to check out my new experimental on-line Taiwanese
dictionary. Though not absolutely required, these pages are best viewed
if you install Chinese character fonts. 
If you are using a Java-enabled browser like Netscape, you should be
able to see my ""Java-oke"" (TM) applet, with a yellow ball 
bouncing
over Barney the purple dynosaur. 

Last updated Tue Oct 1 11:49:54 PDT 1996 
Email: chou@cs.washington.edu



",non-course
"

Corey Anderson

Corey Anderson




Things that have interested me lately...

Setting up my home
      page.
Researching color perception and automatically
       correcting for induced color.
Competing in the Programmer Of The
       Month contest
  Searching for info about the
      LocalTalk
       PC Adapter.
  
       Setting up Linux

       Playing with Wavelets

       ACM International Collegiate Programming Contest


	      Pacific Regional Contest, Problems, and Results

	      1995 Final Problems and Results (html version)

	      Previous years' Final Problems (PS version)


       Duke's Internet Programming Contest
My résumé is
       now online.  It is recent as of August 1996.
  Reviewing computer graphics text and
       reference books, just for fun.

Things that I have done...

Graduate from the
      Univserity of Washington and Highline Community College.

       Self-tuning FPGA (Fall 1994)
Helping Polly
      organize and run the CSE department's
      contribution to the Engineering Open House 1996.
      (April 1996)
Managing the UW's
       ACM chapter's treasury.  (Spring 1995 - Spring 1996)
Under developement (read: not done)!

       Macintosh programming
Searching for a good Internet Service
       Provider

Cool things I've found...


       Usage statistics of CS Dep't Web

       Lurker's Guide to Babylon 5

       Sunsite's Linux Archive
The
       Dilbert Zone
My Mom's home
       page
My brother's
       home page

Useful links...

Peek inside our 
       X-term labs

       HTML reference

       HTML 3.0's new features or what Netscape will let you do.

       Computer Science and Engineering Department home page

       University of Washinton home page

       UWTV

       CS Lab Tech notes



My Autumn '96 schedule...



Monday
Tuesday
Wednesday
Thursday
Friday


8:30
CSE 370 (TA)
CSE 370 OH
CSE 370 (TA)
CSE 370 OH
CSE 370 (TA)


9:00
CSE 370 (TA)
CSE 370 OH
CSE 370 (TA)
CSE 370 OH
CSE 370 (TA)


9:30
CSE 590IT

CSE 370 Meeting




10:00
CSE 590IT

CSE 370 Meeting




10:30
Math 441
CSE 531
Math 441
CSE 531
Math 441


11:00
Math 441
CSE 531
Math 441
CSE 531
Math 441


11:30

CSE 531

CSE 531



12:00







12:30







1:00







1:30
CSE
	 567

CSE 567

CSE 567


2:00
CSE 567

CSE 567

CSE 567


2:30
CSE 370 OH






3:00
CSE 370 OH






3:30

CSE 519
CSE 590B
CSE 520



4:00

CSE 519
CSE 590B
CSE 520



4:30

CSE 519
CSE 590B
CSE 520



5:00



CSE 520



5:30









corin@cs.washington.edu


",non-course
"

The Craig Web Experience




Craig S. Kaplan


Current location:
PhD student, Department of 
Computer Science, University
of Washington, Seattle, Washington.




Well, here I am.  The other UW.  This WWW page is just a copy
of my other home
page at the University of Waterloo.
When I have some more time, I'll modify this page to be more appropriate to
my current situation.


One enjoyable experience I had near the end of being an undergraduate
was the grad ball.  Here are some photos from
the ball.

That second enjoyable experience occured Saturday, May 25th, 1996.  I 
addressed the convocation as valedictorian.  I cannot express how honoured 
I felt that such a wonderful graduating class should choose to have me 
represent them in this way.  Incidentally, for those of you who didn't know, 
my parents found out I was valedictorian about ten minutes before the start 
of the ceremony.  My mom says she'll never forgive me.  

The text of my valedictorian address can be found here,
for anyone who's curious.



You are visitor number:





Last updated Fri Sep 27 15:54 PDT 1996



cskaplan@cs.washington.edu


",non-course
"

Cody Kwok's Home Page







Welcome!
Hi,  I am Cody Chung Tin Kwok,  aka 
ctkwok@cs.washington.edu


I'm a UW
CSE
graduate student ,

working with 
Dan Weld 
and

Oren Etzioni 
on 
planning and
software agents. 





Work
 The Ingram softbot 
AI
UW AI
 Contact information


Leisure
 [sanctuary]
Nausicaa of Valley of Wind
Laputa Castle in the Sky
Hyper Future Vision Gunnm
  Me













Nausicaa of the Valley of Wind









Cody Kwok Last modified May 25
 


",non-course
"
 Darren C. Cronquist 

 
Darren C. Cronquist
darrenc@cs.washington.edu



Department of Computer Science & Engineering 
University of Washington 
     Box 352350 
Seattle, WA 98195-2350 USA


 Welcome to my home page! Last updated: 6/21/96
Employment Information I currently plan to complete my
Ph.D. in 1997. 



HTML
Postscript


Resume

Resume


Curriculum Vita

Curriculum Vita



Personal Information The rest of my homepage is currently under
construction!

",non-course
"

David Christianson


60 seconds till midnight...60 seconds till NOWHERE, BABY!


David Christianson
dbc1@cs.washington.edu

Computer Science & Engineering Department, 
University of Washington,
     Box 352350
Seattle, WA 98195 USA




 Current Work
In my spare time I am a third year graduate student here at
the UW.
I'm interested in
AI
and planning, but I've gotten into user interfaces and maybe even graphics
as well. I'm currently studying Knowledge Representation, goal-directed
behavior, mixed-initiative planning, activity recognition, and buzzword
acquisition in the context of human-computer interaction.

Some of my recent work has been to prototype useful/intelligent interfaces for Bob
Doorenbos' ShopBot.
Rather than try to build our own interface, our plan is to somehow
integrate with the interfaces of various on-line stores by building a
""Shopping Assistant."" One simple assistant we've built is a Mac application
that automatically reads and parses shopping baskets in order to determine
what products the user is interested in.

I have also collaborated with Sean Anderson, Li-Wei He, Dan Weld,
David Salesin, and Michael Cohen to develop a simple interactive movie
that demonstrates automatic camera planning.

As an Apple Intern, I worked with Dan Russell to mix planning technology
into the Mac user experience.

I am also a co-developer/perpetrator of PDB, a graphical debugger for the
UCPOP family of planners(I'm not just a programmer...I'm also a client).
The number of people whose lives it has touched grows each and every day.
The manual is
here.


I spent my undergraduate career at the
University of Chicago,
carboloading at Harold's Chicken and assisting in the
Animate Agent Lab.
Publications

Christianson, Anderson, Wei-he, Salesin, Weld, and Cohen.
Declarative Camera Control for Automatic Cinematography.
To appear at AAAI 96.
Firby, R.J., Christianson, D., and McDougal, T.
Fast Local Mapping to Support Navigation and Object Localization.
1992 Symposium: Sensor Fusion V. Boston, MA, November 1992.

Where to Find Dave(when not at the IMA)
I do most of my work in the
Chateau's
cynical office, with
Frederic,
William,
Darren,
Adam,
Dan,
and our glorious leader  Juan.

 Important Thing 

One of my favorite activities is to practice judo.
I recently competed in the Senior Nationals.

 Sibling on the WWW 
My sister
just graduated from the School of Information and Library Studies at the University of Michigan.


 Just Surfing... 

The cutting edge in Web Research - The Information Supercollider.
Really feel like slacking?  Mirsky  can help.
Watch the heroes of your Gen X youth duel to the death at  The WWWF Grudge Match .
Fame and fortune! Check out my Response of the Week.
Check out the Games Domain.
Or, just go straight to  DoomGate .
So he says to me, ""Evil's OK in my book, how about yours?"" -  The Tick .





 Dave Christianson 


",non-course
"

Home Page for Dave Johnson


 David B. Johnson





dbj@cs.washington.edu 
Computer Science & Engineering Department, 
University of Washington,Box 352350 
Seattle, WA 98195 USA

 
Research Interests

 Navigational assistance for hypertext readers


Projects and Activities

 
	     Racquetball
 
	     Golf
 
	     Basketball
 
		Softball
 
		WWW Tutorials
 
		WWW Scripts
 
To see how this all fits together, take the

Racquetball Quiz.
To see how the quiz was created, take a look at the

Create an Assessment Page form.
Give it a try.


 

  <!-- a href=""#top""> 
  <!-- 	David B. Johnson >
  <!-- /a> 
  Last modified: 
  Monday  Oct 3, 1994 


",non-course
"

Home Page of David Dion


 
David Dion 
ddion@cs.washington.edu


 Personal 

Yeah right, like I'd put anything personal here.  Okay, maybe a 
 little.

 Academics 
 Current Research:  
For the past year I have been working with 
Brian Bershad.
My primary responsibility is the construction of a UNIX server for the
SPIN
operating system.  SPIN is an operating system on which applications 
can achieve impressive performance by dynamically extending the kernel.  
Safety and protection are maintained at the language level, as SPIN and 
its extensions are written in  

Modula-3.



The user-level SPIN UNIX server is a slight variant of a DEC OSF/1 Unix 
server, which thinks it is running on Mach.  SPIN dynamically linked 
extensions are used to intercept OSF/1 system calls and to emulate a 
Mach kernel environment.


Previous Research:  SPIN is not the first extensible system I have
worked on.  In my undergraduate 
studies at Notre Dame I helped 
implement user-level memory management for an extensible communications 
subsystem.


 Web Stuff 

I'm afraid I don't have the time to sit around and surf the Web,
so I wouldn't claim to know about all the cool stuff out there.  I
promise to do more surfing as soon as I have Netscape-enhanced
this page (don't hold your breath).  Meanwhile, these are some of the 
sites I visit occasionally for work and for distraction.


University of Washington
	 Computer Science and Engineering: the reason I'm in Seattle.

University of Washington: 
	 UW homepage, featuring an up-to-date view of campus weather 
	conditions.


	SPIN: what occupies the vast majority of my time.


	Modula-3: the language I use for most of my programming these
	days.

GDB Debugging
	Manual: how I've solved countless problems.

University of Notre Dame:  my
	 undergraduate institution.

Notre Dame 
	 Bands: my undergraduate life.

Notre Dame Trumpet Section:
 more of my undergraduate life.

CSE 
	 Racquetball Ladder: my main outlet for athletics.

ESPN Sportzone: how I
	stay in touch with the sports world.

USA Today: how I stay in
	touch with the rest of the world.

Dilbert:
	how I learn about the real world.

Restaurants:
	fine Seattle eateries, as recommended by others in computer 
	science here
	at UW.

Movies:
 Seattle regional movie listings.

Transportation:  an 
	 on-line guide to Seattle's excellent public transportation system.

Current
	 Traffic Conditions: current status of Seattle's infamous 
         traffic.

Seattle Mariners: the
         first Major League Baseball team with a web page. 

L. L. Bean: the only shopping
         Web page I will visit.




David Dion 
	Last modified:  Monday 1 April 1996


",non-course
"

Derrick's Index

 W. Derrick Weathersby













da' bulls


superSonics




I'm pursuing a 
PhD
in Computer Science here 
at the University of Washington,
Seattle.  The beautiful campus of the University lies in the heart of
Seattle, 
offering many diversions which graduate students often fall prey, thereby
extending the time of the average graduate student career.  

Practical Experience and Interests

Significant Projects and Skills

my data sheet
 shared X-server project
 data parallel array language and compiler
 host-to-pc, LU6.2 (token-ring) communication protocol development
 data base design and administration
 system administration
 network administration and tools
 security

Research Experience and Interests

My research centers around parallel and distributed computing.  The challenges
presented by the fields are ones of performance, portability and convenience.
Performance is typically the foremost goal in running in a parallel or
distributed environment, however, portability suffers.  Finally, these
environments offer extra challenges due to asynchronous, independent events.
It is a daunting task to develop systems for parallel and distributed
environments.  These are the issues I address.


Group Project
 My UW Research Page
 SPAA '94 paper on Collective
	Communications
 Generals topic (Collective Comm)
Dissertation Topic
 tool integration software engineering project

Academic Achievements


Instructor: UW extension college, Advanced C summer 1993
Curriculum design for Advanced C++ course for new certificate program
    at UW extension college
Instructor: UW extension college, Advanced C++ Fall 1993
Teaching Assistant: Started undergraduate tutoring for women and minority
students, Department of Computer Science and Engineering
Outstanding Teaching Assistant Award for College of Engineering, 1994

Personal Interests

 CNN Interactive OR CNN
Financial








A Newslet would be here if you had Java



W. Derrick Weathersby
derrick@cs.washington.edu
Tue May 3 9:47:00 PDT 1994 


",non-course
" 
Brian Dewey's Home Page


Brian K. Dewey

About me

I'm a first-year Ph.D. student in the department of Computer Science
and Engineering at the University of Washington.  What do
you need to know about me?  I like music and books.  I
love to play games, ride my bike, write letters, and drink tea.  My
favorite color is blue, my favorite ocean is the Atlantic, and my old
roommate thinks I'm more like an owl than any other animal.


(PGP public key available via finger.)




Northern Ireland

I returned from my trip to Belfast on June 8th, carrying sixty pages
of notes from interviews in my carry-on luggage.  Now, I need to get
those semi-chaotic notes into a readable and hopefully enlightening
format.  As I work on this draft, feel free to read over my shoulder;
I will periodically make my drafts available here in both html and PostScript formats.
The goal is to encourage frequent feedback as soon as possible.
Please read and then mail me.

Please note as well that I have not had much time to work on this
project lately.  Hopefully, we'll see some progress near the end of
the summer.




  The
  images
  of Northern Ireland. 
 Notes on the
current draft... 

Sinn Fein
  information. 

Bibliography
  (postscript) 

Statistics on terrorist-related
  deaths in Northern Ireland. (Postscript)

Statistics on terrorist-related
  injuries in Northern Ireland.  (Postscript) 


Go

I'm new to the game of Go, but I'm already addicted.  If you're
curious about the game, check out these links:


 For a fascinating, thorough history of the development of the
       game in China, read
       Go
       in Ancient China.
   The Go page at imageek.york.cuny.edu.
 Ken's
       Go page provides many links to interesting Go sites.
   Jansteen's
       page is the most thorough I've seen.


Brian K. Dewey <dewey@cs.washington.edu>

Last modified: Tuesday, October 1 1996

 
",non-course
"
Dan's Home Page

Welcome to Dan Fasulo's Home Page 


  dfasulo@cs.washington.edu 

Third-year graduate student, 
Department of Computer Science,  University of Washington.


Graduate (B.A.) of  Williams
College in  Computer
Science and  
Applied Mathematics, Class of 1994.


NOTE: this portrait may contain slight inaccuracies.




Finding Dan
 Home

 2820 Eastlake Ave. E
 Seattle, WA 98102
 (206) 325-3404 

 Work

 Department of Computer Science 
and Engineering
 University of
Washington, FR-35
 Seattle, WA
98195 USA
 (206) 616-1853
  OFFICE:
Chateau
      112

  EMAIL:
dfasulo@cs.washington.edu




Academic Interests

 Computer Graphics

 Computational Biology
       




Personal Interests

 Science fiction and fantasy, written and otherwise.  In
       fact, I should probably be honest and identify the above illustration.
       It's Merlin, the son of Corwin (pictured
       here), who is a favorite fictional
       character of mine from Roger
       Zelazny's Chronicles of Amber.  The image was taken from the
       Amber DRPG published by Phage Press, which I would recommend to anyone
       who likes the books.  Also, I recommend the TV series Babylon 5.
       
 Creative writing, both fiction and poetry (no, there will be
       absolutely no links here to any of my work!).
       
 Athletics.  In no particular order:
       
 Tennis 
	  Tae 
	      Kwon Do
 Distance running
       

 Role-playing.
       
 Random other things, depending on the day.  Cats.



Random Other Things...


 Go to the homepage of my friend and fellow Williams Alumnus
       Sean Sandys. 
 Look! Up on the Web!  It's a woman!  It's
       a dog!  No, it's former CSE grad student
       Wendy
       Belluomini dressed up as Dogbert!
       
 A lot of people have asked me if Theory is a worthwhile area
       of research, or whether it's too abstract to be useful.
       
       Here is a better explanation of the goals and future of
       Theory than I've ever given them.




dfasulo@cs.washington.edu



",non-course
"


Martin Dickey (Home Page)




Martin Dickey

Computer Science & Engineering

University of Washington




Welcome to my home page 

 




Weekly schedule

Narrative resume 

Blurb

CSE/ENGR 142
Autumn 1996

Favorite Seattle coffee houses


Favorite Internet site 


My sister's book




""Spirograph"" Java script by Anu Garg.
Play with it!




 dickey@cs.washington.edu

Updated Tuesday, September 03, 1996



",non-course
"

Dennis Lee 



   Dennis Lee 








My primary interest is in high performance 
computer architecture 
and I've been doing research
with very smart people like

Jean-Loup Baer,

Brian Bershad,

Brad Calder,

Brad Chen, 
Alan Eustace,

Dirk Grunwald ,
and

Ted Romer.

 Some recent papers 
  Energy Management Issues for Computer Systems .
  My generals paper.


Instruction Cache Fetch Policies for Speculative Execution.

Lee, Baer, Calder, and Grunwald.  ISCA '95, pp.357-367.



Dynamic Page Mapping Policies for Cache Conflict Resolution
on Standard Hardware.

Romer, Lee, Bershad, and Chen.  OSDI, pp.255-266.



Avoiding Conflict Misses Dynamically in Large Direct-Mapped
Caches.  Bershad, Lee, Romer, and Chen.  ASPLOS VI, pp. 158-170.



Instruction Cache Effects of Different Code Reordering Algorithms. 
My Ph.D. Qualifying Project Report, University of Washington.


 How to Contact Me 

 Work: 
Computer Science & Engineering Department 
University of Washington, 
 Box 352350 
Seattle, WA 98195, USA 
 Office: Sieg 222
      (206) 543 7119
      FAX (206) 543 2969
      dlee@cs.washington.edu 
 Home: 
 7513 25th Ave NE
     
 Seattle, WA 98115, USA
      (206)523-9592
     


 Web Index 

Here's a pointer to my hotlist.
Here are two very good entry points to Web exploration: 

 Yahoo , the Yellow Pages for the 
  Internet 
 Lycos , a really good web search engine


For a Seattle guide, click here.




 On voting 

Millions of sensible people are too high-minded to concede that
politics is almost always the choice of the lesser evil.  ""Tweedledum
and Tweedledee,"" they say, ""I will not vote.""  Having abstained, they
are presented with a President who appoints the people who are going to
rummage around in their lives for the next four years.  Consider all
the people who sat home in a stew in 1968 rather than vote for Hubert
Humphrey.  They showed Humphrey.  Those people who taught Hubert
Humphrey a lesson will still be enjoying the Nixon Supreme Court when
Tricia and Julie begin to find silver threads among the gold and the
black.

- Russel Baker, ""Ford without Flummery""  




 On commitment 

	Until a man is committed there is hesitancy, the chance
	to draw back, always ineffectiveness.  Concerning all
	acts of initiative there is one elemental truth the
	ignorance of which kills countless ideas and splendid plans:
	That the moment a man definitely commits himself, then
	Providence moves too.  All sorts of things occur to 
	help him that would never otherwise have occurred.  
	A whole stream of events issues from the decision, raising
	in his favor all manner of unforeseen incidents and 
	meetings and material assistance and magic which he could
	not have dreamed would have come his way.  Whatever you can
	do or dream you can, begin it now.

-Goethe




dlee@cs.washington.edu



",non-course
"
Yet Another Unnecessary Home Page


Ceci n'est pas une home page.

(Well, it's not much of one, anyway.)


I'm not sure how to casually mention my name on my own home page, but
I feel strongly that it should be here, so here it is (in bold, no
less):  Doug Zongker.

where you can go from here:  (not an exhaustive list)

the usual:
research, publications, etc.
classes
how to contact me

the unusual:
Toxic Custard Workshop Files
The Mentos Gallery
visit the information supercollider

the useless:
today's date (""wasting time with cron"")
my CD player database (""wasting time with CGI"")
testing grounds (caveat user)




<sarcasm> Boy have you got lucky browsing the web today --- a
virtual (pun intended) treasure trove of information, some of which
may be actually useful.  (Really!) </sarcasm> 

I'm a first-year grad student in the Computer Science & Engineering
department at the University of
Washington.  I graduated in May 1996 from Michigan State University, where I
majored in  computer science and
minored in math.

dubious honors

Junior Apprentice Keeper of the Brotherhood of the Crouton of Death.
Carte Pizzicato International Fan Club Member 000 0000 5760.
Bryan's Worst Executive Vice-President in Charge of the Emergency Backup Clicker.


...cruising down the information highway in
high gear...
actually, you're sitting on your butt
staring at a computer screen.


This tasteful background was stolen from the  US Department of Labor homepage, where
my sister works (the Department, not the homepage).



  

Doug Zongker (dougz@cs.washington.edu)
[ home | research | classes | contact ]
last edited at

14:53 on Thursday, 14 November 1996
(151
 hits)



",non-course
"

Dylan McNamee



   Dylan James McNamee
   




dylan@cs.washington.edu 
Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA

 

Here is some personal information.

What I do:
My research has concentrated on the interaction between applications
and operating systems. I implemented an operating system mechanism
that allowed applications to implement their own page replacement
policy when the kernel's policy caused them to perform poorly.


After that, I helped implement ""scheduler activations"" in the Mach
operating system. Scheduler activations are a mechanism that
help user-level threads systems interact properly with the kernel
thread scheduler.


These experiences lead me to work with the 
SPIN project
 folks, who are building a new operating system architecture
that generalizes the idea of application-tailorable operating systems.  


My current work carries on the research started in the 
Opal project. My thesis is investigating the interaction between
Object-oriented databases (OODBs) and operating system virtual memory.
This work is demonstrating that significant improvements in 
performance can be achived using commodity operating systems,
but in a different way than is currently done. Additional improvements
can come from modifying the operating system slightly to better
serve OODBs.

Papers
CV
590S course web 
Geoff Voelker and I built this web for the Winter 96 quarter of the 590S 
systems seminar, which was dedicated to Java. I gave a lecture
introducing the Java language and environment.  Here are the 

slides I used.


",non-course
"
E Christopher Lewis - Home Page







E CHRISTOPHER LEWIS
graduate student




 Dept. of Computer Science 
            and Engineering
University of Washington
      Box 352350
Seattle,
      WA  98195-2350 
            USA


      206/616-1848
      206/543-2969 fax
echris@cs.washington.edu




Hello.  Glad you could make it.  I am a graduate student.  I work on the  ZPL Programming Language Project.
I am the TA for CSE
341.  My office hours are tentatively 12:30 Monday and 9:30
Wednesday in Sieg 326a. 

<!--IMG ALT=""E Christopher Lewis"" src=""ecl.gif"">


<!--IMG SRC=""http://www.cs.washington.edu/htbin-post/speed/nph-count?width=4&link=http://www.cs.washington.edu/homes/echris/"" ALT=""#""> 
<!--visits since 3/15/95<br>
  
	E Christopher Lewis
   
  Last modified: 
  Thur. 26 September 1996 



",non-course
"


This web page is blank.





ecrocke@cs.washington.edu


",non-course
"
 Eddie Hong 

 Ed's home page 

 
Did you know that I'm a second year graduate computer science student
at the University of Washington?  Well I am.  And that's all I have to
say about that.

For those business type people with little time on their hands, I had
to include my resume link at the top, in postcript
and in plain text form.



My office: room 233 Seig Hall; (206)543-7798. 
My current home: (206) 244-1261

Currently, I'm working with Anna Karlin and Craig Chambers on a 
theoretical model for dynamic compilation. More specifically, I'm working
on developing an on-line algorithm that will work well for
dynamic compilation. I plan this to be my quals project.  
 

 accesses since 26 August 1996.
 


Historical facts about me.

 Free time activites.
  vine and branches




My  Sister
 wanted a home page, so I helped her create one. I also have a list 
of various people that I know, on 
another web page.


One of my interests includes keeping up on the computer industry. 
These sites give insightful commentary on what's happening. If you know
of any other such places, please mail 
 me.

  c|net 
 
	davenet


I own a Power Macintosh, so I guess that makes me biased towards
liking macs. However, I think better computers that are even
easier to use have yet to come....


Here are places that are I sometimes visit:

 CNN
 Apple Computer
 
        check the Seattle freeway traffic
 
        look for advice in the most important book in the world



Here's some useful information that I always wanted to know but just found... 

 find an address in the U. S.
  domain names

    - find out what country your e-mail friends are in. What does .se stand for?


edhong@cs.washington.edu


",non-course
"

 Susan Eggers 


Susan Eggers  

 http://www.cs.washington.edu/homes/eggers/

 Department of Computer
Science and Engineering  
 University of Washington
, Box 352350 
 Seattle, WA 
98195-2350 USA  
Voice:  (206) 543-2118 
Fax:    (206) 543-2969  
email:   eggers@cs.washington.edu 
Office:   308 Sieg Hall 



Research Interests:


Computer architecture and back-end compilation, with an emphasis on
experimental performance analysis.  Current work is on issues in
compiler optimizations (dynamic compilation, shared data optimizations
and instruction scheduling) and processor design (multithreaded
architectures).




Current Research Projects:


 
Compile-time algorithms to reduce false sharing
 
Dynamic compilation
 
Multithreaded architectures
  SPIN



Previous Research:


 
Cache coherency 
 
Code scheduling 
 
Compile-time prefetching on shared memory machines 
 
Miscellaneous 
 
Tools and workload 


News About ASPLOS


 
Program Committee
 
Call for Papers
 
The ASPLOS Homepage (for more information about ASPLOS)



Looking for a Research Project?


Click 
here for a list of projects you might do for a quals project, a
masters degree, or the beginning of a thesis.





Last updated, 2/28/96

",non-course
"

Emin Gun Sirer


 Emin Gün Sirer
egs@cs.washington.edu


Department of Computer Science & Engineering, 
University of Washington, Box 352350, 
Seattle, WA 98195-2350 USA

 
Background

I'm currently a third year graduate student at the  University of Washington.
I grew up in Istanbul, Turkey, received my B.S.E in Computer Science from 
  Princeton University 
in 1993 and am currently working towards a Ph.D. on the 
SPIN
project with 
Prof. Brian Bershad. 


I spent the summer of '93 at 
AT&T Bell Labs
working on the
Plan 9
operating system. I helped build a prototype 3-D display during the
summer of '91 at the NEC Research Center 
in Princeton, New Jersey.
Most recently, during the summer of '96, I worked at 
DEC SRC on the
Vesta 2 project.

Projects

My goal is to develop safe, adaptable and extensible operating systems.
I developed the threads, scheduling, synchronization, IPC, dynamic linking and
protection domain subsystems in SPIN. I also wrote the machine specific
aspects of the SPIN kernel, such as the system call and interrupt paths, and
some miscellaneous interfaces, such as alarms and mach compatibility support.

The novel 
aspects of SPIN threads and scheduling are that they provide the means of
extending a kernel with arbitrary thread implementations and scheduling
policies. Dynamically linking the extensions into the kernel allows
us to achieve high-performance. The interface, called strands, is
designed to be safe and provide fault-isolation.

The novel aspect of the 

SPIN protection domain interface is that it allows
isolation and safe fine-grain sharing at the same time. Extensions with
conflicting symbols can be simultaneously active in our system. Further, 
extensions can hide some of their code and data such that they can be
assured that no one can possibly access them. The clincher is that extensions
that want to share code and data can do so with no dynamic protection
enforcement overhead.

I also implemented a high-performance
web server on top of the SPIN networking
stack. The main objectives in its design are reduced http latency and
minimal load.

I wrote a MIPS instruction set simulator a couple of years ago, called
MIPSI,
that was robust enough to simulate all the SPEC benchmarks and Standard ML of
New Jersey. It has been used both as an educational tool and as a research
platform. This page describes MIPSI's features
and availability.
Papers


Safe Dynamic Linking in an Extensible Operating System
WCSSS 1996. Describes the SPIN protection and namespace management mechanism.
	
Writing an Operating System Using Modula-3
WCSSS 1996. Describes our experience with using Modula-3 to implement SPIN.
	
 Extensibility, Safety and
     Performance in the SPIN Operating System
SOSP 1995. A design, implementation and performance paper.
     
 Protection is a Software Issue
HotOS 1995. A position paper comparing software and
	hardware protection mechanisms.
     
 
SPIN - An Extensible Microkernel for Application-specific
	 Operating System Services
SIGOPS European Workshop 1994. Operating Systems Review version.
     
 
SPIN - An Extensible Microkernel for Application-specific
  Operating System Services
University of Washington Technical Report UW-CSE-94-03-03, March 1994.
  
 Measuring Limits of Fine-grained Parallelism
   Senior independent work, Princeton University, June 1993.

Talks

Language Support for Extensible Operating Systems
Slides from the presentation at the first Workshop for Compiler Support for Systems Software.
	WCSSS 1996, in Tucson, Arizona.

Interests

Whenever I can find time and opportunity, I do some of the following:






sailing ~~~~~~     windsurfing




diving ~~~~~~~     skiing


biking
making outdoor clothing and
hiking.


I'm a big Bob Dylan fan.
	


egs@cs.washington.edu



",non-course
"

Eric Anderson's Home Page

 
Eric J. Anderson



Where to find me:

 UW:
 Sieg Hall 427
 Department of Computer Science & Engineering
 University of Washington
 Box 352350
 Seattle, WA 98195-2350
 (206) 543-5118


 Home (new!):
 1812 N. 38th Street
 Seattle, WA 98103
 (206) 632-8067


 Why this page is no longer black
 In honor of the recent (June 12)
decision
in ACLU v. Reno, this page is no longer black.  Mind you, the
decision is merely an interim step (you could read my 
take on it), so I'm probably still committing a 
felony.
(And so should we all, if we care about speech and freedom and the
marketplace of ideas.)


 Facts About Me 


I'm a third-year graduate student in computer science.  That means I
mostly panic about my quals project.


I'm also trying to write some papers with 
Prof. Henry Greenside
of Duke University
(and recently finished a 
master's thesis 
by myself) on
steady-state solutions of a particular nonlinear biharmonic PDE.
Because the stability criterion for explicit methods is so restrictive
(a fourth power of the spatial resolution), implicit timestepping
methods such as backwards Euler are necessary.  The numerical analysis
issues involve Newton's method for solving the implicit nonlinear
equations, sparse matrix solution methods for solving for the Newton
step, and some interplay between them.

And the pictures   can be really spiffy.


I'm working on an n-body code for 
astrophysics simulation.  This work is in 
support of a project on 
data structures
by Prof. Richard Anderson


I'm working on a signal processing/computer music 
project aiming at automatic 
transcription from an acoustic signal.  Prof.
Anna Karlin is
the musician who got me interested in this project.


 Like everybody else, I've got a page of 
applets.  (This first link is just text and small graphics.)



Like everybody else, I've got a page of 
snapshots, mostly family.  (I can now prove I've got all those brothers.)


 Finally, here's the weather in Seattle.



eric@cs.washington.edu 
meanders@u.washington.edu 
27 Sept 1996 


",non-course
"

Oren Etzioni's Home Page


Oren Etzioni's Home Page

Department of Computer Science and Engineering
 University of
Washington
 Seattle,
Washington, 98195 

Voice: (206) 685-3035;  
E-mail:  etzioni@cs.washington.edu;
FAX: (206) 543-2969.



Office: Sieg Hall, Room 209. 

A brief bio
and photo. 

Current Research
   The 
Internet Softbot  enables a human user to state  what  he
or she wants accomplished. The Softbot disambiguates the request and
dynamically determines  how  and  where  to satisfy it.

The Softbot was one of the  5
finalists  in the 1995  Discover
Awards for Technological Innovation in Computer Software.



 The 
MetaCrawler Softbot is a fielded Web service that enables you to search
multiple Web Indices in parallel, and provides sophisticated pruning
options.  Try it!


c|net
recommends the MetaCrawler as the search service of choice!

 The 
Ahoy Softbot is a White Page service for the Web that locates
individual's home pages with high accuracy.   Try it!


  Brute
force learning:  Brute can analyze 100,000 hypotheses a second, when
run on a SPARC-10. 


    Selected Publications 

 
Efficient Information Gathering on the Internet (FOCS '96) 

 
Moving up the information food chain: deploying softbots on the
Web (AAAI '96) 

  A
Scalable Comparison-Shopping Agent for the World-Wide Web
(Autonomous Agents '97)

 Multi-Service Search and
       Comparison using the MetaCrawler in both
       Postscript and
       HTML, WWW '95.
 
  A Softbot-based interface to the internet.
 CACM, July 1994.


    Intelligent Agents on the Internet:
     Fact, Fiction, and Forecast. IEEE Expert, August 1995.
     
  Intelligence without Robots (A Reply to Brooks).
 AI Magazine, December 1993.


 
Learning to understand information on the Internet. (IJCAI-95).


  
Sound and Efficient Closed-World Reasoning for Planning (to
appear in AIJ).


 
The First Law of Robotics (AAAI-94)



 
Additional Papers .


 PhD Students Advised 

  Richard
Segal.  Master's thesis: St. Bernard:  The File
Retrieving Softbot, 1992.
 Neal Lesh.  Master's thesis:  A Planner for a UNIX Softbot, 1993.
  Keith Golden.  Master's thesis:  Planning for Universal
Quantification and Incomplete Information, 1994.
 Terrance Goan.  Master's thesis:  Learning About Software Errors,
1994.
  Mike
Perkowitz.  Master's thesis:  Learning to Understand Information on the
    Internet, 1995.

  Erik
       Selberg.  Master's thesis: Multi-Service Search and
       Comparison using the MetaCrawler, 1995.

 Oren Zamir and Jonathan Shakes.

 Undergraduate Students Advised 

 Stephen Soderland, 1992, (PhD program, Umass Amherst).
 Julie Roomy, 1993,       (Hewlett-Packard).
 Bruce Lesourd, 1993.
 Robert Spiger, 1993,     (Lockheed, AI research center).
 William Alford, 1994,   (PhD program, University of Wisconsin).
 Greg Fitchenholtz, 1994, (Hewlett-Packard).
 Guido Hunt, 1994.
 Dymitr Mozdyniewicz, 1995, (Quark Inc.).


 Machine Learning Resources 

 
The Machine Learning Database Repository 
at UC Irvine.
 
The Machine Learning Programs Repository at UC Irvine.
  Knowledge Discovery Mine
containing information about knowledge discovery in databases.
  Neuroprose
Archive containing recent papers relevant to neural networks.
 
Machine Learning Information Services .
 
University of Illinois Inductive Learning Group 
  StatLib containing data,
algorithms, and other information relevant to statistics.
  Machine Learning
Toolbox (MLT) at GMD in Bonn, German.
 
List of Usenet FAQs 




Access Count Since Jan. 16, 1996: 




 
etzioni@cs.washington.edu 
",non-course
"


Mike Feeley's Home Page


Mike Feeley


Computer Science & Engineering
University of Washington
Box 352350
Seattle,  WA 98195-2350
feeley@cs.washington.edu
Phone: (206) 685-2675 
FAX: (206) 543-2969 





I am a sixth-year grad student; I am finishing up now and should be done soon.
My thesis concerns global memory management for workstation
clusters.  I also work on the 

Distributed Computing and 
 Opal
projects.  


I'll be joining the faculty at the 
 University of British Columbia in
January 1997.


More information is available using these links:

Some of Our Papers
My Research Summary
CV
Southeast Idaho





Last modified: July 26, 1996
Mike Feeley




",non-course
"Chris Fisher's home page


( no picture yet )

 Chris Fisher


Department of Computer Science and Engineering
Box 352350
 University of Washington
 Seattle WA, 98195-2350 

fisher@cs.washington.edu 


Voice: (206) 685-3807;  
FAX: (206) 543-2969;
e-mail:  fisher@cs.washington.edu 

Lab: Sieg Hall, Room 424 (LIS)


My page is currently under construction!




Return to CS&E Home Page

",non-course
"

jim fix









me?














Department of Computer Science & Engineering
University of Washington, Box 352350                                      
Seattle, WA 98195-2350 

(206) 616-1848 
C-109C Sieg Hall 
fix@cs.washington.edu







Schedule
This quarter (autumn '96) I am not TAing any courses,
but rather working on my Generals Exam.
You can check out my schedule
to see what I'm up to.  Otherwise, if I'm not around, I can probably
be found in the library or somewhere nice reading papers.



Research Activities
My main interest is in computer algorithms, specifically in the areas
of parallel computation and computational geometry.


 publications
 meanderings




	Places to go
	


	Denny's
	
$1.99, are you outta yer mind?


 
	Oh-so Vista!



	Peas Kor



	Some music sites
	



	The ""Chateau"" Gallery
	



	The C109-C Fund Drive
	

	Things to do
	

	The 
	""What Alec Wolman might say""
	 server
	

	See 
	seven lost souls captured in HTML
	

	Listen to the phone booth, mofo
	
People to see

	About me


CJ!


Lucy's place



	Paul ""The Peach"" Ruel
	

 
What I might look like at this very moment...












fix@cs.washington.edu


",non-course
"

Francesmary Modugno's Home Page






Francesmary Modugno's Home Page



Department of Computer Science and Engineering
University of Washington
Box 352350 
Seattle,
   WA 98195 

Office:  212  Sieg Hall 
Phone:   (206) 543-8099 
FAX:     (206) 543-2969
E-mail:  fm@cs.washington.edu 



 Research interests: 

My main interest is human-computer interaction.    

I am also interested in 

 end-user programming 
 formal modelling
 software specification and verification
 technology policy  


I welcome the opportunity to collaborate on these and any related topics!


 Current Research Projects: 


Software Safety and the Human-Machine Interface 

 Previous Research: 


 Publications     
available online


 Summary     of
my thesis research.

  Formal models of real-time, concurrent and distributed systems

  Parallel Algorthims



 Professional Activities: 


 
CHI 96  
 
Basic Research Symposium 

Co-chair



UIST 96  Demonstrations Co-Chair 

 Education: 

 Ph.D., Computer Science. Carnegie Mellon University.  March 1995.
 M.S., Computer Science. Carnegie Mellon University.  August 1989.
 A.B., Computer Science and Mathematics. Cornell University.  May 1987.

 Other Fun Activities: 
I'll try just about anything once!  My recent interests include
cycling, skiing, languages and cultures (currently Spanish, previously
Italian), vegetarian cooking, and my dog, 
 Ellery  .   




 On-Line Greetings:  
 1995  .   


fm@cs.washington.edu


",non-course
"




George Forman's Home Page





George Forman's Home Page






I have received my Computer Science & Engineering Ph.D. here at the
University of Washington, and have moved down to Palo Alto to start work at

Hewlett-Packard Laboratories.


 My new e-mail address is: 

gforman@hpl.hp.com
 Phone: 415-857-7835




Research Projects 




Dissertation in the field of Mobile Computing- 
	try running the demos! 
		These pages are no longer maintained 



ZPL Parallel Programming Language & Optimizing Compiler 


Ariadne: scalable pattern-matching parallel trace debugger 




Publications 



Mobile Computing Hyperlink Library 


Something Interesting 




Free: handy software scripts I have written 



A Word Puzzle 



The Water Song 



Change the Netscape animation 







George H. Forman, gforman@hpl.hp.com

home page


mail


finger


map


weather


CS Dept.


UW (live picture)
 Generated: Wed Oct  2 11:17:52 PDT 1996


",non-course
"
 Home Page: Marc Friedman 





 Marc Friedman's Home Page 

 


 
		Course web page for CSE 573 
 Who Am I? 
 Watercolors 
 Applets 
 Camping Checklists 
 Spanish-English Collaborative Dictionary 
 Poetry 
 Research 
 Some Favorite Quotes 

 Links to elsewhere 

 
OCCAM: an information-gathering agent. 
  Keith Golden. 
  Keith's Wordbot. 
  Our bike trip. 
 
Artificial Intelligence at UW. 
  Cody Kwok. 
  Dan Weld. 
 
The UCPOP planner  a research tool that changed my life.
    Works of Nietzsche
in English. 
 My  Netscape bookmarks
 file.
   Every page should reference  itself. 




You are the
 
visitor since Feb 4 '96 


Marc Friedman 


friedman@cs.washington.edu 


",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"


Charlie Garrett's Home Page


 Charlie Garrett
 Address 

13725 32nd Ave. NE 
Apt. C-242 
Seattle, WA 98125 
(206) 386-0265

Research interests:

 Compilers
	 Graphics
	 Neural Networks/Genetic Algorithms
	 Game playing algorithms

Papers on-line

 Genetic Algorithms


Formerly, I was a member of the 
Cecil 
group at the University of
Washington.


 My Bookshelf 
 Audio File 


garrett@cs.washington.edu 



",non-course
" Georges Winkenbach 

Georges Winkenbach
Department of Computer Science & Engineering
University of Washington
Box 352350
Seattle, WA  98195-2350
e-mail: georgew@cs.washington.edu
phone: (206) 526-0968


My interests are computer graphics and multimedia. My thesis work, done
under the supervision of professor 
David Salesin,
deals with applying traditional pen-and-ink illustration techniques to the
automatic rendering of three-dimensional models. A few pen-and-ink images
created with our prototype rendering system can be found 
here.


 Other Links to Follow

Pen-and-ink image gallery.
  Grail
      : Graphics and Imaging Laboratory.
  Department of Computer Science
      and Engineering.
  My wife's home page: Taweewan 
      Siwadune.



 
",non-course
"

Greg J. Badros
  Welcome to my Home Page!!! 
(Last updated 1-Oct-96) 
 
Email: gjb@cs.washington.edu
Address: 
8816 Nesbit Ave. N., Apt 303 
Seattle, WA  98103-4067 
 
  Hello, and welcome to my WWW homepage.
Please feel free to send  feedback
 to the above email address.  This page is (and always will be, I
suppose) under construction so keep checking back for new and exciting
features.

 I'm a recent graduate of  Duke
University.  I completed my B.S. degree as a double major in
computer science and mathematics in the spring of 1995.  I am
currently employed part-time as a senior research scientist for
Transworld Numerics, Inc., a small company originally located in
Durham, NC, with its headquarters in Bermuda.  I now work from my
apartment in Seattle,
Washington. I am also a full time graduate student in the computer
science and engineering department at the University of
Washington.  
 
 Fall 1996 Courses 

CSE 505 Home Page
CSE 531 Home Page
CSE 567 Home Page
CSE 590N, Software Engineering Seminar
CSE 590k, Compiler Seminar


  Newer Stuff 
Philosophy of Mathematics Course Notes 
Misc. Patches (Zsh, Fvwm) 
My First-Place 
(Best of Show) RedHat Desktop Configuration Competition Entry 
Emacs Configuration README file 
Emacs Configuration Archive file 
ZShell Configuration README file 
ZShell Configuration Archive file 
A Chronicle (Duke University Newspaper) Article about Transworld
Numerics, Inc. 
Spring 95 IEEE
National programming competition victory. 
 Vertices Winter 95
Issue  (A Duke Magazine which contains my recent article on Genetic
Algorithms.) 
 
Personal Links

 
Résumé. 
 
Data Date, my first business
       
   
       Some sample art that I drew by
computer.
       
   
       And some very simple  3-D (Magic Eye) art that I created.
       
   
       Canterbury's 1993 Progressive Map
 
       Various random  Pictures 

 
But life is definitely
not all work!  I have many hobbies, including:


 

       Tennis
 

       Skiing, Especially at  Jackson Hole , in Jackson, WY.
   

       Volleyball
 
Juggling
 

       Piano Playing
 
Mathematical games
(e.g.  
	   Rubik's Cube )
   
Linux
(Freeware Unix)
   
       Music, especially:
       
 Sarah
McLachlan

	      Billy Joel , or 
	      Joel's Yahoo page  (lists other links) 
 R.E.M. 

 

       Parliamentary Procedure 
 

NCAA Basketball 
 
And here are some other interesting links: 

 
 Lycos Web
       Search 
 
Duke Computer Science Home Page 
 
Duke University Home Page
       
 
The Chronicle:
       The Duke Community's Daily  Newspaper
 
 Univ. of
       Washington Home Page - Unofficial 
 
Seattle

 
Microsoft Corporation 
       World-Wide-Web Server 
 
Gateway Users Group
        
 
Historic
       Computer Images 
 
HotJava 
 
Global Network Navigator Home Page 
 
PERL --
       Practical Extraction and Report Language
 
The C++
       Virtual Library 
 
Inter-Language
       Unification -- ILU 
 

       Interesting Devices Connected to the Net
 

       Writing HTML, SGML, TEI, etc. 
 
 The Seinfeld
       Index Page  
 
 Friends
       Sitcom  

Parts of this material are based upon work supported under a National Science Foundation Graduate Fellowship.  Any opinions, findings, conclusions, or recommendations expressed in this publication are those of the author, and do not necessarily reflect the views of the National Science Foundation
 
Greg J. Badros / U Washington Computer Science and Engineering / gjb@cs.washington.edu


",non-course
"

Greg Linden's Home Page



Greg Linden



My lovely wife

Corina is 
currently in her third year of the graduate program in the 

Political Science
here at 

U of W.



I'm in my third year in the graduate program at the
Computer Science 
Department at the University of
Washington, slaving away toward the lofty goal of my Ph.D.  
   
I completed his undergraduate
degree at the  University of California at San Diego  with an
odd double-major in Computer Science and Political Science.

I'm going on leave from graduate school in mid-December and I'm
actively looking for a position in software development.  If you're interested, you can check out my 

resume.




Java Applets:



WebView allows you to see the links to and from a page or
set of pages.  






There are two new additions to the WebView family, AltaVistaWebView
and MetaWebView.  Instead of entering a URL, you enter keywords for
AltaVista or Metacrawler and WebView hits the search service,
returning a graph displaying all the pages found by the search
services with the links between those pages.  















 The 
Automated Travel Assistant emulates the dialog between a travel
agent and client, gradually eliciting your flight preferences while
allowing you to browse real flight data.  It's a research prototype,
but it has quite a bit of functionality even at this early stage.






ATA  and 

WebView   
have been highly rated by 

Gamelan and
JARS.  

ATA 
was
rated ""Top 1% of Java applets"" by JARS, ""What's Cool"" by Gamelan, and
was a Gamelan staff pick. 

WebView 
was
rated ""Top 5% of Java applets"" by JARS, ""What's Cool"" by Gamelan, and
was a Gamelan staff pick.













 
...and a Gamelan Staff Pick!




And 

AltaVistaWebView 
was one of the winners of the

Java Repository Java Contest! 





My applets have also been published in two books:

A. Walsh, Foundations of Java, IDG Books, 1996
Le Meilleur de Java (The Best of Java), 1996


Here's my first Java applet, Linear Ballet.





Oops!  You're not using a Java-capable browser.  Sorry.  No cool Java applets for you. 





The source demonstrates using double-buffering to avoid flicker and using threads to give time to other running applets.  The code certainly could be cleaner, though, so don't expect a work of art here.
 
If you thought that was cool, you might have low enough standards
to be impressed by my

LGrammer or 

Particle Tree
 applets.
Both draw trees.  The LGrammer trees look much more realistic than the
ParticleTree trees, but both are interesting. 




I recently started a position as a 

JARS judge, evaluating the Java applets that are submitted to the

JARS archive.  Very interesting work.

In the summer of 1995, I developed Dawn of Civilization, a
demonstration application showing that planning techniques can
successfully be applied in entertainment software, for Myriad
Software.  

At UCSD, I worked with Professor Rik Belew and Filippo Menzer on the
 Latent
Energy Environments (LEE)  project, a tool for developing
artificial life models and experimenting with artificial neural
network and evolutionary learning in software enviroments.
 


 Papers: 

S. Hanks, N. Lesh, G. Linden, Eliciting User Preferences:  The
Automated Travel Assitant, Submitted to User Modeling 1996.
S. Majeski, G. Linden, C. Linden, A. Spitzer, Modeling Localized
Interaction:  Spatial Constraints in the Iterated Prisoner's Dilemma,
Association of Economic Scientists 1996.
   A. Krishnamoorthy, R. Paturi, M. Blume, G. Linden, L. Liden,
  S. Esener,  Hardware
Tradeoffs for Boolean Concept Learning, World Congress on Neural
Networks, 1994, pg 551-559
   G. Linden,  Recurrent Neural Networks in the Iterated Prisoner's
Dilemma, 1994  [Unpublished Honor's Thesis]





Adam Carlson,

Sujay Parekh, and I wrote a fun
ray tracer 
as one of
the projects in

CS557 (graduate computer graphics).  Here's some of the images...

 The Headless Horseman
 Closeup of the Headless Horseman
 Chess Duel
 Some Assembly Required
 Spheres, an image with
reflection, transparency, shadows, distributed ray tracing, adaptive
sampling, and a mess of other cool things.  The patterns on the
spheres are because they're both transparent and reflective, causing
the rays to reflect and refract multiple times both from the surface
and internally.  


We also made a 90 second computer animation called ""The Strike"".  The
animation was written using SGI Inventor and C code to manipulate the
3D models.  The original SGI movie file was 70mb.  We have made a

lower quality
27.5mb QuickTime movie
 available and a 

very low quality 6.5mb
QuickTime movie available.  Sorry, it just doesn't compress any
further than this (at least with anything resembling reasonable quality).




 Mac Programming Stuff
 Dilbert
 Cognitive Science at UCSD
 CMU AI Repository
 Artificial Life Info




I can be occasionally found at:

 Chateau (a.k.a. Guggenheim Annex) 109A
 Box 352350
 Computer Science & Engineering
 University of Washington, FR-35
 Seattle, WA    98195-2350
 (206) 616-1846     
 (206) 543-2969 (fax)

 


	glinden@cs.washington.edu

  Last modified: 
  5/27/96



",non-course
"

Brian Kris Grant: Home Page



Brian's Home Away From Home


Work-Related Info

Work background
UW
Dynamic Compilation Group
UW Department of Computer
Science & Engineering

Personal Stuff

Personal background
My daughter, Isis
My trip to Singapore
My bookmarks
My PGP Public Key



Last updated October 3, 1996.
Brian Kris Grant (grant@cs.washington.edu)



",non-course
"

Dave Grove


 Dave Grove 



     Department of Computer Science & Engineering

     University of Washington, 
    Box 352350 

     Seattle, WA 98195-2350 USA 
Office: 

Chateau Sieg 110. 



 Work
I spend most of my time playing with 
Cecil. 
Cecil is a new pure object-oriented langauge that we are using   
as a vehicle for integrated research in the areas of language design, 
programming environments, and optimizing compilers.  
 I also used to be one of the hordes of consultants hanging around
the fringes of the 
SPIN
project. Now that I'm actually attempting to graduate sometime soonish, I
do this much less frequently. 

  Papers I've authored or co-authored.




 Play
 The day just wouldn't be complete without a  Dilbert
fix. Here's a strip that
hits a little too close to home!
  

I am currently managing an  underacheiving 
fantasy football team.  
 I used to spend my summers in New Hampshire, working with  these guys at Wah-Tut-Ca Scout
Reservation (Greater
Lowell Council, BSA).  
Here's a picture of a  Wah-Tut-Ca
sunset, taken right from my cabin.  Just  for kicks,  here's another one.  
 Every once in a while, the boys in my office do  something silly. 
Our 
white water rafting trip was especially cool.  
 After spending a few months in Toronto, I drove back to
Seattle and took a number of detours along the way.  Here are some

hihglights from the trip. 




grove@cs.washington.edu 



",non-course
"

Scott Hauck



Scott Hauck
hauck@cs.washington.edu



Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA





I'm a 5th year graduate student at the University of Washington.
I am currently working on Multi-FPGA Systems and Rapid-Prototyping of 
Board-Level Designs, though
I am also interested in Asynchronous Circuits, FPGA Architectures, and 
Parallelism.  I should graduate in June of 1995.


Personal



  Biography & Education
  Experience
  Publications
  Curriculum Vitae


Research



 
Asynchronous Circuits
 Survey of current asynchronous design methodologies, as
	well as the first FPGA for asynchronous circuits.

 
Triptych/Montage FPGA Architectures
 Development of the Triptych and Montage FPGA 
	architectures, architectures with improved densities over current 
	commercial FPGAs.

 

Multi-FPGA Systems & Rapid-Prototyping
 Development of the Springbok Rapid-Prototyping System for
	Board-Level Designs, as well as partitioning, pin assignment,
	and routing topology work for general multi-FPGA systems.

 
The Chinook Project
 A Hardware/Software Co-design, Co-synthesis, and Co-simulation
	system for embedded applications.


 

",non-course
" 
 Kevin Hinshaw's Home Page






 
 
 

















 
",non-course
"
 Ian's Place 




 Ian's Place 



This is me, Ian MacDuff.



Below is an ultrasound image of 

Emma Elspeth MacDuff (name subject to change without notice), 
my unborn daughter.  She's 20 weeks from
conception here, with about 20 more weeks until she's ripe in
mid-December.  The view is a profile.  She's lying on her back looking
up.  Her head on the right, the upper-half of her torso on the
left.





When I'm not busy obsessing about my impending 

fatherhood, or my 

Master's Thesis
(which is part of the 

Chinook project), I pass my time by being as 

silly as possible.

I also remember to eat my

SPAM!  Do you?




Unfortunately, I also waste time with 

HTML and browse around for interesting stuff using

WebCrawler.

Here's pointers to some other neat stuff:

Frogs

TV Nation

Penn & Teller

Music Lyrics




Ian MacDuff (

ian@cs.washington.edu)

Dept. of Computer Science and Engineering, FR-35

Univ. of Washington

Seattle,

WA, 98195

USA



",non-course
"

Herve A. Jamrozik


Herve A. Jamrozik





I have been a postdoc at the University of Washington since September 1995.



Department of Computer Science and Engineering

University of Washington
Box 352350 

Seattle,

WA
98195 

Office:  433  Sieg Hall 
Phone:   (206) 685-2675
FAX:     (206) 543-2969
E-mail:  
jamrozik@cs.washington.edu



 Research: 
My main interests are in Distributed Systems, Object-Oriented Languages and Software Engineering.

Currently, I am working on Global Memoy Management in a workstation cluster with

 
Hank Levy 
 
Mary Vernon 
 
Anna Karlin 
 
Mike Feeley 
 
Geoff Voelker 


New high-speed networks greatly encourage the use of network memory as a cache for virtual memory and file pages, thereby reducing the need for disk access. Network nodes with memory-intensive applications can use the primary memory of lightly-loaded nodes as temporary backing store. This introduce a new level of the memory hierarchy: namely, a global memory cache that lies (logically) between local memory and disk.
Because pages are the fundamental transfer and access units in remote memory systems, page size is a key performance factor. Recently, page sizes of modern processors have been increasing in order to provide more TLB coverage and amortize disk access costs. Unfortunately, for high-speed networks, small transfers are needed to provide low latency. This trend in page size is thus at odds with the use of network memory on high-speed networks. We studied the use of subpages as a means of reducing transfer size and latency in a remote-memory environment.



Reducing Network Latency Using Subpages in a Global Memory Environment.
H.A. Jamrozik, M.J. Feeley, G.M. Voelker, J. Evans II, A.R. Karlin, H.M. Levy, and M.K. Vernon.  In

Proceedings of the Seventh ACM Conference on Architectural Support for Programming Languages and Operating Systems,
October 1996.
[postscript]



I did my thesis research on Debugging in an Distributed Object-Oriented System in 1993 at the

Universite Joseph Fourier,
 Grenoble .
I was involved in the 

GUIDE
project at the 

Laboratoire Bull-IMAG
, part of the 

IMAG
institut.


Fun: 


There is a way to go to the ExTremE People ® area. It's

Not here.

Visit the Louvre gallery 

 

Look at the maps of
 France , 
 Europe  
and 
 World  .

Some

family pictures.

Some

friends pictures.




jamrozik@cs.washington.edu




V1.1 Mai 6, 1996
V1.0 March 21, 1996
V0.1 December 28, 1995



",non-course
"


Jason Secosky - Home Page





Jason Secosky,
jasons@cs.washington.edu

Address:
Computer Science &
Engineering Department Sieg Hall C-109C
University of Washington Box
352350

Seattle, WA  98195 USA (206) 616-1848 (office) (206) 543-2969 (fax)


Frequently used pages:


The ZPL Project

Seattle Weather Forecast - c/o The Weather Channel ® 
News and Observer
(NandO)
Otter
Pops Home Page
Star Trek Voyager,
Presented by Paramount

Webcrawler Internet Search Tool
Alta Vista Internet Search Tool
c|net magazine


©Jason Secosky
Last Modified:  Thursday May 23, 1996


",non-course
"



Jeremy Baer




Jeremy Baer


""I never let my schooling interfere with my education"" 
-Mark Twain


""We are such stuff as dreams are made on"" 
-William Shakespeare



I'm currently a graduate student in 
Computer Science
at the 
University of Washington.

My CS interests include artificial intelligence, human-computer
interaction, multimedia educational software, software engineering
tools, and computer generated music.

Here's some more personal/creative stuff.


Other cool places I spend some significant time at:


Pierian Spring Software


Oregon Museum of Science and Industry (OMSI)
 Pomona College


Here's a look at some current projects of mine:

 Eight-Puzzle Java Applet 
(a work in progress)
 Experimental Virtual Travel Applet
 Copy Effects Demo Applet
 Questioner Project
 Static Layer Analysis for C Programs


Feeling stressed out?  Here's a really silly little DA for the Macintosh that
I wrote years ago.
 Download it if you'd like.






Metacrawler Web Search






Copyright (c) 1996 Jeremy Baer 
jbaer@cs.washington.edu



",non-course
"

Jeremy Buhler's Home Page


Jeremy Buhler's Home Page

Do not attempt to adjust your browser.
                 We are controlling transmission.


 

  Status: 
First-year Ph.D. student 
  Institution: 

         University of Washington 
  Department:

         Computer Science and Engineering 
  Office:
Sieg Hall 429 
  Office Phone:
(206)543-5129 
  Home Phone:
(206)729-1455 
  E-mail Address:

jbuhler@cs.washington.edu 
  Finger me at:

         tako.cs.washington.edu 






Important Stuff


Lecture notes on suffix trees (Postscript)
    (LaTeX)
My research (coming soon)
My course schedule
My PGP public key
Cyber-activism at the
    Electronic Frontier Foundation
 


Just for Grins


Recommended reading
My undergraduate alma mater: 
    Rice University
Quotable quotes
My cat's home page





We now return control of your browser to you.


Jeremy Buhler
(jbuhler@cs.washington.edu)
Last Update: 10/18/96



",non-course
"

Jeff Dean


 Jeff Dean




     Department of Computer Science & Engineering

     University of Washington, FR-35 

     Seattle, WA 98195 USA 
Office: 

Chateau Sieg 110.




Here's the view from my office (or would be if those danged buildings weren't in the way): 








Future Plans

I plan to graduate in summer, 1996, after which I'll be joining DEC's Western Research Laboratory in sunny Palo Alto.  We've just bought a house in nearby Menlo Park.

 Here is my curriculum vita (postscript).  I also have a summary (postscript) of my research and teaching experience.




Projects


I work primarily on the 
Cecil project.  

Cecil is a new pure object-oriented langauge that we are using as a
vehicle for integrated research in the areas of language design,
programming environments, and optimizing compiler techniques.  We
intend for our techniques to scale to large, real-world programs, and
to keep ourselves true to this goal, we're implementing the Vortex
compiler in Cecil.  We currently have about 70,000 lines of Cecil code
in the compiler.  
 
Much of our work in this group involves tracking down compiler bugs.

 I also hang out in the SPIN
project meetings.  SPIN is an extensible operating system
microkernel which supports the dynamic adaptation of system interfaces
and implementations through direct application control, while still
maintaining system integrity and inter-application isolation.  

During Spring quarter, I was one of the organizers for CSE 590K, the department's compiler seminar.



Research Interests



My research concerns the efficient implementation of
object-oriented languages through compiler optimization techniques.
In particular, I am exploring how whole-program analysis can be used
to improve performance, how it affects incremental compilation, and
how it interacts with other optimization techniques, especially
profile-guided optimization techniques.  I am also interested in how
whole-program optimization affects language design: if it is assumed
that the compiler will have access to the entire program, then many
compromises made in existing language designs become unnecessary.  I
am interested in applying the lessons learned in exploring whole
program optimization towards designing a new systems programming
language that is both flexible and efficient, based on an underlying
implementation that does whole program analysis.

To validate my research, I have been one of the three principal
designers and developers of Vortex, an optimizing compiler for
object-oriented languages.  Vortex defines a language-independent
intermediate language for object-oriented languages that is
high-enough level to permit optimization of features such as message
sends, closures, and object creations.  It also contains a unique way
of composing optimization passes so that they run in parallel,
obtaining better results than repeatedly running the passes
separately.  For example, the compiler applies intraprocedural class
analysis, profile-guided receiver class prediction, inlining, alias
analysis, splitting, and CSE all at once, in a single combined pass.
Part of the work on Vortex has been to develop ways of structuring
optimization passes to permit this kind of composition while still
allowing the passes to be developed largely independently of each
other.  We have a nice framework for specifying iterative data flow
analyses that permits clients to develop new optimization passes with
relatively little effort (for example, the Vortex dead assignment
elimination pass is approximately 50 lines of code).




Publications


Some recent  papers  I've authored or co-authored.



Personal


I love very spicy food (as they say, ""mild is a four letter word"") and Coke.  I should probably kick my caffeine habit.  Most of my enjoyable moments are spent with my wife Heidi and my daughter Victoria.  I would really like to go here someday.  My wife and I spent our honeymoon on Kauai during Hurricane Iniki.

 I recently won a biplane ride from Galvin Flying here in Seattle (I guess I can't say ""I never win anything!"" anymore).  My wife and I took the flight, which consisted of a 20 minute flight around and over downtown Seattle and Puget Sound in a Travel Air 1927 model biplane.  I was feeling daring, but, sadly, their insurance coverage doesn't permit passengers to walk on the wing, so we just sat back and enjoyed the ride and the view.  It would have been fantastic even if we'd had to pay for it.  Highly recommended!  If you're looking for something fun to do in Seattle, their number is 763-0350.

 Here's my rather lengthy hotlist.





jdean@cs.washington.edu 

",non-course
"

Jon Damon Reese's Home Page







Jon Damon Reese
Post-Doctoral Researcher

           Safety-Critical Software Group



Department of Computer Science and Engineering
University of Washington
Box 352350 
Seattle,
   WA
   98195 



	Office:				
	106 Chateau (Guggenheim Annex) 	



	Phone:				
   	(206) 616-1844 			


	FAX:				
    (206) 543-2969 			


	E-mail:				
jdreese@cs.washington.edu






 Research 

    
    I am interested in the problem of safety-critical
    software.  We are all aware of devices, systems, and
    structures that can cause catastrophes when they fail.  As
    computer hardware becomes less expensive and as more expectations
    are placed on software, computers are being placed in control of a
    wider range of these applications.  Software has advantages over
    conventional technologies, e.g., flexibility.  
    But these advantages come at a price.  Software behavior can be
    very complex and unpredictable.  Perhaps the best publicized example is
    the Three Mile Island incident, in which operators had great
    difficulty in diagnosing the state of the system during an emergency.


    The requirements stage of software development is key to a project's
    success, especially with respect to safety.  For that reason, 
    my colleagues and I have concentrated on requirements, especially
    the communication of requirements via a requirements specification.
    To that end we have developed a state-based language called
    
Requirements State Machine Language, or RSML.
    We have validated the usefulness of this language by
    specifying TCAS II, 
    an avionics system.


    For my doctoral thesis I invented a hazard analysis procedure
    based on the Hazard and Operability (HAZOP) study.

    The most significant concept that this new procedure borrows from
    HAZOP is that of a deviation, hence the name deviation
    analysis.  See below for a link to an HTML transcription of
    the dissertation.


 Current Projects 

 Deviation Analysis
     
 Write conference article summarizing deviation analysis.
      Make deviation analysis software available to UW Safety-Critical 
          Software group.
      Study the possibility of dynamic display and control of 
          deviation analysis searches.  (With Siang Lin Loo)
     
 RSML Tool Set
     
 Integrate deviation analysis software with RSML tool set.  
          (With Kurt Partridge)
      Make alpha version of RSML tool set publicly available. 
          (With Kurt Partridge and Sean Sandys)
     
 RSML semantics
     
 Draft semantics document, including discussion of RSML variants
      Develop example of improved semantics
     

 Academic History 

 Ph.D. (1996), 
    Information and Computer Science, 
    University of California, Irvine
    Dissertation: Software Deviation Analysis
(Postscript)
 B.A. (1989), Computer Science/Linguistics, 
    Rice University.
 Waxahachie High School (1985), Waxahachie, TX.

 Publications 

 Nancy G. Leveson, Mats P.E. Heimdahl, Holly Hildreth, and Jon Reese.
     Requirements Specification for Process-Control Systems.
     IEEE Transactions on Software Engineering, SE-20(9),
     September 1994.
(Postscript)

 Steven B. Dolins and Jon D. Reese.  
     A Curve Interpretation and Diagnostic Technique for Industrial Processes.
     IEEE Transactions on Industry Applications, 28(1),
     January/February 1992.
 N.G. Leveson, M.P.E. Heimdahl, H. Hildreth, J.D. Reese, and R. Ortega.
     Experiences Using Statecharts for a System Requirements Specification.
     Sixth International Workshop on Software Specification and Design,
     Como, Italy, October 1991.

 Etc. 


jdreese@cs.washington.edu


",non-course
"


Home page for Jack L. Lo



Jack L. Lo
jlo@cs.washington.edu  
Department of Computer Science and Engineering,  
University of Washington,  Box 352350  
Seattle, WA  98195-2350





This home page is currently under construction.




 Research
 Papers

 Converting Thread-Level Parallelism Into Instruction-Level Parallelism via Simultaneous Multithreading (Abstract, Postscript) 
Jack L. Lo,
Susan J. Eggers, 
Joel S. Emer, 
Henry M. Levy,
Rebecca L. Stamm, and
Dean M. Tullsen

Submitted for publication, July 1996.


 Exploiting Choice: Instruction Fetch and Issue on an Implementable Simultaneous Multithreading Processor (Abstract, Postscript) 

Dean M. Tullsen,
Susan J. Eggers, 
Joel S. Emer, 
Henry M. Levy,
 Jack L. Lo, and Rebecca L. Stamm
 
In Proceedings of the 23rd Annual International Symposium on Computer Architecture, Philadelphia, PA, May 1996.



 Compilation Issues for a Simultaneous Multithreading Processor 
(Postscript) 

 Jack L. Lo, 
Susan J. Eggers, 
Henry M. Levy, and
Dean M. Tullsen 
In Proceedings of the First SUIF Compiler Workshop, Stanford, CA, January 1996, p. 146-7.



 Improving balanced scheduling with compiler optimizations that increase instruction-level parallelism (Abstract, Postscript) 

 Jack L. Lo and Susan J. Eggers  
In Proceedings of the ACM SIGPLAN '95 Conference on Programming Language Design and Implementation, La Jolla, California, June 1995, pages 151-162.



 Comparing static and dynamic scheduling on superscalar processors 

 Jack L. Lo.  
General Examination Written Report, May 31, 1995



 Examining the interaction between balanced scheduling and other compiler optimizations

 Jack L. Lo
Ph.D. Qualifying Examination Written Report, May 6, 1994




I'm currently working on architectural and compiler support for
 
Simultaneous Multithreading (SMT).
My research interests also include static and dynamic scheduling for 
superscalar and VLIW processors, instruction-level parallelism issues,
as well as compilation for multithreaded architectures.  In particular,
I am investigating compilation issues for 
Jack's Lo-down on WWW pages 

Where to find me:
2371 Franklin Ave. E
Seattle, WA 98102
(206) 328-4648

or

Sieg Hall, Room 223
Phone: (206) 685-4087
FAX:   (206) 543-2969

 A couple pictures from our recent paintball experience

 Picture 1
 Picture 2










Yahoo



jlo@cs.washington.edu  



",non-course
"

Joe Sherman's Home Page 


Joe Sherman



joebob@cs.washington.edu



Department of Computer Science and Engineering
University of Washington
Box 352350
Seattle, WA   98195-2350   USA



My research interests are:

User Interface design
Information navigation and visualization
 
Projects and Activities:

User Interfaces for . . .
An informal, local survey of Web use
Class project for CSE 590H
Creating an impressive Home Page
Quality time with Pam, Tim and Sarah
Softball

Stuff I might want to see:

 Automatic suggestions via SEW page
 Links to User Interface Research and related 
topics
 Directory of useful Web Pages



If your browser supports it, you can send mail to
joebob@cs.washington.edu.



",non-course
"


		Home page for Joshua Seims
	



	Home page for Joshua Seims








	ABSTRACT

 Joshua Seims is a biologically-based neural network system, 
currently being tested at the
University of Washington's Department of Computer Science.  Having begun
in 1974 as a Lockean blank slate, Josh has learned to emulate observed
behavior and has successfully accomplished several tasks such as graduating
from college, traveling of his own volition, and has recently started to 
demonstrate the potential for independent creative thought.  The current task
we have presented Josh is to earn a Ph.D. in computer science, and we 
expect this to take several more years.  This document provides an overview
of Josh's cognitive and ambulatory achievements, organized into 
Personal and Academic
hierarchies.  Additionally, future work is discussed within each of the 
above contexts.


 









",non-course
"
 Jovan's Home Page 
Jovan's home page moved to  CMU.

",non-course
"

Joanna Power





joanna's page


Hi.  I'm Joanna.
These are my cats:










academic interests


My main interest in computer science is graphics.  

grad school at UW
neat stuff at my alma mater
cool graphics links from Jonathan Shade
graphics research at UW
duotone reproduction

My other main academic interest is biology, especially genetics and molecular 
biology.

more alma mater
most recent site of gainful employment



publications

Joanna L. Power, Brad S. West, Eric J. Stollnitz, and David
      H. Salesin.  Reproducing color images as duotones.  In
      Proceedings of SIGGRAPH 96, pages 237-248.  ACM, New
       York, 1996.





real life

past homes
diversions
gender issues

status of women in computer science
NOW home page
Feminist Majority Online

ultimate frisbee





fun stuff

Froggy Page.
Sean's quotes
Brad's comics and music
Evan's jokes
Ed's page of pages
my hero





jpower@cs.washington.edu
",non-course
"

Jonathan Shakes



<!--!img align=left hspace=16 src=""gif/jshakes.gif""!--!>
Jonathan Shakes



 Sieg Hall 423 
Computer Science & Engineering
University of Washington, Box 352350
Seattle, WA 98195
 (206) 543-3368
 FAX: (206) 543-2960

 Ahoy! The Homepage Finder

Resumé
Links



Last update: August 15, 1996


jshakes@cs.washington.edu


",non-course
"

Juan Alemany


Juan Alemany

 My Home Page



",non-course
"

Kari Pulli's Home Page




Kari Antero Pulli





I'm a third year graduate student in the Computer Science & Engineering
Department at the University of
Washington, working on my Ph.D.


I'm interested both in Computer Graphics, Computer Vision, and
Mathematics, and I'm trying to combine aspects from all these
disciplines in my research. 

The professors in our department I work closest with are Tony
Derose (graphics) [he's actually not here any more, but left UW
for Pixar] and Linda
Shapiro (vision). Additionally I work with Werner Stuetzle and
John McDonald (statistics), Tom Duchamp (mathematics), and
Hugues Hoppe and Rick Szeliski (Microsoft research).


I did my quals project TRIBORS: Triplet-Based Object Recognition
System while working as an RA for Linda, my report is a Technical Report 95-01-01
of the Department of Computer Science & Engineering in the University
of Washington.

Currently I'm working on surface
reconstruction from range data. We have a multiple-baseline camera
system for obtaining data, we use subdivision surfaces and wavelet
analysis for surface geometry and reflectance functions.
 
I just passed my General Examination, where the topic was Rigid
Registration of 3D data. Click here to find out more about it.


Some class projects from my 2nd year at UW
CSE 548, Computer Architecture
Systems, the class was taught by Susan
Eggers.


CSE 552, Distributed Computing, the
class was taught by Brian
Bershad.



CSE 576, Image Understanding, the
class was taught by Steven Tanimoto
.


I presented two Technical Sketches in SIGGRAPH '96. You can get
to my slides on 

subdivision surfaces

 and to my slides on 

removing wavelets

.




Here's my r&eacutesumé.



You can find me at:

 UW:
 Sieg Hall 423 
   Computer Science & Engineering
 University of Washington,
 Box 352350
   Seattle, WA 98195-2350
   (206) 543-3368
   FAX: (206) 543-2969
   email:  kapu@cs.washington.edu
 Home:
 4200 Union Bay Pl. NE #R230
   Seattle, WA 98105
   (206) 522-9809
  
 Folks:
 Takavainiontie 1 B 6
   90560 OULU
   Finland
   011-358-81-5542011


 

 
Kari Antero Pulli
 
Last modified: 
JUN 08, 1996


",non-course
"

Anna R. Karlin


Anna Rochelle Karlin

Associate Professor at the University of Washington since
July 1996.

Work: 

     Computer Science & Engineering Department,

     University of Washington, FR-35, 

     Seattle, WA 98195, USA 
+1 (206) 543-9344
FAX (206) 543-8331


 Home page
 Some papers



karlin@cs.washington.edu


",non-course
"




 Home page of Ka Yee Yeung



Home page of Ka Yee Yeung

Personal Info

My Picture

My Research

Telnet to other machines



Send Emails to me

  Back to the CSE home page.


",non-course
"

 Kurt Partridge








 KURT PARTRIDGE  


 




 ACADEMIC INFORMATION 





      I am a graduate student in the 
      computer science department at the University of Washington.  My
      interests include software engineering, software specifications,
      specification usability and readability, and applications of formal
      methods to specifications.  The UW
      software safety web page describes my and others' work in these
      areas.  

      I have also dabbled in user interface design, human computer
      interaction, and Java programming.




 RECENT PUBLICATIONS 





Kurt E. Partridge.
  BDDTCL: An Environment for Visualizing and Manipulating Binary Decision
Diagrams.  Interactive Poster at CHI '96. 
(HTML, Postscript).  Poster Preview (Postscript).  


Nancy Leveson, Ken Bauer, Mats Heimdahl, Wayne Ohlrich, Kurt Partridge,
  Vivek Ratan, and Jon Reese.
  A CAD Environment for Safety-Critical Software.
  NASA Conference on Safety Through Quality 1995.
  (Postscript) 





BACKGROUND




    I started graduate school in 1992 after completing a B.S. in computer
    science at UC Berkeley.  Before that I lived a lovely suburban life in
    Thousand Oaks, CA with my parents, sister, and a cat named Otis. 




FUN




    Right this way to Kurt's Humor Corner. 




 

    Box 352350
    University of Washington
    Seattle, WA 98195 USA
    Voice: (206) 685 4087
    FAX: (206) 543 2969
kepart@cs.washington.edu




",non-course
"
Keith Golden's Home Page







 Questa pagina è anche in italiano




 Keith Golden 





Research

Softbots
Planning
KR
Selected publications
Curriculum 
Vitae
 Also in
postscript




Random Hacking

Wordbot
Collaborative Dictionaries





Likes
 Bicycle Touring 
 Languages 
 Painting and photography 
 Nature
 Coffee
 ""Godless pinko stuff""



Dislikes

 Suits 
 Lawyers 
 Cars
 TV



 Friends* 

Ellen
Marc
Ruben & Lauren
Nick
Rich & Joanna
Vivek



 Advisors 

 Oren Etzioni
 Dan Weld



 Keith
Golden, Department of
Computer Science & Engineering, University of Washington,
Seattle USA 


	kgolden@cs.washington.edu
	







* Not a complete list!

",non-course
"

Kingsum Chow


 Kingsum Chow


kingsum@cs.washington.edu
Computer Science & Engineering Department, 
University of Washington, Box 352350, 
Seattle, WA 98195 USA



This end of the Information Highway is always under construction.




Table of Contents

 

	Personal

 
	Research

 
	Upcoming Conferences



 
	Resume
 



	Current Schedule



	Bridge



	Glossary

	Universities in Hong Kong
	








	Suggestions & Feedback






Research
My advisor is David Notkin.


 Asynchronous Software Evolution
 Software Development Tools


Papers on-line

 ""Software Quality Management by Responsibility Driven Software Evolution"" (not ready yet)
 Kingsum Chow and David Notkin, Semi-Automatic Update of Applications in Response to Library Changes, Technical Report UW-CSE 96-03-01 (a revised version will appear in ICSM'96).
 Kingsum Chow and David Notkin, ""Asynchronous Software Evolution"", Asia-Pacific Workshop on Software Engineering Research, March 21, 1996, Hong Kong.
 Kingsum Chow, ""Program Transformation for 
Asynchronous Software Maintenance"", Proceedings of ICSE-17 
Workshop on Program Transformation for Software Evolution, William Griswold, editor, 
The 17th International Conference on Software Engineering, April 24-28, 1995, Seattle, 
Washington, USA.


Useful sites for PCCTS/Sorcerer
PCCTS Home Page
 | PCCTS FTP page
 | Terrence Parr
 | Notes for PCCTS Newbies

Resume
Please
drop me a mail
to get my resume and specify text or postscript format.

Universities in Hong Kong
Chinese University of Hong Kong
 | University of Hong Kong
 | University of Science and Technology
 | Hong Kong Polytechnic University
 | City University of Hong Kong
Singapore Sites
Singapore Online (TM)
 | NUS World-Wide Web Server
 | NUS Alumnus Web
Some Off Campus Friends
Tom Liew Yun Fook's Home Page
 | Tak Yin Wang (new page)
 | Jiang, Weidong
U of W related
University of Washington: Style and Policy Manual for Theses and Dissertations
 | UW Graduate School Webserver
 | University Book Store
Investments
Free 20 Minute Delayed Quote Watch
 | PC Quote Market Data and More
 | Experimental Mutual Fund Charts
 | On-Line Investment Center - Stocks, Commodities, Technical Analysis
Misc.
Read Chinese
 | Hot List
 | Thomas I. M. Ho
 | China News Services
 | Welcome to PBS ONLINE
 | Hong Kong Movies
 | Movies A
 | Movies B


 visits since Oct 11, 1995.


 

 
	Kingsum Chow
   
  Last modified: $Date: 1996/05/13 23:51:07 $



",non-course
"

Kevin Bolding 






 Kevin Bolding
kwb@cs.washington.edu


Computer Science & Engineering Department 
University of Washington 
     Box 352350 
Seattle, WA 98195-2350 USA



 


    The juvenile sea squirt wanders through the sea searching for
   a suitable rock or hunk of coral to cling to and make its
   home for life.  For this task it has a rudimentary nervous system.
   When it finds its spot and takes root, it doesn't need its brain any 
   more so it eats it.  It's rather like getting tenure.

 - D.C. Dennett, Consciousness Explained



 Research 

I'm currently working on building a high-speed, low-latency
LAN from Chaotic Routers (see below).  My previous research
has been on Chaotic
Routing, which is a form of non-minimal adaptive routing for
massively parallel multicomputers.  


 About me 
 Professional  

I am an assistant professor of electrical engineering at 
Seattle Pacific University.  I'm also working part time as a research
associate at the University of
Washington.  All significant papers I've written are in the  archives  of
the Chaotic Routing group.

I spend most of my time 
teaching Electrical and Computer Engineering
at Seattle Pacific University.


 Personal  

Here are some photos I took of the comet
Hyakutake from Seattle.

No, the moustache isn't real. 

In case you want to visit me at home, here is a map.


I have another home page 
at SPU.




",non-course
"
Richard E. Ladner














Richard E. Ladner
Professor

     Department of Computer Science & Engineering,

     University of Washington, Box 352350, 

 Seattle, WA  98195, USA 

e-mail: ladner@cs.washington.edu 
phone: (206) 543-9347 
FAX:   (206) 543-2969 

Office: Sieg Hall, Room 311





 
Personal


 Short Biography


Research


 Publications
 Ph.D. Students


Teaching



Computer Programming I  (Fall Quarter 1996)

Introduction to Computer Communication Networks  (Spring Quarter 1996)

Introduction to Formal Model in Computer Science  (Winter Quarter 1996)

Data Structures (Spring Quarter 1995)




ladner@cs.washington.edu



",non-course
"Larry McMurchie's home page

 
 Larry McMurchie


Department of Computer Science and Engineering
 University of
Washington
 Seattle,
Washington, 98195 

Voice: (206) 685-0951;  
FAX: (206) 543-2969;
e-mail:  larry@cs.washington.edu 

Office: Sieg Hall, Room 217

Current Research


 Larry McMurchie, Director, NW Laboratory for Integrated
Systems, has a BA in Chemistry from Western Washington University
(1971) and a Ph.D. in Chemistry from the University of Washington.  He
worked in the area of Quantum Chemistry during his graduate studies.
His primary focus was the numberical evaluation of a class of
integrals over Gaussian functions.  He later applied this work to the
construction of large sparse Hamiltonian matrices.  He is a coauthor
of a comprehensive package of computer programs (MELD) used in  ab
initio calculations on small molecules.
  

Since joining the staff of the Department of Computer Science and
Engineering, Larry has supervised the work of the technical staff of
the Laboratory for Integrated Systems.  He was a coauthor or WireC, a
schematic capture system that allows designers to mix C code with
schematic symbols to creat a concise, parameterizable representation
of a design.  Larry was also involved in the development and
commercialization of the MacTester, an integrated software/hardware
environment for the functional testing of chips, boards and
subsystems.  Recently he has worked in the area of CAD for FPGAs and
has developed a general purpose performance-driven router for FPGAs.



 
Northwest Laboratory for Integrated Systems, 
 
The MacTester:  A Low-Cost VLSI Chip Tester 
 
Triptych:  A New High-Density FPGA Architecture 


 Publications 

  Journal Articles ,


Upcoming Conferences



Return to CS&E Home Page

",non-course
"
Nancy Leveson's Home Page






Nancy Leveson


Department of Computer Science & Engineering
University of Washington
Box 352350 [express mail: Sieg Hall 114]
Seattle, WA  98195-2350  USA
 +1.206.685.1934
 +1.206.543.2969 [FAX]
 leveson@cs.washington.edu



 Nancy Leveson, Professor, joined the faculty in 1993, coming from 
California in search of rain.   She received all her degrees, in math
and computer science, from UCLA (Ph.D., 1980) and spent her formative 
years being a professor at the University of California, Irvine.

Professor Leveson started a new area of research, software safety, which is 
concerned with the problems of building software for real-time systems 
where failures can result in loss of life or property.  One advantage of 
this topic is that nobody questions its goals, except for a few misanthropes
(who don't matter anyway).  She and her students have recently produced a
formal requirements specification for TCAS II, a real collision-avoidance 
system required on all commercial aircraft in U.S. airspace.  One of the 
lessons she has learned from this project is never to do anything like it 
again.  The FAA seems pleased with it though and has adopted it as their
official specification.  She and her students are currently working on 
doing a safety analysis of the specified behavior of TCAS.  She claims that
you should not read anything into the fact that she has been taking the train 
a lot lately.  
The Safety
Research Project is now also working on modeling and analysis of 
automated highways, automobiles,
and various aerospace systems.  Subtopics in this research area include 
modeling and analysis of safety, specification, safe software design, 
software fault tolerance, and verification and validation of safety.

Professor Leveson is Editor-in-Chief of IEEE Transactions on Software
Engineering, an elected member of the Board of Directors of the Computing
Research Association, a member of the National Research Council Commission
on Engineering and Technical Systems, and a member of the ACM Committee on 
Computers and Public Policy.  Recently she chaired a National Research 
Council study evaluating the Space Shuttle software process.  Dr. Leveson
is a Fellow of the ACM and was awarded the 1995 AIAA Information Systems
Award for contributions in space and aeronautics computer technology and
science for ""developing the field of software safety and for promoting
responsible software and system engineering practices where life and property
are at stake.""

This year, Dr. Leveson's new book on software safety, 

(Safeware: System Safety and Computers, Addison-Wesley, 1995) was 
published.  Recent papers are available via the web and a list of  other papers is
also available.  For a copy of my favorite paper (which was actually a keynote
address at the Int. Conf. on Software Engineering in Melbourne) titled
""High-Pressure Steam Engines and Computer Software"", click  here.

Quals projects are available on the following topics: (1) applying hazard
analysis techniques to an aircraft collision avoidance system model written
in a state-machine-style language (called RSML), (2) determining ways to build 
fault trees or other analyses from RSML models in general, (3) designing new
requirements specification languages (including specifying the human-computer 
interface) and deriving general principles for designing such languages, 
(4) applying hazard analysis to human-machine interface models, (5) modeling 
the human-machine interface in control systems (e.g., an aircraft cockpit), 
and (6) analyzing aircraft accident reports (involving mode awareness problems
and other general HCI issues) to derive information about safe design of 
human-computer interaction.

Try finger (finger leveson@cs.washington.edu) for information about which 
city (or airport) I am currently in and perhaps how to contact me.  


",non-course
"
Hank Levy's Home Page




 Henry M. Levy, Professor, 
joined the faculty in 1983.  Hank's current research 
projects focus on operating systems,
on parallel and 
distributed computing, on computer architecture (particularly
""Simultaneous Multithreading"" architectures)
and on object-based languages and environments.  A recent project
called Opal 
deals with single-address space operating systems for
64-bit computer architectures.  The
Etch project
is producing a tool for performance instrumentation and optimization of
x86 binary executables.

Levy is author of two books 
and numerous papers on computer systems, including
``outstanding paper''selections from four consecutive
ACM Symposia on Operating Systems Principles.  He 
is former chair of ACM SIGOPS
(the Special Interest Group on
Operating Systems), and program chair for the
16th ACM Symposium on Operating Systems Principles, to
be held in 1997.  He holds a B.S. from Carnegie-Mellon University
and an M.S. from the University of Washington.
Before coming to Washington, he was a Consulting Engineer with 
Digital Equipment Corporation, where his work spanned the range 
from operating systems to architectures for distributed systems 
and workstations.  Hank is a Fellow of the 
Association for Computing Machinery
and recipient of a 
Fulbright Research Scholar Award.

Eleven Master's students and nine Ph.D. students have survived
Levy's supervision;  the Ph.D. students have
all escaped to academic positions or major research labs.
When not glued to his workstation, Hank can usually be
found skiing, biking, playing tennis, helping to lead the
department's infamous softball team (the 
Smiling 
Potatoes of Death), or sampling desserts at one of 
Seattle's many dessert parlors.



Some Recent Publications


Reducing Network Latency Using Subpages in a Global Memory Environment.
H.A. Jamrozik, M.J. Feeley, G.M. Voelker, J. Evans II, A.R. Karlin, H.M. Levy, and M.K. Vernon.  In

Proceedings of the Seventh ACM Conference on Architectural Support for Programming Languages and Operating Systems,
October 1996.
[postscript]

 
Implementing Global Memory Management in a Workstation Cluster.
Michael M. Feeley, William E. Morgan, Frederic H. Pighin, Anna R. Karlin,
Henry M. Levy, and Chandramohan A. Thekkath.
To appear in Proc. of the 15th ACM Symposium on Operating Systems Principles
, December 1995.
 
Simultaneous Multithreading: Maximizing On-Chip Parallelism.
Dean Tullsen, Susan Eggers, and Henry Levy.
In. Proc. of the 22nd Annual International Symposium 
on Computer Architecture, June 1995.
 
Exploiting Choice:  Instruction Fetch and Issue on an Implementable
Simultaneous Multithreading Processor.  Dean Tullsen, 
Susan Eggers, Joen Emer, Henry Levy, Jack Lo, and Rebecca Stamm.  In  Proc.
of the 23rd International Symposium on Computer Architecture,
May 1996.
 
Sharing and Protection in a Single-Address-Space Operating System.
Jeffrey S. Chase, Henry M. Levy, Michael J. Feeley, and Edward
D. Lazowska.  ACM Transactions on Computer Systems, 12(4),
November 1994.
 
Integrating Coherency and Recoverability in Distributed Systems.
Michael J. Feeley, Jeffrey S. Chase, Vivek R. Narasayya, 
and Henry M. Levy.  In Proc. of the First Symposium on 
Operating Systems Design and Implementation, November 1994.
 
Hardware and Software Support for Efficient Exception Handling.
C. Thekkath and H. Levy.  Proc. of the 6th Int. Conf. on Arch.
Support for Prog. Languages and Operating Systems (ASPLOS),
October 1994. 
 
Separating Data and Control Transfer in Distributed Operating Systems.  C. Thekkath, H. Levy, and E. Lazowska.  Proc. 
of the 6th Int. Conf. on Arch. Support for Prog. 
Languages and Operating Systems (ASPLOS), October 1994. 




levy@cs.washington.edu

",non-course
"

The OPAL Operating System Project



Opal
 

The Opal project is exploring a new operating system structure, tuned
to the needs of complex applications, such as CAD/CAM, where a number
of cooperating programs manipulate a large shared persistent database
of objects.  In Opal, all code and data exists with in a single, huge,
shared address space.  The single address space enhances sharing and
cooperation, because addresses have a unique (for all time)
interpretation.  Thus, pointer-based data structures can be directly
communicated and shared between programs at any time, and can be
stored directly on secondary storage without the need for translation.
This structure is simplified by the availability of a large address
space, such as those provided by the DEC Alpha, MIPS R4000,
HP/PA-RISC, and IBM RS6000.


Protection in Opal is independent of the single address space;
each Opal thread executes within a protection domain
that defines which virtual pages it has the right to access.
The rights to access a page can be easily transmitted from one
process to another.  The result is a much more flexible protection
structure,  permitting different (and dynamically changing)
protection options depending on the trust relationship
between cooperating parties.  We believe that this organization can
improve both the structure and performance of complex, cooperating
applications.


An Opal prototype has been built for the DEC Alpha platform on top of
the Mach operating system.


Information Sources



List of Opal-related papers. 

Faculty Members

 Hank Levy 
 Ed Lazowska 
 Jeff Chase (Duke University) 

Current Graduate Students

 Mike Feeley 
 Ashutosh Tiwary 
 Vivek Narasayya 
 Dylan McNamee 

Related Information

 Single 
address space mailing list archive.


",non-course
"

Gus Lopez


Gus Lopez
lopez@cs.washington.edu







School:
     427 Sieg Hall 
Department of Computer Science & Engineering, 
University of Washington 
     Box 352350 
Seattle, WA 98195-2350 USA 
     +1 206 543 5118



Home:
     +1 206 522 4914



Fax:
     +1 206 543 2969





I'm a PhD student at the University of Washington doing my dissertation
research on the design and implementation of constraint imperative (object-oriented)
languages.

My curriculum vita.



Publications

Gus Lopez, Bjorn Freeman-Benson, and Alan Borning.

Kaleidoscope: A constraint imperative programming language. 
In Brian Mayoh, Enn Tougu, and Jann Penjam, editors,  Constraint
Programming.  Springer-Verlag, 1993.  NATO Advanced Study Institute
Series, Series F: Computer and System Sciences.  Also published
as UW CSE Technical Report 93-09-04.


Gus Lopez, Bjorn Freeman-Benson, and Alan Borning.

Constraints and object identity.  In
Proceedings of the 1994 European Conference on Object-Oriented Programming,

Bologna, Italy, July 1994.


Gus Lopez, Bjorn Freeman-Benson, and Alan Borning.

Implementing constraint imperative programming languages: the Kaleidoscope'93
virtual machine.   In
Proceedings of the 1994 ACM Conference on Object-Oriented Programming
Systems, Languages, and Applications, 
Portland, Oregon, October 1994.



OOPSLA'96 Tutorials
I'm also Tutorials Chair for the upcoming
 OOPSLA'96  conference
in San Jose, California.  The top people in object-oriented technologies and
software development will meet at, speak at, and run the OOPSLA'96 conference.
OOPSLA is well-known for the breadth, depth, and high quality of its
extensive tutorial program.
In previous years, OOPSLA tutorials
have covered all aspects of object-oriented technology from introductory
surveys to industrial software engineering practices and leading-edge academic
research topics.  In response to requests from our past attendees, we
especially encourage proposals on engineering issues and advanced topics.

Anyone considering submitting a proposal for a tutorial should request
guidelines on tutorial submissions from the Tutorials Chair or via the
OOPSLA'96 Electronic Hotline.  Electronic mail submissions of proposals 
are encouraged and will be enthusiastically accepted.  Tutorial proposals
without email addresses will not be accepted.  Tutorial proposals are due
1 MARCH 1996, notification of acceptance will be about 1 MAY 1996, with
camera-ready notes due 9 AUGUST 1996.



Interesting links

 Constraints

 OOPSLA'96 Tutorials

 Pam Green 

 Directions to Jimi Hendrix's grave 

 Star Wars Collectors Archive 

",non-course
"
Omid's Home Page

 Omid Madani 



 madani@cs.washington.edu

Computer Science & Engineering Department, 
University of Washington, Box 352350, 
Seattle, WA 98195-2350

 
Chateau
 Suite 109B





Hello to all the curious browsers.  Welcome.  

I am a fourth year graduate student at the UW CS department. I enjoy
theory the most, but I also like to keep in touch with other areas
including AI and graphics.  More on my life and work: academics.  
 You may want to look at  Islamic
Architecture in Isfahan (a 1995 GNN Best of the Net nominee),
one of the cities in my home country of  Iran.


See ya!


                     

",non-course
"Mike Perkowitz's Page





 Mike Perkowitz






Newsflash:
Mike goes blond!

Areas:
research, 
academia, 
music,
creativity,
random



Favorites:
sheba,
voyeur,
written,
grooveneedle,
espresso



Resume





Mike Perkowitz (map@cs.washington.edu).

",non-course
"
Marc Langheinrich's Homepage





Marc Langheinrich's Homepage

Marc Langheinrich


Universität Bielefeld                  University of Washington
Technische Fakultät                    Department of Computer Science
Email: imlanghe@techfak.uni-bielefeld.de    Email: marclang@cs.washington.edu



About myself
I spent my last year at the Department of Computer Science here at the
University of Washington as a Visiting Graduate Student under the
Fulbright Program. Check out the following links for in-depth
information about me:

 Resume
 Projects
 Short bio

Postal Address
As of September 5th, I will be back in Germany, finishing my Masters
at the University of Bielefeld. Please contact me at my German address.

HomeSchool
GermanyRingstraße 13
63477 Maintal
Phone:(+49) 0 6181 - 431747
Fax: (+49) 0 6181 - 48013
Paulusplatz 10
33602 Bielefeld
Phone:(+49) 0 521 - 171324

USA(until 8/96)5210 Woodlawn Ave. N.
Seattle, WA, 98103
Phone: (206) 632-6637
Sieg Hall, Rm 233
Phone: (206) 543-7798


(if your browser does not support tables, you can access 
this data in a list format

Marc Langheinrich

 The University of Washington, Department of Computer Science
 Email: marclang@cs.washington.edu
 WWW: 
http://www.cs.washington.edu/homes/marclang/



",non-course
"


HOME 




 
  
 


Marla Baker  marla@cs.washington.edu 
  
Chief Editor, Taz...




Department of Computer Science & Engineering 
University of Washington
     Box 352350 
Seattle, WA 98195-2350 USA


  
 



  
and his partner in crime, Bentley.


 

Academic Interests


Graphical user interfaces, human-computer interaction, educational software, 
Computer Supported Collaborative Learning (CSCL), computer graphics,
visualization techniques, and visual programming languages. 

 

Current Work 
I am currently working with Steve
Tanimoto and 
Lauren Bricker on the 

CoImage project.  We have devleoped some collaborative educational 
activities in order to explore the use of cooperatively contolled objects.
The goal of my work is to investigate different ways that multiple users can
simultaneously share and manipulate a given object, and ways of assessing 
their interactions.



I also work part-time at  Ark Interface, a Packard Bell Company.


My Resume

 

Publications


Baker, Marla J., and Stephen G. Eick, ""Space-Filling Software Visualization,"" 
	The Journal of Visual Languages and Computing, June 1995, pp. 119-133. 

Burnett, M., M. Baker, C. Bohus, P. Carlson, P. van Zee, and S. Yang, 
	""Scaling Up Visual Programming Languages,"" IEEE Computer Special 
	Issue on Visual Programming, March 1995, pp. 45-54. 

Burnett, Margaret M., and Marla J. Baker, ""A Classification System for 
	Visual Programming Languages,"" The Journal of Visual Languages and
	Computing, September 1994, pp. 287-300. 

Baker, Marla J., and Stephen G. Eick, ""A Visualization Tool for Large Software
	Systems,"" Proceedings of The International Conference on Software 
	Engineering, Sorento, Italy, May 16-21, 1994. 

Baker, Marla J., and Stephen G. Eick (Baker-1, Eick-11), ""Method And 
	Apparatus for Displaying Hierarchical Information of a Large Software 
	System,"" Patent application submitted October 22, 1993. 

 
Tutorial: Geometric Transformations on Images in the METIP programming environment.

Check out the web page for my office, Sieg 431.


Marla Baker (marla@cs.washington.edu)


",non-course
"

Matthai Philipose's home page

 Matthai Philipose 


I'm working on the Dynamic Compilation Project.  The dynamic compiler
is a beast that generates/optimizes code at runtime. In the short
term, I'm interested in figuring out how to produce good code 
dynamically  (i.e. at runtime) for modern processor architectures. On the applications side, I think interpreter-based
systems with real-time constraints, like the Hot Java web browser, can
benefit from selective runtime compilation. I'd like to wire up such a
system to a runtime compiler and see how it goes. I'm working with
Professors  Susan Eggers
and   Craig Chambers.






Work 

Computer Science & Engineering Department 
University of Washington 
Box 352350
Seattle, WA 98195-2350
phone: (206) 616-1854 
fax:   (206) 543-2969 



Home 

4128 12th Ave NE 
Apt 101	
Seattle WA 98105-6334 
USA
(206) 632-7472





Publications:


J. Auslander, M. Philipose, C. Chambers, S.J. Eggers and B.N. Bershad,
Fast,
Effective Dynamic Compilation, Conference on
Programming Language Design and Implementation, (May 1996).


C. Chambers, S.J. Eggers, J. Auslander, M. Philipose, M. Mock and
P. Pardyak,
Automatic
Dynamic Compilation Support for Event Dispatching in Extensible Systems,
 Workshop on Compiler Support for Systems Software, (February
1996).





My bookmarks: stuff I use or play with frequently



Miscellaneous links: stuff of local importance



From the past...
 Abu


Why was this page black ? Blue ribbon campaign



matthai@cs.washington.edu


",non-course
"

Neil McKenzie's Menu of Fine Dining




 @



  
Index to this web page

 How to contact me
 Future projects
 Current projects
 Past projects
 Publication list
 Personal information
 Fun and games



 
Contact information

 Neil R. McKenzie
 Mitsubishi Electric Research Laboratories
 201 Broadway, 8th floor
 Cambridge, MA 02139
 Phone: (617) 621-7531
 Fax: (617) 621-7550
 E-mail: mckenzie@merl.com
  

Current projects


Gonna get my PhD, I'm a teenage lobotomy.  -- The Ramones



I am living on the East Coast, about 3000 miles east of Seattle, and
working for MERL as noted above.  I am currently involved with a project
concerning real-time volume rendering of medical data.


In my copious free time as an expatriate graduate student,
I am working on
chaotic routing
with faculty advisors
 Carl Ebeling and
 Larry Snyder.
Chaotic routing is a packet routing algorithm for mesh and torus
networks.  My dissertation is on the design and implementation of the
Cranium message-passing interface that is compatible
with a network using chaotic routing.
  

Past projects

I was a teaching assistant for 

CSE 142 in Summer 1994.


I designed and implemented a chip tester called the
 MacTester.


I was the maintainer for Carl's netlist graph isomorphism tool called

Gemini.  In industry-speak it is known
as an LVS (Layout Vs. Schematic) tool.  Gemini is available by FTP;
if you are interested, please send e-mail to Larry McMurchie

(larry@cs.washington.edu).

 

Publications



 Cranium: an Interface for Message Passing on Adaptive Packet
Routing Networks.
Proceedings of Parallel Computer Routing and
Communication Workshop, Seattle WA, May 1994.

 Link to

MacTester home page

  The Gemini User's Guide.
Last update: March 15, 1994.

  

 Personal information

 
Angel and I married in 1991.


Here is a
 picture of our house in Arlington, Massachusetts.


Before heading to the East Coast, we used to live
in the fashionable Seattle neighborhood of
Ballard.


Here is Angel's Creative Page,
which contains some examples of her computer artwork
created using Adobe Photoshop.


I owned
this car for 11 years.  Now only
the memories remain. 
I won a
T-shirt by correctly
guessing the answer to
Riddle du Jour on October 7, 1995.


This is the label that is placed on jars of
 McKenzie Country Farm Honey produced by my
uncle Bob McKenzie in Edmonton, Alberta, Canada.

 

 For your amusement 



Neil's hot links


Chairman
Ed's
hot links


Norm Gregory's bookmarks
(halcyon.com)



Eugene Spafford's hot links (Purdue)


Randy Pausch's
hot links (Virginia)


Dan Wallach's
cool links (Princeton)





Neil McKenzie 
mckenzie@cs.washington.edu 
Last update: July 27, 1996



",non-course
"

Marc E. Fiuczynski's Home Page



 Marc E. Fiuczynski's Home Page
 Marc E. Fiuczynski

mef@cs.washington.edu 
Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA

 
Background
I'm a graduate student at the University of Washington in the Department of Computer Science and Engineering.  I grew
up in Germany (near Düsseldorf), and spent a few years in High
School in Princeton, NJ.  I received a B.A. in Computer Science from
Rutgers University in 1992 and spent several summers at AT&T Bell Labs and the MITRE Corporation working on a range of
projects.  I'm the sole proprietor of MEF Systems, a company
that I created in December 1993 to sell a distributed, fault tolerant,
IP network based telephone system that I built from scratch on a set
of VME chasis with 680x0 processors, using UniVoice telephone interface cards
and the VxWorks operating system.


Most of my time I spend hacking on SPIN, which is
a safe, adaptable and extensible operating system.

My primary contribution to SPIN is An Extensible Protocol Architecture for
Application-Specific Networking.  Applications achieve compelling
performance improvements using our new structure, when compared to
similar applications running on DEC's commercial OSF/1 V3.2 platform.
For a demonstration of this work as it services HTTP requests contact
http://www-spin.cs.washington.edu.


Recent reports and papers

 An Extensible Protocol Architecture for
Application-Specific Networking
 A design and implementation and performance paper.  Describes an
extensible protocol architecture that allows anyone to customize an
in-kernel protocol graph, which enables applications achieves better
performance compared to similar applications running on conventional
operating systems.

For a demonstration of this work as it services HTTP requests contact
http://www-spin.cs.washington.edu.

Appeared in the Proceedings of the 1996 Winter USENIX Technical
Conference
 Extensibility,
Safety and Performance in the SPIN Operating System
 A design, implementation and performance paper.
 Appeared in the Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles.

 Language Support for Extensible Operating Systems
  We've been pretty happy with M3, but we've had to deal with a few shortcomings in
order to use the language in a safe extensible operating system. This paper describes
how we've addressed those shortcomings.

 Safe Dynamic Linking in an Extensible Operating System
 Describes the dynamic linker we use to load code into the kernel.  Key point is
the ability to create and manage linkable namespaces that describe interfaces and
collections of interfaces.

 Protection is a Software Issue
 A position paper comparing software and hardware protection mechanisms.
 Proceedings of the Fifth IEEE Workshop on Hot Topics in Operating Systems.

 Region Analysis: A Parallel Elimination Method for Data Flow Analysis
 In IEEE 1995 Transactions on Software Engineering.




mef@cs.washington.edu

",non-course
"

Melanie Fulgham





Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA





I'm an a.b.d. graduate student at the University of Washington. 


Research


My primary research interest is network routing both in multicomputer
and distributed networks.
My advisor is 
Larry Snyder.
Here's a picture of  Larry
hard at work.


Chaos
 Chaos routing project -- the Chaos router is a deadlock-free, 
             probabilistically livelock-free, non-minimal, 
             fully adaptive router.

Triplex routing
         The first non-minimal fully adaptive wormhole algorithm for tori
             that uses deadlock-prevention to achieve deadlock-freedom

Simulation
         Simulation of new and existing routing algorithms to learn
             the strengths and weaknesses of various classes
             of routing algorithms; e.g. non-minimal versus minimal
             routing algorithms.

Routing methods and models
         Development of new routing models to help predict
             and compare the performance of new routers 
             in real parallel machines.

Deflection routing
         Upper and lower bounds for practical (e.g. does not require
	     sorting) deflection routing
             algorithms on the 2D mesh topology.



 

  mel@cs.washington.edu 
  Last modified: Wed Apr 24 17:12:00 PDT 1996


",non-course
" Meng-Hee Heng's Homepage 

Meng-Hee's Homepage

menghee@cs.washington.edu
Box 352350
Department of Computer Science and Engineering
University of Washington
Seattle WA 98195


About me

I'm a second-year student doing my MSc in 
University of Washington.
Before this, I was an undergrad at the 
University of Pennsylvania.
I've been a TA for CSE 471, CSE 142 and CSE 143.


Research Interests

I am interested in image retrieval, where the problem is trying to find
images in a huge database of images. 
Virage and
QBIC
are two commercial examples similar to the kind of stuff I'm working on.
Here are some 
snapshots 
of what I've done.


Singapore
Singapore InfoMap provides facts and
statistics about Singapore.
Try the Singapore
OnLine Guide if you plan to take a trip there.
The National Computer Board
is in charge of transforming Singapore into an
intelligent island. This is where I'll work when I graduate.
The 
Straits Times is Singapore's main English newspaper.



visits since Nov 6, 1996.

menghee@cs.washington.edu
",non-course
"Michael Ernst's home page


Michael Ernst

I am a graduate student in the University of Washington computer science department.
Previously, I have been a lecturer in the Rice
University computer science
department, a researcher in the Program
Analysis Group at Microsoft Research,
and a graduate student at the MIT Laboratory for Computer Science in the MIT EECS Department.
These WWW pages are not frequently updated.

My technical interests include:

 compilation: static analysis, slicing,
    debugging optimized code, serialization of parallel programs; I was program
    chair for IR '95, the intermediate representation
    workshop colocated with POPL
    '95
 intellectual property, particularly in computer
    programs
   other areas including game theory,
    cryptography, philosophy, and denotational semantics


I maintain a list of resources
for conference and workshop organizers.

Occasionally I manage to slip away from work and carry on a real life.
Here are some links of possible
interest (including pages I maintain).

Michael Ernst 
<mernst@cs.washington.edu>

",non-course
"

Markus Mock's Home Page 


 Markus Mock
mock@cs.washington.edu



Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA

 

Welcome to Markus' home page.
 
 About myself 

I moved from Karlsruhe, Germany
to Seattle in fall 94. For those interested in geography, Karlsruhe is
located in the southwest of Germany, in the state of Baden-Württemberg. I grew up in another
part of that state, in the district of 
 Biberach  in Upper Swabia (Oberschwaben).

Before coming to the UW I studied Computer Science at the University of Karlsruhe  from which
I obtained a ""Diplom"" (M.S.) in Computer Science in 1992. 

I also spent one year at UMass  as a  Fulbright grantee.
My main research interests are parallel and distributed computing,
object-oriented systems and compilers. Currently I am working on
  dynamic compilation.

Non-CS interests include  Spanish  and  Latin American Culture, 
travel , e.g. to   
good  books, e.g. 

The Labyrinth of Solitude ,  chess 

non-mainstream movies, eg Die
Angst des Torwarts beim Elfmeter  (do you know 
Handke?) and  salsa or merengue  dancing with  
And, if there's still time left, I check out what else  to do in Seattle. 

More to come.. 

Publications
Separate List


 Some links to other interesting stuff


 Current Chess Event: Chess Olympiad Yerewan  


Colloquia 

 OOPSLA 96 Volunteers Page 

 Mossy Bits, CSE Grad Journal 

A link to the CSE590K home page 

 A link to the CSE543 Home Page 

A link to the CSE590BI home page 

A link to the CSE590S home page 

Other CSE Courses 

Other graduate students

Images of UW 

Department of Electrical Engineering


You wouldn't expect, but they have a Red Square here (live view)

  Metacrawler Searching 

 Altavista Searching 

 Who? Where? 

  Deutsche Welle on RealAudio, live!

CS Stuff 

 Other cool links


And a quote: Consider the lilies of the field, how they grow:
they toil not, neither do they 
spin; and yet I say unto you, that even Solomon in all his glory
was not arrayed like one of these.  Matthew 6:28 



This page has been accessed 
  
times since 3/28/96.


Last updated Tue Sep 17 11:34:14 PDT 1996 
mock@cs.washington.edu 



",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"Vivek Narasayya: Home Page


Vivek R. Narasayya



nara@cs.washington.edu 
Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA



Personal Information
Research Interests
Papers 

",non-course
"

Himanshu Nautiyal's home page



Himanshu Nautiyal





This page is under heavy construction!





Himanshu Nautiyal
Dept of Computer Science & Engineering 
Mail Stop 352350 
University of Washington 
Seattle, WA 98105  


Office : 428 Sieg 
Office phone:    (206) 685-2723 



The courses that I am taking in the autumn quarter:

 CSE 567: Principles of Digital Systems Design
 CSE 573: Artificial Intelligence I



finger nautiyal@cs.washington.edu





God's gifts to personkind

 Douglas Adams
 Terry Pratchett
 Pelham Grenvile Wodehouse

The order is alphabetical in last names, no other is implied! 


My favorite links (not all in place yet) 

 All India Internet Radio
 Search engines
 India
 Himanshu Nautiyal, the name
 Friends
 IIT Delhi, where I finished my B.Tech in 1995.
 Astronomy
 Skating
 Computer Science
 Aviation
 Travel
 Numismatics sounds so much more profound than ""coin collecting""
 Cooking
 Internet
 Movies



",non-course
"

The Labyrinth of Mediocrity






   w        e        l        c        o        m        e 

 to
 
 the
   f        a        b        u        l        o        u        s 


`` 
··· bemoaning hype with skeptical cynicism since 1994 ···
 ''







 Research:

 I'm currently working on the automatic
construction of wrappers for information resources; I'm also
interested in several other areas of artificial intelligence and
cognitive science.
 Here are the papers with which I've been
involved.
 I have some stuff available by anonymous FTP.




 Here are some services I provides to the

           
Glbal

                 
Infrmatin

                       
Sperhighway:

 A preliminary version of the Web Diverse-o-Meter is available.
 Here's pictures of me and my hand shortly after surgery.
 In need of a random number?
 It's always handy to know the date and time or
     day of the week.
 My favorite color is now available on line!
 If you get lost,  you can easily return to this page.
 666, Ronald Wilson Reagan, etc.
 Need the temperature?
 Looking here with a Javascript-enabled browser
     will automatically send me mail.
 Great Republicans tell it like it is.




Miscellany: 

 Need to contact me?
 My Web bookmarks.




Technology and society: 

 Aware of the bitter irony involved, I've nonetheless made
available Wendell Berry's guidelines for what constitutes
good technology.
 A few of my comments about the WWW.




Nicholas Kushmerick,
UW
CS&E,
Seattle,
USA.



",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"
  Wayne Ohlrich  

 Wayne Ohlrich 




ohlrich@cs.washington.edu 

Department of Computer Science & Engineering 

University of Washington, 
Box 352350

Seattle, WA  98195-2350



Office: 
	C110 Guggenheim Annex, 
	 
	""The Chateau.""
 


  
	Publications and Research 
 Currently I am working with 
	 Nancy Leveson  
	on model checking  and automatic test generation from 
	specifications.  In my spare time I have been working with 
	 Brian Bershad,
 Anna Karlin and
	Ted Romer	
	doing memory performance analysis on the STD project (locally known as the 
	 Severe TLB Damage  project).  Our group's paper will make its debut
	at ISCA in  Italy  this summer.
  
 

	 Safety Research Home Page (Leveson).
 

	 Memory Sytems  Home Page 
 

ISCA `95.  
	 T. Romer, W. Ohlrich, B. Bershad, A. Karlin: 
Reducing TLB and Memory Overhead Using Online Superpage Promotion,
University Class information: 

 

	UW Course Web 

 


  
	Personal Interests 
 
	Just  Fun and Games  (Wayne's World of Wonder...).
	
 
	The  Information page
	contains all sorts of useful links. 
 
	The  Seattle information
	home page. 
 
	The  Investment page
	contains investment information. 
 
	Some  Research 
	information that I have found useful. 

 



Page created October 1, 1994.
 Last modified March 23, 1995.



",non-course
"

Ori Gershony

  Ori Gershony 

Ori Gershony (ori@cs.washington.edu)
Graduate Student
Computer Science and Engineering 
Department
University of Washington




Office:  233 Sieg
         (206) 543-7798

Home:    4144 11th Ave. N.E. #10
         Seattle, WA 98105
         (206) 545-7586


Hi,



I'm a second year graduate student at the University of
Washington.  

Before moving to Seattle, I lived in California for seven years:  four
years at Berkeley and three years in Lancaster (northeast of Los Angeles).
I am originally from Israel, where I lived at Haifa, Bat-Yam and Holon.
For fun I like to practice Tae Kwon Do, play basketball, and go hiking.



This quarter I'm taking one class, a whole bunch of seminars, and am
TAing 
CSE378 -- Computer Architecture.  You can usually find me at my office
(233 Sieg) when I'm not in class.  My office hours for CSE378 are
Monday 1:30-2:20 and Wednesday 3:30-4:20.



Potential employers are welcome to look at my 
 resume .



Here are a few 

pictures  I took last summer.  Click
 here  to
see a cool t-shirt design that I made over the summer with a 3D graphics
program called Virtual Reality.



A few interesting links:


  CNN 
 
Time  Daily News Summary

  New York Times 
  Riderlink  -- Seattle
transportation options

 Information about  Israel 
  Computer Science  and 
 Mathematics  departments at the 
University of California at Berkeley 





Ori Gershony (
  
ori@cs.washington.edu)






 accesses since 16 August 1996.



",non-course
"
 Ross Ortega



Ross Ortega (the one wearing jeans)


ortega@cs.washington.edu 
Department of Computer Science & Engineering,
University of Washington, Box 352350,
Seattle, WA 98195 USA



 ""If we knew what it was we were doing, 
it would not be called research, would it?""  -- Albert Einstein 
Welcome to my home page
After going to school and working in Boston for 7 years, I decided 
to head west (really northwest).  I came to UW in the fall of 1990 and will 
be leaving sometime in 199x according to my advisor Gaetano Borriello. 
Officially I have been working on the 
Chinook project, 
a CAD tool for real-time embedded controller systems.
Unofficially  I have been brewing beer, learning to hack my Mac, 
and trying to teach my German shepherd, Tequila, how to behave himself.


Professional section

 
Chinook Project
  My
resume/cv (128K .ps file)

  Education
  
Experience
  
Publications and Papers

 Here are puppy pictures of Tequila 

Tequila (color)
Tequila2 (color)

I am the office rep for Sieg 431

Check out the web page for 431

 Links that I find interesting

 Last updated
Thu Aug  1 17:48:44 PDT 1996



",non-course
"
  Untitled Document (in B-flat Morris Minor)  


Don Pardo

Department of Computer Science
	& Engineering
University of Washington
Box 352350
Seattle, Washington
98195
USA
pardo@cs.washington.edu


Note: if you show a blue ribbon
,
such as
<IMG
SRC=""http://www.eff.org/pub/Graphics/Icons/BlueRibbon/rib_trn_plain_sm.gif"" ALT="""">,
it is a way of showing quiet opposition to the free speech
prohibition in the U.S. National telecommunications bill.
(lIkewise, white letters on a black background.)

Beth: ``Everybody needs a Pardo around sometimes.''

Pardo: ``Sometimes?''

Beth: ``There's only one, so we have to share him.''

Academic

Some papers
I've worked on or find particularly interesting.

Runtime Code Generation
(RTCG).

Instruction-set simulation and tracing tools.

UW home pages on
computer architecture
and
compilers.

Quick links to some other
people working with computers.

Classes.
UW thesis style



Non-Academic
Featured Items

 Featured item of the month.
 Weak Site of the Week
	(NOW: doesn't blink anymore!)

Regular Items

Bicycles
Businesses
Computers
Food
Humor
I'm famous! (Things related to me.)
Legal and Ethical Weirdness
Linux Journal
Music
Goofy Politics
Science
 
		Thinking
	(and
	more,
	and
	yet more,
	though unrelated stuff, about thinking).
 Transportation
 
		Seattle movie listings.
	And now -- The Seattle Film Festival!
	(Dante sez: search it!)
	A truly gross story about
	trepanation.
 No privacy on the Web
	-- sites may be logging your e-mail address
	(or
	
		worse, taking data from your disks!)
	every time you
	use them (consider
	this).
 Weather courtesey of MIT,
	and
	Seattle
	in particular.
	Also, weather courtesey of ?? (Newhouse Newspapers?).
	Also, weather
	courtesy of USA Yesterday
 WWW stuff



pardo@cs.washington.edu



",non-course
"

Przemek Pardyak's Home Page




 Przemyslaw Pardyak



pardy@cs.washington.edu


  
first weeks of grad school

 
and a couple years later . . . . . 


  

I am a third year graduate student of Computer Science at the
University of Washington.  Currently, I do research in the area of
operating systems but I am also interasted in distributed systems,
languages, and compilers.  Besides grad school, my life is filled with
the Seattle drizzle, hiking and other outdoors activities (if I am not
busy enjoying the school or the drizzle), books and music.  

You can find a short description of my research  interests  and a 
resume  here.  There's also a list of my 
papers.  All of these are a bit outdated but that's what happens
when one has a busy schedule.

  
Projects

SPIN
an extensible operating system built under glorious leadership of 
Brian Bershad. 



Group mechanisms for object-based systems
Group communication and group mechanisms for the Emerald object-based
programming language and run-time system. 

  
Interesting links

The Polish connection
 various resources somehow related to Poland.


 Research related
 projects related to mine, some universities, etc.


 Research unrelated
 miscellaneous

  
Work: 

     Computer Science & Engineering Department,

     University of Washington, FR-35, 

     Seattle, WA 98195, USA 
phone: /+1/ (206) 685-2675
fax: /+1/ (206) 543-2969 
Home: 
5302 24th Ave NE #A 
Seattle, WA 98105, USA 
phone: /+1/ (206) 525 6743


 
pardy@cs.washington.edu",non-course
"



Paul Franklin's Home Page


Paul Franklin's Home Page


I'm currently a graduate student at Univ. of Washington, in
the Department of Computer Science (officially CSE).  My
office is 431 Sieg.  I'm working with the RaPiD Project.
I used to say that I was a first-year student, but during the
summer after my second year, someone expressed concern about
this characterization.
Where am I?  I'm usually somewhere in North Seattle, where I
live and go to school.
Yet another picture and one more (the best of the lot).  One
of these days, I'll get around to scanning in some better ones.
A Norwegian poem I like
A collection of fortunes received by me & friends at local
Chinese restaurants.

Mundane Stuff
I hope some folks might find this stuff useful.
My hotlinks pages
Stuff I maintain
My schedule (if I've remembered to update it)
Contacting me
I love to travel (but I don't necessarily tell everyone when I
do)
Hiring me
Where did I come from?
I got my high-school diploma from Live Oak High School in
Morgan Hill, CA, where I was taught Prolog for the first time.
I graduated in Computer Science and Engineering from
UC Davis, where I was taught Prolog for the second time.  (And
yes, I was taught Prolog once more at UW.  I'm just glad I
didn't use it during my year at the University of Bergen.)  I
also did research for a professor in the Electrical and
Computer Engineering department.
Fun Stuff

While I was at UC Davis, my partners in various CS-related
activities tended to be Matt, Chris, and James.  (We even
got together recently, using Chris's marriage to Joanne as an
excuse; Chris's brother also made it
in the photo.)


Throughout my undergraduate years, I kept biking more and more,
but never very far (Davis isn't that big, and it's flat).
During my year as an exchange student to the University of
Bergen, I biked hillier and longer routes, so when I returned
to Davis, I took up rollerblading, since biking around town was
now too easy.
My biking dropped off during the year I worked at Hewlett
Packard, but it returned with a vengeance when I moved to
Seattle.  I've done the annual Seattle-to-Portland bike ride in
two days; I may do it in one some year.  But that's only in
season (March/April-June).  The rest of the year, I just
commute by bike and do lots of dancing, particularly Lindy
Hop.




Did you know that every HTML document should have a header line
that looks something like this:
	<!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML//EN//2.0"">

",non-course
"
 Frédéric Pighin 
pighin@cs.washington.edu

Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA

 

 Clicking on the above picture should provide you a sample of my charming French accent. And  here you'll get a more accurate picture of me.
 Salut, 
I'm a graduate student from  France and I'm trying to survive to the graduate program in Computer Science and to the Northwest. My hometown is Nimes, which is well known for its remains of the Roman Empire (spurs of ancient yet glorious times) and is the driest city in France. I've spent my undergraduate studies in  Paris (Université Paris VI
and  Institut National des Télécommunications ), which is a wonderful  city if you are a tourist. 

This quarter I'm TAing  CSE 457, taught by Anna Karlin.


I'm one of the guys in c112, where I can be found much too often.


Hi Dani, here is my quals report.


As for the rest, I like British movies, the  Monty Python, swimming, Nick Cave, Corto Maltese (an Italian comics), cats, Paris, Berlin, Venise, the Simpsons (2.7 M mpeg) .. and the rain when it's a surprise.



I like traditionnal french marine songs and try to collect them. 

Otherwise, I'm working in graphics under Anna Karlin's supervision, although I was formerly studying system
here and got my name on a paper:


Implementing Global Memory Management in a Workstation Cluster.
Michael J. Feeley, William E. Morgan, Frederic H. Pighin, Anna R. Karlin,
Henry M. Levy, and Chandramohan A. Thekkath.  In Proceedings of the 
15th ACM Symposium on Operating Systems Principles, December
1995.
[postscript]


 New: Live Action !  
Here is a breath-taking picture of c112 door (refreshed every two minutes). And if you are very lucky you might even have a look at Darren or Juan, .. note that it might be dark here. 

More live action with a picture of UW's Red Square (refreshed every five minutes), .. note that it might rain there.


",non-course
"

Ruth Anderson's Home Page 


 Ruth Anderson
rea@cs.washington.edu

 

Computer Science & Engineering Department, 
University of Washington, Box 352350, 
Seattle, WA 98195-2350 USA

 
 WXYC 89.3
 maps!
 my brother


",non-course
"

HOME 


 Home of Josh 

415
548
CS Home Page



Computer Science & Engineering Department, 
University of Washington, Box 352350, 
Seattle, WA 98195 USA

redstone@cs.washington.edu
 
Joshua Redstone (redstone@cs.washington.edu)


",non-course
"

Rex M. Jakobovits' Home Page


 Rex M. Jakobovits



rex@cs.washington.edu 
Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA



I'm 
getting my PhD 
here at the Computer Science Department
of the University of
Washington, in the wonderful city of  Seattle
.  Is it always raining here?  See for yourself, with this
up-to-date weather
report, or sneak a peek at this  live image from a video camera 
mounted outside.  The camera is pointed at our beautiful  Drumheller Fountain.  On a clear day, you
can catch a glimpse of 
Mt. Rainier  in all its glory (but this is probably not a clear
day, so here's a nice color picture).  


My Research
  So what am I doing here? 

 I'm developing the Web-Based Repository Manager,  which is a programming toolkit for building multi-media consoles.


 I'm constructing an image database as part of a
Structural Information Framework For Brain Mapping.


 We're building a knowledge base to support the  Digital Anatomist, an on-line interactive atlas of the human body.


 I implemented a Database
Environment for Vision Research.


 I'm a local expert on  persistent
programming languages.
	
 
Interests
  So what else am I doing here? 

 I'm the proud creator of the UW Internet
Racquetball Ladder.

 I've taught Advanced C Programming for the UW Extension 

 I wrote some perl scripts to manage a rotisserie
baseball league.  The standings are updated daily with stats from

USA-Today.

 I'm raising a happy family of african
cichlids.

 I visit my home town  Honolulu  every chance I get, and camp out in the magical  Kalalau valley .

 I dig the movies
 I gamble on the stock market.

 I run a darn good 
fantasy football team.







A Newslet would be here if you had Java

Family Links

 My
dad, Leon James, a professor of Psychology at the University of Hawaii who
is writing a book on 
traffic psychology and fostering a lively online polemic about 
Emanuel Swedenborg.

 My step-mom 
Diane Nahl, a professor of Library & Information Sciences, who
provides this 
great index of online libraries and databases.

  My mom, Judy Jakobovits, a realtor in Hawaii.
  My uncle, Eddy Jakobovits, running a web site for Bioscience professionals.
 My bookmarks

If you have Java, click-drag on the words below to make your own poem...







",non-course
"
Twilight - Welcome

































A gallery of twenty
       photographs under five headings.















© 1996 by Robert Grimm.
       All rights reserved.













",non-course
"

Ted Romer


 Ted Romer



Department of Computer Science & Engineering 
University of Washington 
     Box 352350 
Seattle, WA 98195
Home:   (206) 527-0988 
Office: (206) 616-1849 
Fax:    (206) 543-2969 
romer@cs.washington.edu
Office: 

Chateau Sieg 110.

Research Interests
I've been doing research on operating system support
for 

high performance memory systems
with really smart people like

Brian Bershad,

Brad Chen,
Alan Eustace,

Anna Karlin, 

Dennis Lee, 

Wayne Ohlrich, and

Wayne Wong.


Three recent papers on this subject:



Reducing TLB and Memory Overhead Using Online
Superpage Promotion.
Romer, Ohlrich, Karlin and Bershad.  ISCA '95, pp. 176-187.

Dynamic Page Mapping Policies for Cache Conflict Resolution
on Standard Hardware.
Romer, Lee, Bershad, and Chen.  OSDI '94, pp. 255-266.

Avoiding Conflict Misses Dynamically in Large Direct-Mapped
Caches.
Bershad, Lee, Romer, and Chen.  ASPLOS VI, pp. 158-170.



In addition, some friends and I have been studying the performance of
interpreters.  You can learn more from the
Project Rocky
home page.  We also wrote a paper together:



The Structure and Performance of Interpreters .
Romer, Lee, Voelker, Wolman, Wong, Baer, Bershad, and Levy.
ASPLOS VII, to appear.
Abstract,
postscript.


My Bibliography.

590lobo Reading List

Random Stuff


A map to my house.

Computer scientists with x-rays of their limbs on the web:

 Ted Romer's knee after 
arthroscopic surgery.

 Mark Hill's wrist.



My friend Dylan
said his hair couldn't be cut with a Flowbee.  We said it could.  Being
experimental scientists, we conducted an experiment.  You can judge the 
results yourself.


After attending ISCA '95, I travelled in Europe and took some
pictures.

 romer, v. tr.  To eat
someone else's food, accompanied by sincere rationalization.  For
example, ""You romered my lunch!""  ""But I thought you'd left
the country and it would go bad if I didn't eat it!""  Origin unknown.

 
Edward Tufte's  tips on public speaking .


My father edits the American Journal of Physics.




",non-course
"

Memory Systems Research at the University of Washington






Memory Systems Research



Department of Computer Science & Engineering  

University of Washington,  FR-35 

Seattle, WA 98195



Welcome to the home page for Memory Systems Research at UW CSE.
Description 
Our research group is investigating techniques that use the operating
system to improve memory system performance.  All of our work shares
the following features:


  We rely a combination of simple hardware support and operating
  system modifications to monitor the dynamic behavior of applications.

  These monitoring mechanisms incur a small overhead at runtime, but the
  information they collect can be used to identify sources of memory
  system delays such as cache misses and TLB misses.

  By identifying and resolving these bottlenecks, we not only pay for
  the overhead of the monitoring mechanisms, but also significantly
  improve overall system performance.


In our most recent project, we explored policies that monitor
application memory reference patterns in order to identify and resolve
TLB performance problems.  Poor TLB performance results when the TLB
is too small to cover the current application's working set.  Several
modern architectures support superpages: pages whose size is a
multiple of the system's base page size.  On such systems TLB
performance can be improved by using larger pages, but at the cost of
wasted memory due to internal fragmentation.

We simulated several policies that adapt the page size dynamically to
different regions of an application's address space, constructing
superpages by copying the component pages to a contiguous region of
memory.  We developed a policy that monitors TLB misses, and balances
the potential benefit of having a superpage (a reduction in future TLB
misses) against the cost of constructing the superpage (an in-memory
copy).  By constructing superpages only when and where TLB miss
patterns warrant, this policy attains the TLB performance of large
pages without their internal fragmentation.

For more details on this project, see our paper 
     Reducing TLB and Memory Overhead Using Online Superpage Promotion 
     (ISCA '95, to appear).

We're looking for someone to implement these algorithms -- this would make
a good quals or masters project.

Project Description.

People

Faculty:

 Brian Bershad (bershad@cs.washington.edu)
 Anna Karlin (karlin@cs.washington.edu)


Current Students:

 Dennis Lee (dlee@cs.washington.edu)
 Wayne Ohlrich (ohlrich@cs.washington.edu)
 Ted Romer (romer@cs.washington.edu)
 Wayne Wong (waynew@cs.washington.edu)


Papers




     Reducing TLB and Memory Overhead Using Online Superpage Promotion . 
     Romer, Ohlrich, Karlin, and Bershad.  ISCA '95, to appear.



	Dynamic Page Mapping Policies for Cache Conflict Resolution on 
	Standard Hardware .
     Romer, Lee, Bershad, and Chen.   OSDI , pp. 255-266.



	Avoiding Conflict Misses Dynamically in Large Direct-Mapped Caches .
     Bershad, Lee, Romer, and Chen.   ASPLOS  VI, pp. 158-170.


     A Comparison of the Memory Performance of the MIPS R3000 and DEC
     Alpha 21064.  Wong.  Ph. D. Quals Project Report, University of
     Washington.


     Instruction Cache Effects of Different Code Reordering Algorithms. 
     Lee.   Ph. D. Quals Project Report, University of Washington.



  Memory Systems Bibliography  



Ted Romer (romer@cs.washington.edu)



",non-course
"
 Project Rocky: The Architectural Performance of Interpreted 
   Languages

 Project Rocky: The Architectural Performance of Interpreted 
   Languages 
Project Description

  Interpreted languages have become increasingly popular over the last
  several years, due in part to the demands for portability, safety,
  and ease of use.  This project examines the performance of interpreted
  languages and environments from several perspectives: interpretation
  strategy, implementation, and processor/architecture utilization.
  As a basis for our study, we have collected a set of benchmarks and
  microbenchmarks which are implemented in several interpreted
  languages -- Perl, Tcl, Java, and MIPSI.  Using various
  instrumentation and tracing techniques, we evaluate the performance
  characteristics of those benchmarks in order to gain insight into
  the similarities and differences in these languages and their
  execution environments.

People


Faculty:

 Jean-Loup Baer (baer@cs.washington.edu)
 Brian Bershad (bershad@cs.washington.edu)
 Henry Levy (levy@cs.washington.edu)


Students:

 Dennis Lee (dlee@cs.washington.edu)
 Ted Romer (romer@cs.washington.edu)
 Geoff Voelker (voelker@cs.washington.edu)
 Alec Wolman (wolman@cs.washington.edu)
 Wayne Wong (waynew@cs.washington.edu)

Papers

Romer, Lee, Voelker, Wolman, Wong, Baer, Bershad, and Levy,
The Structure and Performance of Interpreters, ASPLOS VII, to appear.

Abstract
postscript
Java measurements on x86
Java source files for benchmarks

Tools

To collect information on the performance of x86 applications, we've
been building a binary rewriting tool called Etch.  Etch is not yet
publicly available, but you can read about it on the Etch
home page.

Internal Documentation

Project internal documentation (available only to people from UW CSE).





Last updated July 24, 1996. 
romer@cs.washington.edu


",non-course
"


Richard Rogers' Home Page

 Richard Rogers
rrogers@cs.washington.edu
Computer Science & Engineering Department
University of Washington, FR-35
Seattle, WA 98195 USA


Office: Chateau Sieg 104; Phone:   (206) 616-1843

Lab: Intelligent Systems Laboratry; Phone:    (206) 685-7629


Research:


I have developed system software for the Systolic Cellular Array Machine (SCAM), a massively parallel image processing computer. The software includes a compiler, basic image processing and morphology libraries, and a simulator. You can obtain the software and papers about SCAM here.


I currently work on document layout extraction at the Intelligent Systems Lab. I am also helping to produce a document groundtruth database for the optical character recognition community.


 Science Camps:


I am the Director of Computer Facilities at the Northwest Center For Environmental Education. NCEE offers a summer science camp for students of all ages in Washington's beautiful San Juan Islands.


I also work with the Science Splash! program at Seattle University. Splash! is a year-long National Science Foundation funded science program for 8th grade minority girls in the Seattle area.


Other Interests:



Corn snakes (Jessica, Ana, and Squishy, in order of increasing length)


KUOW, UW's National Public Radio station


I bake the best pecan pie in Seattle



Last Modified: 08:53pm , February 20, 1996


",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"

Mike's Home Page



  
Mike Salisbury

salisbur@cs.washington.edu

Computer Science & Engineering Department, 
University of Washington,
	  Box 352350, 
Seattle, WA 98195-2350 USA


Office: 

Chateau Sieg 110.




My Life
History
School
Home
Friends
Vita


Cool stuff on the net


",non-course
"

Stefan Savage
 Stefan Savage
savage@cs.washington.edu





Work: 

     Computer Science & Engineering Department,

     University of Washington, FR-35, 

     Seattle, WA 98195 USA 
Home: 
4223 5th Ave NE
Seattle, WA 98105 USA 




After sampling the rich post-industrial culture of modern Pittsburgh
for six years, I caught a ride with the 1993 Bershad migration and I'm
now a gradual student of the first rank here at UW.  My strong
background in 19th and 20th century American History provides me with
a firm, yet irrelevant, platform from which to ""trash talk"" my peers:
""Any fool can see that de Tocqeuville's statement,
'[Americans] find it a tiresome inconvenience to exercise
political rights which distract them from industry' is quite similar to
current microprocessor architectural trends favoring the needs of
application code over operating systems""


I work with Brian Bershad  
and the rest of the  merry band on
an operating system project called SPIN. 

Projects

SPIN
SPIN is an extensible operating system omnifemtokernel which
supports the dynamic adaptation of system interfaces and
implementations through direct application control, while still
maintaining system integrity and inter-application isolation. 

Things in Writing
SPIN papers

 
     Extensibility, Safety and Performance in the SPIN
     Operating System
 in  ""Proceedings of the 15th ACM Symposium on Operating System
     Principles (SOSP-15)"", pp. 267-284, Copper Mountain, CO,
     December 1995.
Slides from the talk.
 
     Language Support for Extensible Operating Systems
 in  ""Proceedings of the First Workshop on Compiler
     Support for System Software (WCSSS)"", Tucson, AZ, Feb 1996.
 
     Writing an Operating System with Modula-3
 in  ""Proceedings of the First Workshop on Compiler
     Support for System Software (WCSSS)"", Tucson, AZ, Feb 1996.
 
     Protection is a Software Issue
 in  ""Proceedings of the Fifth Workshop on Hot Topics in
     Operating Systems (HotOS-V)"", pp. 62-65, Orcas Island,
     WA, May 1995.
 
     Some Issues in the Design of an Extensible Operating System
in ""Proceedings of the First USENIX Symposium on Operating System
     Design and Implementation (OSDI-1)"", p. 196, Monterey, CA,
     November 1994. (panel abstract)
 A longer (unpublished) version of the above
           paper.  
 
SPIN - An Extensible Microkernel for Application-specific
         Operating System Services
in  ""Proceedings of the Sixth SIGOPS European Workshop on
          Matching Operating Systems to Application Needs"".
A version appeared in 
        Operating Systems Review, pp. 74-77,
	January 1995, v 29, no 1. 
 
SPIN - An Extensible Microkernel for Application-specific
  Operating System Services
University of Washington Tech Report UW-CSE-94-03-03, March 1994.


AFRAID paper

  
  AFRAID -- A Frequently Redundant Array of Independent Disks
in ""Proceedings of the 1996 Winter USENIX
       Technical Conference"", pp. 27--39, San Diego, CA, January
       1996. (best student paper) 
       
Slides from the talk.


Reservation papers

 
  Processor Capacity Reserves: Operating System Support for Multimedia
  Applications
 in  ""Proceedings of the First IEEE International Conference
       on Multimedia Computing and Systems"", Boston, MA, May 1994.
 
  Processor Capacity Reserves: An Abstraction for Managing Processor Usage
 in  ""Proceedings of the Fourth Workshop on Workstation
       Operating Systems (WWOS-IV)"", pp. 129-134, Napa, CA, October 
       1993.
 
  Processor Capacity Reserves for Multimedia Operating Systems
Carnegie-Mellon Tech Report CMU-CS-93-157, May 1993.


Ye Old Real-Time Mach paper

 
  Real-Time Mach Timers: Exporting Time to the User
in ""Proceedings of the Third USENIX Mach Symposium"",
  pp. 111-118, Santa Fe, April 1993.
Slides from the talk.

Interests

 Music
 Hiking

This web is under construction...



",non-course
"

Sean D. Sandys








 Sean David Sandys 
sds@cs.washington.edu





Computer Science & Engineering Department




University of Washington
     Box 352350 




Seattle, WA 98195-2350 USA




Sean Sandys is a third year graduate student at the 
University of Washington.
He graduated in 1994 from
Williams College 
with a double major in 
Computer Science and 
 Astrophysics. Currently, he is 
trying to finish his 
qualifying exams
.  His interests include 
Computational Astronomy,
Software
Safety and 
Parallel Programming Languages. 


He recently participated in a panel at the 
CRA
Conference at Snowbird 
entitled ""Retaining
and Mentoring Minority Students from Underrepresented Groups"". For those that are 
interested, here is a description of the 
Undergraduate Tutoring and Mentoring Program here at the University of Washington.



Within the department he is 
co-editor of 
Mossy Bits,
and one of the senators for 
GPSS, the
graduate student
senate here at the University of Washington,
although it is common knowledge that he was appointed because of
his ability to bend the wills of men rather than for any literary
or political skills.



When he is not
working 
he can be found
listening to Jimmy Buffett,
waxing philosophical about his glory days on 
WUFO,
or (mis)quoting some of the finest minds 
of our time. It is also rumored that he is interested in 
brewing some cool refreshing 
beers.



By the way, if you are looking for a internet search tool, 
check out the 
Metacrawler.




Sean David Sandys <sds@cs.washington.edu> 
Last revised: July 23, 1996


",non-course
"

Richard Segal's Home Page




 

 

Richard Segal

Department of Computer Science and Engineering 
University of Washington
Box 352350 
Seattle, WA 98195-2350 
segal@cs.washington.edu 



 


 




Personal

 Biography.
 Better half.
 My family.
 Pictures.



Research

 Overview.
  Brute.
  Internet Softbot.
  Publications.
 Curriculum Vitae.
[postscript]



 Amusements

 Archery.
 Bicycling.
  Racquetball.
 Skiing.
  Softball.






 


",non-course
"


Stefan G. Berg



Stefan G. Berg







 Work  Home 

427 Sieg Hall             
University of Washington  
Box 352350                
Seattle, WA 98195-2350    
U.S.A.                    

5212 University Way NE    
Apt. 203                  
Seattle, WA 98105-3532    
U.S.A.                    

Phone: +1 206 543 5118    
Fax:   +1 206 543 2969    

Phone: +1 206 525 2147    
Fax:   +1 206 524 7725    






Email

 sgberg@cs.washington.edu 





Contents



 Address Information
 About Me
 Past Projects and Activities
 Current Projects and Activities
 Some Interesting Pages
 
      My Finger Information. 







 About Me: 


Stefan was born in 
Cologne , 
Germany  in Spring of 1973. In 1989, he completed his Mittlere Reife (10th
grade) at the Schillergymnasium in Cologne before coming to the United States
to receive a high school diploma from Bloomington High School North (Indiana)
in 1991. Stefan received his Bachelor of Science with honors and distinction
in the field of computer science from
Indiana University in 1994. At the moment
he is working towards a PhD at the 
University of Washington  with an expected completion date sometime this
century.




Past Projects and Activities:


  CSE505
          Project: Implementation of an SK Reduction Machine.
      Teaching Assistant for
           CSE471
          .
      
          CSE548 Project: Comparison of Hardware and Software Solutions to
          False Sharing.
      Teaching Assistant for
           CSE142
          .
       CSE521
          Project: A Study of Linear-Time Sorting Algorithms.
      Teaching Assistant for
           CSE370
          .





Current Projects and Activities:



 
          Quals Project: Comparison of Hardware and Software Solutions to
          False Sharing.




Some Interesting Pages:


 A few
          
          pictures  about me and the people around me.
      My rafting
          
          pictures .
      My 
          bookmarks. Exciting!
      The 
          Red Square at the University of Washington, this moment.
      The
          
          weather  in Seattle.




Print Yourself

Something crazy I did. I didn't even come up with this particular
solution myself, but the implementation was done by me. It's
all on one line and shouldn't contain a trailing carriage return
(384 bytes). Compiles without warning with gcc. If you run it,
this program will print it's exact source code. If you can do it
in fewer bytes in C, I'd like to see it!


v(c){putchar(c);}u(char*x){for(;*x;x++)if(*x-92)if(*x-34
)v(*x);else{v(92);v(34);}else{v(92);v(92);}v(92);v(48);}
char x[]={37,115,0};main(){char*b=""v(c){putchar(c);}u(ch
ar*x){for(;*x;x++)if(*x-92)if(*x-34)v(*x);else{v(92);v(3
4);}else{v(92);v(92);}v(92);v(48);}char x[]={37,115,0};m
ain(){char*b=\""\0\"";printf(x,b);u(b);u(b+=148);printf(x,
b);}\0"";printf(x,b);u(b);u(b+=148);printf(x,b);}



Stefan's resume is available in

postscript ,

dvi , and

TeX  format.









",non-course
"

j ward shade
















Greetings and salutations. I'm a third year grad student here
at u-dub
cse. Interactive rendering
of complex 3D scenes is currently my thing. If it is your thing too,
then follow the Projects link to the 
Walkthru
project. There, among
lots of pictures and animations, you'll find the SIGGRAPH 96 paper
describing some recent work. ( As a shortcut, you can click on the
picture of the island in the lower left corner of this page.)

There is lots of interesting work going on in many different aspects
of computer graphics here. The

Graphics and Imaging Laboratory is where most of it gets done. 






 
 Contact Info,
	 Daily Schedule,
	 Travel Plans.

 
 Projects

 
 Publications

 
 Pictures






 

 

 

 




Hey! If this page looks scrunched, make your browser at least 750 pixels wide.


",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"

Shun-Tak A. Leung


Shun-Tak A. Leung

I am a Ph.D. student in the Department of Computer Science and
Engineering at University of
Washington.  I am working with Prof. John
Zahorjan.  Here are some pointers to my research.


 Research summary
  Publications 
 Curriculum vitae upon request





	Shun-Tak A. Leung

	Department of Computer Science & Engineering 

	University of Washington 
  Box 352350 
Seattle, WA 98195-2350 
Email: shuntak@cs.washington.edu
  Fax: (206)543-2969



Last modified: January 8, 1995


",non-course
"

Welcome to Shuichi's Home Page!







Shuichi Koga (SKoga@CS.Washington.EDU)
Graduate Student
Computer Science and Engineering 
Department
University of Washington


 Hi there! My name is Shuichi Koga (if you haven't noticed by
now). I've just started up graduate studies here at the University of
Washington. I haven't quite figured out what I'll be doing yet for my
quals (much less my dissertation!).
 I graduated from the University
of Virginia in May 1995 with a degree in Mathematics. I was also
heavily involved with the asian studies, foreign relations, and
government departments (I was originally slated to also get a degree
in asian studies). I also was heavily involved with the User Interface Group
and the computer science
department working on a project called Alice.

Since you're here anyways, why don't you take a look at...


 A picture of me at 2:00am (230K).
       Here's a
       smaller one (18K).
   What Shuichi means
   My Finger Info
 My current schedule
 Neat hypertext links 
 What I do a lot of: hunt and destroy 
       bugs.





Shuichi Koga (
  
SKoga@CS.Washington.EDU)


Last modified: Mon Jun 17 02:48:19 1996




",non-course
"

Soha Hassoun's Home Page 





 soha@cs.washington.edu

 Soha Hassoun


It's my 6th year of graduate school at the University of Washington,
Computer Science and Engineering Dept.  I am a circuit designer who
turned CAD developer.  Currently, I am working on
architectural retiming 
with Professor Carl
Ebeling .  



 Weekly schedule 


 Business? 


Current 
and  previous research at UW.

 Current cv
 Education
 
Experience
 
Publications and a Patent


 LIS  and  Chaos groups in the CSE dept. at UW.
Professional, and interesting   CAD/VLSI  sites and information.






 Fun?  

 Little Deedee's  Photo Gallery 



 Address: 

Computer Science & Engineering Department, 
University of Washington, Box 352350, 
Seattle, WA 98195-2350 USA
 Phone:  206 543-5143
 FAX:    206 543-2969



",non-course
"

 Sujay Parekh's Home Page 





 Sujay Parekh 



 Work


Department of Computer Science & Engineering, 
Sieg Hall Chateau (a.k.a. Guggenheim Annex) 109A, 
University of Washington, Box 352350, 
Seattle, WA 98195 USA 
(206) 616-1846

 Home

 5745 28th Ave NE,
Seattle, WA 98105-5517 
(206) 729-8515



  This Quarter 


 CLASSES

 CSE 590Q AI seminar
  CSE 590S  Systems seminar
 FRENCH 110 French

 RESEARCH 

  Simultaneous
Multithreading .  In particular, O/S issues related to
multithreaded architectures.

 The 
Softbot  project.  I evaluated 
Simon , a Softbot which employs a procedural search control
system to control its actions. My  report .

 The construction and design of a removable patio for conventional workspaces. (If you're interested in funding this project, please contact me!)


 SPORTS

  SPUDS Soccer 



   Right now  (sort of)


  My Bookmarks   (Web pages I like to keep track of)


 My Interests


 ACADEMIC: 
AI/Cognitive Science, Distributed/Parallel Systems, Psychology, Philosophy
 FOR FUN: 
Tennis, Soccer, Sailing, Squash, Volleyball, Ballroom Dancing, Food


 Been there


  Cornell Computer Science
  Oracle Corporation
  Stottler-Henke Associates, Inc.


  Done That 


 My  resume 



 Random personal info


 Favorite foods: Oondhiu, Mangoes, Phad Thai, Kung Pao Chicken
 Favorite beverages: OJ, Screwdriver, Scotch, Long island Iced Tea
 Favorite dances: Tango, Swing (East & West coast), Salsa
 Favorite (rock) music: Dire Straits, Pink Floyd, Phil Collins/Genesis, Peter Gabriel, Tom Petty




 sparekh@cs.washington.edu 



",non-course
"

Erik Selberg's New and Improved Home Page










    The name's
    

    Erik
     
speed@cs.washington.edu








Academic


	  Why speed, why?
	  


Almost Live FishCam!


Addresses






 

The Lara M. Lewis Memorial
Happy Link!
 





People

Sports

Food & Drink

Culture





Mary Kaye

Office
Friends
Family
Fish


Me





Disc Drives Ultimate
Pasty Powered T(o)uring Machines
Mountain Biking
Spuds Softball
Skiing in Utah
Raquetball
The Pros




College Inn Pub
Wedgwood Ale House
Diet Dr. Pepper
Salt Lake Roasting Company
Bean & Bagel




Speed Racer
Star Wars
Tiny Toons
Pinky & the Brain
Phantom 2040
Babylon 5
Comics (UW only)





  
  Erik   

",non-course
"

The Home Page of Sung-Eun Choi





WELCOME TO THE
HOME
PAGE OF
SUNG-
EUN
CHOI




 



























MY
SCHOOL
LIFE





My primary research interest is in compiling 
parallel programming 
languages.  I am involved in the ZPL
Compiler Project at the University of Washington.  Lately, I've been
spending most of my time thinking about optimized communication
generation using the ZPL architechture-independent communication
library, IRONMAN.
In addition, I am experimenting with simulating data parallel programs
on superscalar processors.  The goal of this work is to improve node
performance on the coming generations of parallel machines.  I've also
been seen hanging out with the Chaos
Router group.  I did a bit of work on the simulator,
including a graphical front end for visualization.  With that
experience, I am currently implementing another router simulator in
ZPL.  Finally, I am also doing a little bit of astronomy.



This quarter, I am TAing CSE 451.






I enjoy watching  movies,
but mostly in the comfort of my own home.  I like to eat (oh yeah,
I've been a vegetarian since my
junior year in college) and drink (dinner would not be the same
without a good 
wine.)  As a result, I must exercise quite a bit.  I play on two
soccer
teams: Cousin Scrubs (Co-Rec division 9A) and Cooper's (Co-Rec
division 2A).  Last season, the Scrubs came in second place (9B) and
Cooper's won their division (4B).  Unfortunately, I recently sacrified
my left knee for the game, and won't playing soccer or taking my usual
step aerobics
class.  Instead, you may find me at the IMA trying to swim and at a weight training
class.  Like all good people in this world, I try to read a few  books, take in a
bit of 
Shakespeare, watch public
television, and listen to classical
music.





MY
OTHER
LIFE




























 


 










 Sung-Eun Choi (sungeun@cs.washington.edu)
Department of Computer Science & Engineering, 
University of Washington, 
     Box 352350, 
Seattle, WA 98195-2350 USA







",non-course
"

Thu Duc Nguyen







Thu Duc Nguyen 
Department of Computer Science
& Engineering
University of Washington
Box 352350
Seattle, WA 98195-2350
 thu@cs.washington.edu




 
Work World
 My research interests include operating systems, distributed and
parallel systems, networking, and security.  Currently, with help from
my advisor, John
Zahorjan, I'm building system support for running soft real-time
applications (e.g., visualization) on partially idle workstations in
NOWs.  Recently, I completed a study on how runtime measurements of
application characteristics can be used by a runtime system to
minimize application execution time in uniprogrammed multiprocessors
environments as well as by a system scheduler to make ""good""
global scheduling decisions in multiprogrammed multiprocessors
environments.


CV
Publications

 
Fun World

Vietnamese
resources on the net
Cycling
playground



",non-course
"

Tian's Homepage










Your web browser is a rusty yellow turkey.


Not that frames are even part of the html standard, but click here for my non-frames homepage.




",non-course
"

Ashutosh Tiwary



   Ashutosh Tiwary 
   
 


tiwary@cs.washington.edu 
Department of Computer Science & Engineering, 
University of Washington, Box 352350, 
Seattle, WA 98195-2350 USA

 
I am a mostly-full-time fourth year graduate student. I work in the area of Single Address Space Operating Systems (Opal), Persistent Object Systems, Object Oriented Databases, Application Workload Measurement and Operating System Support for Databases. In the past, I have worked with CAD infrastructures, User Interfaces and Distributed Object Systems. In my spare time, I work in the Computer Science group at the Research and Technology Organization of Boeing Computer Services.

  OOPSLA-95 Workshop on Building Large Distributed Software Systems Using Objects 
  OOPSLA-96 Workshop on Objects in Large Distributed and Persistent Software Systems  
Projects

Opal
I am working on distribution in Opal.  Opal is an operating systems project which addresses the issues and opportunities involved with creating a single, global address space, across multiple users and machines.   
Jeff Chase is the primary architect of Opal.   Hank Levy  is the advisor working most closely with Opal and is also my advisor. 

 Application Workload Measurement 
I am also work on measuring and characterizing the behavior of persistent object applications and some general techniques for doing this. See the paper below for some of my work in this area.

 Distributed Object Systems 
I have worked on several distributed object systems in my professional career. This
experience was the basis of 
 OOPSLA95 Workshop on Building Large Distributed Software Systems Using Objects that I co-organized. In 1996, we will follow this up by 
 OOPSLA96 Workshop on Objects in Large Distrbuted and Persistent Software Systems. 
 Publications 
  Using Virtual Addresses as Object References. J.Chase, H.Levy and A. Tiwary. In  Proc. 2nd International Workshop on Object Orientation in Operating Systems,  September 1992. 
 Exception Handling in a Parallel and Distributed Environment. A. Tiwary and H. Levy. In  ECOOP Workshop on Exception Handling, July 1991.
  Building Large Distributed Systems Using Objects.  A. Tiwary, R.K. Raj, D.S. Lea, C.S. Bosch. In  Addendum to the Proceedings of OOPSLA'95 (OOPS Messenger V6, #4),  October 1995. 
  Evaluation of OO7 as a system and an application benchmark.  A. Tiwary, V.R. Narasayya, H.M. Levy. In   OOPSLA'95 Workshop on Object Database Behavior, Benchmarks and Performance,  October 1995. 



",non-course
"

Tessa Lau




 Tessa Lau 

 Just another dead end on the information superhighway. 





I'm a second-year
graduate student in Computer Science at the University of Washington.  
My research interests include a mix of AI, UI, and all sorts of web-related
goodies.  I'm currently working on Clio, a system for searching and
browsing one's personal web history.  No, it's not available yet.


I'm not currently seeking gainful employment, but my
resume is online for the curious.



My kitty
I have the honor of sharing an apartment with 
Gambit, a Siamese mix.  

Cats are great.


More about me
More information about me can be found here.  There
are some pictures of me 
here, here, and here.  There's a page on where to
find me.  Apparently, I'm also
really interested in Scotland.


Classes
I'm still working on my quals, and this quarter I'm taking the last two of
eight classes to fulfill the breadth requirement.

 CSE 567 : Digital Systems
 CSE 573 : AI
 CSE 590Q : AI seminar




Linux games
Everybody plays games.  I maintain the Linux Game
Tome, which is committed to the advancement of Linux as a pretty cool
gaming platform.


There's also my first attempt at Java programming, a simple maze applet.  See also Java for Linux.


What I do when I'm not sleeping
I've been known to frequent Seattle area bookstores.


I also knit and crochet.



Copyright (C) 1996
tlau@cs.washington.edu



",non-course
"

 Martin Tompa 


 
 Martin Tompa 
Department of Computer Science and Engineering 
University of Washington 
Box 352350 
Seattle, WA  98195-2350


 phone:  (206) 543-9263 
 receptionist:  (206) 543-1695 
 fax:  (206) 543-8331

 
 Lecture notes and articles 
 
 Here I am 

 Computing the trajectory of Thelma &
Louise (273K)
 On a recent holiday on the moon (85K)

 
 A few pearls among the wash of oysters 

 
	Collaborative Surrealistic Art
     
 
	Electronic Prophecy
     
 Art Building, across Pierce Lane, Carol Martin, Photographer
    


  Photo courtesy of the UW Health Sciences Center for Educational Resources,
  who provide many 
  images
  of the University of Washington.


 

 Martin Tompa 

 finger tompa@cs.washington.edu


",non-course
"

Tracy Kimbrel is being held prisoner!


 Tracy Kimbrel is being held prisoner!

Tracy Kimbrel has been held prisoner at the University of Washington
since 1982 without charge or trial.  He was moved for six years to
another Seattle area prison, where most of the inmates are forced to
manufacture airplanes.  He escaped that institution, but was
recaptured and returned to the University of Washington.  Help end his
plight!  Rescue him from his imprisonment.

Here is a list of things he has done 
 (curriculum vitae) 
while imprisoned.  Here are some more details and a statement of
what he promises to do for you
 (history and goals) 
if you free him from his captors.

 

Department of Computer Science & Engineering 
     University of Washington
     Box 352350
     Seattle, WA 98195-2350 USA

     tracyk@cs.washington.edu




Here is what his captors force him to do: 


 
A Trace-driven Comparison of Algorithms for 
Parallel Prefetching and Caching
Tracy Kimbrel, Andrew Tomkins, R. Hugo Patterson, Brian Bershad, Pei Cao,
Edward W. Felten, Garth A. Gibson, Anna R. Karlin, and Kai Li.
To appear in the 1996 ACM SIGOPS/USENIX Association Symposium on
Operating System Design and Implemenation.
 
Near-optimal Parallel Prefetching and Caching
Tracy Kimbrel and Anna R. Karlin.  To appear in the 1996 IEEE
Symposium on Foundations of Computer Science.
Longer version 
here.
 
Integrated Parallel Prefetching and Caching
(two-page extended abstract)
Tracy Kimbrel, Pei Cao, Edward W. Felten, Anna R. Karlin, and Kai Li.
In  Proceedings of the 1996 ACM SIGMETRICS Conference on Measurement
and Modeling of Computer Systems.
 
A probabilistic algorithm for verifying matrix products using
O(n squared) time and (base 2) log n + O(1) random bits.
Tracy Kimbrel and Rakesh Kumar Sinha.
 Information Processing Letters, 45:107-110, 1993.


",non-course
"

Travis Craig's Home Page


 Travis Craig


travis@cs.washington.edu 
Computer Science & Engineering Department, 
University of Washington, FR-35, 
Seattle, WA 98195 USA

 
Research interests:

	mechanisms for predictability in real-time systems
		cache restoration
		queuing spin locks
	    Arctic submarine currents
 
Courses I'm taking this quarter:

 CSE 800: Dissertation,
		where I'm working on real-time systems.
 
Time consuming side projects are:

 working half-time at ESCA Corporation
	 helping keep the Volvo 1800ESs (5055 and 7135) running
     Press Here for Latest Motor Pool Status 
 
How to understand Computer Science:


 

 
	Travis Craig
   
  Last modified: 
  Oct 9, 1995 


",non-course
"Dean Tullsen home page

Dean M. Tullsen
 

 Biographical Information
 Research Interests and Bibliography
 Home Page
 download my resume


My hobbies:

 
",non-course
"

Michael VanHilst



Michael VanHilst

vanhilst@cs.washington.edu

mvh@cfa.harvard.edu

Personal,
Research




Computer Science & Engineering Department 
University of Washington 
Box 352350 
Seattle, WA 98195-2350 USA



Click here to send an email message to Mike VanHilst.



Personal

Mike is starting his 7th year as a graduate student at the University of 
Washington.  Hopefully, with a little luck he will be finished around the
end of the winter quarter.
  

Immediately prior to coming to UDub Mike worked as a contractor at
IBM Research 
where he wrote 
Motif 
widgets for the user unterface of IBM's
Data Explorer.

Mike got his start as a programmer in 1981 while fixing and maintaining
computer hardware for the 
Smithsonian 
Astrophysical Observatory, which is part of the 
Smithsonian, but located within 
Harvard.
Learning to debug software was the only way Mike could convince the 
programmers that the hardware really was working correctly. 
Mike stayed at the Smithsonian for 8 years, during which time he wrote a 
program called 
SAOimage
which is used by lots of astronomers to look at images.  SAOimage is now 
part of the 
GNU
distribution.  (Mike would like to thank Bill Wyatt,
Eric Mandel,
Joe Schwarz, and 
Doug Mink
for starting, guiding, and continuing the project,
not to mention countless others who contributed).

In 1986, Mike took a year off to work with a group of 
seismologists
in Paris, France, doing data acquisition, calibration, and analysis.  
He had a truly wonderful time in 
Paris. 
He met his wife, Luz Angela, in a French language class at the
Alliance Francaise.
Luz Angela had come to Paris that year from her native 
Colombia
in South America.


In the summer of 1994, Mike wrote a front end to let students
browse the University's time schedule data base through UWIN.
He had fun working with the very talented staff at 
pine.)
Special thanks to Bill Shirey, who did most of the design, and 
Tracy Stenvik, who wrote the UWIN screen library.
(If you are on a UW machine, you can run 
UWIN here.)

In between working on the time schedule Mike also taught beginning 
programming, through the UW Extension, to a very motivated group from
Microsoft product support who sacrificed their summer to learn C.

Recently Mike has presented papers at the

International Symposium on Object Technologies for Advanced Software
(ISOTAS'96),

ACM Conference on Object Oriented Programming Systems, Languages, and 
Applications (OOPSLA'96), and the

ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE'96)
He also presented a poster at OOPSLA'95, made presentations at the 
Subjectivity Workshops at OOPSLA'94 and OOPSLA'96, participated in the 
Doctoral Symposium at OOPSLA'95, and participated in a demo at 
UIST'96 (thanks Steve).


In an earlier life Mike earned BS and MCP degrees in
architecture
(the wooden kind) and 
city planning
from 
MIT
and worked as the Community Development Director for
the city of Grinnell, 
Iowa.
While the things he works on are different now, the skills in visual
design and problem solving continue to be of value - and he still 
gets to talk about 
Chris 
Alexander.

Here in Seattle, Mike has been active in the student chapter of the 

Washington Software Association,
improving ties between students and large and small software 
companies in the area.  He enjoys hiking, cross-country skiing, 
sailing, and
kayaking.
He also enjoys swimming at Lake Bronson.

More recently, Mike's ""free"" time has been taken up by 
Marco Harold Sebastien Van Hilst, who was born on May 10, 1996.
Mike will post pictures as soon as he locates another photo scanner.




 visits since 8 November 1996.


 

Michael VanHilst 
Last modified: 
Friday, November 8, 1996


",non-course
"
Hello from Vassily

Long Live May Day!  :)

Hello.  To start with, I am not really a web person.  The best link
I've come up with thus far is this: http://www.cs.washington.edu/homes/vass/very useful documents
(it's also the shortest to write :).  <!--Nonetheless, I've already got an
<a href=http://www.cs.washington.edu/homes/vass/advice.html advice</a for ya.>

When WWW was young, I collected quite a few links and downloaded a few
files.  I have been expanding my collection since then.  All this
stuff is here:

selected links and quotes
Russian home pages
various links
guides to HTML and forms



Other links:


CSE Home Page
UW Home Page
NCSA Mosaic Home Page


Recently I joined the UW Cecil
project.  Cecil is a cool pure object-oriented language and
Vortex is an even cooler compiler infrastructure.  We will be
faster than C!  (maybe...)  Here are papers we have written. 

As a member of the CS Lab staff, I designed and implemented the
MVis system -- WWW-assisted access to our
departmental room and visitor database.  (Recently it has been
upgraded by other staff people.)

My quals project was expanding the
ZPL language
to handle irregular data structures (represented by graphs) and
dynamically repartitioned data (both graphs and arrays).

Here is my
quals writeup (329K, 47 pages).
For a short overview, check out the
slides
from my presentation (29 pages/slides).

Also, I have collected a few links to
resources related to the project. 
vass@cs.washington.edu
Objects in the mirror are closer than they appear.
Pastor vybrasyvalsya is okna pyatyi raz.  Yad ne deystvoval.

",non-course
"
The Virgil Bourassa Home Page at UW


Virgil Evan Bourassa
Virgil E. Bourassa (virgil@cs.washington.edu) is a Ph.D.
student in the Department of Computer Science and Engineering at the
University of Washington, Seattle, Washington. His research interests
include computer operating systems and architectures. He joined Boeing
in 1988 and now works as a scientist in the Computer Science
organization of the Information & Support Services Division in Bellevue,
Washington. He received a BS in electrical engineering from Arizona
State University, Tempe, Arizona in 1987, an MS in electrical
engineering from the University of Washington, Seattle, Washington in
1990, and an MS in computer science and engineering from the
University of Washington in 1995.




Access

What I'm Working On

Interests

Expertise

Resume

Patents & Inventions

Publications

Presentations

Professional History

Education
 
1994 Achievements
 
Recommendation Letter

Status
Occasional updates. Last modified 9/7/95.


Virgil Bourassa - virgil@cs.washington.edu

",non-course
"


Vivek Ratan's Home Page





    Vivek Ratan  
 


 
Particulars
 
I'm a graduate student in the 
computer science department at the 
University of Washington. 
I'm currently on academic leave from UW and working as a research scientist
at  Bellcore in Morristown, NJ. 


 
Researchwork 
 
At Bellcore: 
I'm interested in distributed computing issues - distributed OO systems,
application/system development, high availability. I currently work with 
the distributed systems group in Bellcore on high availability in distributed
software systems. [Very simply, a highly available system is one that 
continues to run in the presence of failures.] Our group is developing a 
toolset, Anatidae, that provides high availability mechanisms for 
distributed applications that adhere to the CORBA standard. 
We have also looked at active replication schemes for high availability in
DCE applications. A recent effort has focussed on enhancing the 
availability and fault tolerance of the Cell Directory Service (CDS)
of DCE. 
Details about these projects can be found

here. 
I'm also interested in high availability issues for the Web and integration
of distributed OO technology with Web servers. 
At UW: 
At the University of Washington, I worked on the Murphy project 
(software safety methodologies) with the software safety group headed by

Dr. Nancy Leveson. Details on safety research at UW can be found at the 

UW safety page. Much of my work involved looking into automatic fault 
tree generation from
requirements specifications written in RSML, as well as working on the 
RSML language simulator. 
Publications: 
A list of some recent publications can be found  here.


 
 Personal information 
 

I was born and brought up in 
India, but have been in the US for the last eight years. As an 
undergraduate, I attended 
Angelo State University (San Angelo, TX), and then, 
Wesleyan University 
(Middletown, CT), where I received a B.A. in Physics and 
Math(Computer Science). Right after, I came to the University of Washington 
in Seattle to puruse graduate studies in Computer Science.


I like to play tennis whenever I can. Squash, and to a lesser
extent racquetball, suffice when I can't. I ardently folow the game of 
cricket. I've been participating in 
 Ultra Cricket, 
a play-by-email cricket simulation game, for many years. I also follow the 
exploits of the Supersonics, the Mariners, and the Cowboys.


Over the last year and a half, I have taken a keen interest in 
learning ballroom dancing - the Waltz, Foxtrot, ChaCha, Rhumba, Tango, 
and Swing (no West Coast please), and some occasional dabbles in Mambo. 
The NY/NJ area has some of the best places for learning and dancing. The 
Seattle Center used to have a big-band session every Saturday. 


At UW, I was involved with the Model United Nations (MUN) chapter. 
Model United Nations (MUN) is an international, educational organization 
which simulates the workings of the UN. Conferences are held throughout 
the year on current topics - restructuring and reforming parts of the 
UN like the Security Council, ECOSOC, the IMF and the World Bank, rapid
population growth, nuclear proliferation, etc. 
 Here is the home page for the MUN chapter 
of UW.

My other interests are in reading the poetry of Mirza Ghalib, a 19th century
Indian poet. I'm also interested in English literature, especially the 
Romantic and Victorian periods.


   Web links 

 
 Here is the obligatory collection of Web sites
that I tend to visit often. 


 


Department of Computer Science & Engineering, Box 352350, 
University of Washington, 
Seattle, WA 98195 USA
 vivek@cs.washington.edu
     Last modified: Oct 2, 1996
  



",non-course
"

Geoff's Li'l Pie in the Sky


Who

I am a graduate student at the University of Washington in
Seattle.

What

I did my Master's thesis in wireless mobile computing designing and
building a system called Mobisaic.
Currently I'm avoiding settling on a thesis topic.  
Where

Chateau 109D (Guggenheim Annex)
University of Washington
Seattle, Washington 98195





Looking for Emacs for Windows NT and Windows 95?




 
Geoff Voelker (voelker@cs.washington.edu)  

",non-course
"

HOME 


 Wayne's Home 


Computer Science & Engineering Department, 
University of Washington, Box 352350, 
Seattle, WA 98195 USA

waynew@cs.washington.edu
 
 CS Stuff 
I'm currently looking at memory system performance.  In particular, different
memory system organizations are being investigated.  This work is being
done with  Jean-Loup Baer.


I am also looking at interpreters with others (
 Dennis, 
 Ted, 
 Geoff, and
 Alec).  Right
now, things are a little  rocky.
Actually, we have an early version of our paper. 


 Things that I keep jumping to


  DEC's Alpha 


 Interesting places to go fishing? 


I don't have a list of cool sites.  However, I have a list of people
who have a list of people who do (well, not yet).





 Testing 

 TEST
Wayne Wong (waynew@cs.washington.edu)


",non-course
"

William Chan's Home Page





William Chan's Home Page

I spend most of my time in the Hell.

When I have some spare time, I'll hang out in the Heaven.



wchan@cs.washington.edu



",non-course
"

  Daniel S. Weld      



 Daniel S. Weld is Associate Professor of  Computer Science and Engineering
at the  University of
Washington. He received bachelor's degrees in both  Computer Science and Biochemistry at Yale University in 1982.  He landed a Ph.D.
from the  MIT Artificial Intelligence Lab in 1988,
received a Presidential Young Investigator's award in 1989 and an Office of Naval Research Young
Investigator's award in 1990. Weld  is on the
advisory board for the  Journal of AI
Research, was guest editor for Computational Intelligence, edited the
 AAAI report on the  Role of
Intelligent Systems in the National Information Infrastructure, and is
co-Program Chair for AAAI-96.  Weld has published two books and scads of
 
technical papers.  



Personal Data: Here's how to reach him:

 Office: 408 Sieg Hall
 Phone: (206) 543-9196 (work); 543-2969 (FAX); 523-9058 (home) 
 Mail: Dept. of Computer Science and Engineering, 
Box 352350, University of Washington, Seattle
WA 98195-2359



Research Interests: Weld's current research interests are in 

Artificial intelligence, specifically 
software agents and  planning.
As one example, Weld's group supports the 
UCPOP planner, which is being used at almost one hundred sites
worldwide. Many of Weld's papers are available electronically; here are
his current favorites: 


 
Representing Sensing Actions: The Middle Ground Revisited (KR-96, Nov 1996) 

 
Planning to Gather Information (AAAI-96, August 1996)


  
Planning-Based Control of Software Agents  (AIPS-96, May 1996) 

  A
Scalable Comparison-Shopping Agent for the World-Wide Web (January '96)

  
A  Softbot-Based Interface to the Internet  (CACM, July '94)

  An
Introduction to Least-Commitment Planning (AI Magazine, Winter '94)



Or select from a more  exhaustive
list. 

 
 
Recreation: When absent from his office, Weld can be found
at Cafe Allegro or in the 

stormy
mountains, 

climbing. In the past, he enjoyed  traveling the
world, but now he's more likely to be found playing with his twin boys
 
Adam and Galen.
 You are invited to visit his gallery of 
Pacific Northwest and   
Desert wilderness photographs.  See also his illustrated story about 

Morocco.





	weld@cs.washington.edu
	

",non-course
"

Wendy Belluomini 



 Wendy Belluomini 
wendy@cs.washington.edu 




	I graduated in 1996 with a Masters in 
CS.
I'm currently working on my PhD at the Univ. of Utah.
My new web page is here.


",non-course
"


Wilson Hsieh



Wilson C. Hsieh



I am a postdoc in the
Department of Computer Science & Engineering at the
University of Washington (in

Seattle,
WA).  I am a member of the
SPIN project.


I received my PhD from the
Department of Electrical Engineering and Computer Science
in the
School of Engineering
at
MIT, where I worked in the
Laboratory for Computer Science.
My advisors were
Frans Kaashoek
and
Bill Weihl.


Most of my research has been in compilation and parallel systems.  My
research interests lie in the interactions among compilers, programming
languages, runtime and operating systems, and architectures.  


selected publications

selected links

personal interests




Wilson C. Hsieh 
Department of Computer Science and Engineering 
University of Washington 
Box 352350 
Seattle, WA 98195 


My office is in 229 Sieg.  I just moved, so my phone number
has changed.  

Voice: 
206-616-9005 
Fax: 206-543-2969 
whsieh@cs.washington.edu 
PGP public key




October 26, 1996


",non-course
"

Alec Wolman's home page.



 Alec Wolman


wolman@cs.washington.edu


Work

Computer Science & Engineering Department
University of Washington
Box 352350
Seattle, WA 98195-2350
(206)616-1845

Home

1224 NW 77th St.
Seattle, WA 98117
(206)706-8104



I'm currently a graduate student in the
Computer Science department
at the 
University of Washington.
My office is
room 109d
in the
Chateau.
Before gradual school, I worked for
Digital Equipment Corp.
at the Cambridge Research Lab.


My research interests include operating systems, networking,
and architecture.


Current and recent projects:



scalable networking performance.


Etch - binary instrumentation and optimization for Win32 executables


rocky - interpreter performance



On-line papers:

 
X Through the Firewall, and Other Application Relays by Treese and Wolman.
Summer USENIX 1993.
 
Latency Analysis of TCP on an ATM Network by Wolman, Voelker, and Thekkath.
Winter USENIX 1994.
 
The Structure and Performance of Interpreters by Romer, Lee, Voelker, Wolman, Wong, Baer, Bershad, and Levy.
To Appear, ASPLOS VII, 1996.




Hungry? Have an
 otter pop.


Jim Fix
has some strange ideas... 
Nervous habit? 
No, I don't really play the guitar.


Other Wolman Links:

Wolman Hall

Wolman disease

Wolmanized pressure treated lumber




 wolman@cs.washington.edu - Aug 23, 1996


",non-course
"

 Xiaohan Qin 


 Xiaohan Qin 




xqin@cs.washington.edu 

Computer Science & Engineering Department 

University of Washington, Box 352350 

Seattle, WA  98195 
Office: Sieg 223 
Phone: (206)685-4087 
Fax: (206)543-2969


I am a 5th year graduate student working with  

Jean-Loup Baer. 
My research interests include computer architectures,
parallel and distributed systems, 
performance evaluation methods such as modeling and simulation.  
My short term goal is to get out of school as soon as possible. 

 Papers: 

A Performance Evaluation of Cluster-based Architectures, 
Qin and Baer, submitted to a conference.



On the Use and Performance of Explicit Communication
Primitives in Cache-coherent Multiprocessor Systems, 
Qin and Baer, To appear in the Proceedings of HPCA-3.



A Comparative Study of Conservative and 
Optimistic Trace-driven Simulations, 
Qin and Baer,  An award paper in 1995 Simulation Symposium, page 42-50.



Optimistic Trace-driven Simulation, 
Qin and Baer, Tech Report 94-10-03, Dept of Computer Science and Engineering, 
Univ. of Washington. 


 
A Parallel Trace-driven  Simulator: Implementation and Performance, 
Qin and Baer,  in Proceedings of 1994 International Conference 
of Parallel Processing, page 314-318.



MIN-Graph: A tool
for Monitoring and Visualizing MIN-based
Multiprocessor Performance, 
Zhang, Nalluri, and Qin, 
 in Journal of Parallel and Distributed Computing, 
June 93, page 231-241.



Performance Prediction and Evaluation of Parallel Processing
on a NUMA Multiprocessor, 
Zhang and Qin,  in IEEE Trans. on Software Engineering, 
Oct 91, page 1059-68. 


 Other interesting stuff: 
 
Photos from China


Readings in Chinese

Search Engine

",non-course
"

Yasushi SAITO


Yasushi Saito(ºØÆ£Ì÷/¤µ¤¤¤È¤¦¤ä¤¹¤·)


I am a second year graduate student at
Department of 
Computer Science and Engineering 
at University of Washington
Seattle, WA 98105. 

I'm currently working
with Brian Bershad on the

SPIN project.

See my address,
pgp key, and
personal info.


 Meta Links 


MetaCrawler
 Yahoo
 
       CSE Desktop Reference
 RFC Index

 Alta Vista
 Lycos
 
     Archie
 Tech Rep Index

 Research Links 

 SPIN Internal Documentation
 Modula 3 info.
 CSE time Schedule.
   I'm surveying hot operating systems.
 Transaction Service a la
       SPIN, aka
       The Qual Project.

 Sightseeing
 Japanese Links
 Random Info

 Javascript apprentice page
 Using Linux to connect CS
       PPP gateway.
 Japanized perl5.002 patch5
 Touch type trainer(with Dvorak lesson texts)


yasushi@cs.washington.edu 

If you want to finger or talk me, try
canvas.cs.washington.edu.
It's my desktop box.


",non-course
"

Oren Zamir's Home Page


Oren Zamir's Home Page




Department of Computer Science and Engineering
University of Washington
Box 352350 
Seattle,
   WA 98195-2350 

Office: 106 Chateau; (206) 616-1844; zamir@cs.washington.edu  
Home: 10501 8th Ave. NE, apt. 331, Seattle WA 98125; (206) 361-1368 
zamir@cs.washington.edu




I am an Israeli  graduate student at the department of Computer
Science and Engineering at the University of Washington. My
undergraduate degree is in physics and mathematics from the Hebrew
University, Jerusalem, Israel.

My interests are in the fields of Artificial Intelligence and Software
Engineering. Currently I'm working on On-line Clustering algorithms
for Internet document retrievals. The basic idea is to help the user
with Internet searches resulting in hundreds of documents. This work
is done as part of the MetaCrawler
 - a parallel Web search service, along with 
Oren
Etzioni and 
Erik Selberg.



My Resume is available here.

Here are some pictures of me doing the things I like most:
Diving in Sinai, Jeep
touring, and skiing.

Here are some pictures from my last Rafting Trip. 

Here are some Interesting Links. 



",non-course
"
No Title


 Jean-Loup Baer, Professor
and Adjunct Professor of Electrical Engineering,
received the Diplome d'Ingénieur in Electrical
Enginering and the Doctorat 3e cycle in Computer Science from the
Université de Grenoble (France) and the Ph.D. from UCLA in 1968.

Prior to joining the University of Washington in 1969,
he was a Research Engineer with the Laboratoire de
Calcul, Université de Grenoble, and a member of the Digital Technology
Group at UCLA (1966-69). His present interests are in parallel and
distributed processing and  computer systems architecture. 
He is author or coauthor of more than 60 papers in these
areas and the author of the textbook ``Computer Systems Architecture''
(Computer Science Press, 1980).

Professor Baer has served as an IEEE Computer Science Distinguished
Visitor, and was an ACM National Lecturer.  He is a Guggenheim Fellow,
an IEEE Fellow,
an editor of the  Journal of Parallel and Distributed Computing,
and of the  Journal of Computer Languages.  He has served as
Program Chairman for the 1977 International Conference on Parallel
Processing, as co-Program Chairman for the 10th International
Symposium on Computer Architecture, and as General co-Chairman of
the 17th International
Symposium on Computer Architecture. He is currently Chair of ACM SIGARCH.
Eighteen  Ph.D. students have completed their dissertation under Professor
Baer's direction. Twelve of them work in industry or research laboratories
and six are in
academia.

Although he has been in the U.S.A. for over 30 years, Dr. Baer has
had no difficulty in retaining his French accent.

 Courses  

 CSE 378
 CSE 590g


 Recent research projects 

 Look under the Computer architecture page. Projects in which I am/was involved are:

 Cache coherence protocols for cluster architectures and improved protocols for single bus  systems.
          Use and performance of  software primitives for clusters (to appear in HPCA-3)
	 Prefetching in uniprocessors, via  hardware   (see also IEEE TC May 95)and comparison
with 
non-blocking caches  (see also ASPLOS-V); prefetching in multiprocessors
(cf. ISCA 94)
	 Impact of speculative execution on I-caches , see 
 Dennis Lee home page and
ISCA 95.
	 Parallel trace-driven simulations: conservative approach (see  also ICPP 95);
 optimistic
approach and their  comparison (see also Distributed Simulation 95)




",non-course
"
Craig Chambers


 Craig Chambers, Assistant Professor, joined the faculty in
1991.  He received his S.B. degree in Computer Science from MIT in
1986 and his Ph.D. in Computer Science from Stanford 1992.

 Chambers's research interests lie in the design and implementation
of advanced programming systems, incorporating expressive programming
languages, efficient implementations, and supportive programming
environments.  He currently is investigating object-oriented languages
and leads the Cecil
and Vortex projects: Cecil is a purely object-oriented language
serving as a vehicle for investigating multi-methods, static typing,
modules, and other features, and Vortex is an optimizing compiler
system for object-oriented languages incorporating intra- and
interprocedural static analyses and profile-guided optimizations, with
front-ends for Cecil, C++, Modula-3, and Java.  Previously, Chambers
was a member of the Self project.

 Chambers also is a member of the SPIN
Project.  SPIN is an extensible operating system microkernel which
supports dynamic adaptation of system interfaces and implementations
under direct application control while still maintaining system
integrity and isolating applications.  SPIN utilizes a dialect of the
Modula-3 language as a pointer-safe kernel extension language.  SPIN
also relies on dynamic
compilation to achieve high performance despite its fine-grained
extensibility.

 If you're from UW, click here
for information on some undergraduate- and graduate-level research
projects in these areas.


Contact Information

Prof. Craig Chambers
Department of Computer Science and Engineering
University of Washington
Box 352350
Seattle, WA  98195-2350
(206) 685-2094; fax: (206) 543-2969
chambers@cs.washington.edu

 

[For mail requiring a street address, use Sieg Hall, Room 114]




Last updated: April 10, 1996.
chambers@cs.washington.edu

",non-course
"Carl Ebeling's home page



 Carl Ebeling


Department of Computer Science and Engineering
 University of
Washington
 Seattle,
Washington, 98195 

Voice: (206) 543-9342;  
FAX: (206) 543-2969;
e-mail:  ebeling@cs.washington.edu 

Office: Sieg Hall, Room 215

Carl Ebeling, Associate Professor, has a B.S. in Physics, Wheaton
College, 1971; an M.S. in Computer Science, Southern Illinois
University, 1976; and a Ph.D. in Computer Science, Carnegie-Mellon
University in 1986. He joined the UW in 1986.
 
Carl Ebeling's research interests fall into two categories: VLSI
architectures and computer-aided design of digital systems. He has
worked on a number of VLSI projects including the Hitech chess
machine, the Apex graphics chip for drawing spline curves and
surfaces, and the Triptych field-programmable gate array. Currently he
is involved in the Chaos project building a multicomputer routing
network. His CAD interests focus on methods for optimizing the
performance of circuits using level-sensitive latches, and placement
and routing algorithms for FPGAs, particularly Triptych.

Teaching

Spring 1996: 
  CSE 467 - Advanced Logic Design
Office Hours

 Monday 2:30-3:20
 Thursday 4:30-5:20

Travel:

April 16-19: FCCM, Napa
May 1-5: IBM, Burlington; Chicago
June 4-7: DAC, Las Vegas


Research Projects



 
Northwest Laboratory for Integrated Systems
 
Chaos Router Project 
 
Triptych:  A New High-Density FPGA Architecture 



 Graduate Students 

 
Soha Hassoun.
 
Neil McKenzie.
 
Darren Cronquist.
 
Paul Franklin.


Amara's Gallery




































Elan's Gallery












ebeling@cs.washington.edu



",non-course
"


Steve Hanks




University of Washington

Department of Computer Science & Engineering



Steve Hanks, Associate Professor

Box 352350 
University of Washington 
Seattle, WA 98195-2350

(206)543-4784



I am on leave



Personal information


Research projects

  
         Probabilistic Planning
  
         Utility Models
 
   Probabilistic temporal reasoning and medical applications
  
         Planning testbeds and empirical evaluation of 
                  agents
 
           The automated travel assistant 


Some recent papers

 
Oren Etzioni, Steve Hanks, Tao Jiang, Richard Karp, Omid Madani, Orli Waarts


Optimal Information Gathering on the Internet with Time and Cost Constraints 

 
To appear, FOCS, 1996.

 
Mike Williamson and Steve Hanks


Flaw Selection Strategies for Value-Directed Planning

 
Proceedings, AIPS96.

 
Steve Hanks, David Madigan, Jonathan Gavrin


Probabilistic Temporal Reasoning with Endogenous Change


Proceedings, UAI95.

 
Craig Boutilier, Tom Dean, Steve Hanks


Planning under Uncertainty: Structural Assumptions and Computational Leverage


Proceedings, European Planning Workshop 1995.


 
Nick Kushmerick, Steve Hanks, Dan Weld


An Algorithm for Probabilistic Planning


TR version of a paper appearing in AI Journal vol 76, 1995.


Denise Draper, Steve Hanks


Localized Partial Evaluation of Belief Networks


Proceedings UAI'94.



Denise Draper, Steve Hanks, Dan Weld


Probabilistic Planning with Information Gathering and Contingent Execution


Proceedings AIPS'94.


Mike Williamson, Steve Hanks


Optimal Planning with a Goal-Directed Utility Model


Proceedings AIPS'94.


Steve Hanks, Martha Pollack, Paul Cohen


Benchmarks, Testbeds, Controlled Experimentation & the Design of Agent
   Architectures


AI Magazine 13(4), 1993.


Some serious links

  Home page for 
            CSE341 Spring 1996.
 
    Uncertainty in AI 1996 Conference Information
     
  
         Uncertainty in AI page 
      
  
         UW AI Group Page
      


Some other links

 Seattle restaurants
 
        Seattle symphony schedule
 Seattle wine
 Opera schedule server
  
    Edita Gruberova fan page!
     

 and some photos!!

 Carlo Maria Giulini discography!
 Yma Sumac information!
 Tennis news


 
hanks@cs.washington.edu (Last Update: 03/01/96)



",non-course
"
No Title


 Alistair Holden, Professor, Professor of Electrical Engineering,
originated in the Highlands of Scotland. He received
his BSc degree from the University of Glasgow and then spent two years with
the British Broadcasting Corporation's Engineering Division as a ``graduate
apprentice''. Most of this was spent in the Research Division. He then spent a 
year at Yale on the ``Edison'' fellowship and got their M Eng degree. His PhD
degree is from the University of Washington with a dissertation on learning
in artificial intelligence. (His interest in AI began while taking a course
from Colin Cherry at the Imperial College in London while with the
BBC).

He is one of those who initiated the computer science program at the
UW at the time when a group of faculty from mostly the math and EE departments
formed a group within the graduate school.

He is currently working in new applications of AI such as knowledge-
based systems, verification of expert systems, integrated symbolic/neural net
methodology, speech understanding and computer-aided design.


",non-course
"


Dick Karp









Richard M. Karp
Professor of
Computer
Science & Engineering, and
Adjunct Professor of
Molecular
Biotechnology

University of
Washington

(206) 543-4226

karp@cs.washington.edu





Awards and Memberships
National Medal of Science, 1996
Babbage Prize, 1995
UC Berkeley University Professor, 1994
ACM Fellow, 1994
ACM Turing Award, 1985
Member, National Academy of Sciences
Member, National Academy of Engineering
Fellow, American Academy of Arts and Sciences
Fellow, American Association for the Advancement of Science
Distinguished Teaching Award, UC Berkeley Academic Senate, 1986
Class of 1939 Chair, UC Berkeley
Lanchester Prize, Operations Research Society of America and Institute for Management Science, 1977
Fulkerson Prize, American Mathematical Society and Mathematical 
Programming Society, 1979
John von Neumann Theory Prize, Operations Research Society of America and Institute for Management Science, 1990
Faculty Research Lecturer, UC Berkeley, 1981-1982
Hermann Weyl Lecturer, Institute for Advanced Study, 1979
John von Neumann Lecturer, Society for Industrial and Applied
Mathematics, 1987
Miller Research Professor, UC Berkeley, 1980-1981
Honorary Doctorates:  Georgetown University, 1992; University of Massachusetts, 1990; Technion, 1989; University of Pennsylvania,
1986
Member, National Advisory Board, Computer Professionals for
Social Responsibility, 1989-present
Member, Board of Governors, Weizmann Institute of Science, 1989-present
Member, Board of Trustees, International Computer Science
Institute, 1988-present

Selected Publications
""Combinatorics, Complexity and Randomness"" (Turing
Award Lecture), Communications of the ACM, Vol. 29
(1986), pp. 98-111.

""Constructing a Perfect Matching in Random NCS""
(with E. Upfal and A. Wigderson), Combinatorica, Vol. 6
(1986), pp. 35-48.

""Probabilistic Analysis of Partitioning Algorithms for the Traveling-Salesman Problem in the Plane,"" Mathematics of
Operations Research, Vol. 2, No. 3 (1977), pp. 209-244.

""Theoretical Improvements in Algorithmic Efficiency for
Network Flow Problems"" (with J. Edmonds), Journal of the
ACM, Vol. 18 (1972), pp. 264-284.

""Reducibility among Combinatorial Problems,""
in Complexity of Computer Computations, Plenum Press,
1972.

""The Traveling-Salesman Problem and Minimum Spanning
Trees:  Part II"" (with M. Held), Mathematical Programming,
Vol. 1 (1971), pp. 6-25.




karp@cs.washington.edu


",non-course
"


Ed Lazowska




""A
Half Century of Exponential
Progress in Information Technology:  Who, What, When, Where,
Why, and How"" (1996 University of Washington Annual
Faculty Lecture)


Vice
President Gore's speech at the ENIAC 50th
anniversary celebration:  ""[Congress] talks like George
Jetson.  But they support policies more appropriate for
Fred Flintstone.""


University
of California at Berkeley invents Chinese cooking!


Nathan
Myhrvold joins
Ed
Lazowska and the
UW
CSE faculty on a trip down memory lane




Ed Lazowska




Ed Lazowska is Professor and Chair of the

Department of Computer Science & Engineering
at the

University of Washington.


Lazowska received his A.B. from 
Brown University in 1972, and has been at the University
of Washington since receiving his Ph.D. from the

University of Toronto in 1977.
His research concerns computer systems and computer system
performance.  Recent specific topics have included parallel
discrete-event simulation, scheduling policies for multiprocessors,
kernel structures to support high-performance parallel computing,
programming systems for networks of multiprocessors, effective
program performance monitoring tools for parallel systems, the
interaction of architecture and operating system design, hardware
and software techniques for high performance communication, and,
most recently, operating system and programming system support that
exploits wide-address architectures

(Opal).  Almost all of this work has actually
been carried out by terrific students, and has been supervised
jointly with

Hank Levy or

John Zahorjan; Lazowska mostly
wears
ties,
pushes paper, and racks up frequent flier miles.
(The graduate students seem to have picked up on
this (1.7Mb
Quicktime).)  He
also hosts lots of visitors, a surprising number of whom have
funny
noses.


Lazowska is a member of the Board of Directors of the
 Computing Research
Association (CRA's members include essentially all
graduate departments and industrial research laboratories
in the field), and Chair of

CRA's Government Affairs Committee.
He serves on the National Science Foundation's Advisory
Committee for 
Computer and Information Science and
Engineering,
and on the National Research Council's
Computer
Science and Telecommunications Board.
He is a member of the 6-person Technical Advisory Board for
Microsoft Research,
of the 4-person
National
Semiconductor Computer Science & Systems Academic
Advisory Council,
of the Board of Directors of
Data I/O Corporation,
and of the Scientific Advisory Board for
Cable & Howse Ventures' Cascadia Fund.
He belongs to the standing advisory committees
for the
Department of EECS
at UC Berkeley and
the Departments of Computer Science at
Stanford University,
the University
of Virginia,
and the Hong
Kong University of Science & Technology,
and is a member of ACM's
A.M.
Turing Award selection committee.
He has just completed service on a 12-person National Research Council
panel reviewing the multi-agency

High Performance Computing
and Communications program
(the ""Brooks/Sutherland Committee""), and
has recently served as Chair of the Committee of Examiners
for the Graduate Record Examinations Board Computer Science Test,
Chair of ACM SIGMETRICS (the Association for Computing Machinery's
Special Interest Group concerned with computer system performance),
Chair of the ACM Software Systems Award Committee, Program Chair
of the 13th ACM Symposium on Operating Systems Principles, and
editor of IEEE Transactions on Computers.


At the University of Washington, in addition to serving
as Chair of the
Department of Computer Science & Engineering,
Lazowska is Chair of the University Advisory Committee on
Academic Technology.
He has recently served as a member of the
Committee on the Deanship of the College of Arts
and Sciences, as Chair of the review committee for
the Ph.D. program in Molecular Biotechnology, and as a
member of the performance review committee for the Dean
of Engineering.  He was selected to deliver the
1996
University of Washington Annual Faculty Lecture.


Lazowska is
a Fellow
of the Association
for Computing Machinery and of the
Institute of Electrical and
Electronics Engineers.
Seventeen
Ph.D.
students and 21 M.S. students
have completed degrees working with him.




Miscellaneous links:

An integrated
overview of the University of Washington, the
Department, and the region.  There's also a

Persuasion Player version of it (250K), intended for
local consumption.
""The
Impact of a Research University:  An Information Technology Perspective""
New UW
CSE professional Masters program.
Persuasion Player
Top
Ten Reasons to Major in CSE at UW (115K).
Information on the EE/CSE
Building project.


Abbreviated CV

Computing
Research:  Driving Information
Technology and the Information Industry Forward
Massy-Goldman
report alleging 50% CSE
Ph.D. over-production to be re-issued due to flawed data
""Median
Years to Ph.D."" in new Conference Board
study of doctorate programs is not what you think!

""A
Half Century of Exponential
Progress in Information Technology:  Who, What, When, Where,
Why, and How"" (1996 University of Washington Annual
Faculty Lecture)
""Driver's
Ed for the Information Highway"" (University of Washington ""Saturday
Seminar,"" November 1995)
Testimony
to the House
Appropriations Committee concerning NSF, April 1995
Testimony
to the House Science Committee concerning HPCC, October 1995
Vice
President Gore's speech at the ENIAC 50th
anniversary celebration, February 1996

Some interesting
home pages that I sometimes use for demo purposes.
Ode
to T III (Executive Vice President Tallman Trask III departs
for Duke University)
University
of California at Berkeley invents Chinese cooking!
Nathan
Myhrvold joins
Ed
Lazowska and the
UW
CSE faculty on a trip down memory lane


Lazowska/Downs family home page
Directions 
to my house
Shilshole Aquatic Club
(SAC) home page
Recently-discovered
review of my now-10th-grade son's 6th grade poetry




finger lazowska@cs.washington.edu for schedule
information.

CU-SeeMe:  office 128.95.2.223, reflector 128.95.2.51, home 128.95.1.129

This page:  http://www.cs.washington.edu/homes/lazowska/






lazowska@cs.washington.edu


",non-course
"
No Title


 Alan Shaw, Professor, graduated with a Bachelor's
degree in Engineering Physics from the University of Toronto, a
Master's in Mathematics from Stanford University, and a Ph.D. in
Computer Science from Stanford in 1968.  In addition to faculty
appointments at the University of Washington starting in 1971, he has
been an Assistant Professor of Computer Science at Cornell University,
Visiting Professor and Fulbright Research Scholar at the University of Paris, 
Guest Professor in Informatics at ETH Zurich, Research Associate at
the Stanford Linear Accelerator Center, and Systems Engineer for the
IBM Corporation.  His current research interests are in 
real-time systems and software specification methods.

Professor Shaw's publications
include a textbook on operating systems, a book on software
engineering, an introductory computer science text, and
an edited book on document preparation systems. He has served as a member
of the ACM Editorial Committee, a member of the Computer Science
Screening Committee for Fulbright awards, and an Associate
Editor of the journal  Real-Time Systems, and is an Associate  
Editor of the  IEEE Transactions on Software Engineering, among other 
things.

He has supervised many M.S. theses and projects, and fifteen Ph.D. 
dissertations, including a 1982 ACM Distinguished Dissertation. 
About half of his former Ph.D.  students have academic positions 
and the other half work for a living .

Professor Shaw's hobbies include good food, trumpet, hiking, biking,
hobbies, and tennis.


",non-course
"
No Title


 Lawrence Snyder, Professor, received a bachelor's
degree from the University of Iowa in mathematics and economics, and
in 1973 received a Ph.D. from Carnegie Mellon University in computer
science.  He was a visiting scholar at the University of Washington in
1979-80 and joined the faculty permanently in 1983 after serving on
the faculties of Yale and Purdue.  During 1987-88 he was a visiting scholar
at MIT and Harvard.

Professor Snyder's research has ranged from proofs of the
undecidability of properties of programs to the design and development
of a 32 bit single chip (CMOS) microprocessor, the Quarter Horse.  He
created the Configurable Highly Parallel (CHiP) architecture, the
Poker Parallel Programming Environment and is co-inventor of Chaotic
Routing.  Following the completion of the Blue CHiP Project he is now
Principal Investigator for the Orca Project and  the NWLIS.

Professor Snyder is an associate editor of the ``Journal of Computer
and Systems Sciences,'' parallel systems editor of the ``Journal of
the ACM,'' and area editor for ""IEEE Transactions on Parallel and
Distributed Systems.""  He has served on the National Science Foundation
Advisory Committee of the Division of Computer Research 
and participates on numerous national advisory
committees on future research directions in parallel computation and
computer science policy.  He served on the ACM Distinguished Doctoral
Dissertation Award selection committee, chairing it in 1988.  In 1989
he was program chair for the first Symposium on Parallel Algorithms
and Architectures.

In addition to the dozen students who have completed doctoral degrees
under his direction, Professor Snyder has guided numerous masters and senior
projects.


",non-course
"
Arun Somani



 Arun Somani, Professor, Professor 
of Electrical Engineering, earned his MSEE and Ph.D degrees 
in electrical engineering from the McGill University, 
Montreal, Canada,  in 1983 and 1985, respectively. 
Prior to that, he worked as Scientific Officer for 
Govt. of India, New Delhi from 1974 to 1982. During this 
period he designed and developed an anti-submarine warfare 
system for Indian Navy.

Professor Somani's research interests are in the area of
fault tolerant computing, interconnection networks, computer 
architecture, parallel computer systems, and parallel 
algorithms. Currently he is involved in three major projects:
i) high integrity system design addressing the issues related to
cache memory design in redundant computer systems and evaluation 
tools for such systems; ii) congestion control and fault 
tolerance in broadband networks; and iii) development of 
``Proteus'' architecture, a multiprocessor system for 
automated classification of objects based on generalized
enhanced hypercube reconfigurable interconnection network 
exploring coarse grain parallelism.

He likes to cook Indian food, hiking, play bridge, table tennis,
and tennis.

 For more information 

  DPCNL 
  PROTEUS 


",non-course
"
Steven Tanimoto's Home Page


 Steven Tanimoto, Professor of Computer Science and Engineering
(and Adjunct Professor of Electrical
Engineering) received the A.B. degree from
Harvard in 1971 and the Ph.D. from Princeton in 1975.  He joined the
University of Washington faculty in 1977 after two years teaching at
the University of Connecticut.  In 1982-83 he was a Visiting Professor
at the Institut de Programmation, University of Paris-VI in France and
a visiting scholar at Linköping University, Sweden.  Since 1981 he has
also served as an adjunct member of the Department of Electrical
Engineering.  In 1989-90 he was a Visiting Scientist at
Kobe University (Japan), Thinking Machines Corporation (Cambridge,
Massachusetts) and Linköping University, Sweden.  In June of 1989
and again in June of 1992 he was a visiting scientist at the
Institut de Research et d'Enseignement Superieur Aux Techniques
de l'Electronique (IRESTE) of the University of Nantes, France.
 In addition to assisting with various conferences, he has
recently set up a home page for

IMAGE'COM 96, which is a conference devoted to image processing
and communication.  The conference will take place in Bordeaux, France,
20-24 May, 1996.

Professor Tanimoto's research interests include computer analysis of
images (particularly using parallel processors), educational technology,
visual programming, and  artificial intelligence.  He currently
directs an NSF-sponsored project, 

Mathematics Experiences Through
Image Processing
 whose objective is to develop personal computer software
that motivates 8-th grade students to study mathematics.

He has written or coauthored over 70 papers, co-edited the
book ``Structured Computer Vision''; he is the author of a 
textbook entitled ``The Elements of Artificial Intelligence: An Introduction
Using LISP'' published in 1987
(with Common Lisp editions in 1990 and 1995) and its accompanying

software.
He is currently working on a book on the subject of
parallel computation in image processing.

Tanimoto organized the 1992 IEEE Computer Society International
Workshop on Visual Languages, held in Seattle, and he served
as General Chair for the 1993 meeting in Bergen, Norway.
He also served as program chair for the 1994 International Conference
on Pattern Recognition Subconference on Parallel Computation and
as the co-program chair for the 1994 IEEE Computer Society Conference
on Computer Vision and Pattern Recognition.
He has served on the program
committees for numerous conferences on image processing and pattern
recognition and was general chairman of the IEEE Computer Society
Workshop on Computer Architecture for Pattern Analysis and Machine
Intelligence in 1987.
He currently serves on the steering committee for the
IEEE Symposia
on Visual Languages.
He has served on the editorial
boards for the journals ``Pattern Recognition'',
``Journal of Visual Languages and Computing'',
and ``CVGIP: Image Understanding''.
He served as the editor-in-chief of ``IEEE
Transactions on Pattern Analysis and Machine Intelligence''
from 1986 to 1990.  In addition to these research-related activities,
Tanimoto served as Chair of the College of Engineering
Educational Policy Committee 1991-92, as Vice Chair of 
College Council 1992-93 and as its Chair in 1993-94.
He was elected a Fellow of the IEEE in 1995.

Outside of computer science, Steve Tanimoto enjoys playing jazz and
classical piano music.


",non-course
"
No Title


 Paul Young, Professor, is a graduate
of Antioch College and received his Ph.D. from M.I.T. in 1963.  He
joined the University of Washington in 1983, after seventeen years at
Purdue University, where he was one of the early faculty members in
perhaps the first computer science department in the United States.
He has also been a National Science Foundation Postdoctoral Fellow at
Stanford, served on the faculty of Reed College, served briefly as
Chairman of the Computing and Information Sciences Department at the
University of New Mexico, and has twice taught as a Visiting Professor
in the Computer Sciences Division of the University of California,
Berkeley.  In 1991, he became Associate Dean for Research and
 Facilities in the College of Engineering.

  His research interests are in theoretical computer science,
with an emphasis on questions of computational complexity in the
general theory of algorithms and on connections with mathematical
logic.  He is author or coauthor of some 30 papers in this area and is
coauthor of a graduate textbook on the general theory of algorithms.

 He has served three times on the program committee for ACM's Symposium
on the Theory of Computing, and he has served on both the executive
committee and the nominating committee for ACM's Special Interest
Group on the Theory of Computing (SIGACT).  He has also been Chairman
of the program committee for the IEEE Computer Society's Annual
Symposium on the Foundations of Computer Science (FOCS), and he has
served as both vice chairman and chairman of the Computer Society's
Technical Committee on the Mathematical Foundations of Computing.
He has also served on the program committee, and as chair of the program
committee for the structural complexity theory conference.
In 1977-80 he served on the National Science Foundation's Advisory
Subcommittee for Computer Science, and he served as chairman of this
Committee in 1979-80.  He served as chairman of
the Computing Research Association in 1989-91.

 Professor Young has served on editorial boards for special issues of
``Information and Control'' and of ``Annals of the History of
Computing''.  He currently serves on the editorial boards of
``Theoretical Computer Science'', the ``Notre Dame Journal of Formal
Logic'', and the ``Journal of Computing and System Science''.

 Eleven students have completed their doctoral dissertations under
Professor Young's direction.  Several of these have gone on to do
postdoctoral work at M.I.T., at Cornell, and at the University of
California, Berkeley.  Eight currently hold faculty positions at a
variety of universities, while one has chosen industrial employment.

 Professor Young's leather motorcycle jacket reads ``P =? NP'' rather
than ``Mom''.


",non-course
"
No Title


 John Zahorjan, Professor, graduated from
Brown University in 1975 and received a Ph.D. from the University of
Toronto in 1980.  He received an NSF Presidential Young Investigator
Award in 1984.

His primary research interests are in the areas of scheduling of parallel
systems, runtime support for parallel computations, and applications support
for mobile computing.  
One current focus is on scheduling policies to support ""continuous media""
applications, such as those involving real-time audio and video, where the
goal is to provide a policy and system interface that allows applications to
respond easily to changes in system load.
Other active research topics include techniques for runtime parallelization
of code written in a sequential language, support for programs exhibiting both
control and data parallelism,
and programming constructs to aid in development of applications intended for
mobile computing platforms.

Dr. Zahorjan is on the Editorial Boards of  IEEE Transactions
on Software Engineering and  ACM Computing Surveys.


",non-course
"

Mathematics Experiences Through Image Processing (METIP)





 
Mathematics Experiences Through Image Processing (METIP)
Project Director: Steven Tanimoto


Department of Computer Science & Engineering, 
University of Washington, Box 352350, 
Seattle, WA 98195-2350 USA



A major educational problem in United States and some other countries
is that 
students in grades K-12 lose interest in mathematics and science
as they progress through school.
Students often complain that
mathematics is difficult and that they don't see much use for it past simple
arithmetic.  In response to these concerns, the National Council of
Teachers of Mathematics has identified a number of features that the grades
5-8 curriculum should include in order to help motivate students to stay
interested:


 favor conceptual learning over rote operations;
 emphasize practical uses of mathematics;
 encourage discussions and group learning; and
 encourage exploratory, open-ended learning.


The goal of the METIP project is to use 
digital image processing to help meet these
objectives.  In particular, we have developed a series of applications
designed to allow students to manipulate digitized images of their choice.
These materials are intended to be used in enrichment activities
 rather than part of a
standard classroom curriculum.  Teachers can play various roles with
these activities; for example, they can catalyze student learning by
leading discussions of the
concepts students have explored on the computer.   


The METIP Project currently has a number of programs that allow students to
explore mathematics with image processing:


 The Pixel Calculator  (Click here to order your 
     free copy today!) 
 The Image Warper (Click here to order your free copy today!)
 The Transform Programmer (Click here to order your free copy today!)


These applications were developed primarily for 386/486/Pentium based PC's
running Microsoft Windows.  One application, the Pixel Calculator, is also
available for the Apple Macintosh.  





Here is a list of all the people working on the
METIP project.  


A closely related project we are involved with is the study of

multiplayer educational activities.

The METIP project is working to
integrate the use of the WWW into its activities.
Some ideas are described in Prospects for
the Direct Use of Distributed Image Databases in Educational Image Processing. 


Currently the project is collecting the experiences of users with its
XFORM image transformation software.  If you have done something
fun or useful with the software please let us know.
We are putting the current version of its documentation online.
Here is a link to it..  A set of little demonstrations for XFORM has been
put together by graduate students who took a 

seminar during the winter of 1996..  

The XFORM programming environment, integrated with
a subset of Common Lisp, offers the technical essentials for a new
approach to learning and teaching computer programming --- the fundamental
attraction of using this approach is that students learn to program the
computer in the pursuit of creating neat visual effects with digital
images portraying people or things of interest to them.
If you have successfully installed the software and would like to discuss
teaching programming this way, please contact us.


Links to some related projects are listed here.


METIP is supported in part by the National Science Foundation under
grant number MDR-9155709. 


 

  bricker@cs.washington.edu or tanimoto@cs.washington.edu 
  Last modified: Tuesday, 6 February 1996.


",non-course
"

 University of Washington: Research in Mobile Ubiquitous Computing 

Mobile Computing at the University of Washington

Here's an overview of mobile computing
research here at UW.

 Projects 

 Mobisaic
 An information system for a mobile and wireless computing environment
 Wit
 A system infrastructure for mobile handheld computing
 Task Graph Manager
 An application infrastructure for coping with resource variability.


 Papers 

A survey paper describing the fundamental challenges in this field.
A Programming Methodology for Disconnected Operation
Distributed Transactions in a Mobile
Computing System

Contacts:


Prof. Brian Bershad

Prof. Gaetano Borriello

Marc E. Fiuczynski

George Forman

Prof. Hank Levy

Geoff Voelker

Terri Watson

Prof. John Zahorjan



 Last updated Mon 15 Jan 1996  
  
forman@cs.washington.edu
 

",non-course
"
UW Cecil/Vortex Project


UW Cecil/Vortex Project

Welcome to the home page for the Cecil and Vortex projects at UW CSE.  We conduct research on programming language design and implementation, with an emphasis on these issues for object-oriented languages.
Cecil is a purely object-oriented language intended to support rapid
construction of high-quality, extensible software.  Cecil incorporates
multi-methods, a simple prototype-based object model, a mechanism to
support a structured form of computed inheritance, module-based
encapsulation, and a flexible static type system which allows
statically- and dynamically-typed code to mix freely.


Vortex is an optimizing compiler infrastructure for
object-oriented and other high-level languages.  It targets both pure
object-oriented languages like Cecil and hybrid object-oriented
languages like C++, Modula-3, and Java.  Vortex currently incorporates
high-level optimizations such as static class analysis, class hierachy
analysis, profile-guided receiver class prediction, profile-guided
selective procedure specialization, intraprocedural message splitting,
automatic inlining, and static closure analyses.  It also includes a
collection of standard intraprocedural analyses such as common
subexpression elimination and dead assignment elimination.  The Vortex
compiler is written entirely in Cecil.



An initial beta release of the Cecil/Vortex system is currently
available for SPARCs running either SunOS 4 or SunOS 5 (Solaris).
Send mail to cecil-interest-request with a message body of subscribe if you'd like to subscribe to a list of
interested parties and get more information on how to obtain the
Beta release.


We've recently finished a technical report that describes much of our implementation research.

More Information


 Project Overview
 A more detailed overview of the project's goals and direction.  A postscript version is also available.


 Project members
 Current and past project members

 Papers
 Papers we've written


 Sample Projects
 A list of some sample research projects (available to people from UW
CSE)


 Internal Documentation
 Project internal documentation (available to people from UW CSE)


 Support
 This page lists some of the sources of support for our project


 Some related projects
 Pointers to a few other object-oriented language implementation projects






Last updated August 25, 1996. 

cecil@cs.washington.edu


",non-course
"

GRAIL: Graphics and Imaging Laboratory






Welcome to the home page of GRAIL, the Graphics and Imaging Laboratory of the
University of Washington's Department of Computer Science and Engineering.








Information




People
Courses
Research Projects
Publications
Theses
Software and Data
Cool Images







       Our Neighborhood
                  





		Department of Computer Science
		and Engineering

		University of Washington

        Seattle







Local Interest




GRAIL disk usage policy



  





Comments to 
		mtwong@cs.washington.edu 




23 July 1996







",non-course
"

The Chaotic Routing Project


 
 The Chaotic Routing Project


Computer Science & Engineering Department 
University of Washington,
     Box 352350 
Seattle, WA 98195-2350 USA


 



 Chaos is a friend of mine.
 -Bob Dylan 



 

  Chaotic People

All sorts of  people work on the Chaotic Routing project.



   Research Papers and Technical Reports 

A repository of all of the research papers
and technical reports  of the Chaotic
Routing project is available.

  Chaos Router Chip 

The 
Chaos Router Chip  is an implementation of the chaos routing algorithm in hardware.  It 
has been built and tested in 1.2 micron CMOS, and redesigned in a 0.8 micron process for 
better performance.

  Simulator 

The 
Chaos Router Simulator  is a powerful simulator which can simulate all
sorts of networks and routing algorithms.  It includes a very nice  graphical
front end!


  Standards for Presentation of Results 

At  PCRCW '94,  we discussed the presentation
of simulation results for routing algorithms.  We were able to come up
with some  guidelines
 for presentation of results.

  Other Research Groups 

We're building a list of all  research groups  that
have webs describing research in routing and/or interconnection networks.

  Parallel Computer Routing and Communication Workshop (PCRCW) '94 

PCRCW '94 was held at the Univeristy of Washington in Seattle in May
1994.  Proceedings are available now.








The University of Washington CSE home Page 


kwb@cs.washington.edu


",non-course
"


The Chinook Project 




The Chinook Project 




/shiNOOK/, n. 

""chinook salmon"" a large salmon, Oncorhynchus tshawytscha,
of the N. Pacific. 
Amer. Ind. name of a tribe 
a warm dry wind which blows east of the Rocky Mountains. 
a warm wet southerly wind west of the Rocky Mountains. 
a rare American sled dog

a hardware-software co-synthesis CAD tool
for real-time embedded systems. 


Chinook is a hardware-software co-synthesis CAD
tool for embedded systems. It is designed for control dominated, reactive
systems under timing constraints. Chinook maps a behavioral description
to the user's target architecture, by filling in all the details needed
to build the complete system. This enables designers to make informed design
decisions at the high level early in the design cycle, rather than reiterate
after having worked out all the low level details. Retargetability will
not only make the designs more maintainable but also enables the designer
to take advantage of new technologies, instead of being tied down by legacy
code.
Chinook is currently under active development in a new generation. Currently
we are actively working on software architecture synthesis, interprocessor
communication synthesis, and efficient and accurate co-simulation. More
details will become available shortly.
Chinook is characterized as follows. It meets timing constraints, rather
than trying to maximize average performance or utilization. It assumes
manual partitioning, because we believe the issues are too intricate
and sometimes not even technical. We want the designers to evaluate different
architectures, rather than forcing a single fixed Processor-Bus-ASIC
architecture. We synthesize software architectures rather than rely on
off the shelf real-time kernels because they discourage retargeting. 
The first version of the Chinook co-synthesis tool was operational in
November 1993. ``Version roe'' was shown
at DAC (Design Automation Conference) in San Diego in June 1994. Its main
features include automatic connection between the processor and peripheral
devices, generation of sequential code from a concurrent description, and
synthesizing device drivers. Its inputs Verilog and outputs a hardware
netlist needed to connect the hardware components together and the software
program to run on the processor. The main topics include the interfacing
problem between hardware and software components, scheduling under timing
constraints, and partitioning of functionality.
An improved version was demonstrated at the NATO summer school on HW/SW
CodeDesign, in Tremezzo, Italy June 19-30, 1995. It incorporated several
more interface synthesis techniques, including memory-mapped I/O, more
efficient code generation, and a new simulator. 
Chinookers
Faculty

Gaetano Borriello


Graduate students 

Pai Chou 
Ross Ortega

Ken Hines

Ian MacDuff 

Recent Ph.D.'s

Elizabeth A. Walkup

Scott Hauck,

Henrik Hulgaard


Staff

Larry McMurchie


List of Papers
Chinook sponsors

ARPA under contract N00014-J-91-4041 
National Science Foundation under Grant MIP-8858782 
National Science Graduate Fellowship (Walkup) 
Patricia Roberts Harris Fellowship (Ortega) 
GTE Graduate Fellowship (Chou) 

Embedded Links
University
of Washington
Last updated Tue Nov 12 06:34:47 PDT 1996 



",non-course
"

Emerald


 The Emerald Project



Ideally, the development phase of a new FPGA architecture would make
use of a reliable set of mapping tools to produce accurate performance
evaluations of proposed designs.  Unfortunately, given the quick
production time frames faced by most developers, tool construction is
often postponed until after many architectural features have been
frozen.  To satisfy the need for fast tool prototyping, we have
designed Emerald, a powerful architecture-driven system for quick
development of FPGA tools.  At its heart Emerald provides the basic
features needed in all FPGA systems -- logic block analysis, synthesis
and technology mapping, global placement and partitioning, and
detailed placement and routing.  Its CAD environment provides an
efficient way to thoroughly specify an FPGA's routing and logic block
architectures, as well as architecture-specific metrics to tailor
placement and routing.  Moreover, Emerald's parameterized schematic
specifications allow architectural variations to be quickly captured
and evaluated.  


Emerald Publications 
 Any documents contained in this page are included by
the contributing authors as a means to ensure timely dissemination of
scholarly and technical work on a non-commercial basis.  Copyright and
all rights therein are maintained by the authors or by other copyright
holders, notwithstanding that they have offered their works here
electronically.  It is understood that all persons copying this
information will adhere to the terms and constraints invoked by each
author's copyright.  These works may not be reposted without the
explicit permission of the copyright holder.



The Definitive Emerald Paper
 Darren C. Cronquist and Larry McMurchie.

""Emerald - An Architecture-Driven Tool Compiler for FPGAs"",
To appear in Proceedings of the 1996 ACM/SIGDA Fourth International 
Symposium on Field-Programmable Gate Arrays  , February 1996.

The Router used in Emerald
Larry McMurchie and Carl Ebeling, 

""PathFinder: A Negotiation-Based
Performance-Driven Router for FPGAs"",
Proceedings of the 1995 ACM
  Third International Symposium on Field-Programmable Gate Arrays
Aided Design ,  pp. 111-117, February 1995.


Researchers

  Darren Cronquist
  Carl Ebeling
  Larry McMurchie


",non-course
"

 Northwest Laboratory for Integrated Systems





 
 Northwest Laboratory for Integrated Systems
 




     Department of Computer Science & Engineering 
University of Washington,
     Box 352350 
Seattle, WA 98195-2350 USA












The Department of Computer Science and Engineering at the University of 
Washington has been engaged in Very Large Scale Integration (VLSI) and 
Computer-Aided Design (CAD) research, development, and education since 
the late 1970s.  Today, the Northwest Laboratory for Integrated Systems 
is the focus of a wide variety of VLSI architectures, embedded sytems,
and CAD research.








Current Research Projects


Asynchronous Circuits and Verification




Time Separation of Events:
	Specification, synthesis, and verification of timed asynchronous
	circuits.


	Asynchronous Circuits:
 Survey of current asynchronous design methodologies, as
	well as the first FPGA for asynchronous circuits.





FPGAs and Rapid-Prototyping





Triptych/Montage FPGA Architectures:
	Development of the Triptych and Montage FPGA 
	architectures, architectures with improved densities over current 
	commercial FPGAs.



Multi-FPGA Systems & Rapid-Prototyping:
	Development of the Springbok Rapid-Prototyping System for
	Board-Level Designs, as well as partitioning, pin assignment,
	and routing topology work for general multi-FPGA systems.



Emerald - An Architecture-Adaptive Toolset for FPGAs:
	A complete set of mapping, placement and routing tools
can be generated automatically from a description of an FPGA
architecture.  Architecture-specific metrics can be incorporated
into the various tools to improve the results.





Embedded Systems




The Chinook Project:
	A Hardware/Software Co-design, Co-synthesis, and Co-simulation
	system for embedded applications.






Performance Optimization of Synchronous Circuits




Retiming Level-Clocked Circuits:
	Efficient algorithms for retiming circuits that use
level-sensitive latches to improve performance, reduce cost, and
increase tolerance to clock skew.



Architectural Retiming:
	Methods for improving the performance of synchronous
circuits that have latency or feedback contraints.




Network Router
The Chaotic
Routing Project 





Self-Tuned Systems


Self-tuned systems are directed by Ted Kehl



Previous Research Projects

 
 Gemini
 Validating layout by comparing the specification circuit to the
	implemented circuit.
 

MacTester
 A low-cost digital functional tester for chips and circuits
	with TTL or CMOS voltage levels.




",non-course
"

Software Safety at the University of Washington








      Software is playing an increasingly important role in systems such
      as nuclear reactors, aircraft, defence and space systems, chemical
      plants, and medical equipment.  Because of the consequences of a
      malfunction, these safety-critical systems must pass rigorous tests
      and reviews before they may be used.  Although system safety engineering
      techniques have existed for decades, most do not apply to systems that
      contain digital computers and software. 

      The goal of the University of Washington Safety Project is to develop
      a theoretical foundation for safety and a methodology for building
      safety-critical systems built upon that foundation.  
      In  Safeware: System Safety and
      Computers, Nancy Leveson summarizes the issues involved and
      lays the foundation for the methodology.  We are now working on safety 
      analysis techniques to support the methodology and a set of
      prototype tools to be used to validate the specification and analysis 
      techniques. 






University of Washington | 
      UW Computer Science
UW Software Engineering |
      Other Safety Links



",non-course
"

The Internet Softbot




Internet Softbot



The Softbot was one of the  5
finalists  in the 1995  Discover
Awards for Technological Innovation in Computer Software.




 Building autonomous agents that interact with real-world software
environments such as operating systems or databases is a pragmatically
convenient yet intellectually challenging substrate for AI research.
To support this claim, we are utilizing planning and machine-learning
techniques to develop an Internet softbot (software robot), a
customizable and (moderately) intelligent assistant for Internet
access.  The softbot accepts goals in a high-level language, generates
and executes plans to achieve these goals, and learns from its
experience.  The softbot enables a human user to state  what 
he or she wants accomplished. The softbot disambiguates the request
and dynamically determines  how  and  where  to satisfy
it.  The softbot uses a UNIX shell and the World-Wide Web to interact
with a wide range of internet resources.

  Take a tour of the softbot's
graphical user interface.

Principal Investigators: 
Oren Etzioni, 
Daniel Weld.




 Also, check out the 
MetaCrawler Softbot --- a fielded Web service that enables you to
search multiple Web Indices in parallel, and provides sophisticated
pruning options.  Try it!


 For further information, contact:  Oren Etzioni
(etzioni@cs.washington.edu) 


An accessible introduction to the Softbot project can be found here:

 A Softbot-Based Interface to the Internet.
 CACM, July 1994.

Methodological motivation for the project can be found here:
 Intelligence without Robots (A Reply to Brooks).
 AI Magazine, December 1993.


Technical softbot papers can be found 
here.

A cartoon
representation of the Internet softbot taken from the L.G.
Blanchard article that appeared in the December 1994 issue of
Columns, the University of Washington alumni magazine.


The softbots research group is currently:

Developing a graphical user interface to
the softbot to allow the user to easily specify high level goals.

Extending and maintaining the XII
planner

(Keith Golden).


 Working on graphical specification of search control

(Keith Golden).

 Implementing an advanced plan space browser to debug planner control 
(Dave Christianson).

 Comparing rule-based versus procedural search control (Sujay Parekh)

 ILA
learns how to use information resources on the net 

 Designing a protocol for multi-softbot collaboration and negotiation 
(Ying Sun).

 Experimenting on reactive system in software domain
(C. T. Kwok and T.J. Goan).
 Building an optimized agent Ingram for information gathering reactive system on the Internet.
(C. T. Kwok).



    The Softbot-hackers info web (local access only)








 

    Back to AI Home Page







 

    Back to CSE Home Page


Mike Perkowitz (map@cs.washington.edu)


",non-course
"

SPIN


spin@cs.washington.edu




 The SPIN Operating System

SPIN is an extensible operating system kernel that
supports the dynamic adaptation of system interfaces and
implementations through direct application control, while still
maintaining system integrity and inter-application isolation.

SPIN allows applications to load code into the kernel at
runtime. Because it runs in the kernel, this extension code can access
hardware and other operating systems services with with almost no
overhead (basically a procedure call), and data can be passed by
reference, rather than copied.  The SPIN kernel itself provides
a core set of interfaces and capabilities to basic resources.  These
are used by collections of extensions to implement general system
services such as address spaces, IPC, threads, and networking.  All
extension code (and most of the kernel) is written in the typesafe language Modula-3. The property of
typesafety prevents extensions from crashing the system by attempting
to manipulate arbitrary pieces of code or data. 

SPIN runs on DEC Alpha workstations. We're using it to write
both specialized applications such as network video systems, as well
as for supporting general purpose UNIX programs.


You can connect to a machine
running SPIN with the in-kernel SPIN web server 
 here.

 Quick Results 

This structure allows programs to extend operating system services with
low overhead. For example, with SPIN running on a 133 MHz Alpha,
an application can handle and recover from a page fault in 29 microseconds.
It takes 22 microseconds to create a new thread of control, execute
it, terminate, and synchronize with its termination (fork/join).  A protected
procedure call to another extension or to a kernel function takes .13
microseconds. A cross-machine RPC (application to application) over
ethernet takes under 600 microseconds; over ATM (on really old
adapters) it takes less than 450 microseconds. The same  operations
under Mach or DEC UNIX take up to 30 times longer on the same
hardware.  Time them yourself (or see our benchmarks page and save
yourself the effort). 

 Recent reports and papers 


 
Dynamic Binding for Extensible Operating Systems 
 An invocation mechanism which provides flexible, efficient, and
simple way of integrating extensions with an executing system. 
Appeared in the 2nd OSDI.


 
Extensibility, Safety and Performance in the SPIN Operating System
 A design, implementation and performance paper. Appeared in the 15th SOSP.


 An Extensible Protocol Architecture for
Application-Specific Networking
 A design, implementation and performance paper.  Appeared in 1996
     Usenix Winter Conference. 

 
Writing an Operating System Using Modula-3
 Describes our experiences using Modula-3 to build a high
     performance extensible system. Makes clear the distinction between a
     language and its implementation. 

 
Language Support for Extensible Operating Systems
 We've been pretty happy with M3, but we've had to deal with a few
     shortcomings in order to use the language in a safe extensible
     operating system. This paper describes how we've addressed those
     shortcomings. 

 
Safe Dynamic Linking in an Extensible Operating System
 Describes the dynamic linker we use to load code into the kernel.
     Key point is the ability to create and manage linkable namespaces that
     describe interfaces and collections of interfaces.

 
Language and Runtime Support for Dynamic Interposition of System Code
 Describes the kernel's internal communication and extension
     facilities. Shows use of dynamic code generation to improve the
     performance of a critical kernel service. 


 More Information 


 Dynamic compilation 
 Waiting until run time to compile code.

 Paper trail
 Project Reports, Talks. Papers, etc. 

 Project members
 Who we are.

 Benchmarks
 Interested in the bottom-line? Go here.

 Modula-3
 Information on Modula-3.

 ARPA Project Overview
 The executive summary and regular reports.  

 Our friends
 We've gotten a lot of assistance from academia and industry on this
     project.  This page says who we're involved with. 

 Some related projects
 Pointers to other extensible systems projects.

 What other people are saying
 Barbs and Arrows



Internal Documentation
 The latest status for project members

 Available Projects
 Projects that could result in Qualifications credit, 
     a Masters degree, a funded RAship position, or undergraduate
     project credit. (UW-CS only)

 Our mascot
 We're encouraged that so many people have decided to adopt our
mascot as their own.



This page maintained by Brian Bershad.

bershad@cs.washington.edu



",non-course
"


UW Dynamic Compilation Project










The UW Dynamic Compilation Project







More Information

 Our Dynamic  Compiler
 Project Members
 Papers
 Related Projects


UW-Only Sections

 Student Projects
 Group Web





Dynamic compilation enables optimizations based on the values of
invariant data computed at run-time. Using the values of these
run-time constants, a dynamic compiler can eliminate their memory
loads, perform constant propagation and folding, remove branches they
determine, and fully unroll loops they bound. However, the performance
benefits of the more efficient, dynamically-compiled code are offset
by the run-time cost of the dynamic compile. Our approach to dynamic
compilation strives for both fast dynamic compilation and high-quality
dynamically-compiled code: the programmer annotates regions of the
programs that should be compiled dynamically; a static, optimizing
compiler automatically produces pre-optimized machine-code templates,
using a pair of dataflow analyses that identify which variables will
be constant at run-time; and a simple, dynamic compiler copies the
templates, patching in the computed values of the run-time constants,
to produce optimized, executable code. Our work targets general-
purpose, imperative programming languages, initially C. Initial
experiments applying dynamic compilation to C programs have produced
speedups ranging from 1.2 to 1.8.

We are part of the SPIN
project.  Eventually, our system will be used to dynamically
compile code in the SPIN kernel, for example the SPIN
event dispatcher.  However, we are also actively exploring other
possible applications of dynamic compilation, such as in
virtual-machine interpreters.

Our prototype dynamic-compilation system
is described in our PLDI paper.  We are
now starting to design and build our second-generation system.  We
will release more details on it soon.



Last updated August 6, 1996.
grant@cs.washington.edu











",non-course
"
301 Moved Permanently

Moved Permanently
The document has moved here.

",non-course
"






The ZPL Project



 
 


The ZPL Project

 Department of Computer Science &
Engineering
 University of 
Washington
 Box 352350
 Seattle, 
WA
 98195-2350 USA
 zpl-info@cs.washington.edu





ZPL is a new array-based programming language suitable for most 
computations that would previously have been written in Fortran 77:


 ZPL programs run fast on sequential AND parallel computers, 
     without modifications, and without special directives. 
 ZPL is machine-independent, so recompilation is all that is 
     necessary to run a ZPL program on a new machine. 
 ZPL's higher level concepts like arrays, borders, etc. eliminate most 
     of the error-prone indexing and tedious looping typical of F77, C, 
     etc.
 ZPL programs are shorter, more easily written, and more easily 
     understood and modified.
 Computer scientists will find new concepts in ZPL: regions, 
    directions, borders, shattered control-flow, etc.

Conclusion:  ZPL is ideal for new engineering and scientific programs.
Walk-through a small ZPL program, or write-compile-run a program from your
machine!
Scientific programmers in the area should
consider enrolling in CSE 590ZP
this autumn. 
If you have programmed in ZPL before, check out the recent changes in the language.



 Project Overview
 A high-level overview of ZPL. 
 Program Walk-Through
 A 10 minute introduction to the language. 
 Web-based ZPL Compiler
 Compile ZPL programs via your web browser right now!
 Papers
 Papers and manuals about or related to ZPL.
 ZPL Details
 On-line information and sample programs.
 People
 Project members.
 On the Horizon
 A description of the group's direction and future projects.
 Acknowledgments
 A list of those who have helped support our work.




 

[
ZPL | 
UW CSE |
UW
]

zpl-info@cs.washington.edu



",non-course
"


Simultaneous Multithreading home page




Simultaneous Multithreading Project




Overview
People
Publications





 Overview
The crucial problem facing today's high-speed microprocessors is maintaining 
high processor utilization in the face of long instruction and memory 
latencies. To 
alleviate this problem, modern processors issue multiple instructions per 
cycle (i.e., superscalars), or interleave the execution of different
threads in different cycles (multithreaded processors). Ultimately, though, 
both techniques are limited by the amount of parallelism available within a 
single thread in a single cycle.

 Simultaneous multithreading (SMT) is a technique that permits multiple 
independent threads to issue instructions to a superscalar's functional 
units in a single cycle. SMT combines the multiple-instruction-issue
features of wide superscalar processors with the latency-hiding ability
of multithreaded architectures.  On an SMT processor, all hardware contexts
are active simultaneously, competing each cycle for all available resources.
This dynamic sharing of processor resources enables SMT to exploit
thread-level and instruction-level parallelism interchangeably; both forms
of parallelism can be effectively used to increase processor utilization.

Our studies have
demonstrated that simultaneous multithreading significantly improves
processor throughput and performance on both multiprogrammed and parallel
workloads.  We have shown that these performance gains can be achieved
in an architecture with only minimal extensions to modern out-of-order
superscalar processors.

Our current and future work includes investigations of fast synchronization
techniques enabled by SMT.  We are also conducting research in other
architectural and compiler issues for simultaneous multithreading.




 People

Faculty
 Susan Eggers
 Hank Levy
Graduate students
 Jack Lo
 Dean Tullsen
Industrial collaborators (Digital Equipment Corporation)
 Joel S. Emer
 Rebecca L. Stamm





 Publications

 Converting Thread-Level Parallelism Into Instruction-Level Parallelism via Simultaneous Multithreading (Abstract, Postscript) 
J.L. Lo,
S.J. Eggers, 
J.S. Emer, 
H.M. Levy,
R.L. Stamm, and
D.M. Tullsen

Submitted for publication, July 1996.


 Exploiting Choice: Instruction Fetch and Issue on an Implementable Simultaneous Multithreading Processor (Abstract, Postscript) 
D.M. Tullsen,
S.J. Eggers, 
J.S. Emer, 
H.M. Levy,
J.L. Lo,
and R.L. Stamm
 
Proceedings of the 23rd Annual International Symposium on Computer Architecture, Philadelphia, PA, May 1996.


 Compilation Issues for a Simultaneous Multithreading Processor 
(Postscript) 
J.L. Lo, 
S.J. Eggers, 
H.M. Levy, and
D.M. Tullsen 
Proceedings of the First SUIF Compiler Workshop, Stanford, CA, January 1996, p. 146-7.


 Simultaneous Multithreading: Maximizing On-Chip Parallelism (Abstract, Postscript) 
D.M. Tullsen,
S.J. Eggers, and
H.M. Levy,
 Proceedings of the 22rd Annual International Symposium on Computer Architecture, Santa Margherita Ligure, Italy, June 1995.






 UW students:
Check the list of research projects still to do
on the student-affairs page.





This page maintained by Jack Lo

jlo@cs.washington.edu  



",non-course
"

UW CS Home Page





Computer Sciences Department


About the Computer Sciences Department
Our department was formed in 1963 and is consistently ranked as one of the 
top ten computer science departments in the country. Faculty members have 
received fourteen Presidential Young Investigator awards, two Packard 
Fellowships, an NSF Faculty Award for Women Scientists and Engineers, a 
DEC Incentives for Excellence Award, three ACM doctoral dissertation awards, 
and three IBM Faculty Development Awards.


 The Computer Sciences Department by area
 Research projects and information
 People in the Computer Sciences Department
 Courses offered
 Fall 1996 classes
	 and future timetables
 Technical reports
 Computer Systems Lab (CSL)
 CSL's answers to frequently asked questions
 Computer Sciences alumni information
 Graduate Guidebook
 Undergraduate Guidebook
 The department's annual report
 CS online utilities
 UW-Madison local services
 CS-related organizations
 Colophon and statistics for this server
 Useful info



Computer Sciences Department
University of Wisconsin - Madison
5355a Computer Sciences and Statistics
1210 West Dayton Street
Madison, WI 53706
cs@cs.wisc.edu / voice: 608-262-1204 / fax: 608-262-9777


www@cs.wisc.edu



",non-course
"

 3D Object Exploration by Purposive Viewpoint Control 


 3D Object Exploration by Purposive Viewpoint Control 

 Kyros Kutulakos, Chuck Dyer 

There has been considerable interest recently in employing simple
observer behaviors that either make the recovery of scene properties
easier (e.g., fixation), or combine simple behaviors in order to
perform complex tasks such as navigation and obstacle avoidance. Our
work focuses on the ability of an active observer to control the point
of observation to perform tasks involving the exploration of an object.
The developed behaviors that are provably-correct, make
simple motion decisions that are based on the observed local geometry
of the scene, and require minimal processing of each image.


We first consider the task of recovering the local shape of the
surface at a selected point. Our approach is based on the general
observation that some positions provide more information about an object
than others. The existence of such special viewpoints can be
exploited only if the observer is mobile and has an efficient and
deterministic strategy for reaching them.  We show that the local
shape-recovery task can be achieved using a simple and qualitative
strategy for smoothly controlling the point of observation until the viewing
direction is ""aligned"" with a principal direction at the selected
point. Second, we consider the task of deriving a global description
of an object.  We formulate global surface reconstruction as the
qualitative task of smoothly controlling the point of observation
so that the visible rim ""slides"" over a maximal, connected, 
reconstructible region. We show that this task can be provably achieved 
for arbitrary smooth surfaces by attempting to maintain a well-defined 
geometric relationship between the point of observation
and the viewed surface.


Our approach suggests that the ability to smoothly control the point of 
observation can lead to provably-correct behaviors for achieving 
both local and global tasks (e.g., scene exploration, 3D navigation) 
while also simplifying per-frame computations.



",non-course
"

 Deformable Contours: Modeling, Extraction, Detection and Classification 


 Deformable Contours: Modeling, Extraction, Detection and Classification 

 Kok Fung Lai, Roland Chin 

We have developed an integrated approach to modeling, extracting, detecting 
and classifying deformable contours directly from noisy images. We have 
conducted a case study on regularization, formulation and initialization of
active contour models (snakes). Using the minimax principle, we derived a 
regularization criterion whereby the values can be automatically and implicitly 
determined along the contour. Furthermore, we formulated a set of energy 
functionals which yield snakes that contain Hough transform as a special case. 
Subsequently, we considered the problem of modeling and extracting arbitrary 
deformable contours from noisy images. We combined a stable, invariant and
unique contour model with Markov random fields to yield prior
distribution that exerts 
influence over an arbitrary global model while allowing for deformation. Under 
the Bayesian framework, contour extraction turns into posterior estimation, 
which is in turn equivalent to energy minimization in a generalized active 
contour model. Finally, we integrated these lower-level visual tasks with
pattern recognition processes of detection and classification. Based on the 
Nearman-Pearson lemma, we derived the optimal detection and classification
tests.  As the summation is peaked in most practical applications,
only small regions 
need to be considered in marginalizing the distribution. The validity of our 
formulation has been confirmed by extensive and rigorous experimentation.


GSNAKE software is available



",non-course
"

 VIS-AD: Data Visualization based on Lattices 


 VIS-AD: Data Visualization based on Lattices 

 Bill Hibbard, Brian Paul, Chuck Dyer 

We are defining a foundation for data visualization based on the
idea that a visualization process is a function from a set of
data objects, called a data model, to a set of displays, called
a display model.  A prototype system called 
VIS-AD
has been implemented based upon our ideas.  


We are guided by the following principles:


Scientists develop mathematical models of nature, and data objects
represent the objects of mathematical models.  Mathematical objects
frequently contain infinite precision real numbers and functions
with infinite domains, whereas computer data objects contain
finite amounts of information and are thus approximations to the
mathematical objects they represent.

Computer displays contain finite amounts of information (i.e.,
they contain finite numbers of pixels, their colors are chosen
from finite palettes, animation sequences contain finite numbers
of frames, etc.) and are thus approximations to ideal displays.

Because of the close relationship between data and computation,
a data model should be appropriate for the data objects of a computational
model such as a programming language.

The purpose of data visualization is to communicate the information
content of data objects.  In particular, we define expressiveness
conditions on the mapping from data objects to displays such that
displays should encode the facts about data objects, and only
those facts.

A visualization system should be complete in the sense that it
implements any function from data objects to displays satisfying
the expressivenss conditions.


We can define an order relation between data objects based on
how precisely they approximate mathematical objects, and we
can define an order relation between displays based on how
precisely they approximate ideal displays (i.e., based on voxel
resolution, etc.).  These order relations define lattices of
data objects and displays.  Therefore we can model the visualization
process as a function D:U --> V from a lattice U of data objects
to a lattice V of displays.  We can interpret the expressiveness
conditions in this context and show that D satisfies the
expressiveness conditions if and only if it is a lattice isomorphism.


We can define a particular lattice US appropriate for scientific
data objects.  These data objects are built up from primitive
variables that we call scalars (e.g., time, latitude, radiance,
and temperature) by tuple and array data type constructors
(e.g., ""array[time] of temperature"" is a data type appropriate
for a time series of temperatures).  Thus the lattice US contains
the data objects of a scientific programming language.  We can
also define a particular lattice VV of displays, in which a display
is a set of voxels.  Each voxel is specified by a set of graphics
primitives that we call display scalars, e.g., a pixel's location
and size in a volume, its color, and its place in an animation
sequence.  


We can show that functions D: US --> VV satisfying the expressiveness
conditions are just the class of functions defined by mappings from
the scalars used for primitive variables in data objects to the
display scalars that specify graphics primitives of voxels.  Of
course, designers of scientific displays already assume that 
primitive variables are mapped to graphics primitives.  For example,
given a data object of type ""array[time] of temperature"", it is
natural to display it as a graph with time along one axis and
temperature along another.  The remarkable thing is that we
do not have to take this way of designing displays as an assumption,
but that it is a consequence of the more fundamental expressiveness
conditions.


We are developing and implementing a system called
VIS-AD
that allows scientists to experiment with algorithms, steer their
computations, and visualize the data objects they create in their
programs.  The lattice US defines the data objects of the
VIS-AD programming language, the system implements the lattice VV
of displays, and data can be displayed using any function that
satisfies the expressiveness conditions (however, the implementation
is not quite precise).  Just as data flow systems define a
user interface for controlling data display based on abstraction
of the rendering pipeline, the VIS-AD system defines a user interface
for controlling data display based on the abstraction of
mappings from scalars to display scalars.


It is possible to define data lattices for the recursively defined
data types (i.e., complex linked types such as trees) used in
general-purpose programming languages, and for the abstract data
types and object classes in object-oriented programming languages.


Lattices provide a rigorous foundation for visualization.  In particular,
they can help us to develop an analytical alternative to the usual
approach of defining a visualization process D constructively by
writing a special-purpose program for computing a display D(u) for
a specific data object u.



",non-course
"Condor Project Homepage





Objective:


The goal of the Condor project is to develop, implement, deploy, and evaluate
mechanisms and policies that support High Throughput Computing (HTC) on large collections 
of distributively owned computing resources. Guided by both the technological
and sociological challenges of such a computing environment, the 
Condor Team has been building software tools that enable scientists and 
engineers to increase their computing throughput.

  


 How Did It Start?  
 
 High Throughput Computing (HTC) Research 
 
 The Condor System   
 
 
 Condor Pools at University of 
Wisconsin, Madison 

 
 Condor Help Page at CAE

 
 DBC Project Home Page 
 
 Condor-World Mailing List 

 

Any comments or suggestions
condor-admin@cs.wisc.edu
Last Modified Sun Sep 15 1996

",non-course
"NEXT! Homepage

 

 What is NEXT!? 
 
 People on the NEXT!  Project 

Last Modified September, 1995
miron@cs.wisc.edu
",non-course
"
Coral Database Project


Coral Database Project

Document Contents:

Objective
Overview
Release Information

See Also:

Publications related to Coral
People working on Coral
Other Research at UW-Madison


Objective:

The objective of the CORAL project is to develop a robust and efficient
deductive database system, and to investigate its use in various 
application domains. Several of the algorithms underlying the Coral
system have been developed by members of the group during the duration
of the project (since 1988).

Overview:

Coral is a deductive system which supports a rich declarative language,
and an interface to C++ which allows for a combination of declaritive
and imperative programming.  The declarative query language supports
general Horn clauses augmented with complex terms, set-grouping, 
aggregation, negation, and relations with tuples that contain 
(universally quantified) variables.  A CORAL declarative program can
be organized as a collection of interacting modules.  The CORAL
implementation supports a wide range of evaluation strategies, and
automatically chooses an efficient evaluation strategy for each module
in the program. In addition, users are permitted to guide query optimization,
if desired, by selecting from among a wide range of control choices at
the level of each module.

The CORAL system provides imperative constructs such as update, insert
and delete rules. CORAL also has an interface with C++, and users can
program in a combination of declarative CORAL and C++ extended with
CORAL primitives. A high degree of extensibility is provided by allowing
C++ programmers to use the class structure of C++ to enhance the CORAL
implemenation. CORAL provides support for both main-memory and 
disk-resident data. Disk-resident data is supported using the
EXODUS
storage mananger, which also provides transaction management in a
client-server environment.

Release Information:

The current release of Coral is Version 1.5, released October 10, 1996.
To install Coral on your system, then grab the tar file you want. 
The nobin version contains only the source code, requiring
you to compile Coral.  The other versions include pre-made binaries for
the indicated machine type.

 
Click on a file to grab it:

README : General information.
Installation Manual for Coral : Instructions for installation.

coral-1.5.nobin.tar.gz : No binaries included.
coral-1.5.hpux.tar.gz : HP-UX (series 700) binaries included.
coral-1.5.sun4.tar.gz : SunOs 4 binaries included.
coral-1.5.sun5.tar.gz : Sun Solaris binaries included.
coral-1.5.sol386.tar.gz : PC Solaris binaries included.
coral-1.5.linux.tar.gz : Linux binaries included.


To stay informed of new releases, you can add yourself to Coral's announcemnt
    mailing list
which recieves announcements of releases and other relevant information.
Releases are also announced on the newsgroup comp.lang.misc.


You may also submit questions, comments,
    or bug reports for coral.

Or send mail to:

coral@cs.wisc.edu


Last Modified:

October 10, 1996


Shawn Flisakowski / flisakow@cs.wisc.edu


",non-course
"

Complementarity Problem Net: Algorithms and Applications


 Complementarity Problem NET

As a result of more than three decades of research, the subject of 
complementarity problems, with its diverse applications in engineering, 
economics, and sciences, has become a well-established and fruitful
discipline within mathematical programming.  Several monographs 
and surveys have documented the basic theory, algorithms, and applications 
of complementarity problems and their role in optimization theory.

This page serves as a center for information regarding research in
complementarity problems.  As such there is a listing of meetings
of interest to the community, some pointers to software for
complementarity problems as well as links to other pages of interest.
A listing of researchers and some application areas are also given.


 Table of Contents 

 
	Directory of Researchers in Complementarity 
 
	Software for Complementarity Problems
 
	Applications of Complementarity
 
       Relevant Web Links 



 
Directory of Complementarity Researchers



Software for Complementarity Problems 




MCPLIB: 

A collection of nonlinear mixed complementarity problems, problem
description, and how to access the GAMS source files for
these problems.



Complementarity Toolbox for MATLAB: 

This (evolving) freely available toolbox consists of several mex and
m-files.  These allow all the MCPLIB problems to be accessed from
MATLAB without access to GAMS.  The mex files give function
evaluations and sparse Jacobian evaluations.  Machine specific
versions can be downloaded.
The PATH solver is also available in this toolbox, more details below.



Solver Interface to GAMS: 

This describes a library of routines that are
available to help hook your solver to the GAMS/MCP modeling language.
Contact steve@gams.com, rutherford@colorado.edu or ferris@cs.wisc.edu
for further details.



MILES: 

MILES is an extension of the classical
Josephy-Newton method for NCP in which the solution to each linearized
subproblem is computed via Lemke's almost-complementary pivot algorithm.
This Newton point is used to define
the Newton direction, which is then used in a damped
linesearch.  The merit function used measures both the violation in
feasibility and in complementarity.  MILES also employs a restart
procedure in cases where the Newton point cannot be computed due to
termination in a secondary ray. 
Every linearized subproblem is rescaled to equilibrate the elements
appearing in the data of the subproblem.



PATH:

(Runs under GAMS/MCP
or directly under MATLAB):
The PATH solver applies techniques similar
to those used in Newton methods for smooth systems to a
nonsmooth reformulation of the MCP.  The algorithm
consists of a sequence of major iterations, each consisting of an
approximation or linearization step similar to that of MILES, 
the construction of a path
to the Newton point (the solution to the approximation), and a
possible search of this path.  When the Newton point does not exists or the
path cannot be entirely constructed, a step along the partially
computed path is taken before the problem is relinearized.  A
nonmonotone watchdog strategy is employed in applying the path search;
this helps avoid convergence to local minima of the norm function for
the underlying nonsmooth equation and keeps the number of function
evaluations required as small as possible.  A list of solver options 
is given in the document 

 
NE/SQP: The NE/SQP algorithm is based upon
reformulating the NCP as a system of nonsmooth equations.
The NE/SQP algorithm implemented as a GAMS/MCP solver, its robustness
improved using a proximal perturbation strategy giving the 
QPCOMP algorithm.
The nonsmoothness of the equations is
handled using directional derivatives of H.



SMOOTH
 
The SMOOTH algorithm is based upon
reformulating the NCP as a system of nonsmooth equations and then
approximately solving a sequence of smooth approximations, which lead
to a zero of the nonsmooth system.  
At each iteration,
a smooth approximation to the original system is formed where the
accuracy of the approximation is determined by the residual of the
current point.  This is implemented as a GAMS/MCP system.



Other solvers 
have been implemented as subsystems of GAMS and are compared in this paper.




Applications of Complementarity 


 Engineering
and Economic Applications of Complementarity Problems.
This paper lists many of the known applications of complementarity problems.
   MPSGE: A preprocessor for the GAMS modeling language that
allows economic equilibrium problems to be formulated easily.  See the
GAMS  home page for further information.
   NEMS
The National Energy Modeling System.  There are several papers on related 
algorithms
and a paper giving an 
overview of the project.
 


 Relevant Web Links 


 Look up  Michael Trick's Operations Research Page  for some interesting OR links.
   Look up Interior-Point Web  for information on interior point
methods at the Argonne National Laboratories archive. 
 

Last modified: October 24, 1996 by Michael C. Ferris

ferris@cs.wisc.edu



",non-course
"
EXODUS Project Home Page
EXODUS - An Extensible Object-Oriented Database System Toolkit

NOTE: Document is under construction. 




The Exodus project has been succeded by the

SHORE project but we still provide minimal support for users.


Both the

Exodus Storage Manager and a compiler for the E persistent
programming language
,
are available via ftp on ftp.cs.wisc.edu.
No licenses are required.
If more information is needed contact 

exodus@cs.wisc.edu


Principal Investigators

 Mike Carey
 David DeWitt

See Also:


Publications related to EXODUS


SHORE: the successor to EXODUS


Latest Exodus Storage Manager and E compiler


Contributed software for the Storage Manager



A mailing list for Exodus users: 
 exodus_all@cs.wisc.edu 

OO7 Benchmark: a benchmark for OODBS


Date Prepared:

19 April 1994 

Michael Zwilling / zwilling@cs.wisc.edu.


",non-course
"
The Paradise Project


Paradise - A Parallel Database System for GIS Applications.

Document Contents:

 Objective
 Client Server Paradise
 Samples of the Paradise Frontend
 Contact Information

See Also:

 Publications related to Paradise
 People working on Paradise
 SHORE Project: Object Manager used for Paradise
 The OPT++ Extensible Optimizer
 Paradise Bug
	Reporting
 Examine the 
Sequoia 2000 Benchmark scripts  used in the VLDB 94 paper.
   Information on  SSL .
   UW-Madison, Database Research Group
 UW-Madison, CS Department Server


Objective:

The objective of the Paradise project is to design, implement, and
evaluate a scalable, parallel geographic information system that is
capable of storing and manipulating massive data sets. By applying
object-oriented and parallel database technologies to the problem of
storing and manipulating geographic information we hope to
significantly advance the size and complexity of GIS data sets that
can be successfully stored, browsed, and queried.


  Client Server Paradise: 
Paradise is a database
system aimed at handling GIS types of applications.  Paradise provides
a graphical user interface for querying and browsing the database and
supports a subset of SQL for issuing ad-hoc queries.  Paradise
provides an extended-relational data model for modeling GIS
applications.  In addition to support for the base data types such as
integer, real, and string, Paradise has built-in support for raster,
polygon, polyline, point, circle, and video (mpeg images) data.
Paradise uses SHORE as its underlying persistent object manager.


The Paradise front end allows you to display objects with spatial
attributes on a 2-D map.  The map provides a layered display for
overlapping spatial attributes.  Each layer corresponds to one query.
You can customize the ordering and display of the layers by selecting
color, labelling, and other display attributes for each query.


The database can be queried either with a graphical interface or with
ad-hoc queries.  The graphical interface can be be used to issue
implicit spatial queries by zooming, clicking, and sketching a
rubber-banded box.  For ad-hoc queries, Paradise provides a query
composer.  Menus in the query composer provide access to the database
schema to assist in query composition.  Query results can either be
viewed on the 2-D map, if they have spatial attributes, or they can be
displayed in a table so that you can browse the tuples in the result.
The front end also provides context-sensitive help.


Paradise supports a subset of SQL for issuing ad-hoc queries.  To SQL
we have added the ability to invoke methods defined on the extended
set of types.  For example, you can calculate the area of a polygon by
using the method polygon.area().  Paradise also supports the standard
database operations including create and drop database, create and
drop extent, create and drop indices, insert, and update.


The current version of Paradise employs a client-server architecture.
The front-end ships queries in our SQL syntax to the Paradise
server for execution.  After executing the query, the server ships the
result objects back to the client.  The Paradise server is
multi-threaded so that multiple clients can connect to the same
server.  In designing and implementing the Paradise sever, careful
attention was paid to insure that the system could efficiently process
queries (especially those involving spatial attributes) on large
volumes of data.


Samples of the Paradise Frontend





Europe Data.


 For more samples press

here.



Contact Information:


Paradise Project
ATTN: Prof. David J. DeWitt
University of Wisconsin-Madison
Computer Sciences Department
1210 West Dayton Street
Madison, WI 53706

Email: paradise@cs.wisc.edu




More To Come . . .


Biswadeep Nag	(bng@cs.wisc.edu)


",non-course
"


Net Scout Services Homepage



go to text version









Newsletter of new
and newly discovered 
Internet resources and 
network tools


Internet announcements 
-- updated daily!


The most effective
Internet tools available


A web report for students, 
by students







Surf smarter, not longer. Let the InterNIC Net Scout project at the 
 University
of Wisconsin - Madison show you the way to only the best--then you can
choose what's best for you. We filter hundreds of Internet annoucements
each week looking for the most valuable online resources and network
tools. Then we organize, summarize, and annotate the best of what we've
found, and offer it to the Internet community in several useful formats.

The goal of Net Scout is to support effective use of the Internet by
educators and researchers in the US. However, everyone is welcome to use
the publications and Web sites provided by Net Scout, and we encourage
feedback and suggestions from the entire Internet community.

The three primary services provided include the 
Scout Report, 
Net-Happenings, and the
Scout Toolkit. Our
newest project is Y'Know, 
a Web report for students, by students.  

Net Scout Services is located at the 
Department of Computer Sciences at the
University of Wisconsin-Madison and is a project of the 
InterNIC.  






Comments, Suggestions, Feedback
scout@internic.net


© 1996 Net Scout Services





For more information on using the Internet:

 
InterNIC Information & Education Services





",non-course
"

SHORE Project Home Page


SHORE - A High-Performance, Scalable, Persistent Object Repository


Document Contents:


Objective


Overview


Release Information


Mailing Lists



See Also:

Shore, version 1.0
	

	On-line Information
	

	Source, Binaries and Documentation
	


The Beta-release of Shore (version 0.9.3)


Publications related to Shore


People working on Shore


Latest Research Summary for ARPA


Paradise Project: a GIS built on SHORE


EXODUS Project: the predecessor to Shore


OO7 Benchmark: a benchmark for OODBs


Shore Photo Album


UW-Madison, Database Research Group 



UW-Madison, CS Department Server




Objective:


The objective of the SHORE project is to design, implement, and
evaluate a persistent object system that will serve the needs of a wide
variety of target applications including hardware and software CAD
systems, persistent programming languages, geographic information
systems, satellite data repositories, and multi-media applications.
Shore expands on the basic capabilities of the widely-used
EXODUS
Storage Manager (developed at Wisconsin, funded by
 ARPA ) in a number of
ways including support for typed objects, multiple programming
languages, a ""Unix-like"" hierarchical name space for named objects, and
a Unix-compatible interface to objects with a ""text"" field. This
interface is intended to ease the transition of applications from the
Unix file system environment to Shore as existing Unix tools such as vi
and cc will be able to store their data in Shore objects without
modification (basically a Unix file becomes either a single Shore
object or the text field of a more complex object).


Overview:

SHORE is something of a hybrid system by nature, inheriting
characteristics both from object-oriented database systems and from
file systems.  This section briefly describe the basic features of
SHORE.  The paper,

Shoring Up Persistent Applications,
describes SHORE in much greater detail.

SHORE has three major goals:

Scalability
Support for hardware and language heterogeneity
Support for existing, file-based applications


When the SHORE project began 3 years ago, these goals were unique
among the research and commercial OODBMS community.  While the
 ODMG effort 
has also concentrated on providing some degree of support for language
heterogeneity (which, in turn, facilitates hardware heterogeneity),
SHORE remains distinguished by its focus on scalability and support
for applications that depend on the Unix file system for persistent
storage.  Furthermore, since the SHORE data model (SDL) is basically

compatible with the ODMG data model (ODL),
we expect that much of the technology that we develop can eventually be
transferred to the commercial sector.

Scalable Architecture
SHORE's software architecture is unique is several ways.
First, SHORE uses a symmetric, peer-to-peer distributed
architecture.  In SHORE, every participating processor runs a
SHORE server process whether or not the processor has SHORE data disks
attached.  The software has been designed to be scalable;
it can run on a single processor, a network of workstations, or
a large parallel processor such as the Intel Paragon or IBM SP1/2.
This design is in contrast to the client-server architecture
used by EXODUS and all the OODBMS vendors.  While a client-server
architecture is fine for a design environment such as is typically
used in software and hardware CAD efforts, it is not scalable.

The second unique feature of the SHORE architecture is its notion
of a ``value-added'' server.  By structuring the software that runs
in the server with extensibility in mind, it is relatively simple for
users to build application-specific servers.  For example, the

Paradise project 
is already using the SHORE server to build a geographic information system for
 NASA's
EOSDIS project.


We feel that these two unique pieces of technology will play a
important role in a variety of future research and commercial endeavors.
For example, the digital libraries of the future will almost certainly
depend on the availability of scalable, persistent object technology.
Such systems are going to store, retrieve, manipulate, and transmit
objects containing video and pictures as well as text.  While
current OODBMS products could be used, these systems are oriented
toward dealing with gigabytes, and not terabytes, of data.
Customizability is equally important.  The indexing, retrieval,
and query processing mechanisms needed for a digital library
are very different from those required for a geographic information
system.

Language and Hardware Heterogeneity

Objects in SHORE are typed.  SHORE provides a single, language-neutral
type system that is used to define the types of all SHORE objects.
This type system is embodied in the SHORE Data Language (SDL),
which is the language in which SHORE object types are defined.
SDL enhances the OMG data model IDL with support for database
features such as bulk types (e.g., sets and lists) and persistence.
The provision of typed persistent objects simplifies the task of
supporting heterogeneous hardware environments and makes it feasible
to support access to persistent objects from multiple programming
languages, which is a key objective of the SHORE project.
As mentioned earlier, SDL is quite closely related to ODL,
the language-neutral object type definition language that was
recently proposed as a standard by the OODB vendor consortium ODMG.
In terms of its emphasis, however, ODMG has largely concentrated on
providing a standardized interface to existing C++ oriented OODBs.
Our focus is on support for inter-language object sharing within
a large name-space of objects.

Support for Existing, File-based Applications

A major goal of SHORE is to enable applications that currently
use untyped, byte-oriented files for their persistent data,
flattening and un-flattening their data each time it is accessed,
to stop doing so.
Such applications should be able to store their data as typed, structured
objects for more convenient, type-safe, intra- and inter-program data sharing.
Our ultimate hope is that SHORE will displace byte-oriented
file systems such as the Unix file system.

SHORE provides two major services from a file system standpoint.  First,
to support object naming and space management in a world with many
persistent objects, SHORE provides a flexible, tree-structured,
Unix-like name-space in which all persistent objects are reachable,
either directly or indirectly.  Doing so gives SHORE users
a familiar framework in which to register individual
persistent objects (termed ""registered"" objects), the roots of
large persistent data structures, or bulk sets of unnamed objects (termed
""anonymous"" objects).  The realization of this framework involves
several different kinds of SHORE file system objects, including
directories, pools (which are files containing anonymous objects),
symbolic links, and cross references.

SHORE provides two mechanisms to ease the transition of legacy Unix
applications such as compilers, editors, and CAD systems from
traditional byte-stream files to SHORE.
First, for applications that can be re-linked, SHORE provides a standard
Unix-compatible file system interface  (e.g. open, close, read,
write, mkdir, chdir,.).
In order to make access to SHORE objects via Unix file system calls
possible, the definer of a SHORE object type can optionally designate one
variable-length byte string or character string attribute of the object as
being the object's ""Unix data"".  Programs that attempt to read an object
through SHORE counterparts of the Unix file system calls
will only see this portion of the object. For legacy programs that
wish to do so without being re-linked, it is possible to NFS-mount a
SHORE file system and access the Unix data
contained in its objects directly.  This makes it feasible for both
new and old applications to access the same set of objects.
While old applications can only access the ""Unix data"" component
of the object, new applications can define and access other, more
structured, attributes of the object.



Release Information:

Below is the latest time table for the release of SHORE. 
These dates are approximate and subject to change.
If you have any questions, contact 

shore_support@cs.wisc.edu.

 Beta Release (0.9)
On May 3, 1995 we had our first beta release.

 Beta Release (0.9.3)

The second Beta-rlease of Shore (version 0.9.3)
 is now available (Sept 18, 1995).
It includes improved documentation, more complete
implementations of many SDL features, many bug fixes, and ports to
Solaris, HP-UX, Linux.

 Version 1.0 
On August 6, 1995 we released Shore, version 1.0.
Gzip'd tar files of the source, documentation and a binary release (sparc and
pentium solaris 2.5), can be found at

<ftp://ftp.cs.wisc.edu/shore/1.0/>
.



Mailing Lists

There are two Shore-related mailing lists: 

shore_support@cs.wisc.edu

and 

shore_all@cs.wisc.edu
.

shore_support@cs.wisc.edu
This mailing list reaches the Shore development team.  
It is for use
by Shore users to submit questions, comments, and bug reports to us.
You cannot subscribe to this mailing list.

 shore_all@cs.wisc.edu 
This is a mailing list for users of (and those interested in) SHORE.
This list is managed by the listproc software at the UW-Madison
CS department.  It is currently unmoderated, but in the unlikely
event that it gets cluttered with junk mail we will moderate it.
mail messages.  If you are interested in the list, but your mailbox is
already too cluttered, you can sign up for weekly digests.  See below
for more information.  More information about the list will be sent
when you subscribe.  
 Purpose of shore_all 

 Notifying interested parties of new releases and other changes in the Shore ftp archive
 Requests for help from other users 


By default, replies will be sent only to the sender, rather than being
posted to the entire list.  If you want the entire list to see your
reply, just copy the reply to shore_all.


This list is an public mailing list.  Thus, anyone may
subscribe to it.  Only subscribers may post to the list.  The existence
of this list is shown in the listing returned by listproc when
it processes a LISTS request.  When you subscribe, your
subscription is ""concealed"" by default.  That is, other subscribers
cannot obtain the membership list from the listproc system.  
 Subscribing to shore_all 

To subscribe or to change your subscription, you must mail a special
message to: listproc@cs.wisc.edu.

 To subscribe, the content of the message should look like this:
subscribe shore_all 
 To receive weekly digests (rather than individual messages), send
this along with your subscription (or send it in a separate
 message):
set shore_all mail digest
 To un-subscribe, the content of the message should be:
unsubscribe shore_all
 To get help on the list processor, the content of the message
should be: 
help

Last Modified:
Mon Mar 18 10:41:39 CST 1996


Nancy Hall
/ nhall@cs.wisc.edu.


Footnotes: 
... compatibility with ODL
SHORE and ODMG concurrently decided to use the OMG data model
IDL as the starting point for their data models.  Hence SDL and ODL
are very similar to one another.  Once ODL stabilizes
we can convert SDL to be 100% compatible with ODL.




















",non-course
"

Abhinav's Home Page



 Welcome to  Abhinav Gupta's  Den
 agupta@cs.wisc.edu 
gupta@cae.wisc.edu 





   This page is under construction  




 
 Graduate Student 
 Department of Computer Science 
 University of Wisconsin, Madison  





 Contact via 
ResidenceOffice


 
 2016, Kendall Avenue,  Apt #2, Madison, WI-53705, USA 
  Department of Computer Sciences, 1210, W.Dayton Street,  #3360, Madison,  WI-53706, USA 


 (608) 232-1894 (608) 262-9275






Some other interesting links:

  Indian newspapers 
  Other Stuff (CNN,MTV,Sports,etc.) 

 You can 
 finger me to find my whereabouts.




",non-course
"

Alain Kägi's Home Page




Alain Kägi







  (click here for a larger picture.) 


The largest carnivore that ever lived.


Last modified Sat Sep  9 14:14:55 by Alain Kägi
 (alain@cs.wisc.edu)




",non-course
"

 Carolyn Allex's Home Page 




 Carolyn F. Allex 

Graduate Student
Biotechnology Training Program Trainee
Computer Sciences Department
University of Wisconsin - Madison
1210 West Dayton Street
Madison, Wisconsin USA 53706

E-mail: allex@cs.wisc.edu
Telephone: (608) 258-7420
Fax: (608) 258-7439


Advisor: Professor Jude W. Shavlik

Interests:
 
Computational biology, DNA sequencing, protein folding, artificial intelligence, machine learning, neural networks


Education:
 
MS Computer Sciences, University of Wisconsin - Madison

BS Computer Science, Purdue University

BS Education, Mankato State University



 Related Links 

 
       University of Wisconsin CS Department
 
      University of Wisconsin AI Group
 
      University of Wisconsin Machine Learning Group
 
    University of Wisconsin Computational Biology Research
 
     Intelligent Systems for Molecular Biology-94 (ISMB-94)
 
     Intelligent Systems for Molecular Biology-95 (ISMB-95)
 
     Intelligent Systems for Molecular Biology-96 (ISMB-96)



",non-course
"

Amir's Home Page








Amir Roth
Delphi32 maven, on the 60-day DL, ""that guy on that show""
	1028 Erin St #3
	Madison, WI 53715
	608-256-9743

	CS 6360
	608-262-6614
	FAX: 608-262-9777

amir@cs.wisc.edu

	An occasionaly updated copy of my resume (CVTE).
	
""The truth is out there!""





[PL group |
PL Seminar |
Arch group |
Arch Seminar | 
CS640 |
CS838]

This week's hot research topics

 Implementing a compiler using just the C preprocessor.  
 Delegating work to your project partners. 
 Setting off airport metal detectors. 

The ins and outs of my existence

I am graduate student in the Department of Computer Science at the University of Wisconsin, Madison.  My new advisor, Guri Sohi, and I are looking into methods of alleviating data dependences in Multiscalar programs using the distributed register file.  Multiscalar programs are all that and a side of curly fries. 

I have a BS in Physics from Yale University and an advanced degree in nail design from Valley Beauty School.  Physics is interesting, but my beauty degree is much more practical. 

I live with my girlfriend Marci and our two cats, Joe and Charlie.  Marci also went to Yale, and now she is getting a masters in public policy from LaFollette Institute.  One day, she is going to be president.  In the meantime, she likes to solve linear regression problems, try out wacky recipes she finds in magazines and watch 'Party of Five'.

I like eggplant, which most people think is weird.

Anyway, I promised the ins and outs...


 In: Subba.  Out: My ex-officemates Mac Daddy and Mr. November.
 In: Two titanium screws.   Out: My ACL.
 In: Desi Relaford.   Out:  Terry Mulholland. 
 In: Oxygen.  Out: Carbon dioxide.

Areas of Vague Interest

 Programming languages, program analysis, and super-whack compiler optimizations.
 Parallel algorithms.
 Theory (good for the soul)
 Analysis, evaluation, modeling and performance enhancement of my three-point shot
 All things big and scary

Areas of Rabid Interest

The love.  If you don't know what I am talking about, you better leave this page at once, never to return. 
Hmmm.  What AM I interested in?

Super Handy

Informatik index of computer science journals and authors.
MadCAT.
MKP architecture resources.
Up to the minute NBA and MLB scores.
Sportsline.
Who did what to whom in Philly.
Everybody's favorite engineer.

Super Icky

The news.  My friend Barb writes articles for these guys, I'm not going to read them but you can if you want.  (Just kidding, Barb)
My friend Drew's home page at Cornell.
David's home page at CMU.  And you think I'm wierd.
A page featuring my friend Sue, and my friend by association Kemin.



Last modified: Sun Mar 17 17:26:03 1996 by Amir Roth

amir@cs.wisc.edu



",non-course
"

This page is not under construction.


",non-course
"

Amos Ron's Home Page








 
key words for search engines: approximation theory, splines, wavelets, box
splines, radial basis functions, shift-invariant spaces, approximation to
scattered data, multiquadrics, thin-plate splines


 

 
to my  homepage







Amos Ron 

Associate Professor
Department of Computer Sciences
University of Wisconsin-Madison
1210 West Dayton Street

Madison, Wisconsin  53706-1685  USA
E-mail:  amos@cs.wisc.edu
 
Telephone: (608) 262-6621
Fax: (608) 262-9777







Amos Ron's  Home Page is presently under










 Table of links
At present, only
 items are accessible.






If you are here in order to download the paper

Affine systems: the analysis of the analysis operator

of Zuowei Shen and me, choose between the following versions:
if you are using Unix, click
HERE, to get a compressed version. 
Otherwise, download the uncompressed version from
HERE.
If none works, our ftp server may be down. Try then to get a copy directly
from my account
HERE.



For CS513 handouts and email, click
HERE



Click 
my vita if you want to see my vita.



List of various publications, including  abstracts.




Selected 
 articles
of mine.



Information about anonymous ftp site.
Carl de Boor and I maintain an ftp site at
 ftp.cs.wisc.edu. 
The site contains
postscript and compressed postscript files of various articles of the
approximation theory group at UW. Also found there are technical files
concerning TeX, vi and more, that should be useful to the general public.
I recommend that you click the 

read.me file, which provides a list of available files, 
click there those that you wish to view (on-line),
view them on-line,  and download those you wish to.



My  Ph.D. students,
including information about their research and
publications.



My main areas of interest, together with a short 
summary of my present research and future goals in each one of these.



The activity of the Approximation Theory group at the Univeristy of
Wisconsin, Madison.



The activity of the 

Numerical Analysis group here.



Links to home pages of other 
people in the approximation theory community can be 
found HERE 



Miscellaneous topics and activities.



Finally, 







 Please deposit any comments you have in my mailbox









",non-course
"

Andy Therber's Home Page


Andy Therber

Office:	7351 CS&S
Phone:	265-2311
email:	andyt@cs.wisc.edu


Zoo
Resume
Bookmarks
Applets


",non-course
"
 Ranga 


 Arvind Ranganathan 
  


 About Me!


 My erstwhile workplace


 My present workplace


 Indiaworld


 The fascinating world of Escher
 

 A collection of classic papers in Computer Science


 Finger to see if I am logged on!



Arvind Ranganathan / 
 arvind@cs.wisc.edu 


",non-course
"

Ashish's Home Page


 Ashish Thusoo
 I'm a graduate student in the 
Department of Computer Science at the 
University of Wisconsin, Madison. I come from
 India, and had
my undergraduate education at the  Indian
Institute of Technology, Delhi. The 
Department of CS at IITD is a fantastic place and worth visiting.

 If you'd like to contact me, you can
finger me to find my whereabouts.
Alternatively, you can send email to me at  ashisht@cs.wisc.edu . 



",non-course
"

Ashraf Aboulnaga's Home Page


Ashraf Aboulnaga

Computer Sciences Department 
    (Room 3310)
University of Wisconsin - Madison
1210 West Dayton St.
Madison - WI 53706
USA
Phone: (608) 262-1721
E-mail: ashraf@cs.wisc.edu

Education

 MS in Computer Science, Alexandria University, 
     Alexandria,
     Egypt, July 1996.
 BS in Computer Science, Alexandria University, 
     Alexandria,
     Egypt, June 1993.


CS132 Info

 Section 319: Tue,Thu 5:20-6:35 pm. 
      View your grades
 Section 320: Tue,Thu 6:40-7:55 pm.
      View your grades
 Office hours: Mon,Wed 4:00-5:00 pm.
 Go to the 
     CS132-Desautels home page.


Last modified: September 16, 1996 by Ashraf Aboulnaga.
(finger)



",non-course
"

The Phil Atkinson Home Page


 The Phil Atkinson Home Page



UCLA's Ed O'Bannon after winning the NCAA basketball championship in Seattle, WA.


General Info


Office: CS 1343
Phone: 262-5596
Email: atkinson@cs.wisc.edu



Current Research


Sailing
Horse back riding
Scuba diving



CS 552 Info


Office Hours: TuTh 1:00-2:00pm or by appointment





",non-course
"

 Home Page of Eric Bach 


 
 Eric Bach 

 Professor 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 telephone: (608) 262-1204 
 fax: (608) 262-9777 
 email: 
 bach@cs.wisc.edu 

Ph.D., University of California, Berkeley, 1984 
Interests:
Theoretical computer science, computational number theory, algebraic
algorithms, complexity theory, cryptography, six-string automata


 Research Summary 

I am interested in how one uses computers to efficiently solve
algebraic and number-theoretic problems (example: how does one
tell if a 100-digit number is prime without examining all possible
factors?). These problems have intrinsic mathematical interest,
as well as applications to random number generation, codes for
reliable and secure information transmission, computer algebra,
and other areas. 

I am also interested in applying probability theory to the design
and analysis of algorithms. For example, if a large number is
composite, it can be proved so by a simple test that uses an auxiliary
number, called a `witness.' In practice one usually finds a witness
by direct search among the small primes. This leads to the following
natural question. How large is the least witness, as a function
of the number tested? In recent work, we have given an accurate
heuristic model, based on probabilistic assumptions, that allows
this, and similar questions, to be answered. 
 Recent Publications 


Improved approximations for Euler products,
Proc. CNTA-4 (Canadian Math. Soc. Proceedings, v. 15) , 1995. 
 
DNA models and algorithms for NP-complete problems (with A. Condon,
E. Glaser, S. Tanguay),
Proc. 11th Annual Conf. on Computational Complexity, 1996. 
Algorithmic Number Theory (Volume I: Efficient Algorithms)
(with J. Shallit), MIT Press, 1996.  For info click on
 
ANT-1.

 
Curriculum Vitae 



 This page created July 30, 1996.
 Email bach@cs.wisc.edu
to report errors.




",non-course
"

Bart Miller's Home Page




 
Barton P. Miller

(bart@cs.wisc.edu)

Professor
Computer Sciences Department
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA








The following is a list of some of the things that I do.

Research Projects:



 
Paradyn Parallel Performance Tools




 
Fuzz Random Software Testing

Teaching:



 
CS537: Introduction to Operating Systems (Spring 1996)




 
CS638/699: Honors Internet Seminar




 
CS736: Advanced Operating Systems (Fall 1996)



 
CS739: Distributed Systems




 
Director, Undergraduate Projects Lab




 
My Ph.D. Graduates

Professional:



 
1996 Symposium on Parallel and Distributed Tools




 
Monona Terrace (Frank Lloyd Wright) Convention Center Technical Advisory Group

Personal:



 
My ""Official"" CS Department Home Page




 
Some Family Photos





bart@cs.wisc.edu / Last modified:
Tue Aug 13 15:11:33 CDT 1996


",non-course
"


 Ben's 100% Hyper Home Page 














Benjamin Teitelbaum  
Computer Sciences Department
University of Wisconsin -- Madison 
1210 West Dayton Street, Rm. 3310 
Madison, WI 53706-1685 
USA

ben@cs.wisc.edu





Résumé
Quince
- ""the Internet's ultimate word game""
Zillions of Bookmarks





",non-course
"

Gareth Bestor's Home Page



Welcome to Gareth Bestor's Home Page



Gareth S. Bestor

Dissertator and Teaching Assistant
Computer Sciences Department
University of Wisconsin-Madison
   1210 West Dayton Street
   Madison, WI 53706-1685, U.S.A.
   Telephone: (608) 262-6601
   Fax: (608) 262-9777
   E-mail: bestor@cs.wisc.edu (click here for finger)
   World-Wide-Web: http://www.cs.wisc.edu/~bestor

Systems Administrator
Data and Program Library Service
   1180 Observatory Drive
   Madison, WI 53705, U.S.A.
   Telephone: (608) 262-7962
   E-mail: bestor@dpls.dacc.wisc.edu

Education:

M.S. Computer Sciences, University of Wisconsin-Madison, 1991
B.Sc. (honors) Computer Science, Massey University, New Zealand, 1989
B.Sc. Computer Science, Massey University, New Zealand, 1988

 Curriculum Vitae (PostScript)
       Resume (PostScript)
       Graduate Coursework (PostScript)
   


Dissertation Research

Title:
   Structure from Motion: the Inverse Projection Problem




Abstract:
   An important problem in computer vision is recovering the 3-D structure of a scene and the position of the observer within it from one or more projected 2-D images.  This is essentially the inverse projection problem.  Existing Structure-From-Motion (SFM) techniques solve this problem by examining multiple images projected from a rigid scene.  However SFM has not been used extensively in practice because these techniques are very sensitive to noise, do not accurately model optical projection, or restrict the position of the observer and/or the structure of the scene.  My research uses a new technique for solving the inverse projection problem called the Concurrent Projector Model which makes no assumptions about the scene other than it is rigid and no assumptions about the position of the observer.  This technique uses a projector based model of projection instead of the camera based model traditionally used in SFM.  As a result, the algorithm is defined for any geometric transformation in any dimension, not just 3-D perspective projection.  For a given transformation and dimension the algorithm identifies when the inverse projection problem is under-constrained and specifies the minimum number of points and images required to solve it.  The Concurrent Projector Model can also examine additional points and images to minimize the types of projection errors that occur in real-world applications by allowing the projectors to approximately intersect.

This technique is currently being applied to the problem of robot navigation and exploration to both determine the position of a robot in an unknown environment and at the same time to map this environment.
Advisor:
    Prof. Charles R. Dyer
Research Interests:
   Computer and machine vision, vision-based robot navigation and exploration, 3-D computer graphics, virtual reality.

 Artificial Intelligence Group
 Computer Vision Group
 Machine Learning Research Group
 Robotics Lab




Teaching Duties for Spring 1995-96

CS 110 Introduction to Computer Programming:
   Sections 1 and 2 (FORTRAN)

   CS 110 is a one-credit course which covers the basic programming structures needed to prepare students for CS 310 and elementary engineering courses.  No prior computer programming experience is required and only a basic knowledge of computers is assumed.  The material covered enables students to write simple computer programs to solve engineering problems in elementary courses.  All programming is done in FORTRAN.  This course is intended for students who received little or no programming instruction in high school.

These sections are taught entirely in the FORTRAN programming language and are intended primarily for engineering students and non-computer science majors.

 CS 110 Sections 1 and 2 Home Page


CS 302 Algebraic Language Programming:
   Section 70 (FORTRAN)

   Construction of algorithms; problem solving; instruction and experience in the use of at least one procedure-oriented language (e.g., Pascal or Fortran); survey of other such languages, advanced programming techniques. Prereq: Advanced high school mathematical preparation or some college work in mathematics, statistics or logic; or consent of instructor. Open to Fr.

   This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors.

 CS 302 Section 70 Home Page




Other Pointers of Interest

 Computer Sciences Department Home Page
 University of Wisconsin-Madison WiscINFO Home Page
 Information about New Zealand
 UW Hoofer Outing Club
 NEXTSTEP and NeXT Software, Inc.

 Starting Points for Internet Exploration
 Lycos (search the World-Wide-Web by keyword)




Copyright © 1996 Gareth S. Bestor (bestor@cs.wisc.edu). Last modified January 30, 1996.


",non-course
"

Kevin Beyer's Home Page


Kevin S. Beyer
beyer@cs.wisc.edu.

(caution: men at work...)



Graduate Student and Research Assistant

Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
(608) 262-6607


Advisor: Raghu Ramakrishnan 

Area of Interest:
Database Research

Research Projects:

 Coral 
C.O.D. (local only)


Course Information: 

 
	Projects
 
	Graduate Courses
 
	Undergraduate Courses

Instructing: 
CS 302



(beyer@cs.wisc.edu)
Mon May 23 20:07:07 CDT 1994



",non-course
"
Todd M. Bezenek's Home Page





Todd
M.
Bezenek






Back when the 6502 was introduced, RAM was actually faster than
  CPUs... 
  -- From _Great Microprocessors of the Past and Present_ at
  www.cs.uregina.ca/~bayko/cpu.html .

  ``Windows NT is an express locomotive squeezed into a
  skateboard-sized package...'' 
  -- Helen Custer in _Inside Windows
  NT_, Microsoft Press, 1993.








Current Courses


    CS 736: Advanced Operating Systems with
    Bart Miller.

    
pithy adj  \'pith-e\ 1 : consisting of or abounding in pith

    
CS 899: Taking the ``Yeah, but what's the point?'' out of
    skewed-associative caches.



Access Information


  Computer Sciences Department
  University of Wisconsin
  1210 West Dayton Street
  Madison, WI 53706 

  Office: CS&S 1304
  Phone: (608) 262-6601
  Fax: (608) 262-9777
  Home phone: (608) 238-6390
  E-mail:
  
  bezenek@cs.wisc.edu




bezenek@cs.wisc.edu




",non-course
"

 Nathan Bockrath - Graduate Student 





Nathan Bockrath 
     Teaching Assistant 
     Graduate Student 
     Average Joe 
 A picture of Nate. 23Kb, jpeg 
 To send me EMail click here:
bockrath@cs.wisc.edu

 My CS 132 D Sections 
Both Sections are held in B204

 Section 301: 7:45 am - 8:45 am MWF
   Section 302: 8:50 am - 9:50 am MWF


GRADES 
 QUIZ REVIEWS
Virus Info
 The Word Macro Virus 
 How to make WWW Pages 




 Office Hours: In CS 3310
 (Where is 3310, Anyway?)

 Monday
    10:00 am - 11:00 am
   Wednesday
    10:00 am - 11:00 am



 My Schedule 

  Distributed 
Systems  
 1:00 pm - 2:15 pm
    MWF in CS 1263 
    Simulation 
and Modeling
 2:25 pm - 3:40 pm 
    MWF in CS 1325




  SUPPORT FREE SPEECH ONLINE!!! 

 For more Info go to this Site. 



 
Back to the CS 132 D 
Home Page

Back to the CS Department 
Home Page


Other Neat Stuff

 The Condor Project 


The Internet Oracle

Send Comments To: 
bockrath@cs.wisc.edu


",non-course
"

Bolo



Bolo

Greetings!  I'm Bolo, although my parents 
christened me Josef Thomas Burger when I rolled from the ways.
Call me
bolo... everyone, including my parents,  does!

I'm not quite sure who I am or what I do; here's the best
explanation I've developed so far.
In many ways the question who is a person is defined by
what that person does.  
In my case, I'm a software engineer who develops semi-real-time
operating systems and utilities.
I've been doing that for the last 5 years.
Before that, I was a BSD Kernel Hacker and Unix system Administrator.

I create things, and that's why I'm an engineer.  

An engineer applies science to the design and construction of ""things"",
and that's what I do.
You can't really call me a scientist, though I have a
Computer Sciences degree.
I'm more of ... a Mad Scientist!!! 
The guy who pays me, David DeWitt,
(who is a scientist) shudders at my methodology.
On the other hand, I'm right most of the time.
It works for me, eh?

When I'm not designing, architecting,  and implementing new
operating system type things, I'm often doing the same
to other things.
Some of those other things are my FORTH system, Woodworking,
Home Control, Drawing, and Brewing Beer.

To completely relax, try sleep -- it works wonders!
But sleep is not enough, although my
roommate disagrees with me.
Other pursuits which I enjoy are 
flying, reading science fiction,
comic books, railroading (both prototype and model), and 
role playing games.

You may notice images of the most sublime striped creature, the
Tiger in appearing throughout my WWW pages.
Tiger has taken me for his own.
William Blake's poem
Tyger! Tyger!
puts words to the wonder of Tiger.


On the Road Again

In a tremendous leap of insanity :-)  I've purchased a
house!

The address of my new place is

Josef T. Burger
6301 East Gate Road
Monona, WI  53716-3910


The new voice number is 608-223-0486.

Boring Work

Work at work drives me bananas.
It used to be fun, but now it's a grunge.
Either I've matured, or the jobs has changed over the years, perhaps
some of both.

It seems like we get new parallel computers every other
month, and I have to beat them into
submission, while doing everything else under the sun, moon, and
stars.

I'm currently working on the following projects for
Dave DeWitt, a world-
(in)famous database hacker!


Gamma:  A parallel relational database.
OQL:  An SQL-like query interpreter for object stores.
Paradise
       A Geographic Information System implemented with Shore.
Shore:  An object-oriented data store.
WiSS: The WIsconsin Storage System.
And whatever else needs to be done!

All this, and a whole lot more, occurs at the
Computer Sciences Department
of the
Madison Campus
of the 
University of Wisconsin.
The campus is located in Madison, WI (USA) on a peninsula between 
two of Madison's five lakes.

Not so boring work

In addition to my work for the UW, I also consult. 
I don't provide solutions, but rather advice and technical
expertise. 
Helping out Internet Providers, porting software to new
systems, reviving old computers, and other oddball tasks
are the kinds of things I do.
I'd tell you to
visit my web server
but I haven't had time to do anything there, so it's mostly
empty, except for the home pages of some friends.

Other activities
Uwvax
I operate the uwvax Usenet News 
and UUCP site in my free time.  ""All the news thats fit to 
print"", or something along those lines.  uwvax,
a CS department computer, has been part of Usenet, UUCP, 
and the internet for longer than I've worked here.

Along the same lines, I am also the Computer Sciences Department's
volunteer news master.
Much of that goes hand-in-hand with running uwvax.
However, trying to take care of 3 or 4 news readers across 5 or 6 different
architectures is a trying task.
I don't have much time to take care of that software.

Organizations
I am a member of the following organizations.
I don't always agree with what they do, but they often
have a lot of good benefits, for both members and other users
of their communities.


AOPA (the Aircraft Owners and Pilots Association).
EAA (the Experimental Aircraft Association).
Usenix Association.

Blitz-Drinking

When I was in school a horde of friends
and myself visited a local pub every Thursday night.
This place, The Essen Haus, imports beers from all over the world.
Slowly we worked our way through their entire selection.

Over the years we've developed new acquaintances, and many 
of them became part of our loftily-labelled
Blitz Drinking Society.
We're rather diverse ... some of the members don't drink!
We meet once a year at the Essen Haus during the time of
Octoberfest to have a weekend of fun.

Chud has accumulated
a short history and whatnot
of this charade.


Bolo's Home Page

Last modified:
Tue Apr  2 23:31:48 CST 1996

Bolo (Josef Burger)
<bolo@cs.wisc.edu>


",non-course
"

Brad's Home Page





 Welcome!
 Brad Thayer's Homepage
 Not much here yet...


Mail Me!


 Some links...


A link to the  UW Computer Sciences Home Page .
How about  the cs 640 Intro to Networking Home Page?
Or possibly the cs 736 Advanced Operating Systems Page?
It would be foolish to neglect the cs 737 Computer Systems Modeling Page!
You may be interested in thecs 132 Using Computers Home Page!
You'll probably be bored, but check out the  UW-CS Operating Systems Seminar
anyway.


 J'aime beaucoup boire le café et le Dr. Pepper.





Badgers and Packers page




Some other links...


Web Search with Altavista Search Engine


Find Email Adresses World-Wide


The UW Jazz Page


Duane McLaughlin's Home Page


UW Athletics Home Page




",non-course
"

Scott Breach's Home Page



Scott Breach (breach@cs.wisc.edu)




Addresses
Education
Research Interests
 Publications
 Recreation
 Associates
Addresses
Scott Breach
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
Tel: (608) 262-6618
Fax: (608) 262-9777

Education

Ph.D.

M.S. 
(Computer Science) University of Wisconsin - Madison, 1992
B.S. 
(Computer Engineering) Carnegie Mellon University, 1990

Advisor

Guri Sohi

Research Interests

Computer Architecture
Multiscalar


Publications



Multiscalar Processors
Gurindar S. Sohi, Scott E. Breach, T.N. Vijaykumar
22nd International Symposium on Computer Architecture, 1995.


The Anatomy of the Register File in a Multiscalar Processor
Scott E. Breach, T.N. Vijaykumar, Gurindar S. Sohi
27th International Symposium on Microarchitecture, 1994.


Efficient Detection of All Pointer and Array Access Errors
Todd M. Austin, Scott E. Breach, Gurindar S. Sohi
Conference on Programming Language Design and Implementation, 1994.


Recreation


Wings
Beer
Squid
TV


Associates


Todd Austin
Doug Burger
Babak Falsafi
Alain Kagi
T.N. Vijaykumar


Last Updated: September 1, 1996 by Scott Breach (breach@cs.wisc.edu)



",non-course
"i bleed in nontrivial ways


here is my temporarily-understated page...

my unadorned cs302 page that i provide for section 63.

the 1306 Pizza Pool page.

a brief bio on me.

my hobbies page.

My schedule for Spring 1996

Here are my stinkin' bookmarks.


SUNY-Albany Fall 1996:

I have the poor sod, the unfortunately named ""***** ******"" in my
class. A hypersensitive rockjock cretin who broods, glares, clenches
fist and cracks knuckle at ""MR ******"", or a tragically flighty
femme-man who has been getting razzed and asskicked since the third
grade -- or perhaps a smooth-skinned hardbody leatherboy who leers at
me whenever I call the roll? What difference does it make, since today
I giggled a bit when I said his name and in doing so became a
prostitute to society's bigotries -- my pedagody was my Isaac but the
black goat refused to stay his clawed hand. F**K!

SSSUUUHHH MMUUUHHHH DDDDUUUUUHHHHH MMMMUUUHHHH MAAAAHHHJAAAAAAHHHHH!
FFFUUUHHHHH YYYYYYYUUUUUHHHHH MMMMMUUUUUHHHHHMMMMUUUHHHHH!
UUUHHH UUUMMMM UUUHHHH WWWWWHHHHUUUUUHHHHH!



SUNY-Albany Fall 1995:

If I hit Mr. Zhang with my car, I wouldn't notice.
If I hit Mr. Eggleston with my car, I'd smile.


",non-course
"

 Pei Cao' Home Page 




 Pei Cao (cao@cs.wisc.edu) 

Assistant Professor of Computer Science
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
cao@cs.wisc.edu
Phone: 608-262-2252
Departmental Office: 262-1204
Fax:  608-262-9777


 Education
 Research Interests
 Courses
 Recent Papers
 Recent Talks
 Summary
 My Collection of Links


 Education:

 Ph.D. Princeton University, 1996.
 M.S. Princeton University, 1992.
 B.S. Tsinghua University, Beijing, China, 1990.

 Research Interests:


Operating systems, high performance file systems, memory resource allocation;

High performance I/O systems for parallel computers;


Research Projects:


Optimal Parallel Prefetching and Caching

ACFS: Application Controlled File Caching and Prefetching


 Courses:


CS739: Research Topics in Distributed Systems and Operating Systems (Fall 1996)

CS736: Advanced Operating System (Spring 1996)


 Traces and Simulators: 

 File Access Traces



Recent Papers



Integrated Parallel Prefetching and Caching

Tracy Kimbrel, Pei Cao, Anna Karlin, Ed Felten, and Kai Li,

Princeton CS Department Tech Report TR-502-95, November 1995.  A shorter 
version is in the Proceedings of 1996 SIGMETRICS Conference.


Application Controlled File Caching and Prefetching (PhD thesis)Also Princeton CS Department Tech Report TR-522-96. 

 
Implementation and Performance of Integrated Application-Controlled Caching, Pre
fetching and Disk Scheduling
Pei Cao, Edward W. Felten, Anna Karlin and Kai Li.  CS-TR-94-493, Princeton
University.  To appear in ACM TOCS.

 
A Study of Integrated Prefetching and Caching Strategies
Pei Cao, Edward W. Felten, Anna Karlin and Kai Li.  CS-TR-94-479, Princeton
University. Proceedings of SIGMETRICS/Peformance '95.

 
Implementation and Performance of Application Controlled File Cache. 
Pei Cao, Edward W. Felten, and Kai Li.  CS-TR-94-462, Princeton University,
1994.  Proceedings of the First OSDI Symposium, 1994.
Here are the 
slides of the presentation at OSDI94.

 
Application-Controlled File Caching Policies.
Pei Cao, Edward W. Felten, and Kai Li.  Proceedings of the USENIX Summer 1994
Technical Conference.

 
The TickerTAIP Parallel RAID Architecture.
Pei Cao, Swee Boon Lim, Shivakumar Venkataraman, and John Wilkes.
Proceedings of ISCA 93.  




Recent Talks

Slides for ""Application Controlled File Caching and Prefetching"";
Postscript of Page 26 and
Postscript of Page 46.  




Research Summary

My research focuses on I/O and storage management in uniprocessor and
parallel systems.  In particular, I am investigating two techniques to improve
file system performance: application-specific replacement policies for the file
cache, and aggressive prefetching of file data from the disk.  I have
developed a system in which the kernel allocates physical pages to individual
applications, and each application is responsible for deciding how to use
its physical pages for caching and prefetching.  The system uses a fair
global allocation policy in the kernel, and carefully integrates cache
replacement, prefetching and disk scheduling.  A prototype implementation
on uniprocessor systems has demonstrated
that good application-chosen replacement strategies and prefetching information
can significantly improve the I/O performance of many applications.

Currently, I am extending these techniques to parallel systems.  I am
developing integrated caching and prefetching algorithms for parallel disk
arrays.  In addition, I am investigating the global resource management
problems in operating systems.


Last modified: Wed Apr  24 21:38:49 1996 by Pei Cao

cao@cs.wisc.edu



",non-course
"Mike Carey
Michael J. Carey


Professor (on leave) 
Computer Sciences Department 
University of Wisconsin-Madison 
1210 West Dayton Street 
Madison, WI  53706 

Research Staff Member 
IBM Almaden Research Center 
650 Harry Road, K55-B1 
San Jose, CA  95120-6099 
Phone:    (408) 927-1732 
Primary Fax:    (408) 927-4304 
Alternate Fax:    (408) 927-3215 
E-mail: carey@almaden.ibm.com 

carey@cs.wisc.edu


Research Interests
Database management systems, parallel and distributed computing,
applied performance evaluation.
My research interests lie in two main areas:  database system performance
and next-generation database systems.  In the performance area, topics
of current interest include performance tradeoffs and techniques for
object-oriented database systems, design and evaluation of algorithms
related to transaction processing, and scheduling of complex multi-user
database workloads based on user-specified performance goals.
In the next-generation database system area, I have been involved in the
EXODUS extensible DBMS project;  I am now involved in SHORE, a project aimed
at developing a scalable repository for the storage and sharing of persistent
objects in a heterogeneous environment.  The goal of the SHORE effort, which
is building upon experience from the EXODUS project, is to meet the object
management needs of (and to replace the use of Unix files in) applications
such as CAD/CAM and CASE.

Most recently, I have moved from academia to industry.  After twelve great
years as a part of what's become the best academic database systems research
group in the known universe, the time has come for me to tackle some new and
different challenges.  I am now working at the IBM Almaden Research Center (the
source of a number of of the papers that I've been teaching to my students for
the past twelve years).  My IBM work will be related to objects and databases,
with a significant fraction of my time being spent on a relatively new project
there called Garlic.  Garlic is an effort to build a heterogeneous multimedia
information system that allows data living in a variety of repositories to
be queried and manipulated as though it resided in one, homogeneous, object
database.  I spent 1993-94 on sabbatical at IBM working on Garlic, continued
to work on it in Madison in 1994-95 (focusing, with a graduate student, on a
query/browser front-end tool called PESTO), and am once again working on the
Garlic project ""on location"" at IBM Almaden.

Recent Publications

 ""Extending SQL-92 for OODB Access: Design and Implementation Experience""
(with J. Kiernan), Proc. of the ACM Int'l. Conf. on Object-Oriented
Programming Systems, Languages, and Applications (OOPSLA), Austin, TX,
October 1995, to appear.
 ""Querying Multimedia Data From Multiple Repositories By Content:
The Garlic Project"" (with W. Cody, L. Haas, W. Niblack, M. Arya, R. Fagin,
M. Flickner, D. Lee, D. Petkovic, P. Schwarz, J. Thomas, M. Tork Roth,
J. Williams, and E. Wimmers), Proc. IFIP Working Conference on Visual
Database Systems, Lausanne, Switzerland, March 1995.
 ""Towards Heterogeneous Multimedia Information Systems: The Garlic
Approach"" (with L. Haas, P. Schwarz, M. Arya, W. Cody, R. Fagin, M. Flickner,
A. Luniewski, W. Niblack, D.  Petkovic, J. Thomas, J. Williams, and
E. Wimmers), Proc. 1995 IEEE Workshop on Research Issues in Data
Engineering (RIDE-95), Taipei, Taiwan, March 1995.
 ""A Status Report on the OO7 OODBMS Benchmarking Effort"" (with
D. DeWitt, C. Kant, and J. Naughton), Proc. of the ACM Int'l. Conf. on
Object-Oriented Programming Systems, Languages, and Applications,
Portland, OR, October 1994.
 ""Towards Automated Performance Tuning for Complex Workloads""
(with K. Brown, M. Mehta, and M. Livny), Proc. of the 19th
Int'l. Conf. on Very Large Data Bases, Santiago, Chile,
September 1994.
 ""Making Real Data Persistent: Initial Experiences with SMRC"" (with
B. Reinwald, S. Desslock, T. Lehman, H. Pirahesh, and V. Srinivasan),
Proc. of the Persistent Object Systems Workshop, Tarascon,
Provence, France, September 1994.
 ""Shoring Up Persistent Applications"" (with D. DeWitt, M. Franklin,
N. Hall, M. McAuliffe, J. Naughton, D. Schuh, M. Solomon, C. Tan,
O. Tsatalos, S. White, and M. Zwilling, Proc. of the ACM SIGMOD
Int'l. Conf. on Management of Data, Minneapolis, MN, May 1994.
 ""Fine-Grained Sharing in a Page Server OODBMS"" (with M. Franklin and
M. Zaharioudakis), Proc. of the ACM SIGMOD Int'l. Conf. on Management
of Data, Minneapolis, MN, May 1994.
 ""Managing Memory for Real-Time Queries"" (with H. Pang and M. Livny),
Proc. of the ACM SIGMOD Int'l. Conf. on Management of Data,
Minneapolis, MN, May 1994.
 ""Accurate Modeling of the Hybrid Hash Join Algorithm"" (with J. Patel and
M. Vernon), Proc. of the ACM SIGMETRICS Conf. on Measurement and Modeling
of Computer Systems, Nashville, TN, May 1994.
 ""Indexing Alternatives for Multiversion Locking"" (with P. Bober),
Proc. of the Int'l. Conf. on Extending Database Technology,
Cambridge, England, March 1994.
 ""Client-Server Caching Revisited"" (with M. Franklin), in
Distributed Object Management, M. Oszu, U. Dayal, and
P. Valduriez, eds., Morgan-Kaufmann Publishers, 1994.

",non-course
"

Chin, Chin Tang's Home Page


Chin, Chin Tang
Graduate Student

       University of Wisconsin CS Department

1210 West Dayton Street
Madison, Wisconsin USA 53706

Office: CS Bldg Rm 3310
E-mail: cchin@cs.wisc.edu
Telephone: (608) 262-1721


Current TA assignment

CS367 - Introduction 
    to Data Structures

    Office Hours: Monday 9:30-10:30am / Tuesday 2:30-3:30pm / Friday 9:30-10:30am



Education:
 
MS Biochemistry, University of Wisconsin - Madison, 1996
BS Biochemistry, University of Wisconsin - Madison, 1994



cchin@cs.wisc.edu



",non-course
"

 Satish Chandra's Home Page 






 Satish Chandra (chandra@cs.wisc.edu)




Research Assistant
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
Phone: (608)262-4196

Research

  Research Interests and Summary
  Publications
 C.V. (coming soon, real soon)


...and stuff

  P.G.Wodehouse
  Books
  The Internet Movie Database
  Nostalgia
  The New York Times
  Altavista
  Italian Language and Culture
  Miscellaneous Links


Click  here to see if I am logged on.



",non-course
"

 Trishul Chilimbi's Home Page 



 Trishul Chilimbi  (chilimbi@cs.wisc.edu) 





Click here for the real me


Graduate Research Assistant
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA

Advisor:  Jim Larus 

Research Interests:

Programming Languages, Compilers & Architectures for Parallel Computing

 Compiling for integrated shared-memory & message-passing

 Parallel program performance analysis & enhancement via Visualization

 Shared-memory parallel computer design


Research Projects:

 Wisconsin Wind Tunnel


Education:


 M.S. University of Wisconsin-Madison, 1993.

 B.Tech. Indian Institute of Technology, Bombay, 1992.


 Research Summary 
 Publications




Cachier: A Tool for Automatically Inserting CICO Annotations,


Trishul M. Chilimbi and James R. Larus
(International Conference on Parallel Processing (ICPP), August, 1994).





StormWatch: A Tool for Visualizing Memory System Protocols


Trishul M. Chilimbi, Thomas Ball, Stephen G. Eick and James R. Larus
(Supercomputing '95, To appear, December 1995).


 Awards and Honors 



Certificate of Merit, 1987, 10th in the State Mathematics Olympiad


Presidents Gold Medal, 1988, top 25 in the Indian National Physics Examination


Certificate of Merit, 1988, 1st in the State Examination in Chemistry


Certificate of Merit, 1988, 1st in the State Examination in Electronics 




 Miscellaneous 

 Click here for a movie of me (I can dream, can't I?)

 Curriculum Vitae 

 

 Last Updated: May 12, 1994 

E-mail suggestions for this page to chilimbi@cs.wisc.edu




",non-course
"

 Chandrasekaran Sashikanth's Home Page 



 Chandrasekaran Sashikanth  (csashi@cs.wisc.edu) 





Graduate Student
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA

Advisor:  Mark Hill 

Project:

 VMS 


Education:

 BTech: Indian Institute of Technology, Madras - June 1993.
 M.S  : Univeristy of Wisconsin, CS Department - Dec  1994.


 Last Updated: September 11, 1994 



",non-course
"
	Curt Ellmann 









Curt Ellmann




		Paradise Database Project
	


	Department of Computer Sciences
	


	University of Wisconsin - Madison
	

curt@cs.wisc.edu 

608-263-7132








	Items of Focus


Java Related Items
Paradise Home Page
Paradise Developers Page

			WebGnats Defect Tracking for Paradise
		

			Prototype index of SHORE man pages
		

			My previous life in DoIT
		


	GIS & EOSDIS Related



		The OpenGIS Consortium

		The Global Positioning System (GPS)

		CALMIT, University of Nebraska-Lincoln

		Federated Approach to EOSDIS


	Database Related



		Object Database Management Group Home Page

		Free Database List

		SQL Standards Home Page

		Transaction Processing Performance Council

		Illustra White Papers


Miscellaneous Sites
Campus Sites

Bob's WYRM Hoard
Computer Sciences
WiscInfo
	
WiscINFO gopher
WiscINFO Web Site

UW Madison Library
nic.wiscnet.net

Corporate Web



Apple
IBM
Microsoft


AT&T Research
Lands' End
PAWWS


Commerce Net
Metrowerks
Taligent



Searching the Web


Savvy Search


WebCrawler


Open Text


The WWW Worm


Network Information (MIT)


Other Sites

Internic
International Organization for Standardization
Internet Drafts FTP Site
Dilbert

		Sun World Online
C++FAQ
Winsock Applications FAQ
Current Weather Maps
Dienst
Dienst Implementation
US Geologic Survey
Government Information Locator (GILS)
Oakridge National Lab Center for Computing Sciences
Stock Market Data



Curt Ellmann
curt@cs.wisc.edu
Paradise Database Project
Department of Computer Sciences
University of Wisconsin, Madison

",non-course
"Chee-Yong's Home Page
Chan, Chee-Yong

	  Graduate Student 
          Computer Sciences Department 
          University of Wisconsin-Madison 
          1210 West Dayton Street 
          Madison, WI 53706 

	  Email: cychan@cs.wisc.edu  
	  Office: 5364A 
          Phone: (608) 262-5105 


This page is under construction. 

",non-course
"

Sara Bauman's Home Page


 Sara (Dailey) Bauman

dailey@cs.wisc.edu


Graduate Program: 

Mathematics and 
		Computation in Engineering  (MaCE) 
	University of Wisconsin - Madison 

Computer Sciences  
			Department 
 
			Engineering Mechanics & Astronautics  in the
			Department 
			of Nuclear Engineering and Engineering Physics 




Education:

   BS, Physics and Math/Computer Science, 
	Lewis and Clark College, 1994

Research Work

Publication

Current Schedule 

CS310 TA page 

Links to friends' home pages

Send me  e-mail  

Office Address:

	University of Wisconsin - Madison
	Computer Sciences & Statistics
	1210 West Dayton Street
	CS & S 1304
	Madison, WI 53706
	(608) 262-6601




Last modified: Tue Sep  3 11:32:23 1996 by Sara Dailey
Tues Aug 26 2:05 1996 


",non-course
"

 David Wood's Home Page 



 David Wood  (david@cs.wisc.edu) 




Associate Professor of Computer Science
and Electrical and Computer Engineering
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
david@cs.wisc.edu
Phone: 608-263-7463
Secretary: 265-4892 (Julie Fingerson or Thea Sklenar)
Departmental Office: 262-1204
Fax:  608-262-9777

Research Interests:

 
Computer architecture, 
especially memory system design for uniprocessors and multiprocessors.
 Design, implementation,  and programming of parallel computers.
 Operating systems for parallel computers.
 Performance evaluation tools and techniques, especially 
for memory system analysis.
 VLSI design, including low power design for portable computers.


Research Projects:

 Wisconsin Wind Tunnel (WWT)
 Memory System Performance Tools (WARTS)


Education:

 Ph.D. University of California, Berkeley, 1990
 B.S.  University of California, Berkeley, 1981


Current Graduate Students:

 Babak Falsafi
 Steve Reinhardt
 Brian Toonen


Recently Graduated Students:

 Rahmat Hyder (Intel)
 Alvy Lebeck (Duke University)
 Rob Pfile (Sun Microsystems)
 Mark Callaghan (Informix)


Courses I Teach:

Fall 1996: 

CS/ECE 552 - Introduction to Computer Architecture



CS/ECE 354 - Machine Organization and Programming


CS/ECE 552 - Introduction to Computer Architecture


CS/ECE 752 - Advanced Computer Architecture I


CS/ECE 757 - Advanced Computer Architecture II




 Selected Recent Papers 




Decoupled Hardware Support for Distributed Shared Memory


Steven K. Reinhardt, Robert W. Pfile, and
David A. Wood,
ACM/IEEE International Symposium on Computer Architecture (ISCA), 
May 1996




Coherent Network Interfaces for Fine-Grain Communication


Shubhendu S. Mukherjee and Babak Falsafi and Mark D. Hill and
David A. Wood,
ACM/IEEE International Symposium on Computer Architecture (ISCA), 
May 1996




Synchronization Hardware for Networks of Workstations: Performance vs. Cost


Rahmat S. Hyder and David A. Wood,
ACM/IEEE International Conference on Supercomputing (ICS), 
May 1996




Dynamic Self-Invalidation: Reducing Coherence Overhead in Shared-Memory Multiprocessors


Alvin R. Lebeck and
David A. Wood,
ACM/IEEE International Symposium on Computer Architecture (ISCA), 
June 1995




Active Memory: A New Abstraction For Memory System Simulation


Alvin R. Lebeck and
David A. Wood,
ACM SIGMETRICS
May 1995



Accuracy vs. Performance in Parallel Simulation of Interconnection Networks,
Douglas C. Burger and David A. Wood.
In the proceedings of the 9th International Parallel Processing Symposium, April, 1995.



Application-Specific Protocols for User-Level Shared Memory,


Babak Falsafi, Alvin Lebeck, Steven Reinhardt, Ioannis Schoinas,
Mark Hill, James Larus, Anne Rogers, and David Wood,
In Proceedings of Supercomputing '94.




Fine-grain Access Control for Distributed Shared Memory,


Ioannis Schoinas, Babak Falsafi, Alvin Lebeck, Steven Reinhardt,
James Larus, and David Wood,
Proceedings of ASPLOS VI.




Tempest and Typhoon: User-Level Shared Memory,


Steven Reinhardt, James Larus, and David Wood,
Proceedings of Int'l Symposium on Computer Architecture, 1994.




Cache Profiling and the SPEC Benchmarks: A Case Study,


Alvin R. Lebeck and
David A. Wood,
pages 15-26,
IEEE COMPUTER,
October 1994




Cooperative Shared Memory: Software and Hardware for Scalable Multiprocessors,


Mark D. Hill, James R. Larus, Steven K. Reinhardt, David A. Wood,
ACM Transactions on Computer Systems (TOCS), November 1993.




The Wisconsin Wind Tunnel Project: An Annotated Bibliography,


Mark D. Hill, James R. Larus, David A. Wood,
Computer Architecture News, v. 22, n. 5, December 1994.
On-line version revised frequently.




Wisconsin Architectural Research Tool Set (WARTS),


Mark D. Hill, James R. Larus, Alvin R. Lebeck, Madhusudhan Talluri,
David A. Wood,
Computer Architecture News (CAN), August 1993.



 Research Summary  

My main research goals lie in developing cost-effective computer
architectures that take advantage of rapidly changing technologies.  My
research program has two major thrusts:  

 evaluating the performance,
feasibility, and correctness of new architectures, and
 developing new tools and techniques to facilitate this evaluation.

Currently, this research focusses on the following three areas:

 multi-paradigm multiprocessors,
which efficiently integrate shared-memory, message-passing, and hybrid
programming paradigms,
 a virtual prototyping system, which exploits the similarites
of an existing parallel machine to simulate a hypothetical parallel machine,
 and, techniques for understanding and tuning program performance.


Recent results include developing a new interface---called
Tempest---between user-level protocol handlers and system-supplied
mechanisms. Tempest provides the mechanisms that allow programmers,
compilers, and program libraries to implement and use message passing,
transparent shared memory, and hybrid combinations of the two.  Tempest
mechanisms are low-overhead messages, bulk data transfer, virtual
memory management, and fine-grain access control.  The most novel
mechanism---fine-grain access control---allows user software to tag
blocks (e.g., 32 bytes) as read-write, read-only, or invalid, so the
local memory can be used to transparently cache remote data.

We are exploring alternative ways to support this interface.
The first---called Typhoon---is
a proposed hardware
platform that implements the Tempest mechanisms with a fully-programmable,
user-level processor in the network interface.  A reverse-translation
table (RTLB) invokes the network processor when it detects a fine-grain
access fault.
We have simulated Typhoon on the Wisconsin Wind Tunnel and found that
a transparent shared-memory protocol running on Typhoon performs
comparably +/- 30% to an
all-hardware Dir{N}NB cache-coherence protocol for five shared-memory
programs.

We have also developed a new memory system simulation method that
optimizes the common case---cache hits---significantly reducing
simulation time.
Fast-Cache tightly integrates reference generation and simulation by
providing the abstraction of tagged memory blocks: each reference
invokes a user-specified function depending upon the reference type and
memory block state. The simulator controls how references are processed
by manipulating memory block states, specifying a special NULL function
for no action cases.  Fast-Cache implements this abstraction by using
binary-rewriting to perform a table lookup before each memory
reference. On a SPARCStation 10, Fast-Cache simulation times are two to
three times faster than a conventional trace-driven simulator that
calls a procedure on each memory reference; simulation times are only
three to six times slower than the original, un-instrumented program.
We are also investigating using Fast-Cache's binary rewriting techniques
to support the Tempest interface on existing hardware platforms.


 Last Updated: July 11, 1996 



",non-course
"


Doug Burger's Home Page




Doug Burger's Home Page



Professional information:
Research summary
Resume/CV
Transcript
Course projects
Advisor
Affiliated projects:
Galileo/SCI
Wisconsin Wind Tunnel
Pages I maintain:
WWW computer architecture
UW computer architecture
SimpleScalar tool set
Generica
SACM
Personal stuff:
About me
Useful links
Photo gallery




Riding the DEMON


Hunting those damn cats


Beware of grad school




",non-course
"

Carl de Boor's Home Page





-------------------------------------> last change: 13 sep 96
                           
 Carl de Boor, Professor, Computer Sciences and Mathematics

Department of Computer Sciences
University of Wisconsin-Madison
1210 West Dayton Street

Madison, Wisconsin  53706-1685  USA
Office hours, fall '96 (when in town):  WF11-12, R14:30-15:30


Iso Schoenberg worked here in Madison
*), from 1966 until his death in 1990. 

c.v.
email:  
deboor@cs.wisc.edu 
telephone: (608) 263-7308, 3-2661 
fax: (608) 262-9777

  My schedule for fall '96. I 
am teaching  CS 412 and MA 313.
 Look for some of my former or present 
 students.

 Selected recent articles on approximation theory written at UW are
available by anonymous ftp from 
ftp.cs.wisc.edu/Approx. 
The 
read.me file provides access to individual files there at the
click of a button (it's a clickable version of the read.me file there).
The (small) subset of these (co)authored by me are clickable in 
 here.
 Click here for a 

list of errata for the third edition of [Conte and de Boor,  
Elementary Numerical Analysis: An Algorithmic Approach], and here for that
 list of errata  for the various printings of
[Carl de Boor,  A Practical Guide to Splines].
 Check out the
 latest versions of the
various programs and drivers in that latter book.

 Click Journal of
Approximation Theory 
(published by Academic Press)
for information about that journal (including recently accepted and published
papers) as well as for email and postal addresses of many approximators and
much, much more.
Ditto for
Constructive Approximation
(published by 
Springer-Verlag).
Ditto for
East Journal on Approximations.
Search their
tables of content, singly or combined, (and thank
 Paul Nevai for this
handy tool).
There is also

Approximation down under 
and 
Amos Ron's
list of homepages of
 approximators .

 A spline bibliography is available.

 For links to various publishers, journals,
 people, resources, see the 

 Ilas Information Center (IIC).
  
Seek and ye shall find. 
 For an organized introduction into the joys of vi, see
viva_vi!. There are also
on-screen tutorials. 

 Click here for a great picture of 
Hermite.
The same place also contains useful information about 

html. 
But the
html-primer
might be even better. 

 For a very unusual and ever_changing home page, try 
 David Griffeath's
Primordial Soup Kitchen.
 
 For various interesting information, see
odds and ends
, and thank 
 Allan Pinkus
 at pinkus@techunix.technion.ac.il 
or 
 Paul Nevai
if you find any of it useful. Also, check out 
Paul Nevai's way to make

his mathematical output
available.

 COURSES 
 Check here for information about
 MATH/CS 717..
 Click here for information about
 Numerical Analysis here at CS .

*)
 The house next door to Iso's is now occupied by 
Takis Souganides and
Thaleia Zariphopoulou.

 The Szego bust  now stands 
 here . Have a look at the 
 inscription .


",non-course
"

DEVise Home Page


DEVise: an Environment for Data Exploration and Visualization

Table of Contents:

Features
Examples
In Depth
Publications
Related Work
Release
Contacts

Features
These features distinguish DEVise from other visualization environments:

Visual query interface: Visualizations constructed with one
set of data may be saved and applied to other input data.
Data larger than memory are efficiently handled.
Mapping from data to graphics at record level. (e.g., you can
control the color or shape of individual records.)
Ability to query data records used to represent graphics.
Flexible layout mechanisms within windows. It helps user group data 
together for comparison, or put the aside when not needed.
Linked X, Y, or X and Y axes.
Cursor helps compare the relationship between different views
of the data.
Record based input data.
Direct input of ASCII files.
Integer, float, date, and string data types.

Examples
Check out the following examples for some cool pictures,
and a quick introduction to what DEVise can do. 

R-Tree Validation
Molecular Biology (Cell Images)
Soil Science/BIRCH Clustering
Financial Data Exploration
Family Medicine/National Climate
Data Center
Geographical Information System
Soil Science
File server
Program Traces
Clinical Sciences
 Many more
examples at the Data Viewer for Family Medicine.

In Depth
For a detailed description of DEVise:

Model of Visualization
Visual Query Interface
Performance Issues

Publications

Miron Livny, Raghu Ramakrishnan, and Jussi Myllymaki. ``Visual Exploration of Large Data
Sets.'' In Proceedings of the IS&T/SPIE Conference on Visual Data
Exploration and Analysis, January, 1996.


Michael Cheng, Miron Livny, and Raghu Ramakrishnan. ``Visual Analysis of Stream Data.'' In
Proceedings of the IS&T/SPIE Conference on Visual Data Exploration and
Analysis, February, 1995.


Raghu Ramakrishnan, Michael Cheng, Miron Livny, and Praveen
Seshadri, ``What's next? Sequence
queries.'' In Proceedings of the International Conference on the
Management of Data (COMAD), December, 1994.

Related Work
The SEQ
project is complementary to DEVise in that it is designed to query
record based sequenced data.  The output of the queries may be
visualized with DEVise.

Release Information

We are currently releasing version 1.1.8 of DEVise. The executables
for the Solaris platforms are dynamically linked so you need to 
set your LD_LIBRARY_PATH environment variable appropriately to run
DEVise. On all other supported architectures, the executables are
statically linked and require no shareable libraries at run time.


To download DEVise click here.

Contacts

For more information on this research project, contact

Miron Livny,
Raghu Ramakrishnan,
Jussi Myllymaki,
Guangshun Chen,
or Kent Wenger.


User Support Hotline
 Send mail to the DEVise User
Support Hotline.




This page has been accessed 
times since October 1, 1996.



",non-course
"

 Home Page of David J. DeWitt 


 
David J. DeWitt 

 Professor and Romnes Fellow 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 Telephone: (608) 262-1204 
 Fax: (608) 262-9777 
 Email: dewitt@cs.wisc.edu 

Ph.D., University of Michigan, 1976 
Interests:
Object oriented database systems, parallel database systems, database
benchmarking, geographic information systems 

 Research Summary 

My two main research projects are SHORE and Paradise. The objective
of SHORE is to design, implement, and evaluate a persistent object
system that will serve the needs of a wide variety of target applications
including hardware and software CAD systems, persistent programming
languages, geographic information systems, satellite data repositories,
and multimedia applications. SHORE expands on the basic capabilities
of the widely-used Exodus Storage Manager (developed at Wisconsin,
funded by ARPA) in a number of ways including support for typed
objects, multiple programming languages, a `Unix-like' hierarchical
name space for named objects, and a Unix-compatible interface
to objects with a `text' field. This interface is intended to
ease the transition of applications from the Unix file system
environment to SHORE as existing Unix tools such as vi and cc
will be able to store their data in SHORE objects without modification
(basically a Unix file becomes either a single SHORE object or
the text field of a complex object). SHORE is being targeted at
a wide range of hardware environments, scaling all the way from
individual workstations to heterogeneous client/server networks
to large multiprocessors such as the Intel Paragon. SHORE is a
joint project with Profs. Carey, Naughton, and Solomon. 

The Paradise project is attempting to apply the technology developed
as part of the SHORE and Gamma projects (Gamma is a parallel relational
database system developed at the University of Wisconsin) to the
task of storing and manipulating geographic data sets. Currently,
many geographic information systems (GIS) use relational database
systems to hold their data. While such systems are excellent for
managing business data they are a poor match for the modeling
needs of a GIS which must be capable of storing and manipulating
much more complex objects such as polygons and polylines. Instead,
Paradise employs an object-oriented data model, providing a much
better match to the type needs of a GIS. Another significant difference
from current GIS systems is that Paradise employs parallelism
to facilitate executing and processing large data sets such as
satellite images. The target hardware platform for the project
is a cluster of 64 Sparc 20s connected with ATM. 
 Sample Recent Publications 
 The OO7 benchmark (with
M. Carey and J. Naughton), Proceedings of the SIGMOD Conference,
Washington, DC, May, 1993. 
 Shoring up persistent
applications (with D. DeWitt, M. Franklin, N. Hall, M. McAuliffe,
J. Naughton, D. S chuh, C. Tan, O. Tsatalos, S. White, and M.
Zwilling), Proceedings of the ACM SIGMOD International Conference
on Management of Data, Minneapolis, MN, May, 1994. 
 Client-server Paradise
(with N. Kabra, J. Luo, J. Patel, and J. Yu), Proceedings
of the Very Large Data Base Conference, Santiego, Chile,
August, 1994. 
 Recent Talks 
 VLDB 95 Invited Talk 
 1996 Object-Relational Summit Presentation 


 This page was automatically created January 18, 1995.
 Email pubs@cs.wisc.edu to report errors.




",non-course
"

Charles R. Dyer's Home Page








Charles R. Dyer
Professor
Department of Computer Sciences
University of Wisconsin-Madison
1210 West Dayton Street
Madison,
Wisconsin
53706-1685  USA
E-mail: dyer@cs.wisc.edu
Telephone: (608) 262-1965
Fax: (608) 262-9777
Finger info



Ph.D., University of Maryland, 1979
(Curriculum Vitae)

Areas of Interest:
Computer vision, three-dimensional shape representation,
appearance modeling, view synthesis, active vision, visualization

Group Leader, Wisconsin Computer Vision Group

Program Co-Chair, CVPR '96


Research Interests
 View Synthesis
The goal of this work is to develop basic tools for controlling
in real-time, either autonomously or interactively, a virtual camera
of a real environment.  The input is a set of images or video
streams, acquired from fixed or mobile cameras around a site,
and the output is a panoramic visualization of the scene in which
a virtual, user-controlled camera can be moved through the environment.  
With this technology a user could interactively navigate through
a real environment, controlling a customized path of views of the
site that are not predetermined by the input images.  The main research
question is how to adaptively combine a set of basis images to synthesize
new views of the scene without 3D models or 3D scene reconstruction
as an intermediate step.   Recently we have developed an innovative
technique, which we call
view morphing,
that takes two basis
images and interpolates a continuous range of in-between images 
corresponding to views on the linear path connecting the two camera centers.

 Visual Exploration
Computer vision researchers have recently started to investigate how
to actively control the image acquisition process by controlling
camera parameters.   We have been studying how to purposefully control the
position and orientation of a camera in order to dynamically adjust
viewpoint based on the appearance of a three-dimensional scene. The
use of real-time viewpoint-control behaviors is important for
solving tasks such as exploring an unknown object in order to find
specific surface markings, building a global model of an unknown
shape, or recognizing an object.

By coordinating simple observer behaviors that change the appearance
of surfaces in a well-defined way, we simplify the image computations
required, make precise the global progress of an algorithm, and
eliminate the need for accurate differential measurements of the
camera motion. We believe that this active approach of moving towards
viewpoints that are closely related to the geometry of the viewed
objects is a very important and general one. We have used this
approach to develop provably-correct algorithms for (1) moving to a
side view of a surface of revolution in order to recover its shape, and
(2) reconstructing the global surface of an unknown smooth,
arbitrarily-shaped object.

 Visualization
In the area of visualization we have developed mapping techniques
capable of generating displays of all possible data objects defined in
a user's algorithm, without the need for user-defined, type-specific
graphics display procedures. This capability for displaying
arbitrary combinations of an algorithm's data objects in a common
frame of reference, coupled with interactive control of algorithm
execution, provides a powerful way to understand algorithm behavior,
especially interactive visual experiments with scientific data
analysis algorithms. We have implemented a system called VIS-AD for
experimenting with these techniques and have used it for visualizing
intermediate and final results of data analysis algorithms for
problems such as discriminating clouds in satellite images.


Recent Publications

 S. M. Seitz and C. R. Dyer,
     Cyclic motion analysis using the period trace,
     in Motion-Based Recognition, M. Shah and
     R. Jain, eds., Kluwer, Boston, to appear.
 S. M. Seitz and C. R. Dyer,
     View-invariant analysis of cyclic motion,
     Int. J. Computer Vision, to appear.
 S. M. Seitz and C. R. Dyer,
     
     View morphing,
     Proc. SIGGRAPH 96, 1996, 21-30.
 S. M. Seitz and C. R. Dyer,
     
     Toward image-based scene representation using view morphing,
     Proc. 13th Int. Conf. Pattern Recognition, Vol. I, Track A:
     Computer Vision, 1996, 84-89.
 L. Yu and C. R. Dyer,
     
     Shape recovery from stationary surface contours by controlled observer motion, in
     Advances in Image Understanding: A Festschrift for
     Azriel Rosenfeld,
     IEEE Computer Society Press, Los Alamitos, Ca., 1996, 177-193.
 K. N. Kutulakos and C. R. Dyer,
     
     Global surface reconstruction by purposive control of observer motion,
     Artificial Intelligence 78, No. 1-2, 1995, 147-177.
 S. M. Seitz and C. R. Dyer,
     
     Complete scene reconstruction from four point correspondences,
     Proc. 5th Int. Conf. Computer Vision, 1995, 330-337.
 S. M. Seitz and C. R. Dyer,
     
     Physically-valid view synthesis by image interpolation,
     Proc. Workshop on Representation of Visual Scenes,
     1995, 18-25.
 K. N. Kutulakos and C. R. Dyer,
     
     Recovering shape by purposive viewpoint adjustment,
     Int. J. Computer Vision 12, 1994, 113-136.
 K. N. Kutulakos, W. B. Seales, and C. R. Dyer,
     
     Building global object models by purposive viewpoint control,
     Proc. 2nd CAD-Based Vision Workshop,
     1994, 169-182.
 K. N. Kutulakos, C. R. Dyer, and V. J. Lumelsky,
     
     Provable strategies for vision-guided exploration in three dimensions,
     Proc. 1994 IEEE Int. Conf. Robotics and Automation,
     1994, 1365-1372.
 K. N. Kutulakos and C. R. Dyer,
     
     Occluding contour detection using affine invariants and purposive
     viewpoint control,
     Proc. Computer Vision and Pattern Recognition Conf.,
     1994, 323-330.
 S. M. Seitz and C. R. Dyer,
     
     Affine invariant detection of periodic motion,
     Proc. Computer Vision and Pattern Recognition Conf.,
     1994, 970-975.
 S. M. Seitz and C. R. Dyer,
     
     Detecting irregularities in cyclic motion,
     Proc. Workshop on Motion of Non-Rigid and Articulated Objects,
     1994, 178-185.
 W. L. Hibbard, B. E. Paul, A. L. Battaiola, D. A. Santek,
     M-F. Voidrot-Martinez, and C. R. Dyer,
     
     Interactive visualization of earth and space science computations,
     Computer 27, No. 7, July 1994, 65-72.
 W. L. Hibbard, C. R. Dyer, and B. E. Paul,
     
     A lattice model for data display,
     Proc. Visualization '94, 1994, 310-317.




Recent publications (including abstracts) by Wisconsin Computer Vision Group


Courses Taught


 CS 540 - Introduction to Artificial Intelligence (Spring 1996, Fall 1996)
 CS 766 - Computer Vision (Fall 1995, Spring 1997)



Current Ph.D. Students


 Gareth Bestor
 Brian Morgan
 Steve Seitz
 Liangyin Yu



Ph.D. Graduates


 
Bill L. Hibbard, Ph.D. 1995
(whibbard@macc.wisc.edu)

Visualizing Scientific Computations: A System based on
Lattice-Structured Data and Display Models
 
Kiriakos N. Kutulakos, Ph.D. 1994
(kyros@cs.rochester.edu)

Exploring Three-Dimensional Objects by Controlling the Point of
Observation
 
Mark C. Allmen, Ph.D. 1991
(allmen@iutech.den.mmc.com)

Image Sequence Description using Spatiotemporal Flow Curves:
Toward Motion-Based Recognition
 
W. Brent Seales, Ph.D. 1991
(seales@dcs.uky.edu)

Appearance Models of Three-Dimensional
Shape for Machine Vision and Graphics
 
W. Harry Plantinga, Ph.D. 1988
(whp@wheaton.edu)
The Asp: A Continuous, Viewer-Centered Object Representation
for Computer Vision
 
Charles V. Stewart, Ph.D. 1988
(stewart@cs.rpi.edu)
Connectionist Models of Stereo Vision
 
 Bradley P. Kjell, Ph.D. 1985
(kjell@ccsua.ctstateu.edu)
Oriented Edge Separation Texture Measures



Links of Interest

My Bookmarks



",non-course
"

WELCOME MY FRIENDS, WELCOME TO THE MACHINE


We appreciate your patience while we go through the long, arduous 
task of bringing you a better Home Page.























Check out my education...
Curriculum Vitae


Check out the class I'm teaching...
CS 302 Home Page
CS 302 Section 2 Home Page



",non-course
"

Eric Hazen's Home Page



Eric J. Hazen

Non-Professor
Room 1334 Computer Sciences
1210 West Dayton St.
Madison, WI 53706
263-2644
I am currently working for
Net Scout Services, a project of 
InterNIC.  Wait! Wait! 
We are not a part of 
Registration Services. 
We couldn't help you with your domain name problems even if we wanted to.  
InterNIC does a lot of neat things with all its 
NSF and NSI money and Net Scout 
is one of those things.  We are located in the 
Computer Sciences Department at the 
University of
Wisconsin at Madison.  Seeing as how I could never explain what Net Scout does 
as elegantly as our fearless leader, 
Susan Calcari, check out the 
Net Scout web page for an official 
explanation. I do some design and maintenance on our web site and email list, the 
Scout Report.  I also assist 
Pete DeVries with
tech support for our 5 macs, 1 PC and 2 UNIX machines.
Before coming to Net Scout, I spent two and a half years at the 
Laboratory of Molecular Biology.  
Most of that time I was a full time student as well.  At Molecular Biology, I was what 
we called a Technical Support Assistant/Digital Video Specialist.  Which meant I had 
to run around fixing people's broken mice and answering email questions most of the time, 
but when I was lucky, I got to make cool videos.  If you are interested in using digital video 
for instructional purposes, check out my 

Multimedia Services web page.

I am a graduate of the University of Wisconsin's 
Philosophy program,
which makes me a philosopher (and a real hot commodity in this capitalist society).  
I also completed the requirements for the pre-med curriculum which makes me a 
shameless pragmatist. So why am I here at the Computer Science Department?  Email 
me and we'll talk about it - It's been a while since I've had a good metaphysical 
discussion.

Here are some links that serve no practical purpose, but they make
this page look more standard:


   My resume (not up-to-date)

   
   My multimedia page at Molecular Biology - explains how I made my animations (which have been 
   shown all over the world and are a big hit among drosophila geneticists, I'm told.)
   
   My wonderful girlfriend, Amy's page
Salon Magazine - entertaining and informative ezine 
   created and run completely on macs.
   
   Laurie
   Anderson's Green Room - if you have Shockwave, check out ""Here""

   Kudon's page
Link to the All-Knowing
Witness - A
   QuickTimeVR Documentary about the plight of Bosnia's uprooted population
   
   The
   Billie Holiday Homepage
The National
   Security Archives - check out the Nixon/Presley meetings





ejhazen@facstaff.wisc.edu



Last Modified 10/28/96


",non-course
"
Tina Eliassi-Rad's Home Page

Tina Eliassi-Rad

 
MS, University of Illinois, Urbana-Champaign, 1995
BS, University of Wisconsin, Madison, 1993

Office:  6357 CS Bldg
Phone:   262-7784


eliassi@cs.wisc.edu


",non-course
"For now, try this.
",non-course
"

Eric's Home Page



 
""Passsth me another cold Budweisther !!""



 Address
 
Computer Sciences Department 

University of Wisconsin - Madison 
1210 West Dayton Street 
Madison, WI 53706 


Department of Electrical and Computer Engineering 
University of Wisconsin - Madison 
1415 Johnson Drive 
Madison, WI 53706 
 Office
  3652 ECE
 Phone
  (608) 265-3826
 E-mail
 
ericro@cs.wisc.edu




 Research Area
 Computer Architecture 
 Advisor
 Professor J.E. Smith
Research Topics


 Kestrel (Multiscalar) Project
 Instruction-Level Parallelism (ILP)
 High Bandwidth Instruction Fetch Mechanisms
 Branch Prediction Confidence, Branch Mispredict Tolerance



Publications:


""Trace Cache: a Low Latency Approach to High Bandwidth Instruction Fetching"",
  Eric Rotenberg, Steve Bennett, and James E. Smith,
  To appear in Proceedings of the 29th Annual International Symposium on
  Microarchitecture, December 1996.



  ""Assigning Confidence to Conditional Branch Predictions"",
  Erik Jacobsen, Eric Rotenberg, and James E. Smith,
  To appear in Proceedings of the 29th Annual International Symposium on
  Microarchitecture, December 1996.



  ""Trace Cache: a Low Latency Approach to High Bandwidth Instruction Fetching"",
  Eric Rotenberg, Steve Bennett, and James E. Smith,
  University of Wisconsin - Madison Technical Report #1310, April 1996.


 Resume



",non-course
"

 Babak Falsafi's Home Page 






 Babak Falsafi 

Research Assistant
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
Tel: (608) 262-6618   FAX: 262-9777
email: falsafi@cs.wisc.edu



 My work here 
 People 



Mentor



Cult


Research Interests

  Computer Architecture 
 Performance Evaluation and Measurement of Computer Systems
 Parallel Programming Models


Education

 MS  Computer Sciences,
 University of Wisconsin, Madison, December 1991.
 BS Computer Sciences,
 SUNY at Buffalo, June 1990.
 BS Electrical and Computer Engineering,
 SUNY at Buffalo, June 1990.


 Miscellaneous 

  Publications
  I would rather be drinking this
  I would rather be doing this
  I would rather be reading this
  I would rather be listening to this
  What I used to do when I was in high school
 
When ideas you like fail?
 
When you morf Shubu with Dionosi?
 
Hillarious and profane phone conversations


 Check out the American/French queen! 



 What do computer architects look like?












 Hacking partners in crime 







 A next generation parallel computer 



 Last updated by babak@cs.wisc.edu 



",non-course
"

 Home Page of Michael C. Ferris 



Michael C. Ferris 

 Associate Professor of Computer Sciences and Industrial Engineering
and member of the Center for the Mathematical Sciences 

  Computer Sciences Department 
  University of Wisconsin 
  1210 West Dayton Street 
  Madison, WI 53706 

 Telephone: (608) 262-4281 
 Fax: (608) 262-9777 
 Email: ferris@cs.wisc.edu 

Ph.D., University of Cambridge, 1989 
Interests:
The theory, algorithms, and applications of mathematical programming


 Research Summary 

I am looking at robust methods for solving large-scale variational
inequality and nonlinear programming problems with applications to
problems in economics and engineering.  Pivotal and path-following
techniques are being investigated, based on successive linearization,
with emphasis on numerical properties for large-scale problems and
interfaces to modeling languages.  Particular applications being
considered include economic equilibria and the effects of taxation on
carbon emissions, traffic congestion and the effects of tolling,
structural optimization, contact problems and chemical process design.


I have been considering the use of parallel architectures for solving
problems in nonlinear optimization.  The use of graph partitioning
techniques to determine underlying structure is being investigated as
a tool for general purpose parallel optimization.  Techniques for
exploiting parallel machines directly from within modeling systems are
also under consideration, with prototypes using the condor system.


Extensions of the complementarity framework are also being
investigated, with emphasis on identifying and exploiting underlying
model structure.

 Publications 

Complete list of papers, mostly electronically available.

 Other Relevant Links 

CPNET: Complementarity Problem Net


Mathematical Prgramming at UW Home Page


CS 525

CS 726

CS 733


 This page was updated January 31, 1996.



",non-course
"

David J. Finton's Home Page




         David J. Finton

        finton@cs.wisc.edu
        Computer Sciences Department
        University of Wisconsin-Madison
        1210 West Dayton Street
        Madison, WI 53706
        (608) 262-9275




Welcome to my page!  I'm a grad student / research 
nerd
in artificial 
intelligence
here at the 
University of Wisconsin-Madison.
I grew up in 
Grand Rapids, Michigan,
(which is the 
Late Show's
ex-Home Office),
earned a degree in 
math at Michigan State,
and a master's in 
computer science
here at the UW.
I'm now a dissertator at this 

institution,
after taking a little over a year to develop traffic measurements software
for 
AT&T 
after my first thesis advisor left Wisconsin.

When I'm not at my trusty 
NeXTstation
or the library, I enjoy
playing trumpet and piano, listening to 
""longhair music"",
playing volleyball with the 
InterVarsity
folks, and contributing to the SuperSoaker arms race.


If you have any comments about my pages, feel free to use my 
comment form,
or just send me e-mail.
Or finger my account
to see my current plan and whether I'm on the system.

Gainful employment:
I am a TA for 
CS 540,
Introduction to Artificial Intelligence.

Current Project:
If computers are so smart, why do we have to understand them?
Making machines more 
intelligent
is the goal of Artificial Intelligence.  To me, the essence of intelligence
is the ability to learn and adapt, to learn to act
appropriately in order to reach our goals.
Reinforcement learning treats this problem in the general case where 
the system has outputs to control actions that can change its environment, 
and it has inputs through which it senses its environment.  It also has an input 
for reinforcement, which is a weak kind of feedback which can be expressed as
a positive or negative number.  So, instead of having a teacher to present the
system with input/output pairs, the system instead receives ""thumbs up"" or
""thumbs down"" at irregular intervals.  


My work has focussed on how the need to
distinguish good actions from bad ones can direct the process of building a
good representation of the environment in terms of relevant, or
important features.  (See my note on 
importance-based
feature extraction).  Currently I am applying this notion of 
importance to the problem of learning to balance the need to 
explore the world with the need to perform optimally (exploration vs. exploitation).
I am also investigating ways of using importance to make the learning
process more efficient by allowing the system to specify the starting points for 
its learning experiments
(active learning).  My goal is to develop a better understanding of intelligent
adaptation.  I hope that this will provide a basis for intelligent action which
will also benefit from knowledge-based and task-based work.  See my (really 
out-of-date, sorry!) 
reinforcement learning page
for more information.

My Hotlist
This is 

my browser-independent hotlist.  I keep a copy here so I can 
access it from any of the browser/platform combinations I use.
It's actually my Bookmarks file from 
OmniWeb, 
which is a 

more elegant and more functional browser than Netscape, in my opinion.  OmniWeb
is currently only available for NEXTSTEP, but will be available for
all the 
OpenStep 
variants when OpenStep is released.

My Editorial Pages:

My 
response
to the Jehovah's Witnesses on the deity of Christ

Wisconsin Sites:

 
    InterVarsity Graduate Fellowship, University of Wisconsin-Madison
 Check out the 
weather
in the City of Madison
 WISC-TV's 
Star Trek page 
has programming information and links to other pages.
 The ISTHMUS Daily Page

Some of My Favorite Places to Visit:

The Web Nebulae, and
    
    NASA pictures

    The World Wide Study Bible, and
    
    CrossSearch

    The F-Minor Glenn Gould Homepage

    The Farside Daily

    Star Trek and
    
    Star Trek: Voyager
Enter
    
    The Dilbert Zone
Roam the world with
    
    The Virtual Tourist

    Stereograms!

     How To Tell If Your Head's About To Blow Up

    A true NeXT-head showing what he thinks of Bill Gates.

And now, a word from 
   
   my sponsor.

Last modified: October 31, 1996


finton@cs.wisc.edu



",non-course
"

 Home Page of Charles N. Fischer 


 














     &nbspCharles N. Fischer

     &nbspProfessor of Computer Sciences

     &nbspUniversity of Wisconsin








 Computer Sciences Department  
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 Telephone:	(608) 262-6635 
 Messages:	(608) 262-1204 
 Fax:	(608) 262-9777 
 Email:	fischer@cs.wisc.edu




 Teaching 


This semester I'm teaching

CS 701,
the graduate course in compilers.

In the spring I'll be teaching

CS 536,
the undergraduate course in compilers.




 Research 

My research interests focus on compiler design and implementation.
Recently, I've been interested in how to best exploit the enormous
capabilities provided by modern computer architectures.
Some of the issues my students and I have investigated include:



Code scheduling is important to avoid unnecessary pipeline delays. We have
investigated  issues in

optimally scheduling arithmetic expressions.


The dominant model for global (procedure-level) register allocation is graph coloring.
Is this the best model?
Maybe not.

Other models 
that explicitly quantify the likelihood and benefit of register
residence are very attractive.


Careful register allocation is vital in generating code -- unnecessary loads
and stores must be avoided.
The ultimate in register allocation is
 interprocedural register allocation in which all the
procedures of a program are analyzed.
We have studied

interprocedural allocation models
that optimally
allocate register among procedures in polynomial time.
What's more, the approach seems to be effective in practice.


Anyone who codes in C or C++ knows how easy it is to make mistakes.
Errors involving pointers and array indices are especially common.
We have studied ways to

automatically check all pointer and array operations 
at run-time on shared-memory multiprocessor workstations.
Using one processor to run a program and another to monitor the program,
it is possible to routinely check programs as they execute, with little or
no apparent slowdown.



 Recent Publications 



""Minimum Cost Interprocedural Register Allocation,"" 
Steven M. Kurlander and Charles N. Fischer,

POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming
Languages,
January, 1996.



""Low-cost, Concurrent Checking of Pointer and Array Accesses in C Programs,""
Harish Patil and Charles N. Fischer,
to appear in

Software--Practice and Experience.


 
""Demand-Driven Register Allocation,""
Todd A. Proebsting and Charles N. Fischer,
to appear in

ACM Transactions on Programming Languages and Systems. 


 
""Efficient Instruction Scheduling for Delayed-Load Architectures,""
Steven M. Kurlander, Todd A. Proebsting and Charles N. Fischer,

ACM Transactions on Programming Languages and Systems,
Vol 17, No. 5, 740-776, (1995).


""Zero-cost Range Splitting,""
Steven M. Kurlander and Charles N. Fischer,

SIGPLAN '94 Conference on Programming Language Design and Implementation,
June, 1994.



Other Activities


A new, completely revised second edition of
 
""Crafting a Compiler,""
co-authored with
 
Ron Cytron
and
 
Richard J. LeBlanc, Jr.
is almost complete.
It will be published by
 
Benjamin/Cummings.
Look for it soon at better bookstores everywhere.


I am the ""Short Communications"" Editor for
 
ACM Transactions on Programming Languages and Systems
(TOPLAS).



Education
Ph.D.,
 
Cornell University,
1974

""On Parsing Context-Free Languages in Parallel Environments,""

supervised by John H. Williams.


Ph.D Students


Donn R. Milton,
""Syntactic Specification and Analysis with Attributed Grammars,""
July 1977.


Bruce R. Rowland,
""Semantic Attribute Evaluation During Syntactic Analysis,""
July 1977.


Stephen K. Skedzielewski,
""Definition and Use of Attribute Reevaluation in Attributed Grammars,""
September 1978.


Bernard A. Dion,
""Locally Least-Cost Error Correctors for Context-Free and Context-Sensitive
Parsers,""
December 1978.


Mahadevan Ganapathi,
""Retargetable Code Generation and Optimization Using Attribute Grammars,""
November 1980.


Vimal Begwami,
""A New Approach for Attribute Evaluation and Error Correction in Compilers,""
August 1982.


Jon Mauney,
""Least-cost Syntactic Error Correction Using Extended Right Context,""
January 1983.


Gregory F. Johnson,
""Context Sensitive Attribute Flow,""
August 1983.


Anil Pal,
""Generating Execution Facilities for Integrated Programming Environments,""
December 1986.


William H. Winsborough,
""Automatic, Transparent Parallelization of Logic Programs at Compile Time,""
August 1988.


G A Venkatesh,
""A Framework for Specification and Implementation of Program Analysis Algorithms,""
August 1989.


 
Todd A. Proebsting, 
""Code Generation Techniques,""
August 1992.



Steve Kurlander,
""Approaches to Interprocedural Register Allocation,""
January 1996.


Harish Patil,
""Efficient Program Monitoring Techniques,""
June 1996.





",non-course
"

 Galileo/SCI Home Page 


The Galileo and SCI Projects at Wisconsin

Table of contents

Galileo

Project description
Publications
Related projects

SCI at Wisconsin

Project description
Publications

Project Members



Galileo at Wisconsin



Galileo is a project being conducted in the 
computer architecture group
at the University of Wisconsin-Madison.  Our project focuses on the medium-
to long-term evolution of processor and system architectures, with an emphasis
on the memory system.  Specifically, we are studying what the
relationship between the processor and main memory will be in future
systems: completely separate, as today, or integrated (and if so, to what extent).

Processing capability and bit storage may merge in at least two ways.
Because of increasing off-chip penalties (in issuable instructions) and/or
limited off-chip bandwidth, designers may place more and more capacity
on the processor chip and module, until eventually a sizable fraction
of main memory resides on-chip (represented by the arrow labeled MOP
in the above diagram).  A different possibility is the migration of
processor capability onto the DRAM chips themselves, eventually
obviating the central processor (see the IRAM arrow above).

Our specific research currently focuses on the following areas:

Examining the performance impact of large memory latencies and
limited memory bandwidth in current and future microprocessor-based systems
Performance modeling of the various design points along the
processor/memory (P/M) integration spectrum
Cache hierarchy design for P/M integrated systems
Design of main memory banks in a P/M integrated system
Program execution in systems with multiple integrated chips
(DataScalar architectures)


Galileo-specific publications:


Exploiting Optical Interconnects to Eliminate Serial Bottlenecks
Doug Burger and James R. Goodman.
Appears in the 3rd International Conference on Massively Parallel Processing Using Optical Interconnects, October, 1996.

DataScalar Architectures and the SPSD Execution Model
Doug Burger, Stefanos Kaxiras, and James R. Goodman.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1317, July, 1996.

Quantifying Memory Bandwidth Limitations of Current and Future Microprocessors
Doug Burger, James R. Goodman, and Alain Kägi.
Appears in the 23rd International Symposium on Computer Architecture, May, 1996.

The Declining Effectiveness of Dynamic Caching for General-Purpose Microprocessors
Douglas C. Burger, James R. Goodman, and Alain Kägi.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1261, January, 1995.


Related projects:

IRAM - UC-Berkeley
PPRAM - Kyushu Univeristy, Japan


SCI at Wisconsin
Our group is also closely involved with research relating to cache-coherent
shared-memory multiprocessor design, specifically studying the Scalable Coherent
Interface coherence and transport layers.
We are using SCI, which is an IEEE standard (1596-1992), as a base platform for 
the exploration of our ideas.
The SCI standard specifies a linked-list based hardware coherence protocol, 
which includes support for efficient synchronization primitives 
(Queue On Lock Bit, or QOLB), as
well as optimizations for different sharing patterns, such as 
pairwise-sharing and fresh read-sharing.  The standard also includes a definition
for an extremely high-bandwidth (1 GB/s), low latency transport layer in between
processing elements or individual clusters.

We are currently performing SCI-related research on the following topics:


Extending SCI with logarithmically-growing sharing structures
Efficient hardware synchronization for shared-memory multiprocessors
A scalability study of the base SCI protocol, including its standard extensions
Aggressive consistency models for shared-memory multiprocessors


Wisconsin SCI Publications:




The GLOW Cache Coherence Protocol Extensions for Widely Shared Data
Stefanos Kaxiras and James R. Goodman.
To appear in the proceedings of the 10th ACM International Conference on Supercomputing, May, 1996.
Kiloprocessor Extensions to SCI
Stefanos Kaxiras.
To appear in the proceedings of the 10th International Parallel Processing Symposium, April, 1996.

Techniques for Reducing Overheads of Shared-Memory Multiprocessing
Alain Kägi, Nagi Aboulenein, Douglas C. Burger, and James R. Goodman.
Appears as ""Best Architecture Paper"" in the proceedings of the 9th ACM 
International Conference on Supercomputing, July, 1995.
Also University of Wisconsin-Madison Computer Sciences Department TR #1266, May, 1995.

Simulation of the SCI Transport Layer on the Wisconsin Wind Tunnel
Douglas C. Burger and James R. Goodman.
In the proceedings of the Second International Workshop on SCI-based High-Performance Low-Cost Computing, March, 1995.
Also University of Wisconsin-Madison Computer Sciences Department Technical Report 1265, March, 1995.
Hierarchical Extensions to SCI
James R. Goodman and Stefanos Kaxiras.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1235, July 1994.
Extending the Scalable Coherent Interface for Large-Scale Shared-Memory
Ross Evan Johnson.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1136, February 1993.
Hardware Support for Synchronization in the Scalable Coherent Interface (SCI)
Nagi M. Aboulenein, Stein Gjessing, James R. Goodman, and Philip J. Woest.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1117, November 1992.
Interconnect Topologies with Point-to-Point Rings
Ross E. Johnson and James R. Goodman.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1058, December 1991.
 Analysis of the SCI Ring
Steven L. Scott, James A. Goodman, and Mary K. Vernon.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1055, November 1991.
Lower Bounds on Latency for Scalable Linked-List Cache Coherence
Ross Johnson.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1029, June 1991.
An Analysis of Synchronization Mechanisms in Shared-Memory Multiprocessors
Philip J. Woest and James R. Goodman.
University of Wisconsin-Madison Computer Sciences Department Technical Report 1005, February 1991.
A Set of Efficient Synchronization Primitives for a Large-Scale Shared-Memory Multiprocessor
James. R. Goodman, Mary. K. Vernon, Philip. J. Woest. 
In the proceedings of the Third International Conference on Architectural Support for Programming Languages and Operating Systems, April, 1989.
Also University of Wisconsin-Madison Computer Sciences Department Technical Report 814.



Project participants:
 Faculty 

  Jim Goodman

 Graduate students 

  Doug Burger
  Alain Kägi
  Stefanos Kaxiras

 Project alumni 

Nagi Aboulenein
Ross Johnson
Steve Scott


Last modified: Fri Aug 2 09:12:00 1996 by Doug Burger

(dburger@cs.wisc.edu)



",non-course
"

Andrew Geery's Home Page






  Andrew Geery  geery@cs.wisc.edu



1301 CS&S 
 1210 West Dayton Street
 Madison, WI 53706
 (608) 262-6600




1402 Regent St
 Apt. #304
 Madison, WI 53711
 (608) 255-4026





 B.A. from  UW-Madison
in  computer science May 1996 
 Currently working on M.S. in  AI
 T.A. for CompSci 132  (Grades)
  My schedule
  Pontifications





 People of Interest 

  Jacques Derrida and post-structuralism
  Martin Heidegger
  Albert Camus
  Jean-Paul Sartre
  Friedrich Nietzsche



",non-course
"

Gideon Glass




Gid homepage





(this is not me)



This is my continually-tweaked homepage.  Thanks for stopping by.


I collect images that I find on the web and deposit them into a
 directory.
(Samples below.)

Sample: here's a picture of some guys who were once claimed to be 
 cooler than you are (according to
Onion).  Did you see
this movie?  (It's The Usual Suspects.)
If not, run, don't walk, to the nearest Blockbuster and get it.


 Note: I recently moved, and none of my new roommates have a VCR.
Being Dutch, I'm so cheap that I don't have one either.
Given this predicament, and the dismal prospects of improvement (with
no outside influence, that is), please consider making a small donation
to help defray the cost of a VCR purchase.
Checks and money orders
can be sent to the following address.  Please, send no cash.  

	Gideon Glass
	1633 Monroe, 3rd Floor
	Madison, WI  53711  USA

Thank you for your support.

Being a grad student, I sometimes find myself reading papers, even
though I have two shelf-feet of unread books waiting to be read.
Anyhow, if you're looking for something, here's Alf-Christian Achilles's  huge index.
You might also try the  Unified CS
techreports index.  




Class project reports and other
stuff by me are available. 



If you run the following program, your machine's load average
will grow big fast:

main() { while (1) fork(); }



Some doofus actually did this on a big time-sharing machine back 

when I was at Calvin.


  A great time-killer: see what  Zippy the Pinhead
has to say.  Try reloading it several times (or just
try this). 



Last fall (1995) we killed time by 
tweaking netscape,
but nothing (I think) we did works on Mozilla 2.0 or higher.  Oh well.
Before that I dabbled in object-oriented programming
in C, 
mostly as an exercise.  I suppose I should have a Netscape button
here, but that MS-thing over to the right will have to suffice.


In case you're here because I told you about something
in my bookmarks, there they are.



Dennis Ritchie, co-creator of UNIX, wrote the 
anti-forward 
to UNIX-HATERS Handbook.











 





Send me mail
and maybe win 
 
(or maybe this.) 

But please, no 





",non-course
"
Andy ""Krazy"" Glew's 
University of Wisconsin 
Home Page


Andy ""Krazy"" Glew's 
University of Wisconsin 
Home Page


This is Andy's first cut at a Wisconsin home page.  It is largely
formed from snippets of my Intel home page, and is not very stylish
or organized.


Summary

Contact:
    how to get in touch with me, ship things to me, etc.
    - my addresses
Calendar:
    how to arrange meetings with me, etc.
Filesystem:
	access to the ""raw"" filesystem,
	~glew/public/html/.
	== http://www.cs.wisc.edu/~glew/.
	My approach is to let anyone (on the web) read any of my files,
	unless I specifically arrange not to - i.e. I am open by default.
Scribe and minutes taker for 
    
    Sohi research group weekly meetings
    


    Research Interests
    
    in a rather generic form, adapted from my Ph.D. application.
    


	Dynamic versus Static Computer Architecture
	



    Wannabe Author: The Art of Computer Architecture
    


    High-level editting
    

    Thoughts about (Higher) Education

    Suggestions as to how to more effectively work on
    
    patents
    

    Claims to Fame
    


    Miscellaneous Info
    


    Web stuff
    


    Self Image
    


    RCS and Configuration Management
    


    Resume.
    


    Favorite quotes and sayings.
    




    Self Image
    



Joe Beef of Montreal, the Son of the People


    He cares not for Pope, Priest, Parson, or King William of the Boyne;
    all Joe wants is the Coin.
    He trusts in God in summer time to keep him from all harm;
    when he sees the first frost and snow
    poor old Joe trusts to the Almighty Dollar
    and good old maple wood to keep his bellow warm,
    for Churches, Chapels, Ranters, Preachers, Beechers
    and such stuff 
    Montreal has already got enough.
    


    Joe Beef was an inn-keeper at Montreal's harbour in the 1800s,
    deplored by churchmen as a notorious atheist.
    He was less well-known for his charity.
    All stranded sailors knew that they could always go to Joe Beef's
    and, in exchange for chopping a few chords of firewood,
    get a meal and a warm place to sleep.
    Joe printed the above manifesto on handbills and advertisements.


Computer Architect and OS Hacker

Although I was an ""Aspiring Computer Architect"" (something I formerly
had on my fake Motorola business card) ever since I started working with computers
- the first thing I did on learning Z80 assembly was redesign the chip - 
I started out as a UNIX kernel hacker (Gould real-time UNIX) and
still think of myself wistfully as an OS hacker.




I have a beard.
I frequently wear suspenders.
I am not balding!



Computer Architecture
Once and Future...

I was involved in the microarchitecture of the Intel Pentium Pro (P6),
and in the adoption of MMX by Intel. See my resume.



Wannabe Author: The Art of Computer Architecture



I am constantly on the verge of writing a book entitled 
""The Art of Computer Architecture""
- a grabbag of tricks and techniques, 
sort of an antidote to Hennessy and Patterson
- but I cannot afford the diskspace on an Internet service provider
or the charges for an always connected system of my own. 
Suggestions appreciated...


Interesting Pieces of Computer Architecture

One of the best ways to  learn how to be a computer architecture is to read
- not textbooks, but datasheets, 

instruction set references, 

etc.




    Miscellaneous Info
    

Web wanderings...  
Netscape

bookmarks



Stocks


Coding Standards
Roy Wilkinson's
P6 C Coding Standards

I disagree with many of these.




    RCS and Configuration Management
    


Although, or perhaps because, I quit my first real job 
(at a quickly defunct startup company called Enfoprise, 
building ""business workstations"")
on the first day 
because they had changed my job assignment 
from UNIX driver writing
to ""Systems Integration"",
I have had a longstanding love/hate relationship with configuration
management tools like SCCS and RCS.


My first published paper was
""Boxes, Links, and Parallel Trees: Elements of a Configuration Management System""
in the first USEnix Workshop on Software Management.
In this I described a centralized RCS database,
with multiple ""views"" and hardlink cloning to save space and time,
as used by Gould Computer Systems Division's UNIX team.


Brian Berliner deprecates my approach in one of the CVS papers,
mainly because he advocates an optimistic concurrency control approach,
whereas he thought that I advocated locking.
Actually, I advocate optimistic concurrency control,
but I also advocate locking in case the optimistic version 
gets into livelock;
and, I usually insist that there be a single, identified, serial schedule 
of source code checkins
so that testing can proceed in a linear manner.
I require programmers to test that their new code works 
in a system with all previous fixes applied.
(Although I recognize that even this requirement can be relaxed.)


I often use a more stripped down version of the same approach
in things like the 

P6 EAS
.
I apologize for never having created a truly portable set of tools to accomplish this.


P6 uses a similar approach,
although Mike Fetterman and Mark Aitken deserve the credit here.


For P6 I enhanced RCS 5.5, with several features that went into RCS 5.6,
most notably the -r. version number (which became -r$ in RCS 5.6).


And, overall, I am sufficiently a fan of RCS that I RCS everything,
including my .cshrc, .login, and even my web page.




    Calendar
    

Wisconsin
How to arrange meetings with me, etc.:

Since there seems to be no ubiquitous calendaring or scheduling program
at the university of Wisconsin CS Department - various people use 
SUN's cmtool, or the public domain ical or plan, but there is not a critical mass of any
of these - I am now doing my calendaring in isolation, using the Pilot PDA and its associated PC software.
At least this means I can add meetings on the fly.
When it gets into my Pilot, the meeting is ""committed""
(or at least as committed as is possible).

I may also record meetings on the fly using my Voice Organizer.


Therefore, to arrange a meeting with me, you must get in touch with me,
preferably by email, possibly by phone or in person, so that I can manually
add the meeting to my calendar.

 
I have not yet created a way to download my calendar from the Pilot software
to a web page.

 
I have not yet created a way to download my calendar from the Pilot software
to my Microsoft watch.



Intel
At Intel, I was a devout user of the group scheduling program
- last time I was at Intel, Synchronize (UNIX/PC), but also OnTime in the past
- which were weak in that they did not have disconnected operation or email operation,
but at least allowed the majority of people in MD6 and MRL to schedule meetings
with me without my manual intervention.
At Intel, the scheduling algorithm was: 
if you have access to Andy's calendar using Synchronize, use it
(but also tell Andy what the meeting is about by email or in person - I reserve
the right not to go to meetings to which I have been blindly invited);
if you cannot use Synchronize, if urgent make the meeting
    with Andy's admin, Teresa Locke, who can put it in Synchronize;
if possible, check out Andy's calendar on his web page
    and propose
if the meeting is not urgent, e.g. is two or more weeks in the future,
    you can avoid bothering Teresa
    by sending Andy email;
but realize that Andy may miss the meeting if you have not sent the
    email far enough in advance.

Overall
Scheduling and calendaring, and other PIM and PDA-like topics,
are something that I am fascinated with.  
How do we bring the efficiency advantages of having personal secretaries
and aides de camp to all computer users?



$Header: /afs/cs.wisc.edu/u/g/l/glew/public/html/RCS/glew.html,v 1.43 1996/11/06 17:28:56 glew Exp $


",non-course
"

 Jim Goodman's Home Page 



 James R. Goodman  (goodman@cs.wisc.edu) 





Professor of Computer Sciences
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA

Research Interests:

 Lots of good stuff


 Current Projects: 

 Galileo and SCI at Wisconsin


 Last Updated: May 2, 1994 



",non-course
"

Greg Sharp Home Page


Greg Sharp Home Page
Name: Greg Sharp
Email: greg@cs.wisc.edu
Office: CS&St 1307
Office Phone: (608)262-6602
Office Hours: 
6:00pm-8:00pm Mon and 12:00pm-1:00pm Wed (or by appt.)
TGIF: Every Friday, from 4:30-5:15 in CS 2310.

CS Dept
CS 302
Section 6 & 9


      CS 302 Instructors
Fall 1995 Lecture Notes |
      Spring 1996 Lecture Notes

Classes Fall 1996

CS 764 Topics in Database Management Systems
  CS 838-2
      Finding Out About

Search Engines

Altavista |
      DejaNews |
      Excite |
      Infoseek |
      Lycos |
      MetaCrawler |
      Yahoo |

Usenet FAQ's

FTP Mirrors:
      MIT |
      AOL |
      GWU
HTML format:
      Ohio

C and C++

Programming in C
Learn C/C++ Today
The C++ Library
C++ Draft Standard (April 1995). Mirrors: Stanford | Cygnus
G++ FAQ

      LIB G++ Info

      STL Reference

      Mumit's STL Newbie guide

Platform Independant GUI Libraries in C++


      Portable GUI Development Kits FAQ
Amulet (OK)
  DCLAP
      (strings attached/requires Motif)
  SUIT (strings attached)
  V (OK)
  wxWindows (OK)
  YACL (OK)

Classes Spring 1996

CS 558 Introduction to Computational Geometry
  CS 752
      Computer Architecture I
  CS 752: My Computer Architecture Project
CS 760 Machine Learning
  CS 760: My Machine Learning Project

Classes Fall 1995

CS 513 Numerical Linear Algebra
  <!--A HREF=""/~chavey/cs520.html"">CS 520<!--/A>
      Introduction to Theoretical Computer Science
  CS 766 Computer Vision
  CS 766: Images from Homework #2
CS 766: My Computer Vision project

Misc Freeware and Shareware

Zip-Info
cygwin32 
      (GNU software for win32)
  
      Internet Directory
GIMP
Harmonay (Harmony is the Unix/X11 client for Hyper-G, i.e. the Hyper-G browser )

Image Databases

VASC Image Database
      (here is an 
      alternate link) (video pics for vision research)
  
      Range Image Database (shape from shading pics)
  
      MSU/WSU Range Image Database (more shape from shading pics?)
      (this gives a few links to other image databases...)
  
      APS Image Database (A pretty cool idea.  you specify a section
      of the night sky, and you get an image)
  
      Japan Image Database(JAIDAS) (about 5 years worth of atmospheric
      data images.)
  
      Multiresolution Seamless Image Database (this is cool. click
      to zoom in at any resolution).
  
      Views Of The Solar System (nice pics of the sun, moon, planets,
      comets, meteors, etc).
  
      The Wyoming CD-ROM - An Image Database version 2.0 (pics of wyoming,
      but also lots of misc stuff like pics of other planets and overhead
      shots of antarctica)
  
      Satelite Image Catalogue in NIAES (satelite pics of japan)
  
      Gothic Image Database (what can i say...)
  
      Electric Postcard Card Rack (nice selection.  Thanks for the link
      Todd!)
  
      MIT VisTex Texture Database

Artificially Generated Images


      Primoridial Soup Kitchen (UW Math Department) (An awesome web site!)

Medical Image Databases


      On-Line Images from the History of Medicine (OLI) and
      
      documentation (why do some of the pictures have diagonal lines
      through them?)
  
      Dermatologic Online Image Atlas based on the Erlanger Image Database
      (in Germany) and
      
      (a mirror in Japan) (This is a pretty cool idea too.  You enter
      your diagnosis, and get back an image.)
  
      Orthopaedic Image Database (a nice database)
  
      ECVNet Image Data Bases (list of links)

Optical Character Recognition

Handwriting Recognition Home Page
NICI Handwriting Recognition Group

Image Processing


      PNG Home Page

      Image Processing Home Page (Washington State University)

      Image Libraries and Software

3D Computer Graphics (software)

POV-Ray raytracer home page
Rayshade, Utah Raster Toolkit, more.
Radiance ray tracer/radiosity package
Avalon archive of 3D objects
More POV-Ray stuff
DKB ray tracer, POV-Ray mirror

      Ian Grimstead's massive list of ray tracing
3DSite
IMT's CAD Reference Site

3D Computer Graphics (hardware)


      3D Graphic board FAQ
Intergraph
Lockheed
GLint chipset
Nvidia chipset

Computational Geometery

The Geometry Center
Application Challenges to Computational Geometry

Lisp
Useless Pages
Computer Architecture


      Computer Architecture Home Page

      Hennessy/Patterson Resources (for 752 text)
SuperDLX
Parallel Computing Simulators
PARL (New Mexico State Univ.)
      (includes database of traces, and more architecture links).
  
      Univ Washingtion Architecture Group (a big ole' index of simulators!)
  
      Georgia Tech Architecture Group

Japanese Computing

Guide to Japanese Computing (Unversity of Washington)
Monash Archive
(Index)
More Japanese Computing Stuff
InfoWave
EDICT
Windows95 English and Japanese FAQ
Japanese English Dictionary
Shodouka
Asiasoft

Information Retreval

Peregrinator
      (A robot that traverses and indexes the web. Written in perl).
  TREC (Text REtrieval Home Page)
  INFOMINE
Managing Gigabytes
      (A freeware (gnu) search engine for text, images and textual images).
  Providing Gov. Info. on
      the Internet: Experiences with THOMAS
More THOMAS feedback
IR linguistic utilities
AI Repository - Information Retrieval Tools
Survey of IR
Natural Language Processing & Information Retrieval (by NIST)
  Computers and language on the web
Index of /software/other_sw/info_retrieval/

      World Wide Web Robots, Wanderers, and Spiders
JEDI Project (This might not be strictly related...)
  The 
       Hartlib Papers Project (This has a Latin stemmer!)

  The Information Retrieval / Multimedia Retrieval Group at DCU (academic group)

  IS 586 Information Retrieval Systems (a related course)
  CS5604 - Information Storage and Retrieval (a related course, includes history of IR!)
  CS 494 - Information Retrieval (a related course)

News

Pointcast (Check out their
      customized portfolio and automatic update tools)

Literature

Mark Twain

Humor

I apologize to all net citizens for the very offensive links on
      my web site.  I threw those links in the garbage where they belong!

Investing

InvestorWeb
Networth
Fundscape
Brill Editorial Services
Stockmaster

Mutual Funds Brokerage Houses

Fidelity Investments
Vanguard
T. Rowe Price
Jack White & Company
e.Schwab (Charles Schwab)
Gabelli Funds
1-800-Mutuals

Misc

Man pages for psnup


Last modified:
Mon Nov  4 14:44:50 CST 1996
by Greg Sharp

greg@cs.wisc.edu
| http://www.cs.wisc.edu/~greg/greg.html



",non-course
"

Sridhar Gopal


Sridhar Gopal
gsri@cs.wisc.edu


Bone Marrow Page
Resume
State of Wisconsin Web Page
Calvin & Hobbes


Bookmarks



",non-course
"

Guangshun's Home Page


 Welcome to Guangshun's Home Page! 
It's me !. 


  Graduate Student  
  Department of Computer Science  
 1210 W. Dayton, Rm 7390 
  University of Wisconsin - Madison  
  Madison , WI  53705   
  USA  
Phone: (608)231-0592 (home) (608)262-6629 (office)



 Education 

   University of Wisconsin - Madison  
   California State University - Los Angeles  
   Peking University ,  Physics Department Grade88  


 Research Interests: 
 Database Management Systems 


 Advisers: 
  Raghu Ramakrishnan 
  Miron Livny 


 Projects: 
  Data Analysis  project with family medicine 
  DEVise  A Data Exploration via Visualization Environment

 Classes: 
  cs739 
 cs764
  cs838 



 Interesting hot links.  
    Fun Stuff   
    Computer Related   
    Career Planning   
    Chinese Related   
    Miscellany    



 Send me email 




  Weather Forecast for Madison. 

You are visitor    since June 26, 1996.





",non-course
"

 Guhan Viswanathan's Home Page 






 Guhan Viswanathan  (gviswana@cs.wisc.edu) 

Graduate Student
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA

Advisor:  Jim Larus 



 Thesis Research  
My thesis focuses on the design and implementation of data-parallel
languages. I have been involved in the design of C**, a data-parallel
language (based on C++) developed locally. I have implemented a C**
compiler targeting the CM-5, and am investigating how data-parallel
applications can be executed as efficiently as hand-coded parallel
programs.




Here's a

more detailed research summary .




Here's a  list of my
       publications.




 Useful links 


 


",non-course
"


Harit's Home Page. 







Harit's Den







Hi. I am a Graduate student at 
University of Wisconsin at Madison in the 
 Department of Computer Sciences . 
Would you like to get a list of my 
 classmates?





Courses I'm taking in Fall '96:

  
	CS 564: Database Management Systems 
	- 
	Prof.Raghu Ramakrishnan 
  
	CS 752: Advanced Computer Architecture I 
	- 
	Prof. Mark Hill 


Courses I'm taking in Spring '97:

 
	CS 757: Advanced Computer Architecture II 
	- 
	Prof. James Goodman 




I was an undergraduate student at the World-famous 
 
MVSR Engineering College  
under OSMANIA University, Hyderabad, India. 





 


By the way, did you meet my
 cat? 





Here are some of the things that interest me:

  Indian newspapers 
  Other Stuff (CNN,MTV,Sports,etc.) 
  Sastry's Links 
  My Roommate's home page (SAEED MIRZA) 
 
	Murthy's hot links 
  Some 
Zubber-Dust photos
   Photographs of my UNIVERSITY 




Warning: Click  HERE  only if you ARE ABOVE 18 
years of age. 



Bye folks.




This page has been accessed 
 
times since Sept. 8 1996 (counter courtesy 
 Web-Counter )

This page has been accessed 
 
times since Sept. 8 1996. 



My electronic mailing (e-mail) address is: 
 Harit@cs.wisc.edu.


",non-course
"

 Rebecca Hasti's Home Page 



  Rebecca Hasti 

Graduate Student/Research Assistant
Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI  53706-1685

Office: CS 5385 
E-mail: hasti@cs.wisc.edu
Telephone: (608) 262-1079
Telephone: (608) 262-1204 (dept)


To see my very first Java applet click here.



Fall 1996 Schedule: 


CS 838 (IR)	T R	8:30 - 9:45 	3345 Engr 
CS 838 (Java)	T RF	1:00 - 2:15 	168 Noland 
PL Seminar	  R	4:00		2310 CS 




MS Computer Sciences, University of Wisconsin-Madison, 1995

MA Mathematics, University of Wisconsin-Madison, 1994

BA Mathematics, Carleton College, 1990

Interests: 
programming languages, AI, basketball, volleyball, softball...


  Linkage  

 Last Updated: September 4, 1996 



",non-course
"


Home Page for H. Chad Lane







 [
ACADEMICS ·
TA: CS302 ·
PERSONAL INFO ·
NEAT STUFF ]



Dept. of Computer Sciences
University of Wisconsin-Madison
    1210 West Dayton St.
    Madison, WI  53706-1685

    Dept. Phone: (608)262-1204
  


e-mail:
	     Office Address:
	     Office Hours:
	     Office Phone:
	     Home Phone:
	     Fax:


hcl@cs.wisc.edu


             5364a CS&St
             10am - 11am, T Th
             (608)262-5105
             (608)250-9599
             (608)262-9777





Welcome
Thanks for stopping by my web page, I do hope you enjoy it.  Your best
bet for fun here will be in my links and fun stuff section.
The biggest news of my life right now is that I'm getting married on
May 24, 1997 to Nichole.  Finally,
I just want to tell you good luck.  We're all counting on you.          
    


Academics

 Fall 1996 courses:
       
CS838:

	     FOA:  Information Retrieval and Other Technologies for
	     Seeking Information
CS564:

	     Database Management Systems
LING540 (audit):
	     Advanced Semantics
       
Research Interests: AI,
       Computational Linguistics, and Discourse Processing.
  
       Useful advice for doing research(from Jon Barwise)

       Epigrams in Programming(by Alan J. Perlis)
 Education:
  
 B.S. Mathematics and Computer Science, minor in Philosophy, cum
       laude, May 1995, Truman
       State University (formerly Northeast Missouri State        
       University).
   M.S. Computer Sciences, expected May 1997,
       University of Wisconsin-Madison.
  



Personal Information

Who am I?  Why am I here?
What does ""H."" stand for?



Neat Stuff (according to yours truly)
Click on an image...




Cyber-poop
   (a creation of my unabashed brother, Bart Arthur Lane).

















 Download Claude
(Claude is a psychotic DOS program that you can talk with)
 
       Raise a plant via the Internet
 
       Deep Thoughts (by Jack Handy) (Reload for different ones)

 
Last Modified:


Mon Oct 28 20 :07:32 CDT 1996
by H. Chad Lane
",non-course
"

Susan Hert's Home Page 




 Susan E. Hert hert@cs.wisc.edu




Research Assistant 
 Department of Computer Sciences  
University of Wisconsin-Madison 
1210 W. Dayton St. 
Madison, 
WI  53706-1685 
Telephone: (608) 262-5105 





 Curriculum Vita 
       (postscript)
   Research Interests
 Publications
 Software
 Other Interesting Links






 Research Interests

  Applied and Experimental Computational Geometry
     Analysis of Algorithms
     Design of Motion Planning Algorithms
     Computer Graphics for Geometric Algorithms

 Advisor:  V
ladimir Lumelsky 

Currently, I work in the 
UW Robotics Lab developing motion planning alogirthms for multiple 
robots in a common environment.  


 Selected Publications 

  Susan Hert, Vladimir Lumelsky,  

         ""Deforming Curves in the Plane for Tethered-Robot Motion Planning"".
         (An 
          extended abstract of this paper appeared in  Proceedings of 
          1996 Canadian Conference on Computational Geometry, August 1996.)
     Susan Hert, Vladimir Lumelsky,  

         ""Planar Curve Routing for Tethered-Robot Motion Planning""
         to appear in International Journal of Computational Geometry &
         Applications.
     Susan Hert, Vladimir Lumelsky,   

         ""The Ties that Bind: Motion Planning for Multiple Tethered Robots"",
         Robotics and Autonomous Systems  17 (1996) 187-215. 
         (A version of this paper was published in
          Proc. 1994 IEEE International Conference on Robotics and 
             Automation , May 1994.)
     Susan Hert, Sanjay Tiwari, and Vladimir Lumelsky,  

        ""A Terrain-Covering Algorithm for an AUV"", to appear in 
         Journal of Autonomous Robots Special Issue on Autonomous Underwater
             Robots .
     Susan Hert, Vladimir Lumelsky,  

         ""Moving Multiple Tethered Robots between Arbitrary Configurations"",
          Proc. 1995 International Conference on Intelligent Robots and
             Systems , August 1995.
     Susan Hert, Dan Reznik,  

         ""The Simulation Library: A Basis for Animation Programs (Version 2.0)""
         , Technical Report RL-95002,
         University of Wisconsin-Madison, Robotics Laboratory, July 1995.




Interesting Links

 Computational Geometry Pages
 Computer Science Education Links
 Books on the Web
       
 Reference Shelf
 The Library of Congress
 The On-line Books Page
 Travels with Samantha

 Cooking on the Web
        
 Epicurious
 Veggies Unite!


",non-course
"

 Kirk Hogenson 



  Kirk Hogenson 



Graduate Student
Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI  53706

Office: CS&S 6387
E-mail: hog@cs.wisc.edu
Telephone: (608) 262-5083

 I am Kirk
Hogenson
    I am a graduate student 
    at the UW-Madison in 
    Madison,
    Wisconsin. I am in the
     UW-CS Department.

 I'm the TA for 
CS310, Sections 304 and 305.  My office hours are:

 Tues 11:00 - 12:30
   Wed 3:30 - 5:00

You can also look at my
schedule.  If none of my office hours work
out for you, e-mail me and we'll try
to set up an appointment for some other time.


 Here is what you can do:


 finger me.
   Send me some mail
 Visit Ghana,
       the country I was in while serving in the
       
       Peace Corps.
   Why is my username hog?
   Check out the 
       PNHP Student Group page, maintained by my wife, Eiluned.



 Last Updated: Sep 2, 1996 



",non-course
"


        Jeffrey D Horn
    








Jeffrey D Horn















             205 Swanton Road # 7
             Madison, Wisconsin 53714
             USA
        

            phone:
        

            (608) 244-8420
        



            fax:
        

            (608) 221-5008
        



            eMail:
        


horn@cs.wisc.edu




Be Wise!Linearize!
           






















Family
Employment
Education
Research
Genealogy





",non-course
"Susan B. Horwitz
Susan B. Horwitz



Professor
Computer Sciences Department
University of Wisconsin-Madison
1210 West Dayton Street
Madison, WI 53706-1685
USA
E-mail:  horwitz@cs.wisc.edu  
Telephone:  (608) 262-7946
Secretary:  (608) 262-0017
Department: (608) 262-1204
Fax:        (608) 262-9777

Ph.D., Cornell University, 1985

Research interests:

language-based programming environments
program slicing, differencing, and merging
static analysis of programs
interprocedural dataflow analysis



Research Summary

My work mainly involves the design and implementation
of language-based programming tools that help programmers with problems like:

 understanding how existing programs work, and how they would be affected
by proposed modifications;
 understanding the textual, structural, and semantic differences between
two versions of a program;
 retesting a program after changing it;
 combining pieces of old programs to produce a new program, with certain
semantic guarantees.

This work has involved the use of a program representation called the
program dependence graph (PDG), and an operation called slicing.

I am also working on new algorithms for precise, interprocedural
dataflow analysis.
Previous work on interprocedural dataflow analysis mainly concentrated
either on efficient algorithms for specific individual problems,
or on (not necessarily efficient) algorithms for a general class of problems.
Thomas Reps, Mooly Sagiv, and I have developed and implemented a new
algorithm that is both efficient, and applies to a large class of problems.

Recent Publications


M. Shapiro and S. Horwitz,

Fast and accurate flow-insensitive points-to analysis,
To appear in Conference Record of the Twenty-Fourth ACM Symposium on
Principles of Programming Languages,
(Paris, France, January 1997).

S. Horwitz, T.Reps, and M. Sagiv,

Demand interprocedural dataflow analysis.
In Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software
Engineering,
(Washington DC, October 1995).

M. Sagiv, T. Reps, and S. Horwitz,

Precise interprocedural dataflow analysis with applications to constant
propagation.
In Proceedings of the Sixth International Joint Conference on the Theory
and Practice of Software Development,
(Aarhus Denmark, May 1995).

T. Reps, M. Sagiv, and S. Horwitz,

Precise interprocedural dataflow analysis via graph reachability.
In Conference Record of the Twenty-Second ACM Symposium on Principles
of Programming Languages,
(San Francisco CA, January 1995).

S. Bates and S. Horwitz,

Incremental program testing using program dependence graphs.
In Conference Record of the Twentieth ACM Symposium on Principles
of Programming Languages,
(Charleston, SC, January 1993).

S. Horwitz and T. Reps,

The use of program dependence graphs in software engineering.
In Proceedings of the Fourteenth International Conference
on Software Engineering,
(Melbourne, Australia, May 1992).

S. Horwitz,

Identifying the semantic and textual differences between two versions of a
program.
In Proceedings of the SIGPLAN 90 Conference on Programming Language
Design and Implementation,
(White Plains, NY, June 1990).


Teaching


  cs536 

",non-course
"


Sid's Page



Sid's Page

Name: Sidney J. Hummert
Office: CS 1307
Phone: 262-6602 (office)
Email: hummert@cs.wisc.edu


A postscript version of my resume.

Some pictures.

Click here to go to my cs110 page.


",non-course
"

Igor Ivanisevic's Home Page



Igor
Ivanisevic


 
This is me working on my newest project... 
(disclaimer: I am not an alien nor do I speak for any aliens in particular)




Needless to say this page is under construction 
(if I ever feel like actually constructing it) 
but I already have 2 links and an e-mail up! 



Research Interests: 
Robotics, Vision Stuff, AI in general


Graduate Slave at:

University of Wisconsin CS Department

Was an undergrad at:

Drake University CS/Math Department



Address: 

Computer Sciences Department
University of Wisconsin
1210 West Dayton Street
Madison, WI 53706

Office: CS&S 1304
Phone: (608) 262-6601
Home Phone: (608) 256-0816
E-mail:

iigor@cs.wisc.edu




iigor@cs.wisc.edu




",non-course
"

J's Page







ireland@cs.wisc.edu



",non-course
"

Ira Sharenow's Home page


 Ira Sharenow (iss@cs.wisc.edu)   
Teaching Assistant, CS 132 Peterson 
 Computer Sciences Department 
University of Wisconsin - Madison
Madison, WI 53706
Office: 3310 Computer Sciences
Telephone: (608)262-1721 
Office Hours for CS 132, Sections 351 and 352:
Tuesdays 12:05 - 12:55 PM 
Thursdays 4:00 - 4:50 PM
Section 351 meets TR at 1 PM. 	
Section 352 meets TR at 2:30 PM
Both Classes meet in room 1366 Computer Sciences


CS 132 Announcements
Handouts


Mother Jones profile of Ira Sharenow

 Recreational Site

 Please send me an email with your comments.


Last modified: Tuesday, September 24, 1996 by Ira Sharenow



",non-course
"

Jim Basney


Jim Basney
Graduate Student/Research Assistant




Computer Sciences Department
University of Wisconsin-Madison
1210 W. Dayton St.
Madison, WI 53706-1685


Email:
jbasney@cs.wisc.edu
Office: 3387 Computer Science and Statistics
Office Phone: (608) 262-3924
FAX: (608) 262-9777



My research interests lie in the area of Operating Systems and
Networks.  I am currently working on 
Condor, under direction
of Prof. Miron Livny.

I received my B.A. from
Oberlin College in 
Computer Science and 
English.
I have some web
pages at Oberlin.
My resume and code
from some previous projects are available online.


Last Modified: Mon Sep 16 10:51:22 1996 by Jim Basney
",non-course
"

Jerel L. Mackay's Home Page


Jerel L. Mackay

 I am an Assistant Researcher in Computer Sciences specializing in
	Databases and Operating Systems.
   I work fulltime for the Computer Systems Lab at the 
	University of Wisconsin-Madison Computer Sciences Department.
   My responsibilities include developing and supporting our SYBASE
	and Ingres database installations, SUN's, backup software, and
	training student hourlies.
   I play the electric guitar (thrash metal being my specialty) and
	also the violin (classical and baroque mainly).
   I've seen the error of my evil ways, click here for  before and after.  Shocking huh?  Here's  one more in case you didn't believe your eyes the first time.

  

When I'm not working I like to:

   Record (mostly funny ""covers"" of stuff from ABBA to Metallica) but also some originals.)  SOON you will be able to sample these hits from my  new cd.
 Watch my favorite TV show:
   
 Play raquetball, golf or shoot pool.
   Stand around in a  towel.


Yeah I know there's not much here.  I'm working on it...

Finger Jerel


Last modified: Mon Apr 25 14:05:20 CDT 1994 by Jerel L. Mackay

jerel@cs.wisc.edu



",non-course
"

Home Page of Johan Larson


 This homepage is under construction!



",non-course
"
Smu's Home Page of Relief and Happiness

 
 
 (Java, good; censorship bad) 
THIS IS BIG, REALLY 






 

e-mail me at jherro@cs.wisc.edu 
 
Some notes for my  CS 132 classes. 
There, you've made it to my home page. Now you can relax. Hee hee! 
Lets see, what would be a cool thing to put in a home page? How about a
picture?  Here, this is a picture me and my girlfriend of 4 and a half years. I'm afraid its a bit dated though. Its almost 4 years old itself.

 

After many years of torture this is me now. 
 
After disembodyment, I became the floating head of death.
 

         -- the directory that has the animation
                                    frames (a series of pictures in GIF or JPEG
                                    format, by default named T1.gif, T2.gif,..)
                    -- number of the starting frame (1..n)
            -- number of the end frame (1..n)
                -- milliseconds to pause between images
                                    default - can be overriden by PAUSES)
               -- repeat the sequence?
     -- explicit order for frames - see below
 

 
  
   Stuff about me   Here is some vital information about me and how I aquired the nickname: SMU. 
 
 I would like to take this time to apologize for the lameness of my page. Please bear with me. Here are some pretty 
pictures of jack skellington and kermit the frog.>

 
There, those are interesting.  Here is something else neat. This is
a link to my friend Dan's homepage. He writes Haiku's and he said that
he was going to put some there. click 
here to get to Dan's stuff. Dan was a roomate of mine in under-grad at Notre Dame.  Here are some memories of that forgotten time with Dan and my roomates.
 
 The cult of the Wax Hippo
This is the most exploratory intervention of chaotic existence in reality.
 Follow this link and enjoy all the benefits of a matriarchical society.  JOIN TODAY!!  
 
 An exclusive club.  Hierarchy and Rules!!! What fun! 
 
 
These are some of my old friends  Homepages .    

Here are some semi-cool links. 
 Notre Dame's home page  
 YAHOOOOOOOOOOOOO!!!! 
 work. 
This link contains the Free Software Shack. 
And here are a bazillion search engines in one:W3 Search Engines 
mpeg movie archive
  

HERE IS A REALLY COOL LINK:
 A great muppet page. Sounds, images and links. Very cool.
 
Rachel  If you want to see select cool canoe trip pictures look here. 
There is a bout 2.2 meg of them. Here they are. Have fun!
Canoe Pictures

",non-course
"

 Jie-Bing Yu's Home Page 



  Jie-Bing Yu 


Index:
General Information |
Education |
Advisor |
Research Interests |
Research Projects |
 Publications |
 Pointers |
 Hobbies 


General Information
Research Assistant
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street

Madison, WI 53706
Tel: (608) 262-6622
Fax: (608) 262-9777
jiebing.cs.wisc.edu

Education

 Ph.D.

 M.S. 
(Computer Science) University of Wisconsin - Madison, 1993



Advisor

  Prof. David DeWitt


Research Interests

 Tertiary Storage Support for DBMS
 Parallel Database Management Systems
 Object-Oriented Database Management Systems
 Geographic Information Systems


Research Projects

  Paradise
  SHORE


Publications



Building a Scaleable Geo-Spatial DBMS: Technology, 
Implmentation, and Evaluation
(with J. Patel, N. Kabra, K. Tufte, B. Nag, J. Burger, 
N. Hall, K. Ramasamy, R. Lueder, C. Ellman, J. Kupsch,
S. Guo, D. DeWitt, and J. Naughton),
Submitted for publication, October, 1996.



Query Pre-Execution and Batching in Paradise: 
A Two-Pronged Approach to the Efficient Processing 
of Queries on Tape-Resident Data Sets
(with D. J. DeWitt),
Submitted for publication, October, 1996.



Processing Satellite Images on Tertiary Storage: 
A Study of the Impact of Tile Size on Performance
(with D. J. DeWitt), To appear in 5th NASA GOddard Conference
on Mass Storage Systems and Technologies, September, 1996.



Using Constraints to Query R*-Tree
(with J. Goldstein, R. Ramakrishnan and U. Shaft),
A shorter version will appear in CP96 Workshop on 
Constraints and Databases, February, 1996.



Client-Server Paradise
(with D. DeWitt, N. Kabra, J. Luo and J. Patel),
Proceedings of the 1994 Very Large Data Bases Conference, 
Santiago, Chile, September 1994.



Storage Reclamation and Reorganization in Client-Server
Persistent Object Store
(with V. Yong and J. Naughton),
Proceedings of the 1994 IEEE Data Engineering Conference,
Houston, TX, February 1994.



Pointers

  EOSDIS
  SIGMOD
  UW-Madison DBMS Research Group


Hobbies

 Tennis --  TENNIS SERVER
 Volleyball -- VOLLEYBALLWEB 
 White Water Rafting --  Whitewater Page
 
Can you find me in the picture? Click here for a full sized picture.


 Last Updated: July 14, 1996 by Jie-Bing Yu (jiebing@cs.wisc.edu)



",non-course
"



 Jignesh's Home Page 




Jignesh M. Patel jignesh@cs.wisc.edu.
 
Welcome!



Research Assistant
 Department of Computer Sciences 
 University of Wisconsin - Madison  
1210 West Dayton Street
 Madison, WI 53706-1685
Telephone: (608) 262-6625





Advisor:  David DeWitt 

Research Interests:

 GIS systems, parallel database systems and object-relational databases.
 Currently working on the   Paradise project.


Publications Related to Paradise

  Client-Server Paradise  : Paper published in VLDB 1994.
  Partition Based Spatial Merge Join  : To be  published in SIGMOD 1996.


Other Publications

  Accurate Modeling of the Hybrid Hash Join Algorithm  : Paper published in SIGMETRICS 1994.


Miscellaneous stuff:

 Virtual Tourist
 Inline Skating 
 IT-BHU home page
 Madhuri dey dey, Kashmir ley ley
 My bookmarks




",non-course
" George Varghese 








This is 1996 people!!!
Download Netscape 3.0 or go see my old page by
	
	clicking here.... WARNING : THE PAGE IS PRETTY LAME!

",non-course
"

Johannes Gehrke's homepage


Johannes Gehrke

Welcome! I am an international  graduate student
at the Computer Sciences
Department
 at the University of
Wisconsin-Madison. My area of interest is database
management systems. I am working in the area of data mining under
Professor Raghu
Ramakrishnan.

This page is under construction. 


Contact Information
Publications
Interesting Links



Contact Information

Email:
johannes@cs.utexas.edu 

Office
University of Wisconsin-Madison 
Computer Sciences Department
     1210 West Dayton Street, room 3379
     Madison, Wisconsin 53706-1685
     (608) 263-2150
 
Home
706-D Eagle Heights
     Madison, WI 53705
     (608) 233-0937
  



Publications

 I. Stoica, 
H. Abdel-Wahab, 
K. Jeffay,
S.K. Baruah,
J.E. Gehrke,
and 
C.G. Plaxton. 

A Proportional Share Resource Allocation Algorithm
For Real-Time, Time-Shared Systems. In 
Proceedings of the 17th IEEE Real-Time Systems Symposium,
Washington, DC, December 1996 (to appear). Here is an

expanded version.


S.K. Baruah,
J.E. Gehrke,
and 
C.G. Plaxton.
Fast
Scheduling of Periodic Tasks on Multiple Resources. In
Proceedings of the 9th IEEE International Parallel Processing
Symposium, April 1995. Expanded version available as Technical
Report TR-95-02, Department of Computer Sciences, The University
of Texas at Austin, February 1995






Johannes Gehrke


",non-course
"

Jon's Home Page


Welcome to Jon's Home Page!
I'm a first year graduate student at the University of Wisconsin, Madison, 
studying computer science.  I am a TA for CS 132: Using Computers.  I 
am also maintaining a FAQ (Frequently 
Asked Questions) List on the latest PowerBook models released by Apple 
(the 5300's, the 190's, and the 2300's)


Here are a few things to look at:

Students in my CS 132 Lab Sections should 
click here
I've amassed a big list of good Web 
sites, in a number of catagories.
Check out the Web pages for the UW-Madison CS department, UW-Madison itself, and my alma mater, RPI!
The sites I visit the most often are:

Apple's Home Page -- For all your 
Mac needs
The Nando 
Times  -- For great news coverage
The Spot -- For mind-numbing, 
soap-operaish drivel
ZiffNet -- For computer industry 
news
CS564: Database Management Systems and  CS 701: Construction of Compilers -- 
For keeping up with my classwork
Today's 
Dilbert -- For a bit of a chuckle




Jon Bodner/jonb@cs.wisc.edu/1326 Mound 
St. #1, Madison, WI 53715
Last Modified: September 15, 1996



",non-course
"

Welcome to Jin, Qi's Home Page












 I'm a first year graduate student of CS Department. I came fromBeijing,Chinese Academy of Sciences,P.R.China. My hometown is Nanjing, the capitol of Jiangsu Province. 


Degree:

 1995-2001  MS/Ph.D. student in CS Department,University of Wisconsin,Madison.
 1992-1995 M.E. from Institute of Automation,Chinese Academy of Sciences, Beijing, P.R.China. Specilized in Pattern Recognition, Image Processing.
1988-1992 B.S. from Biomedical Engineering Department, Southeast University, Nanjing, P.R.China

Current Activities:

Courses:

CS740 Advanced  Computer Networks;
CS764 Topics in Database Management;
CS736 Advanced Operating Systems;

Job: Teaching Assistant in CS367 Data Structure.

Current Address:

Home: 1301 Spring St.,407#, Madison,WI 53715.
Work: CS 1306,Computer Sciences Department,1210 West Dayton Street, Madison.
Tele: 608-2626601(office),608-2598609(home).

 You could finger me on jq@cs.wisc.edu.Refer to 
Computer Science Department for more information.
 9272 Class 
Technical Stuff
Java Place
Shore Tutorial
China Affair
China Democracy
Beijing's Spring
 Places I have interest:

Stanford Network Group
Stanford Medical Informatics
MIT's Communication, Control and Signal Processing
Job Sites from US News


You are visitor  number   since 4/10/96.



",non-course
"Jeff Shabel's Home Page
Cheers! Welcome to Jeff Shabel's Home Page at U of Wisconsin

Cheers Theme Song (.AU  517K)


I am the TA for 
CS/ECE 752.

Office Hours:  Tues 10-11AM, Thurs 2:20-3:20PM or by appointment.
Office:  CS 1351

Personal Information
Major:

Computer Science (Architecture Emphasis)
Status: 
Second-year Graduate Student. View my 
Fall 1996 schedule.
Age:
23
Academic Background:
Received a BS in Computer Engineering from 
UC San Diego in the 
Electrical and Computer Engineering (ECE) Department.
Home Town:
Cupertino, CA. (by 

San Jose)
High School:

Monta Vista High School, Cupertino, CA.
Plans:
Graduate with an MS in Computer Science in May 1997.

Favorite Sports Teams:
Golden State Warriors (Basketball) - 

San Jose Mercury News, and

Nando Net
San Jose Sharks (Hockey) - 
San Jose Mercury News, and

Nando Net
San Francisco 49ers (Football)- 
San Jose Mercury News, and

Nando Net

Oakland A's 

Favorite WWW Links:

News: 
San Jose Mercury News
Music:











* 
Columbia House / BMG FAQ
 Find out how to join Columbia House under their 10-for-1/2
deal!  Also tips and info on how to join these Music Clubs.

Miscellaneous:


View / Print PostScript Documents with MS Windows!


Send Mail to: jshabel@cs.wisc.edu
",non-course
"

Jussi Myllymaki



Jussi Myllymaki

 Research Assistant

 Computer Sciences Department
 University of Wisconsin
 1210 West Dayton Street
 Madison, WI 53706-1685

 telephone: (608) 262-6627
 fax: (608) 262-9777
 email: jussi@cs.wisc.edu



Research Summary

I am interested in the performance analysis of DBMS operations on
advanced tape and disk technology, including disk and tape arrays. I'm
currently studying how to buffer large datasets from tertiary storage
to disk and memory when such data are used for data exploration and
visualization (the DEVise
project). My advisor is Prof. Miron
Livny.



My recent work includes improving the performance of relational joins
of large volumes of disk and tape-resident data (see publication list
below), and applying a log-structured organization to tertiary storage
to solve problems associated with the diverse characteristics and
functional limitations of tertiary media. Our recent paper on data
visualization and exploration discusses data and metadata management
issues when large and complex data sets are involved.



Refereed Publications


Efficient Buffering for Concurrent Disk and
Tape I/O (with Miron Livny), Proceedings of Performance
'96 - The International Conference on Performance Theory,
Measurement and Evaluation of Computer and Communication Systems,
October 1996.

Integrated Visualization of Parallel Program
Performance Data (with Karen L. Karavanic, Miron Livny and Barton
P. Miller), Proceedings of the Third Workshop on Environments and
Tools for Parallel Scientific Computing, August 1996

Log-Structured Organization for Tertiary
Storage (with Daniel A. Ford), Proceedings of the
International Conference on Data Engineering, February 1996. Also
available as IBM Almaden Research Report 9941.

Visual Exploration of Large Data Sets (with
Miron Livny and Raghu Ramakrishnan), Proceedings of SPIE - The
International Society for Optical Engineering, January 1996.

Disk-Tape Joins: Synchronizing Disk and
Tape Access (with Miron Livny), Proceedings of the ACM
SIGMETRICS Conference, May 1995.

Submitted for Publication


DEVise: Integrated Querying and Visualization of Large Datasets,
M. Livny, R. Ramakrishnan, K. Beyer, G. Chen, D. Donjerkovic,
S. Lawande, J. Myllymaki, and K. Wenger, submitted to the 1997
ACM SIGMOD Conference.

Relational Joins for Data on Tertiary Storage, Jussi Myllymaki and
Miron Livny, submitted to the 1997 International Conference on Data
Engineering.

Other Publications


Disk-Tape Joins: Synchronizing Disk and Tape
Access (with Miron Livny), University of Wisconsin, CS Department,
Technical Report 1270, 1995.

Joins on Tapes: Project Report, Master's Degree
Project Report, University of Wisconsin, CS Department, 1993.

Applying the Client-Server Model in Computer Network
Architectures, Master's Thesis, Helsinki University of Technology,
Department of Industrial Management, 1991. In Finnish.

Other Documents


Implementation and Performance Analysis of R-Tree
Algorithms (with Jeff Schwarz and Yoav Weiss), class report, 1993.

Experiences with Implementing a Log-Structured File
System (with Trishul Chilimbi and Yoav Weiss), class report, 1992.

Overview of current tape technologies and products

Overview of RAID technology suppliers and products


Some frequently needed links (FNL)


Unified Technical Report Search

Adaptec SCSI adapters
(home)
  
Digital PCs
and
Technical Journal
and
 Whitepapers
(home)
  
IBM Technology and Research
and
CyberJournal

Quantum Digital Linear Tape
and
DLT FAQ
and
Whitepapers
(home)
  
Sun Solaris
and
SparcStations
and
Technical Reports
(home)
  
SCSI FAQ
and
Storage FAQ
and other
Usenet FAQs




Many other of my links are found here. 


jussi@cs.wisc.edu 


",non-course
"

Here is a HomePage for Jyothi

This page is under construction.
 

    HERE IS THE INFO FOR STUDENTS OF THE COURSE CS132 sec 306 307


	Grades of cs132 sec 306


Others,   sorry to dissappoint you  

email  : jyothi@cs.wisc.edu


",non-course
"Karen L. Karavanic

Everything I need to know I learned in a NYC public school... 

Karen L. Karavanic
Research Assistant, Paradyn Parallel Performance Tools Project  
	University of Wisconsin-Madison 
Computer Sciences Department 
	1210 West Dayton Street
Madison , WI  53706 
	
	6372 CS&S (608)262-6617 
	karavan@cs.wisc.edu 




I am currently pursuing a Ph.D. in Computer Science.  My research interests include...

 Parallel Computing Environments
 Automating the Performance Tuning Process
 Operating Systems
 Databases

Ask Me About...

UW-Madison Women in Computer Sciences (WICS)
Frontiers in Science, a cool program for Dane County High School Students
TRIO Student Support Services, free tutoring and other support for UW-Madison undergraduates!

Don't Miss these Sites...

The web page that could save your life: the Safer Sex Page
For Chocolate Lovers Only
Stuyvesant High School Alumni Association
Stuyvesant High School Class of 1980
THOMAS: Legislative Information on the Internet
The U.S.  Constitution


""The cure for anything is salt water -- sweat, tears, or the sea.""
			-- Isak Dinesen 

  ""A ship in port is safe, but that is not what ships are for. 
   Sail out to sea and do new things."" 
                   --  Admiral Grace Hopper, Computer Pioneer 

",non-course
"<!-- tkwww viewer --!>


 Stefanos Kaxiras' Home Page 




 Stefanos Kaxiras (kaxiras@cs.wisc.edu) 




Editor, IEEE 1596.2 Kiloprocessor Extensions to SCI
Research Assistant, University of Wisconsin


 Research Interests and Summary
 Recent Publications



Research Interests:

 Shared-memory multiprocessing & Scalable Coherent Interface (SCI)
 Cache design
 Aspects of Parallelism in Processor-in-Memory (or Memory-in-Processor) architectures (Galileo)


Research Summary:

In 1994 I have introduced the GLOW Kiloprocessor Extensions to SCI (a.k.a. Hierarchical Extensions SCI) in collaboration
with Jim Goodman. I am now working to both examine in depth design options and develop the upcoming 1596.2 standard in
colaboration with Jim Goodman, David V. James and Stein Gjessing.


 Recent Publications:

The GLOW Cache Coherence Protocol Extensions for Widely Shared Data,
Stefanos Kaxiras and James R. Goodman
To appear in Proceedings International Conference on Supercomputing, May 1996
Also as: Technical report TR-1305

Kiloprocessor Extensions to SCI,
Stefanos Kaxiras
To appear in Proceedings of the 10th International Parallel Processing Symposium, April 1996

Implementation and Performance of the GLOW Kiloprocessor Extensions to SCI on the Wisconsin Wind Tunnel,
Stefanos Kaxiras and James R. Goodman
2nd International Workshop on SCI-based High-Performance Low-Cost Computing, March 1995

Hierarchical Extensions to Cache Coherence in SCI,
Stefanos Kaxiras and James R. Goodman
1st International Workshop on SCI-based High-Performance Low-Cost Computing, August 1994

Hierarchical Extensions to SCI,
James R. Goodman and Stefanos Kaxiras
University of Wisconsin, Computer Sciences Dept., TR-1235, July 1994

PSM: Software Tool for Simulating, Prototyping, and Monitoring of Multiprocessor Systems,
A. Stafylopatis, I. Papakonstantinou, S. Kaxiras
Information and Software Technology 34, May 1992, pp. 313-325

The automated synthesis of parallel dedicated architectures using prolog specifications,
P. Tsanakas, G. Papakonstantinou K. Pekmestzi and S. Kaxiras
P.D.COM 91, Greece, 1991

A Hardware Synthesis Methodology Using Prolog,
P. Tsanakas, G. Papakonstantinou, S. Kaxiras
Microprocessing and Microprogramming 32 (1991) 307-314, North-Holland



",non-course
"

Keeper's Home Page



 Steven Fought



They say that heaven
 is like TV.
 A perfect little world
 that doesn't really need you.
 And everything there
 is made of light.


- Laurie Anderson, Strange Angels



 Note: Where possible, these pages make use of structural 
markup.  By indicating what a piece of information is, rather than 
how it should look, I have made the information in these pages more 
accessible to people who don't use bitmapped displays, including the
blind.  By using standard markup tags I am allowing you to use whatever
browser you wish to.

 Also note:  These pages make use of the age-old literary 
conventions irony, satire and sarcasm, but
nothing contained herein is meant to be offensive.  If you are
offended, it's probably because you're stupid.


 I have just started my third year as a graduate student in the 
Computer Sciences Department.  I was a TA for the first
two weeks, but since then I've supported myself by taking care of a 
variety of machines, with varying degrees of success.  

 On the graduate student side,
I've never been published, nor have I ever done anything impressive.
If by some miracle I pass my prelim, my research will add
up to a hill of beans or, more likely, fizzle out before any results are
obtained.  This will probably leave me as a junior-level programmer creating
kiosk front-ends in Visual J++ until primitive AI systems leave me 
permanently skill-free.

 To my surprise, about a year ago I discovered I was gay.  This was 
especially surprising because I wasn't that convinced I was alive.  Those
who know me well would probably argue that my being gay is no proof of my
being alive.  Anyway, you might want to read my thoughts
on being a hedgehog.

  The only way of contacting me is by electronic mail or pager.  I
am not reliably at any specific location and often work from home.  If
you would like to see me in person, write me and we can set something up.
My address is 
keeper@cs.wisc.edu.  
If it becomes clear you'll want
to contact me on short notice, I'll give you my pager number.

 Various creations:


 Thoughts on being a hedgehog
 My todo list (updated sporadically)
 A list of some associates
 My résumé (in PostScript)
 My Web documentation (the HTML section is long out
of date, unfortunately)
 The DANEnet/DILHR JobNet Database (soon to be defunct)
 The Caltech Projects:

 The Caltech Institute Archives PhotoNet Database
 The Caltech Personnel Directory (this looks much better from inside Caltech)
 The Caltech WWW 
Database (inside Caltech anyone can enter their own pages into the database
using a Forms interface)

 Some slides:

 Slides from a talk I gave on the Web
 Slides from a talk I gave on distributed objects
 Slides from a talk I gave called ``Java and the Dangers of Love''


 Coming when hell freezes over, at this rate:


 I'll add more information to this page and break it up into a 
hierarchy
 I do some consulting.  I'll put some information about that somewhere.
 The Steven Fought Unified Attribution Index (SFUAI).  In the information
age, intellectual property is everything.  This index will allow me to assign
a unique serial number to all the references I quote (such as the one at
the top of this page) and provide the quote, source, contextual information,
and pointers to other relevant quotes in the index.
 When the lab buys Adobe Distiller, I'll translate my résumé
into PDF so more than 0.1% of the world's WWW users will have a chance of
reading it (I suppose more than that can print it in a pinch).
 I want to do some writing about using computers.  There are certain
truths about the psychology of using computer software that people eventually
pick up on, but that aren't ever taught explicitly.  I think it's possible
to do so, and it would make starting to use computers easier.
 Cheap shots at things I hate.
 A set of project ideas I've been mulling over, probably only accessible
to a very small subset of WWW users.  It's a tough world out there.



",non-course
"

Krishna Kunchithapadam



Krishna Kunchithapadam

Greetings! and Welcome to my Web page.
Interests:

 Reading
 Languages
 Indian Classical Music
 Miscellaneous

Publications:

 Data Distributions
 Performance Steering
 Performance Tools

Resume (gzipped PostScript).
Contacting me.


[ Search
]


Last modified Sat Dec 23 13:27:24 CST 1995 by
KK.


",non-course
"Kristin's Home Page
Kristin Tufte

	  Research Assistant 
          Computer Sciences Department 
          University of Wisconsin -- Madison 
          1210 West Dayton Street 
          Madison, WI 53706 
          (608) 262-6622 
tufte@cs.wisc.edu

Advisor: David J. DeWitt

 Miscellany:

HDF Information Server
UW-Madison DBMS Research Group
ACM SIGMOD Information Server Home Page
EOS Project Science Office


Last modified: Sat Oct 14 20:13:27 1995 by Kristin Tufte

Kristin Tufte / tufte@cs.wisc.edu

",non-course
"

Krung's homepage


Updated on 5 November 1996.


Krung's homepage underconstruction

I try to keep this page short and informative. 
Have a good serf!!!


1997 : The year to come


The following are my own web related to topic I am doing research on.


 Mathematical Programmings
 : Ph D. project pursuing.
  Course works
 : Old course works in Computer Science department.
  Computer companies
 : Favorite hobby.
  Personal information
 : My personal opinion and life.


UW Madison-Wisconsin linked


The following Web pages are the some important links.


University of Madison-Wisconsin
  as a whole.
  Computer Sciences
  department as a unique entity.
  Electronic
  library system from UW.


Krung Sinapiromsaran : Email

krung@cs.wisc.edu



",non-course
"

 Ken Kunen's Home Page 

  Kenneth Kunen 

Professor
Math and Computer Sciences 
University of Wisconsin
1210 W. Dayton St.
Madison, WI  53706-1685
E-mail: kunen@cs.wisc.edu
Telephone: (608) 263-2874

Ph.D., Stanford University, 1968

Interests: automated deduction, logic programing,
set theory, topology


 Research Summary  
Most of my research work involves logic and its applications.


Typical applications are automated deduction and logic programming.
In automated deduction, we use tools like resolution
to prove new mathematical theorems.
In logic programming, we study the semantics of languages like
Prolog.  Specific topics I am considering are the Prolog
use of negation-as-failure, and the semantic incompatibilities between
least-fixed-point computations and the Prolog-style backtracking computation.


In mathematical logic, I work on axiomatic set theory.
Besides being of interest in its own right, this
subject relates to various abstract areas of mathematics,
such as set-theoretic topology and measure theory,
where many basic questions turn out to be independent of the usual
axioms of set theory.

 Selected Recent Publications 
The following are all postscript files.





 Kunen, K.,
   
   The Shortest Single Axioms for Groups of Exponent 4,
   Computers and Mathematics and Applications,
   29 (1995) 1-12.

   Hart, J. & Kunen, K.,
   
       Single Axioms for Odd Exponent Groups, 
   J. Automated Reasoning 14 (1995) 383-412.

   Kunen, K.,  
    
     A Ramsey Theorem in Boyer-Moore Logic,
     to appear, J. Automated Reasoning.

   Kunen, K. & van Mill, J.,
   
       Measures on Corson Compact Spaces
Fundamenta Mathematica 147 (1995) 61-72.


   Hart, J. & Kunen, K.,
   
       Locally Constant Functions ,
       Fundamenta Mathematica 150 (1996) 67-96.


   Kunen, K.,  
    
       The Semantics of Answer Literals , 
       Technical Report TR-95-1282, University of Wisconsin, 1995,
       to appear, J. Automated Reasoning.

   Kunen, K.,  
    
       Non-Constructive Computational Mathematics, 
       Technical Report TR-95-1287, University of Wisconsin, 1995,
       to appear, J. Automated Reasoning.


   Kunen, K.,  
    
       Moufang Quasigroups, 
       J. Algebra  83 (1996) 231-234.


   Kunen, K.,  
    
       Quasigroups, Loops, and Associative Laws ,  preprint
       to appear, J. Algebra .

   Kunen, K.,  
    
       The Structure of Conjugacy Closed Loops  ,  preprint
 Kunen, K.,
    
       A Completeness Result for Linked Resolution ,
       to appear,  MIT Press.

   
       Hart, J. & Kunen, K.,
   
       Weak Measure Extension Axioms ,
       ROUGH DRAFT!!






Book Review:


 
       Hart, J. & Kunen, K.,
   
       Review of ""Notes on Set Theory"" by Moschovakis,
      American Mathematical Monthly 103 (1996) 87-91.


 Courses Taught 



For fall, 1996:

 Math 131: Geometrical Inference and Reasoning.
    Math 770: Foundations of Mathematics.



For spring, 1997:

 
        Comp Sci 540:  Artificial Intelligence. 



 Last Changed: October 4, 1996 by kunen@cs.wisc.edu 



",non-course
"

 James Larus' Home Page 




 James Larus (larus@cs.wisc.edu) 


Associate Professor of Computer Science
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
larus@cs.wisc.edu
Phone: 608-262-9519
Secretary: 265-4892 (Julie Fingerson or Thea Sklenar)
Departmental Office: 262-1204
Fax:  608-262-9777


 Education
 Research Interests
 Research Projects
 Upcomming Courses
 Software
 Recent Papers
 Ph.D. Graduates
 Summary


 Education:

 Ph.D. University of California, Berkeley, 1989.
 M.S. University of California, Berkeley, 1982.
 A.B. Harvard College, 1980.

 Research Interests:


Programming languages
and compilers, in particular languages and compilers for parallel machines.
 Design and programming of shared-memory parallel computers.
 Compiling symbolic languages.
 Program profiling and tracing.
 Program executable editing.


Research Projects:

 Wisconsin Wind Tunnel(WWT)
 C** Large-Grain Data Parallel Programming Language
 Executable Editing Library (EEL)


 Courses:
CS367 Data Structures
CS838 Java!

 Software: 

 SPIM
 QPT
 EEL
 WARTS



Recent Papers





Efficient Path Profiling,


Thomas Ball and James Larus,

To appear: MICRO-29, December 1996.




Parallel Programming in C**: A Large-Grain Data-Parallel Programming
Language,


 James Larus, Brad Richards, Guhan Viswanathan,

in Gregory V. Wilson, ed.,

Parallel Programming Using C++,

 MIT Press, 1996




Teapot: Language Support for Writing Memory Coherence Protocols,


Satish Chandra, Brad Richards, and James Larus,

ACM SIGPLAN '96 Programming Language Design and Implementation
(PLDI '96), May 1996.




Instruction Scheduling and Executable Editing,


Eric Schnarr and
James R. Larus,

To Appear: Workshop on Compiler Support for System Software (WCSSS),
February 1996.




Efficient Support for Irregular Applications on Distributed-Memory Machines,


Shubhendu Mukherjee, Shamik Sharma, Mark Hill, James Larus, Anne
Rogers, and Joel Saltz,

Fifth ACM SIGPLAN Symposium on Principles and Practice
of Parallel Programming (PPoPP), July 1995.




EEL: Machine-Independent Executable Editing,


James Larus and Eric Schnarr,

ACM SIGPLAN '95 Conferences on Programming Languages
Design and Implementation (PLDI), June 1995.




Tempest: A Substrate for Portable Parallel Programs,


Mark Hill, James Larus, and David Wood,

COMPCON Spring 95, March 1995.



Static Branch Frequency and Program Profile Analysis,

Youfeng Wu and James Larus,

27th Annual IEEE/ACM International Symposium on Microarchitecture
(MICRO 27), November 1994.




Application-Specific Protocols for User-Level Shared Memory,


Babak Falsafi, Alvin Lebeck, Steven Reinhardt, Ioannis Schoinas, Mark
Hill, James Larus, Anne Rogers, and David Wood,

Supercomputing '94, November 1994.




Where is Time Spent in Message-Passing and Shared-Memory Programs?,


Satish Chandra, James Larus, and Anne Rogers,

Sixth International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS-VI), October 1994.




LCM: System Support for Language Implementation,


James Larus, Brad Richards, and Guhan Viswanathan,

Sixth International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS-VI), October 1994.




Fine-grain Access Control for Distributed Shared Memory,


Ioannis Schoinas, Babak Falsafi, Alvin Lebeck, Steven Reinhardt, James
Larus, and David Wood,

Sixth International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS-VI), October 1994.




Cachier: A Tool for Automatically Inserting CICO Annotations,


Trishul Chilimbi and James Larus,

1994 International Conference on Parallel Programming (ICPP), August 1994.




The Wisconsin Wind Tunnel Project: An Annotated Bibliography,


Mark D. Hill, James R. Larus, David A. Wood,

Unpublished manuscript, revised frequently.




Cooperative Shared Memory: Software and Hardware for Scalable Multiprocessors,


Mark D. Hill, James R. Larus, Steven K. Reinhardt, David A. Wood,

ACM Transactions on Computer Systems (TOCS), November 1993.




Wisconsin Architectural Research Tool Set (WARTS),


Mark D. Hill, James R. Larus, Alvin R. Lebeck, Madhusudhan Talluri,
David A. Wood,

Computer Architecture News (CAN), August 1993.


Ph.D. Graduates



Brad Richards,
Ph.D. August 1996,

Memory Systems for Parallel Programming,

First employment: Vassar College.


Guhan Viswanathan,
Ph.D. September 1996,

New Techniques for Compiling Data Parallel Languages

First employment: Oracle.



Lorenz Huelsbergen,
Ph.D. August 1993,

Dynamic Language Parallelization,

First employment: AT&T Bell Labs (lorenz@research.att.com).


Thomas Ball,
Ph.D. August 1993,

The Use of Control-Flow and Control Dependence in Software Tools,

First employment: AT&T Bell Labs (tball@research.att.com).


Research Summary

My research focuses on problems in programming computers.  As part of the
Wisconsin Wind Tunnel (WWT ) Project, I have
helped develop a hybrid (software-hardware), shared-memory computer
architecture that facilitates programming and compiling for parallel
machines.  Currently, my students and I are developing languages, compilers,
and tools to demonstrate and exploit the power of user-level coherence
policies.

I'm also interested performance evaluation tools that help programmers
understand and improve their programs' performance.  Recently, Tom Ball and
I developed an efficient path profiling algorithm, which provides a more
detailed understanding of control-flow within routines and which has
identified new possibilities for better compilers.


Last modified: Fri Nov  1 21:17:09 1996 by James Larus

larus@cs.wisc.edu



",non-course
"

Nick's Page

Nick's Page

Office: CS 1349
Phone: 262-5340
Email: leavy@cs.wisc.edu
Office hours: Tuesday 1:00 - 2:00, Wednessday 2:30 - 3:30



",non-course
"

Steven Huss-Lederman's Home Page


 Steven Huss-Lederman's Home Page
 My research interests include:

 My research at the Univ. of Wisconsin at Madison relates to the
Wisconsin Wind Tunnel project.

 My other big research area is parallel linear algebra which is
covered by the PRISM
project.

 I am also heavily involed in the  MPI
standard.

I and several others recently published a book about the original MPI
standard.  You can get information on ordering the book from  MIT Press (ISBN
95-80471).  You can also look at MPI:
The Complete Reference on the web.

As the MPI-2 editor, I can get you the current draft of the MPI Forum.
Please keep in mind that the work of the MPI Forum is ongoing and
its documents are intended for use by those interested in the ongoing
work of the MPI Forum. For committee members, the 
compressed postscript, complete sources as a  compressed
tar file, and the 
individual source files are available.


 Information you would get if you did a finger on me:
 Steven Huss-Lederman
 Computer Science Dept.
 Univ. of Wisconsin-Madison
 1210 W. Dayton St.
 Madison, WI 53706
 Phone: (608)262-0664
        (608)265-4892 (for message if desperate)
 FAX: (608)262-9777
 e-mail: lederman@cs.wisc.edu
 WEB: http://www.cs.wisc.edu/~lederman/lederman.html
 Office: 6367 Computer Science and Statistics Building



",non-course
"

 Home Page of Lawrence H. Landweber 



Lawrence H. Landweber 

 Professor 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 Telephone: (608) 262-1204 
 Fax: (608) 265-2635 
 Email: lhl@cs.wisc.edu 

Ph.D., Purdue University, 1967 
Interests:
Computer networks and protocols, high speed networks, electronic
mail 

 Research Summary 

My research program focuses on high speed networks. We are participating
in the Gigabit project, a DARPA-NSF national project which involves
the design and implementation of network testbeds operating at
gigabit per second data rates. At Wisconsin we are working on
issues of protocol design, congestion and admission control, visualization
of atmospheric phenomena and virtual conferencing. 
 Sample Recent Publications 

Design and implementation of a fast virtual circuit establishment
method for ATM networks (with R. Olsen), Proceedings of the
IEEE INFOCOM Conference, San Francisco, April, 1993. 
 
Dynamic time windows: Packet admission control with feedback (with
T. Faber and A. Mukherjee), Proceedings of the ACM SIGCOMM
Conference, Baltimore, August, 1992. 
 
Dynamic time windows and generalized virtual clock: Combined closed-loop
/ open loop congestion control (with A. Mukherjee and T. Faber),
Proceedings of the IEEE INFOCOM Conference, pp. 322-332,
Florence, May, 1992. 
 Networking Courses
Connectivity Table


",non-course
"

Shannon Lloyd's Home Page

 Shannon Lloyd 

   Work Address 
  
	University of Wisconsin -- Madison 
  Computer Science Department 
   1210 West Dayton Street
    Madison, WI  53706
   608-263-1938
  lloyd@cs.wisc.edu 


   TA Responsibilities 
 
	CS 132  Using Computers -- Lectures 3 & 4
  Lab sections (1366 Comp S&St)
 

 354 5:20 - 6:35 pm TH 
      356 6:40 - 7:55 pm TH
   
 Office hours (1351 Comp S&St)
 
 Wednesday 12:00 - 1:00
      Thursday 11:00 - 12:00 
      or by appointment
 


  Fall 1996 courses 

 
	CS 701   Construction of Compilers (9:30 - 10:45 TH)
  	CS 771 (545)  Computational Linguistics (1:20 - 3:15 MWF)

  Various other links 

  
	Women in Computer Science 
  University of Utah  Department of 
        Chemistry 
  University of Utah Department of 
        Computer Science 
  Personal 
  
	Engineering Career Services 
  
	Computation and Language Archive 
  
	Computational Linguistics 
  
	Natural Language Processing 
 
	UW Artificial Intelligence 
  
	Cognitive and Linguistic Science 
  xsoft lexdemo 



",non-course
"

Christopher Lukas' Home Page

Christopher Lukas


Relevant Information

       Office: 5384
      Phone #: 262-6612
        Email: lukas@cs.wisc.edu


I am apparently the co-coordinator for the 
MSPLS Fall 1996 Workship

I have also defeated my rivals in the quest to become this semester's
University of Wisconsin Programming Languages Seminar czar.

Courses I'm going to take the Fall of 1996

 CS ??? - The Festival of Java taught by my advisor
 Uhh....



<!-- <applet code=Animator.class width=200 height=200>
<!-- <param name=imagesource value=""images/toomuch"">
<!-- <param name=backgroundcolor value=""0x0"">
<!-- <param name=endimage value=36>
<!-- <param name=pause value=70>
<!--</applet>
<!-- <hr>

Tufts University E-Mail List


 Click on these sites for a bit of entertainment: 
 Save the tigers here
 I AM NOT A NUMBER, I AM A FREE MAN! 
The Prisoner

This is the stock quote
server I use to maintain my fabulous wealth.

Todd has an amusing page (check out his friends page)
 Ben has some cool things also:
Ben's Page

Bet on political candidates legally at Iowa Electronic Market.

My other identity

Captain Kirk sings

 Lonely Guys Only: 

Hey!  Are you a lonely guy?  Have trouble meeting women?  Through
amazing new technology, you no longer need to concern yourself with
trying to interact with real women because there's the Virtual Girlfriend!
Tracy and Teri are waiting to meet you!



My Wife and Our Incredible Jumping Cat



This really isn't that cool, but you can fill it out anyway
 I'd like to know more about you -- well, not really, but it's entertaining.  So please fill this out and hit the send.  Below you can add your own option, in case you feel that you are something other than what is currently listed.
Name: 
E-mail address: 
Favorite thing: 
I feel that I am a: (check all that apply)
Killer Buttmunch
Extreme Dude
Michael Nesmith fan
Fool
Mythical Figure
Wicked Good Basketball Player
Valued Student
Mental Defective
a WKRP in Cincinatti tragic Les-like figure
geek of all trades
Gonzo Admirer
Netscape Junkie Who Searches For Child Porn
Personified Organic Condom Stretched Too Much And Ready To Blow
Flaming Testicle From Outer Space That Tastes Good
Poetry Guru
hogwild
this kicks ass
man man
big dude
uh oh
professional muff-diver
regressing higher lifeform
herald of the alien invasion force
Chris knows HTML forms
alien
Herpetophile
Todd Turnidges hat
The Man
Creepy Laughing Head
Small Planet
Dr Who Companion
Easter Bunny
Cyberweenie
Tcl hellbeast

 


 Add a New Option to the Checkboxes above!
 Simply fill out the below box and click submit.  Then reload this page (or maybe I can figure out how to automatically do that).  You should see your option there!  COOL INTERACTIVE!

New checkbox option: 

 

 Keywords included to include my page in interesting searches:
superhighway sex drugs S&M cosmos irritating gross naked scatology pervert offspring wax food etymology phat ski gnarly bogus wierd cybermuffin pictures erotica cheese



",non-course
"
Welcom to Ling Zheng's Home Page















Department of Computer Sciences     4715 Sheboygan Ave., #203
1210 W. Dayton St. #6358 	    Madison, WI 53705
Madison, WI 53706                   (608) 232-0585  (Res)
Office phone: (608) 262-6614 
e-mail : lzheng@cs.wisc.edu



 
Shameless self-promotion: my 
resume in text version.
 
If you want to know the other side of me: click
 here 


Research Interest:

I am a research assistant in the
    Paradyn group and 
    currently I am hacking the paradyn onto HPUX port. . 
    My boss is Barton Miller.  
Also, I am in charge of the home page of Wuhan University, China
And, you may want to take a look at
     my girlfriend's picture
    (temporarily here).
Computer Architecture


Education:


09/95 - prese   Dept of Computer Science, University of winsconsin
  08/94 - 08/95     Dept of Computer Science, University of Iowa
  09/90 - 07/94     Dept of Computer Science, Wuhan University ( B.S.)


My officemate: 


Marcelo Goncalves


  ( I==Alumni ) ?  click  :  ignore ;

 
       Wuhan University Alumni Home Page
 China Home Page

 Place to surf:

 Some companies here

 Some universities here




If you want to know the best graduate school in Computer Science, here's
the infomation you could take a look.

 America's Best Graduate Schools


send Ling Zheng mail?  

 If it's some suggestion to my homepage, don't bother yourselves.    Thanks.

 Last Updated: March 30, 1996 


You are the visitor  number 
 since January 8, 1996.


 

",non-course
"

Manuvir's Home Page












Manuvir Das












Now that you know what my name is and

what I look like, hello. Feel
free to look around, and if you need more information about something
send me some email. 
If, like me, you have a passion for Golf, here's an
action photo.
Later,


- Manuvir



What should you know about me?





























What should you know about in general?











Let's start with my advisor.... (better say this
to keep the money coming!).








With that out of the way, let's turn to the
original America's Team.








And of course, the league they play in.








For days other than Sunday, a round or two of Golf.








And finally: when you say Wis-consin, you've said it all!








manuvir@cs.wisc.edu



",non-course
"

Mark D. Hill's Home Page




Mark D. Hill (markhill@cs.wisc.edu)



Associate Professor of Computer Sciences
 and
Electrical and Computer Engineering
at the University of Wisconsin

Table of Contents

 Addresses and Office Hours
 Current Teaching and Catalog Information
 Education
 Research Interests and
Summary
 Wisconsin Wind Tunnel Project
 A Sampler of Recent Papers
 Ph.D. Graduates


Links to Useful Information

 World-Wide Computer Architecture Information
 Wisconsin CS's Computer Architecture Group
 Wisconsin Architectural Research Tool Set (WARTS)
 Stuff I like to use
 Oral
Presentation Advice, including David Patterson's
How to Give a Bad Talk
 Online  
Raw Data for
Cache Performance of the SPEC92 Benchmark Suite
 Proof that I am into hardware
 A Wisconsin sound :-)


Addresses:
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
markhill@cs.wisc.edu
Phone: 608-262-2196
Secretary: 608-265-4892 (Julie Fingerson or Thea Sklenar)
Departmental Office: 608-262-1204
Fax:  608-262-9777
Office Hours (Fall 1996-1997):
Monday 2:00-3:00, Wednesday 11:00-12:00, or by appointment markhill@cs.wisc.edu
Current Teaching

Fall 1996-1997 -
CS/ECE 752
Advanced Computer Architecture I
Fall 1996-1997 -
CS 838
Topics in Computing - Java: The Language and the Implementation I

Catalog Information on Courses I Teach

CS/ECE 354 - 
Machine Organization and Programming
CS/ECE 552 - 
Introduction to Computer Architecture
CS/ECE 752 - 
Advanced Computer Architecture I
CS/ECE 757 - 
Advanced Computer Architecture II

Education:

 Ph.D.  (Computer Science)
University of California - Berkeley, 1987
 M.S.  (Computer Science)
University of California - Berkeley, 1983
 B.S.E. (Computer Engineering)
University of Michigan, 1981

Research Interests:

 Computer architecture
 Parallel computing
 Memory systems
 Performance evaluation



Research Summary
My research targets the memory systems of shared-memory multiprocessors
and high-performance uniprocessors.  Memory system design is important,
because it largely determines a computer's sustained performance.  My
work emphasizes quantitative analysis (often requiring new evaluation
techniques) of system-level (not just hardware) performance.


Much of my recent work is part of the Wisconsin Wind
Tunnel Projectwith Profs. Larus and Wood and many
students.  The project expects most future massively-parallel computers
will be built from workstation-like nodes and programmed in high-level
parallel languages--like HPF--that support a shared address space in
which processes uniformly reference data.  Our research seeks to
develop a consensus about the middle-level interface--below languages
and compilers and above system software and hardware.  We have recently
proposed the  Tempest interface that enables programmers,
compilers, and program libraries to implement and use message passing,
transparent shared memory, and hybrid combinations of the two.  We are
developing Tempest implementations on a Thinking Machines CM-5, a
cluster of workstations (COW), and hypothetical hardware platforms.
The Wisconsin Wind Tunnel project is so named because we use our tools
to cull the design space of parallel supercomputers in a manner similar
to how aeronautical engineers use conventional wind tunnels to design
airplanes.


Other recent work with Madhu Talluri
targets improving translation lookaside buffer (TLB)
and page table performance by clustering aligned groups of base pages.
Options require changes to hardware only (complete-subblocked TLBs),
operating system only (clustered page tables), or both (superpages
and partial-subblocked TLBs).
See our 
ASPLOS
and
SOSP
papers.


A Sampler of Recent Papers


The Wisconsin Wind Tunnel Project: An Annotated Bibliography,

Mark D. Hill, James R. Larus, David A. Wood,
unpublished manuscript, revised frequently.

1996


Parallel Computer Research in the Wisconsin Wind Tunnel Project,

Mark D. Hill, James R. Larus, David A. Wood,
NSF Conference on Experimental Research in Computer Systems, June 1996.



Bidirectional Technology Transfer: Sabbaticals in Industry,

Mark D. Hill,
NSF Conference on Experimental Research in Computer Systems, June 1996.



Coherent Network Interfaces for Fine-Grain Communication,

Shubhendu S. Mukherjee,
Babak Falsafi,
Mark D. Hill, and
David A. Wood.
International Symposium on Computer Architecture (ISCA), 1996
 


Optimistic Simulation of Parallel Architectures Using Program Executables,

Sashikanth Chandrasekaran and Mark D. Hill.
Workshop on Parallel and Distributed Simulation (PADS), May 1996.

1995


A New Page Table for 64-bit Address Spaces,
Madhusudhan Talluri, Mark D. Hill, Yousef A. Khalidi,
Symposium on Operating Systems Principals (SOSP),
December 1995.



Presidential Young Investigator Award Final Report,

Mark D. Hill,
July 1995.




Efficient Support for Irregular Applications on Distributed-Memory Machines,


Shubhendu S. Mukherjee, Shamik D. Sharma, Mark D. Hill, James R. Larus,
Anne Rogers, and Joel Saltz,
PPoPP, July 1995.



Cost-Effective Parallel Computing,

David A. Wood and Mark D. Hill,
(IEEE Computer, February 1995).



Solving Microstructure Electrostatics on a Proposed Parallel Computer,

Frank Traenkle, Mark D. Hill, Sangtae Kim,
Computers and Chemical Engineering, 1995.

1994


Application-Specific Protocols for User-Level Shared Memory,

Babak Falsafi, Alvin R. Lebeck, Steven K. Reinhardt, Ioannis Schoinas,
Mark D. Hill James R. Larus, Anne Rogers, David A. Wood,
Supercomputing '94, Nov. 1994.



Surpassing the TLB Performance of Superpages with Less Operating System Support,

Madhusudhan Talluri and Mark D. Hill,
International Conference on Architectural Support for
Programming Languages and Operating Systems (ASPLOS),
October 1994.



An Evaluation of Directory Protocols for Medium-Scale Shared-Memory
Multiprocessors,

Shubhendu S. Mukherjee and Mark D. Hill,
International Conference on Supercomputing (ICS), July 1994.



A Comparison of Trace-Sampling Techniques for Multi-Megabyte Caches,

R. E. Kessler, Mark D. Hill, David A. Wood,
IEEE Transactions on Computers, June 1994.

1993


Cooperative Shared Memory: Software and Hardware for Scalable Multiprocessors,

Mark D. Hill, James R. Larus, Steven K. Reinhardt, David A. Wood,
ACM Transactions on Computer Systems (TOCS), November 1993.



Wisconsin Architectural Research Tool Set (WARTS),

Mark D. Hill, James R. Larus, Alvin R. Lebeck, Madhusudhan Talluri,
David A. Wood,
Computer Architecture News (CAN), August 1993.



Cache Performance of the SPEC92 Benchmark Suite,

Jeffrey D. Gee, Mark D. Hill, Dionisios N. Pnevmatikatos, Alan Jay Smith,
IEEE Micro, August 1993.



A Unified Formalization of Four Shared-Memory Models,

Sarita V. Adve and Mark D. Hill,
IEEE Transactions on Parallel and Distributed Systems (TPDS), June 1993.



Performance Implications of Tolerating Cache Faults,

Andreas Farid Pour and Mark D. Hill,
IEEE Transactions on Computers (TOC), March 1993.




Mechanisms for Cooperative Shared Memory,


David A. Wood, Satish Chandra, Babak Falsafi, Mark D. Hill, James R. Larus,
Alvin R. Lebeck, James C. Lewis, Shubhendu S. Mukherjee, Subbarao Palacharla,
Steven K. Reinhardt,
International Symposium on Computer Architecture (ISCA), May 1993.


The Wisconsin Wind Tunnel:  Virtual Prototyping of Parallel Computers,

Steven K. Reinhardt, Mark D. Hill, James R. Larus, Alvin R. Lebeck,
James C. Lewis, David A. Wood,
ACM SIGMETRICS, May 1993.

1992


Page Placement Algorithms for Large Real-Index Caches,

R. E. Kessler, Mark D. Hill,
ACM Transactions on Computer Systems, November 1992.



Programming for Different Memory Consistency Models,

Kourosh Gharachorloo, Sarita V. Adve, Anoop Gupta,
John L. Hennessy, Mark D. Hill,
Journal of Parallel and Distributed Computing, August 1992.



Tradeoffs in Supporting Two Page Sizes,

Madhusudhan Talluri, Shing Kong, Mark D. Hill, David A. Patterson,
International Symposium on Computer Architecture (ISCA), May 1992.

1991


Detecting Data Races on Weak Memory Systems,

Sarita V. Adve, Mark D. Hill, Barton P. Miller, Robert H. B. Netzer,
International Symposium on Computer Architecture (ISCA), June 1991.



Comparison of Hardware and Software Cache Coherence Schemes,

Sarita V. Adve, Vikram S. Adve, Mark D. Hill, Mary K. Vernon,
International Symposium on Computer Architecture (ISCA), June 1991.



A Model for Estimating Trace-Sample Miss Ratios,

David A. Wood, Mark D. Hill, R. E. Kessler
ACM SIGMETRICS, May 1991.



Implementing Stack Simulation for Highly-Associative Memories (extended abstract)
Yul H. Kim,  Mark D. Hill, David A. Wood,
ACM SIGMETRICS, May 1991.

1990


Implementing Sequential Consistency In Cache-Based Systems,

Sarita V. Adve, Mark D. Hill,
International Conference on Parallel Processing, August 1990.



Weak Ordering - A New Definition,
Sarita V. Adve,  Mark D. Hill,
International Symposium on Computer Architecture (ISCA), June 1990.



Ph.D. Graduates


Madhusudhan Talluri,

Ph.D. Expected August 1995,

Use of Superpages and Subblocking in the Address Translation Hierarchy,

first employment: Sun Microsystems,
current email: madhu@eng.sun.com.



Sarita V. Adve,

Ph.D. November 1993,

Designing Memory Consistency Models for Shared-Memory Multiprocessors,

first employment: Assistant Professor at Rice University,
current email: sarita@rice.edu.



Richard E. Kessler,

Ph.D. July 1991,

Analysis of Multi-Megabyte Secondary CPU Cache Memories   

(click here for table of contents),
first employment: Cray Research,
current email: richard.kessler@cray.com.



Last Updated
Wed Aug 14 16:52:16 CDT 1996


Keywords to help search engines rank this page higher than my other pages:
Mark Hill Home Page, Computer Sciences, Wisconsin.
Mark Hill Home Page, Computer Sciences, Wisconsin.
Mark Hill Home Page, Computer Sciences, Wisconsin.
Mark Hill Home Page, Computer Sciences, Wisconsin.



",non-course
"

 Home Page 



 Markos Zaharioudakis (markos@cs.wisc.edu) 



Research Assistant
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
Phone: (608) 262-6623
E-mail: markos@cs.wisc.edu

 Note: this page is under construction.


  SP2 

",non-course
"

 Michael Birk's Home Page 


  Michael Birk's Home Page  

 CS302 Section 12
 CS110 Section 7
 Project List home page
 Programming Languages Links
 AllTraxx home page


 
 mbirk@cs.wisc.edu 


",non-course
"

Mark L. McAuliffe


Mark L. McAuliffe


 
Computer Sciences Department 
University of Wisconsin - Madison 
1210 W. Dayton St. 
Madison, WI 53706 
mcauliff@cs.wisc.edu
 Research Interests:
Design and implementation of object-oriented database systems.
 

 Publications:
M.J. Carey, D.J. DeWitt, M.J. Franklin, N.E. Hall, M.L. McAuliffe,
J.F. Naughton, D.T. Schuh, M.H. Solomon, C.K. Tan, O.G. Tsatalos, S.J.
White and M.J. Zwilling.   Shoring
Up Persistent Applications.  Proc. ACM SIGMOD, May, 1994.
Mark L. McAuliffe and Marvin H. Solomon.   A
Trace-Based Simulation of Pointer Swizzling Techniques.
Proceedings of IEEE Data Engineering, March, 1995. 
Mark L. McAuliffe, Michael J. Carey, and Marvin H. Solomon.   Towards
Effective and Efficient Free Space Management.
To appear: Proceedings of 1996 ACM SIGMOD Conference, June,
1996.



",non-course
"

Marc Shapiro's Page






  Marc Shapiro believes, ""'A tautology is a tautology' is a tautology.""
  
  I am currently obsessively fond of disappear fear, repulsed by C++, 
  pondering fast pointer analyses, watching lots of Jackie Chan movies, 
  thinking about programming language design, not reading much, trying to
  teach elementary school students to think in terms of recursion,
  and hoping to be interrupted.
  
  This is what C. A. R. Hoare wrote about pointers in 1973: ""Their
  introduction into high-level languages has been a step backward
  from which we may never recover.""
  



 My home page (with my schedule)
 Todd's
	automatic accident generator
 Elaine DiMasi's twisty little web page
 Amanda Peet's web retreat



Here's my hyper-mode for emacs, with the
pull-down menus and all.  Doesn't have all the cool html3 tags yet.


This is the web submissions software
I cobbled together for PLDI.  You may be able to get it to work.  It now
includes the previously mostly missing file submit.html!


This is my POPL '97 paper.

""Fast and Accurate Flow-Insensitive Points-To Analysis.""  Marc Shapiro
and Susan Horwitz.  To appear in ACM Symposium on Principles of 
Programming Languages, 1997.



My various addresses are:


 Marc Shapiro, CS Dept 
       1210 W. Dayton St 
       Madison, WI 53706-1685
   5385 CS  
       (608)262-1079
   mail mds@cs.wisc.edu
       talk mds@house.cs.wisc.edu  
finger mds@house.cs.wisc.edu
 212 Marion St, Apt. 305  
       Madison, WI 53703-1953  
       (608)257-6286


Here's a list of people I don't know.  (Really.)

 Marc Shapiro
       (I did meet him once.)
   Jonathan Goldstein
 Paul Ferguson
 Lawrence Brown


Last modified: Thu Oct 24 16:45:11 1996 by Marc Shapiro

mds@cs.wisc.edu



",non-course
"

Rob's Home Page

Rob's Minimalist Home Page
  

Last Modified: August 30
Me:    Rob Mellencamp 
TAship:   CS537 - Introduction to Operating Systems 
Email:    mellen@cs.wisc.edu 
Office:    1349 Computer Science Building 
Office Phone:    262-5340 
Office Hours:   10:00 -11:00 am MWF or by appointment 


  mellen@cs.wisc.edu


",non-course
"

David Melski's Personal Info Page



David Melski

Current:                  Department:
618 1/2 S. Mills St.      5390 Computer Science and Statistics
Madison, WI  53715        1210 W. Dayton St.
                          Madison, WI  53706
(608)259-9197             (608)262-0018

Permenant:
1136 West Ives
Marshfield, WI  54449
(715)384-8282


Michelle is an awesome person.  Her page is currently under construction.
My sister Kasey has a 
great home page, as does my brother Eric.


This semester I'm teaching a couple of sections of cs302.
I'm also working with Tom Reps in programming languages.  My
exact schedule still needs to be determined.

As an undergrad, I majored in Computer Science and Russian Studies
here at the University of Wisconsin.  I even spent the fall semester
of '92 in Russia.  I don't get a chance to use my Russian very often,
and I miss it a bit.  Someday, someday, I'll make it back.

My other interests include chess and soccer.  Recently, I've been
biking a bit, too.  I've also been distracted from work by numerous
books, and hasty rewrites of my web page.

Here are my 
.  I also want to put a link to
mapquest.  I plan on stealing a
lot of their maps in a second to give directions from Madison to Marshfield.


Last modified: Mon Sep 30 21:45:22 1996 by David Melski

melski@cs.wisc.edu



",non-course
"

Milo M. Martin's Home Page


Milo M. Martin (milo@cs.wisc.edu)


Graduate Student and Teaching Assistant
Computer Sciences Department
University of Wisconsin-Madison
1210 West Dayton Street
Madison, WI 53706-1685
USA
Email: 
milo@cs.wisc.edu
Office: CS&St 1301
Office Phone: (608) 262-6600
Office Hours: 2:45-3:45 pm, Tuesday/Thursday or by
appointment
BA, Computer Science, Gustavus 
Adolphus College, 1996


Classes

CS701: Compiler Construction - 
       Charles N. Fischer
CS752: Advanced Computer Architecture I -
      Mark D. Hill
CS838:
Java! (only sitting in) -
      Mark D. Hill and
      James Larus

Teaching

CS302: Algebraic Language Programming (C++) - 
      Section 4

Research Interests

I am a first year PhD student interested in programming
languages, 
architecture, and systems.  Specifically I am interested in:


 Compiler (optimization) technology and how it will be
influenced by hardware and operating systems advances.

   Mobile programming (such as Java) and what additional challenges this presents to compilers, architecture and operating system designers.

   Many, many other things, many of which I don't even know that I
am interested in... yet.  


Publications

Research performed summer 1994 and 1995 at Argonne National Laboratory, Technology Development Division,
under the advisement of Charles L. Fink:

 C. L. Fink, P. G. Humm, M. M. Martin, and B. J. Micklich,
 Evaluation of Few-view Reconstruction Parameters for Illicit
Substance Detection Using Fast-Neutron Transmission Spectroscopy,
IEEE Nuclear Science Symposium and Medical Imaging Conference. (1995)

   C. L. Fink, B. J. Micklich, T. J. Yule, P. G. Humm, L. Sagalovsky,
and M. M. Martin, Evaluation of Neutron Techniques for Illicit
Substance Detection, Nucl. Inst. Meth. B99, 748-752. (1995)


Un-Publications

Research performed during the 1995-96 school year at Gustavus Adolphus College, under the advisement of Max Hailperin.


 Milo M. Martin and Max Hailperin,  Programming Language
Flexibility and Deterministic Dynamic Parallel Computation,
Senior Honors Thesis, Mathematics and Computer Science Department,
Gustavus Adolphus College. (dvi or postscript)

Computing Interests 
 Java! - Other java resources.


   NeXT Software - Once NeXT 
Computer, now a software only company.

   ACM - ACM (founded 1947) is an
international scientific and educational organization dedicated to
advancing the art, science, engineering, and application of information
technology, serving both professional and public interests by fostering
the open interchange of information and by promoting the highest
professional and ethical standards. (A direct quote from their web page)



Personal Interests

 NFL Football - I am a big
NFL football fan.  Since I lived in Minnesota for over 20 years, my
favorite team is the Minnesota Vikings.  (Even
though I now live in the land of cheese heads.)

   Colonize and Conquer is a multi-player
     play-by-e-mail space exploration and combat game which I wrote.
   Babylon 5 - 
The best show on TV. (IMHO)

   Atlantis 
3.0 - Atlantis is a play-by-email game set in the mythical world of 
atlantis.  Players build armies, engauge in trade, explore lands, fight each 
other and wondering monsters, train wizards, discover the underworld.  
Right now there are 200+ players, of which I am one.

  
 Rules
 Current list of 
players

 Ultimate Frisbee - UPA
(The Ultimate Players Association) - ``Ultimate combines elements of
soccer, football and basketball in a fast-paced game, played with a
frisbee, where everyone is a quarterback and everyone is a receiver.''
(A direct quote from the UPA home page).  Ultimate
in ten simple rules.




Milo M. Martin 

  (milo@cs.wisc.edu)



",non-course
"

 Minos's Home Page 







 Minos N. Garofalakis
minos@cs.wisc.edu

PhD Candidate/Research Assistant 
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
Office: 7394 CS&STAT 

Phone : (608)829-3625 @home, (608)262-6629 @work



Research Interests:

 Effective Resource Management
 Parallel and Multimedia Database Systems
 Complex Query Processing and Optimization
 Parallel Algorithms
 Database Theory


Education:

 M.S. (Computer Science) University of Wisconsin-Madison, Dept. of Computer Sciences, December 1994 
 B.S. (Computer Science) University of Patras, Dept. of Computer Engineering and Informatics, June 1992


Refereed Publications:

 ""Multi-dimensional Resource Scheduling for Parallel Queries"", 
by Minos N. Garofalakis and Yannis E. Ioannidis, 
Proceedings of the 1996 ACM SIGMOD Conference, Montreal, Canada,
June 1996, pp. 365-376 


Abstract,
 
Paper (in postscript, ~200K).

 ""Scheduling Issues in Multimedia Query Optimization"", 
by Minos N. Garofalakis and Yannis E. Ioannidis,
ACM Computing Surveys, Vol. 27, No. 4, December 1995, pp. 590-592


Paper (in postscript, ~107K).



Technical Reports:

""Resource Scheduling in Enhanced Pay-Per-View Continuous Media Databases"",
by Minos N. Garofalakis, Banu Ozden, and Avi Silberschatz,
 Submitted for publication, October 1996
""Model-checking for Sequential Probabilistic Real-time Systems"",
by Minos N. Garofalakis,
Technical Report TR-93.02.7, Computer Technology Institute, Patras,
February 1993


Advisor:
Yannis E. Ioannidis


More...
Feel free to peek at my 
resume.


Pointers to interesting stuff:



UW-Madison DBMS Reasearch Home Page
 


UW-Madison Hellenic Society Home Page
 


ACM SIGMOD Home Page



  VLDB Home Page



  IBM Almaden Research Center
  IBM T.J. Watson Research Center

Dr. Michael Ley's Bibliograpy Server on Databases & Logic Programming

 

This page is perpetually under construction...
Last Updated: July 14, 1996 





",non-course
"Marcelo Gonçalves
 Marcelo J. R. Gonçalves



mjrg@cs.wisc.edu

 Associate researcher, 
 Paradyn project.




Address


Work					Home

6358 Computer Sciences Department	4817 Sheboygan Av., Apt. 316
1210 West Dayton Street			Madison WI 53705
Madison WI 53706			Phone: (608)278-0958
Phone: (608)262-6614


Department of Computer Sciences
University of Wisconsin - Madison

",non-course
"

Brian Morgan's Home Page


 Brian Morgan

Graduate Student
Computer Sciences Department 
University of Wisconsin-Madison
1210 West Dayton Street
Madison, WI  53706

E-mail: morgan@cs.wisc.edu 
Telephone: (608) 262-6609
Fax: (608) 265-2635

Advisor
 Chuck Dyer

Research Interests
Virtual conferencing systems, image compression, video conferencing,
high bandwidth networking


 Related Links of Interest 

 
Wisconsin Computer Vision Group 



",non-course
"

 Andreas Moshovos's Home Page 









Andreas Moshovos

Research Assistant 



Department of Computer Sciences




University of Wisconsin-Madison












Advisor:

Guri Sohi


Groups:

Multiscalar

(Wisconsin Kestrel),

UW-CS Computer Architecture
.



Address


 
Leave me a note




See if I'm around




Want to peek into the future? Then click

here


My brother writes poetry, click 

here

for a sample of his work.





I'm currently working on:

 Data Dependence Speculation for OOO processors. Download technical report
 
here
 (compressed postscript) or 
 
here
 
(uncompressed postscript).
 Download talk slides 

here
.
 Load Balancing on Multiscalar Processors.
 Data Speculation for OOO processors.

In general I'm interested in:



Computer Architecture

- Instruction Level Parallelism
 Compiler support for ILP explotation
 VLSI





 Fall '92 - Spring '93: I was a graduate student at the

Courant institute

of 

New York University
. I earned no degree since I transfered to Wisconsin, however, I had the
opportunity to work with excellent people and to meet my wife.
 M.S. (Computer Science)


University of Crete - Greece
,
1992 


""Implementing Non-Numerical Algorithms On An Access Decoupled Architecture
That Supports Software Pipelining""
, 
Advisor: M. Katevenis. A short description can be found  

 here

 B.S. (Computer Science)


University of Crete - Greece
,
1990








 ViH

a vi like editor that supports editing in greek.

 Many, many interesting 

links



 Hellenic Resouces Network 
Be sure to visit this one.


Obtaining and Installing greek fonts 
. Local copy of page residing at

www.hyper.gr
.








 Devil's Dictionary!

(394K)


My bookmarks.
 This is a big mess...


National fraud information center

Usenet changes
.
 Want to send a

fax for free?









",non-course
"


Tony Moy's Home Page





 

What's New
October 17, 1996. Now that I'm back in
Madison, I should update several of my pages.

Changed the background to black for better contrast.
Updated contact information.
Minor changes to various pages.

Here's a list of older updates.

I prefer to keep my main page brief, so here
are links to my second-level pages:

Navigational index
About me
Friends
Some favorite pages on
        the Web
Interests
Contact information


Last modified on October
17, 1996 23:03.


moy@cs.wisc.edu


Copyright © 1996 Tony Moy


",non-course
"

 Martin Reames's Home Page 




 Martin Reames 

Graduate Student/Teaching Assistant (for CS 302)
(also, Coke Poobah -- finger the coke machine!)
Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI  53706-1685

Office: CS 1345
Telephone: (608) 262-1012
Telephone: (608) 262-1204 (dept)
Fax: (608) 262-9777
Email: mreames@cs.wisc.edu

Fall 1996 Schedule



Research interests: Databases, in particular digital terrain modelling
(TINs); programming languages, compiler design; logic and logic
programming.  

Qualifying exam : Databases, Spring 1997.  Some previous years' exams
Job interests: Software design and development in a product oriented
environment that exploits my computer science education and my interests
in databases and/or compiler design.

My resume in postscript
and html.
As distributed to the Wisconsin DB Affiliates on Oct 21, 1996.  


BA, Mathematics/Computer Science, Wesleyan University, 1994.

In the ""not for the faint of heart"" section of the web page, here's a
link to my senior honors
thesis on General E-Unification.


I Am The Coke Poobah
Look at my works, ye mighty, and be afraid!!!

Oh dear : I've gone and let this new job of being the Coke Poobah go to
my head.  I'm not usually this far gone.  Really.  If you want to talk to
someone who's better adjusted to his crucial role in UW CS dept life, you
should probably see Elton.
He doesn't even mention being the co-Poobah on his page.  Imagine
that.

Besides the aforementioned Coke Poobahship/mental illness, there are a
few other things you might want to know about me.  I'm a third year
graduate student in the CS department at Wisconsin, concentrating in
databases, and currently studying for the qual (which will be sometime in
early February).  For exercise and relaxation I play squash (reasonably well) all year round,
ultimate frisbee (OK) in the summer, and basketball, poorly and
infrequently; and if you notice such things, you might see me rapidly
riding my mountain bike around campus -- even in the chilliest of weather,
and always with a helmet.
If you wish to learn more about my interests, feel free to examine my
not-very-often-updated hierarchy of stuff I
like.  Enjoy.

Wisconsin's on-line library


Last modified: Fri Nov  1 12:59:42 1996 by Martin Reames

mreames@cs.wisc.edu




",non-course
"

Wisconsin Multiscalar Project Home Page





Wisconsin Multiscalar Project




 Technical Papers
 Talks Given by Multiscalar People
 Contributors
 Funding Sources
 Related Projects
 Available Software
 Wisconsin CS's Computer Architecture Group
 Computer Sciences Department
at the University of Wisconsin
 
World-Wide Computer Architecture Information
  Information of interest to local users only 



 Last Updated: 20 February 1996 by Guri Sohi (sohi@cs.wisc.edu) 



",non-course
"

Mike Steele's WWW Homepage



Mike Steele's WWW Homepage

msteele@cs.wisc.edu

Office:  1332 Comp Sci & Stat Building







 
Me sitting in the Univ. of Maryland CS department's computer lab,
struggling through my undergraduate operating systems class sometime
around April 1995.  Note the time stamp in the lower right corner says
""4:05"".  That's AM folks...
I'm a graduate student in the 
Computer Sciences Department at the 
University of Wisconsin--Madison (School Motto: ""Come and freeze
in the land of cheese"").  My research and study interests center 
around artificial
intelligence, 
computer vision,
and operating systems (I hope to narrow it down some in the coming years). 

This semester, I am a graduate
instructor for 
Section 10 of CS 302 (Algebraic Language Programming).  

I received my 
Bachelor's Degree in May 1996 from the
University of Maryland's
Computer Science Department.



Publications


Grindstone: A Test Suite For Parallel Performance Tools. Jeffery
K. Hollingsworth and Michael Steele.  Computer Science Technical Report
CS-TR-3703, University of Maryland, Oct. 1996.  (gzipped PostScript
File)


Classes This Semester

CS 537:  Introduction to Operating Systems with Mary Vernon
CS 540:  Introduction to Artificial Intelligence with Chuck Dyer




My Other Pages

Information on getting
in touch with me (for all my friends back in Maryland
whom I forgot to e-mail with my new addresses)  
My favorite links
My favorite sports teams
Some of my friends.
The Usenet Dave Barry Frequently Asked Questions list
The Usenet Billy Joel Frequently Asked Questions list
I'm also the mailing list administrator for the

Fruit-of-the-Day mailing list (still hosted by the University of
Maryland), which started as an inside
joke around my office, but got out of hand sometime in 1994 and
now has over 400 members world-wide.
If you're the predator and you're coming to kill me, I have some
infrared photos of myself so you'll know what I look
like.



An infrared picture of me









Mike Steelemsteele@cs.wisc.eduUniversity of Wisconsin--MadisonComputer Sciences Department







",non-course
"


Maria's Home Page






Maria's Home Page





How about a visit to the University of Maryland-College Park??

Or maybe the University of Wisconsin-Madison??


If you are in my CS132 lab sections, you might want to visit this page-->





",non-course
"

Oscar Naim's Home Page


 
 Bienvenido!
 I'm a new staff member working on the Paradyn Project. I just finished my
Ph.D. at the University of Southampton in England and I did my 
undergrad and MSc at the Universidad Simon Bolivar (Caracas, Venezuela).

 I was born in the beautiful city of Barquisimeto, Venezuela. Barquisimeto
is located on the central-western part of Venezuela and has a population of
about 1 million people. Barquisimeto is also known as the 
musical capital of Venezuela. 

 My main research area is Performance Analysis and Visualization of 
Parallel Programs. However, apart from being a researcher, I like to play
classical guitar. In fact, I studied for a few years with two excellent
maestros: Rodrigo Riera and Antonio Lauro.

 I like to spend my time:

 Playing guitar 
 Reading good books (e.g. Sherlock Holmes stories) 
 Cooking
 Watching baseball
 And working too!! :-)

 If you like to see some beatiful pictures of Venezuela, please
click here or here.

 You can finger me at  
naim@cs.wisc.edu and check if I am around.

 Ah mundo Barquisimeto!



",non-course
"Anastassia G. Ailamaki Home

 Welcome home! 


 Anastassia G. Ailamaki 

 Graduate Student, Computer Sciences Department 
 University of Wisconsin, Madison 
 1210 W. Dayton Street 
 Madison, WI 53705 
 Phone: (608) 2652311 

Nah, you don't really really want to see this 
picture .

IMPORTANT NOTICE: When she finds the time, she'll make a decent home page.


Nice links:

George's ""What's What in Rochester, NY""

and 

Alex's Guide To The Greek Islands

are worth visiting!












Send me an e-mail!!! 
 natassa@cs.wisc.edu 

Mon Sep  9 12:10:57 CDT 1996



",non-course
"Jeffrey F. Naughton
Jeffrey F. Naughton
naughton@cs.wisc.edu


Research Interests
OLAP, multi-dimensional data analysis, parallel object-relational
DBMS. The overall goal of my research is the development of
database systems that surpass current database systems both in
performance and in ease of use.  Currently I have three main areas of
interest. (1) Techniques for improving the performance of
multi-dimensional data analysis, including array-based storage and
processing algorithms, bit-map indices, and algorithms for computing
the ""cube""; (2) The performance of object-relational database systems,
including benchmarking O/R DBMS, algorithms for set-valued
attributes, and techniques for parallelizing O/R workloads; (3)
Parallel geo-spatial information systems.

Recent Publications

 
On the Computation of Multidimensional Aggregates (with
Sameet Agarwal, Rakesh Agrawal, Prasad M. Deshpande, Ashish Gupta,
Raghu Ramakrishnan, and Sunita Sarawagi.  In proceedings of the
22nd International Conference on Very Large Databases, Mumbai (Bombay), 1996.
 Storage Estimation for Multidimensional Aggregates
in the Presence of Hierarchies (with 
Amit Shukla, Prasad M. Deshpande,  and Karthikeyan Ramasamy.)
22nd International Conference on Very Large Databases, Mumbai (Bombay), 1996.
The BUCKY Object-Relational Database Benchmark (with 
Michael Carey, David DeWitt, Johannes Gerhke, Dhaval Shah,
and Mohammed Asgarian).  In preparation.
Toward a MOLAP ADT for an Object-Relational DBMS (with
Yihong Zhao and Kristin Tufte, submitted for 
publication.

",non-course
"

Navin Kabra








Navin Kabra
Graduate Student
 Department of Computer Sciences 
University of Wisconsin-Madison

Advisor:
 David DeWitt
Research Area:
 Databases 

Research Interests:

 
 Customizable Query Optimization
 

     The Paradise Project


  See my 
  
.plan for my address.



  If you have nothing better to do, you can
  go in here and explore  
  my bookmarks. Or, you could have a 
  look at some  Indian Stuff , 
  which includes among other things an archive of 
   Hindi Songs. 






 navin@cs.wisc.edu. 
 PGP Public Key is here.
 


",non-course
"

Tia Newhall




Tia Newhall 
 (newhall@cs.wisc.edu)  


Graduate Student
1210 W. Dayton St.
Madison, WI  53706-1685
Telephone: (608) 262-6615




Research Interests:

 Parallel and Distributed Systems 
 Performance Tools
 Scalability Analysis and Performance Prediction 
 Java 



Research Group: Paradyn


Advisor: Bart Miller


mummy pictures from Guanajuato

 Last Changed: 17 August, 1995 



",non-course
"Nancy Hall

Computer Sciences Department 
University of Wisconsin -- Madison 
1210 West Dayton Street 
Madison, WI 53706-1685 

608/262-5945

Project: SHORE: a Scalable Heterogeneous Object REpository

",non-course
"

 Olvi L. Mangasarian's Home Page 


 
Olvi L. Mangasarian 

 John von Neumann Professor of Mathematics and Computer Sciences,
and member of the Center for the Mathematical Sciences 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 Telephone: (608) 262-1204 
 Fax: (608) 262-9777 
 Email: olvi@cs.wisc.edu 

Ph.D., Harvard University, 1959 
Interests:
Mathematical programming, machine learning, and parallel computing


 Research Summary 

Optimization theory is rich mathematically while being very effective
computationally in solving many real-life problems. My interests
in this topic have ranged over a broad spectrum that encompasses
theoretical aspects, such as error bounds for mathematical programs
and variational inequalities, convergence proofs for parallel
gradient and variable distribution algorithms for optimization,
smoothing techniques for solving constrained optimization problems
as differentiable nonlinear equations, as well as applications
to machine learning, both in general and specific contexts. An
important aspect of my research is the use of mathematical programming
techniques in diagnosing breast cancer, that has resulted in a
highly accurate computerized diagnostic system in current use
at University of Wisconsin Hospitals. 


 Current PhD Students 

 
	   Paul Bradley 


 Recent Publications 


  O. L. Mangasarian and M. V. Solodov




A Linearly Convergent Descent Method for Strongly Monotone
Complementarity Problems.

Mathematical Programming Technical Report 96-07, October 1996.




  O. L. Mangasarian and Jong-Shi Pang




Exact Penalty Functions for Mathematical Programs
with Linear Complementarity Constraints.

Mathematical Programming Technical Report 96-06, August 1996.




  O. L. Mangasarian




Mathematical Programming in Data Mining

Mathematical Programming Technical Report 96-05, August 1996.




  O. L. Mangasarian




Error Bounds for Nondifferentiable Convex Inequalities under a Strong S
later Constraint Qualification.

Mathematical Programming Technical Report 96-04, July 1996.




  P. S. Bradley, O. L. Mangasarian and W. N. Street


 
Clustering via Concave Minimization.

Mathematical Programming Technical Report 96-03, May 1996.
Submitted to Neural Information Processing Systems 1996.




  W. N. Street, O. L. Mangasarian and W. H. Wolberg


 
Individual and Collective Prognostic Prediction.

Mathematical Programming Technical Report 96-01, January 1996.




   P. S. Bradley, O. L. Mangasarian and W. N. Street


 
Feature Selection via Mathematical Programming.

Mathematical Programming Technical Report 95-21, December 1995.
Submitted to INFORMS Journal on Computing.




  O. L. Mangasarian


 
Machine Learning via Polyhedral Concave Minimization.

Mathematical Programming Technical Report 95-20, November 1995.
""Applied Mathematics and Parallel Computing -- Festschrift for 
Klaus Ritter"", H. Fischer, B. Riedmueller, S. Schaeffler, editors, 
Physica-Verlag, Germany 1996, 175-188.




   O. L. Mangasarian


 
The Ill-Posed Linear Complementarity Problem.

Mathematical Programming Technical Report 95-15, August 1995.
Submitted to SIAM Proceedings of the International
Symposium on Complementarity Problems, Baltimore, MD,
November 1-4, 1995. Revised November 1995.




  W. Nick Street and O. L. Mangasarian


 
Improved Generalization via Tolerant Training.

Mathematical Programming Technical Report 95-11, July 1995.




   O. L. Mangasarian


 
Mathematical Programming in Machine Learning.

Mathematical Programming Technical Report 95-06, April 1995,
Revised July 1995.
To appear in Proceedings of Nonlinear Optimization and 
Applications Workshop, Erice June 1995, Plenum Press.




   Chunhui Chen and O. L. Mangasarian


 
Hybrid Misclassification Minimization.

Mathematical Programming Technical Report 95-05, February 1995,
Revised July 1995 and August 1995.
To appear in Advances in Computational Mathematics.




  O. L. Mangasarian


 
Optimization in Machine Learning.

Mathematical Programming Technical Report 95-01, January 1995.
SIAG/OPT Views-and-News 6, 1995, 3-7.




  Chunhui Chen and O. L. Mangasarian


 
A Class of Smoothing Functions for Nonlinear and Mixed Complementarity Problems.

Mathematical Programming Technical Report 94-11, August 1994.
Revised October 1994, February 1995 and September 1995.
Computational Optimization and Applications 5, 1996, 97-138.




  O. L. Mangasarian, W. Nick Street and W. H. Wolberg


 
Breast Cancer Diagnosis and Prognosis via Linear Programming.

Mathematical Programming Technical Report 94-10, August 1994.
Revised December 1994. 
Operations Research 43(4), July-August 1995, 570-577.




  O. L. Mangasarian


 
The Linear Complementarity Problem as a Separable Bilinear Program.

Mathematical Programming Technical Report 94-09, July 1994.
Journal of Global Optimization 6, 1995, 153-161.




  O. L. Mangasarian and M. V. Solodov


 
Backpropagation Convergence via Deterministic Nonmonotone Perturbed Minimization.

Mathematical Programming Technical Report 94-06, June 1994.
Advances in Neural Information Processing Systems 6,
(J. D. Cowan, G. Tesauro and J. Alspector, editors) 383-390, 
Morgan Kaufmann Publishers, San Francisco, California 1994.




  Chunhui Chen and O. L. Mangasarian


 
Smoothing Methods for Convex Inequalities
and Linear Complementarity Problems.

Computer Sciences Technical Report 1191r, November 1993.
Revised November 1994.
Mathematical Programming 71, 1995, 51-69.




  O. L. Mangasarian


 
Misclassification Minimization.

Computer Sciences Technical Report 1186, October 1993.
Revised September 1994.
Journal of Global Optimization 5(4), December 1994, 309-323.




   O. L. Mangasarian and M. V. Solodov


 
Serial and Parallel Backpropagation for Neural Nets via
Nonmonotone Perturbed Minimnization.

Computer Sciences Technical Report 1149r, April 1993.
Revised December 1993.
Optimization Methods and Software 4, 1994, 103-116.





Chronological cancer bibliography

 WWW Page of Other Publications of MP Group at Wisconsin 

ftp papers and reports 

View and download papers and reports of MP Group 

View home page of MP Group.


 periodically updated by olvi@cs.wisc.edu 



",non-course
"

Machine Learning for Cancer Diagnosis and Prognosis


Machine Learning for Cancer Diagnosis and Prognosis




This page describes various linear-programming-based machine learning
approaches which have been applied to the diagnosis and prognosis of
breast cancer.  This work is the result of a collaboration at the
University of Wisconsin-Madison between
Prof. Olvi L. Mangasarian 
of the Computer Sciences Department and
Dr. William H. Wolberg
of the departments of Surgery and Human Oncology.


Here is a copy of the
press release 
distributed at the American Cancer Society Science Writers seminar in
March of 1994.  It provides a good overview of this research.



Table of Contents

 Diagnosis
 Prognosis
 Bibliography
 Citation in the Popular Press
 Local Related Links
 Other Related Links



Diagnosis

This work grew out of the desire by Dr. Wolberg to accurately diagnose
breast masses based solely on a Fine Needle Aspiration (FNA).  He
identified nine visually assessed characteristics of an FNA sample which 
he considered
relevant to diagnosis.  In collaboration with Prof. Mangasarian and
two of his graduate students, Rudy Setiono and 

Kristin Bennett, a
classifier was constructed using the multisurface method (MSM) of pattern 
separation on these nine features that
successfully diagnosed 97% of new cases.  The resulting data set is
well-known as the 
Wisconsin Breast Cancer Data.


The image analysis work began in 1990 with the addition of 
Nick Street
to the research team.  The goal was to diagnose the sample based on a
digital image of a small section of the FNA slide.  The results of
this research have been consolidated into a software system known as 
Xcyt, which is currently used by Dr. Wolberg in his clinical
practice.  The diagnosis process is now performed as follows:

 An FNA is taken from the breast mass.  This material is then
mounted on a microscope slide and stained to highlight the cellular
nuclei.  A portion of the slide in which the cells are
well-differentiated is then scanned using a digital camera and a
frame-grabber board.
   The user then isolates the individual nuclei using Xcyt.
Using a mouse pointer, the user draws the approximate boundary of
each nucleus.  Using a computer vision approach known as ""snakes"",
these approximations then converge to the exact nuclear boundaries.
This interactive process takes between two and five minutes per slide.
Here is an image showing
Xcyt in use. 
   Once all (or most) of the nuclei have been isolated in this
fasion, the program computes values for each of ten characteristics of
each nuclei, measuring size, shape and texture.  The mean, standard
error and extreme values of these features are computed, resulting in
a total of 30 nuclear features for each sample.
   Based on a training set of 569 cases, a linear classifier was
constructed to differentiate benign from malignant samples.  This
classifier consists of a single separating plane in the space of three
of the features: Extreme Value of Area, Extreme Value of Smoothness,
and Mean Value of Texture.  By projecting all the cases onto the
normal of this separating plane, approximate 
probability densities of
the benign and 
malignant points were constructed.  These allow a simple Bayesian
computation of probability of malignancy for new patients.  These
densities are shown to the patient, allowing her to judge the
""confidence"" of her diagnosis by comparison to hundreds of previous samples.



To date, this system has correctly diagnosed 176 consecutive new
patients (119 benign, 57 malignant).  In only eight of those cases did
Xcyt return a ""suspicious"" diagnosis (that is, an estimated
probability of malignancy between 0.3 and 0.7). 



A small subset of the source images used in this research can be found
 here.   These are very good
test cases for 
image segmentation or object recognition algorithms.  If your pet
segmentation algorithm can automatically identify all of the nuclei in
these images, please email me (street@cs.wisc.edu) and let's work together.




Prognosis


The second problem considered in this research is that of prognosis,
the prediction of the long-term behavior of the disease.  We have
approached prognosis as a function-approximation problem, using input
features -- including those computed by Xcyt 
-- to predict a
time of recurrence in malignant patients, using right-censored data.
Our solution is termed 
the Recurrence Surface Approximation method (RSA), and utilizes a linear
program to construct a surface which predicts time of recurrence for
new patients.  By examining the actual recurrence of those training cases
with similar predicted recurrence times, we can plot the probability of
disease-free survival for various times (out to 10 years) for an
individual patient.  This capability has been incorporated into
Xcyt and an example is shown 
here.
These survival curves plot the probability of disease-free survival versus 
time (in years).
The black disease-free survival curve represents all patients in our
original study; the red curve represents the probability of
disease-free survival for the sample case.  This particular case therefore
has an above-average prognosis, with a probability of being disease-free
after 10 years equal to about 80%.


The RSA procedure can also be used to compare the predictive power of
various prognostic factors.  Our results indicate that precise,
detailed cytological information of the type provided by Xcyt
gives better prognostic accuracy than the traditional factors Tumor
Size and Lymph Node Status.  If corroborated by other researchers,
this result could remove the need for the often painful axillary lymph 
node surgery.



Chronological Bibliography


Linked papers are provided in postscript format; if you don't have a 
postscript viewer, you can download the file (e.g., shift-click in Netscape)
and print it.  Abstracts are ASCII text.  To obtain papers which are not
linked, please contact the first author.


  O.L. Mangasarian, R. Setiono and W.H. Wolberg.
 Pattern Recognition via Linear Programming: Theory and
	Application to Medical Diagnosis.  
	In 
	 Proceedings of the Workshop on Large-Scale Numerical 
	Optimization, 
	1989, pages 22-31, Philadelphia, PA.  SIAM.

    O.L. Mangasarian and W. H. Wolberg.
 Cancer Diagnosis via Linear Programming. SIAM News, 
	Vol. 23, 1990, pages 1 & 18.

    W.H. Wolberg and O.L. Mangasarian.
 Multisurface Method of Pattern Separation for Medical
	Diagnosis Applied to Breast Cytology. 
	Proceedings of the National Academy of Sciences, U.S.A., 
	Vol. 87, 1990, pages 9193-9196.

    W.N. Street.
 Toward Automated Cancer Diagnosis: An Interactive
	System for Cell Feature Extraction.
	Technical Report 1052, Computer Sciences Department, 
	University of Wisconsin, October 1991.

    W.H. Wolberg, K.P. Bennett and O.L. Mangasarian.
 Brast Cancer Diagnosis and Prognostic Determination 
	from Cell Analysis.
	Manuscript, 1992,
        Departments of Surgery and Human Oncology and
	Computer Sciences, University of Wisconsin, Madison, WI 53706.

    W.H. Wolberg, W.N. Street, and O.L. Mangasarian. 
  Breast Cytology
	Diagnosis via Digital Image Analysis.  
Analytical and Quantitative Cytology and Histology,  
	Vol. 15 No. 6, pages 396-404, December 1993.
	(abstract)

    W.N. Street, W.H. Wolberg and O.L. Mangasarian.
 
	Nuclear Feature Extraction For Breast Tumor Diagnosis. 
	In 
	IS&T/SPIE 1993 International Symposium on Electronic Imaging: 
	Science	and Technology, 
	volume 1905, pages 861-870, San Jose, CA, 1993.
	(abstract)

    W.H. Wolberg, W.N. Street, and O.L. Mangasarian.
  Machine learning
	techniques to diagnose breast cancer from fine-needle aspirates.  
Cancer Letters 
	Vol. 77, pages 163-171, 1994. 
	(abstract)

    W. N. Street
 
	Cancer Diagnosis and Prognosis via 
	Linear-Programming-Based Machine Learning. 
	Ph.D. Dissertation, University of Wisconsin-Madison, August
	1994. 
	Available as UW Mathematical Programming Technical Report 94-14.
	(abstract)

  W.H. Wolberg, W.N. Street, D.M. Heisey, and O.L. Mangasarian.  
 
	Computerized breast cancer diagnosis and prognosis from fine needle
	aspirates. 
 Archives of Surgery 1995; 130:511-516.
	(abstract)

    W.H. Wolberg, W.N. Street, and O.L. Mangasarian.  
 
	Image analysis and machine learning applied to breast cancer
	diagnosis and prognosis.
Analytical and Quantitative Cytology and Histology, 
	Vol. 17 No. 2, pages 77-87, April 1995.
	(abstract)

    W.H. Wolberg, W.N. Street, D.M. Heisey, and O.L. Mangasarian. 
 
	Computer-derived Nuclear Features Distinguish Malignant from Benign
	Breast Cytology.
Human Pathology, 
	Vol. 26, pages 792-796, 1995.
	(abstract)

    W.H. Wolberg, W.N. Street, D.M. Heisey, and O.L. Mangasarian. 
 
	Computer-derived Nuclear ``Grade'' and Breast Cancer Prognosis.
Analytical and Quantitative Cytology and Histology, 
	Vol. 17 No. 4, pages 257-264, August 1995.
	(abstract)

    O.L. Mangasarian, W.N. Street and W.H. Wolberg.
 
	Breast cancer diagnosis and prognosis via linear programming. 
Operations Research, 
	43(4), pages 570-577, July-August 1995.
	Available as UW Mathematical Programming Technical Report 94-10.
	(abstract)

    W. N. Street, O. L. Mangasarian,  and W.H. Wolberg. 
 
	An inductive learning approach to prognostic prediction.
Proceedings of the Twelfth International Conference on 
		Machine Learning, 
	A. Prieditis and S. Russell, eds., pages 522-530, 
	Morgan Kaufmann, 1995.
	(abstract)

    M. W. Teague, W. H. Wolberg, W. N. Street, O. L. Mangasarian, 
	S. C. Call and D. L. Page.
 Indeterminate Fine Needle Aspiration of the Breast:
	Image Analysis Aided Diagnosis.
	Cancer, 
	submitted.
	(abstract)

    W. N. Street, O. L. Mangasarian, and W. H. Wolberg.
 
	Individual and collective prognostic prediction.
	Technical Report 96-01, Computer Sciences Department, University of
	Wisconsin, Madison, WI, January 1996. Submitted to ICML and AAAI conferences.
	(abstract)




Citation in the Medical and Popular Press


 News from Medicine segment, 
	CNN Prime News, March 12, 1994.

   Breast Biopsy Without Surgery.
	Tim Friend,
	USA Today,
	March 24, 1994.

   Cancer Detection Imitates Oil Prospecting.
	Joe Manning,
	Milwaukee Sentinel,
	March 24, 1994.

   Analyzing Breast Cancer.
	Detroit News,
	March 28, 1994.

   A High-tech Cancer Hunt.
	Marilynn Marchione,
	Milwaukee Journal,
	March 28, 1994.

   Computerized Interpretation of Breast FNA Biopsies: Progress Reported,
	Oncology Times,
	April 1994.

   Computer Program Hunts Breast Cancer,
	Ruth SoRelle,
	Houston Chronicle,
	April 22, 1994.

   Computer Program May Improve Interpretation of Aspirate,
	Oncology News International,
	May 1994.

   New Data Suggest Needle Biopsies Could Replace Surgical Biopsy
	for Diagnosing Breast Cancer.
	Journal of the American Medical Association,
	Medical News & Perspectives column, June 9, 1994, Vol. 271, No. 22.

   Diagnosis Via Image Analysis and Machine Learning,
	Cope,
	September/October 1994.

   Computer Seeks Out Breast Cancer,
	Madison Capital Times,
	January 17, 1995.

   Computer-Aided Cancer Prediction,
	Los Angeles Times,
	January 25, 1995.



Local Related Links

  
	UW Mathematical Programming Group
  
	UW Machine Learning Group
  
	UW Medical School



Other Related Links

 
	The National Library of Medicine (NLM)
  
	University of Nevada Center for Biomedical Modeling Research
 
	OncoLink
 
	Washington University Institute for Biomedical Computing



paulb@cs.wisc.edu



",non-course
"

Pattern Separation via Mathematical Programming



Pattern Separation via Mathematical Programming



This WWW page describes work in Pattern Separation via Linear Programming in 
the Mathematical Programming section of the 
University of Wisconsin-Madison Computer Sciences Department.

Brief History and Method Outline


Mathematical optimization approaches, in particular linear programming, have 
long been used in problems of pattern separation.  
In [65] linear programs were used to construct planes 
to separate linearly separable point sets.  
Separation by a nonlinear surface 
using linear programming was also described, whenever the surface 
parameters appeared linearly,
e.g. a quadratic or polynomial surface.  These formulations however could fail
on sets that were not separable by a surface linear in its parameters.  




A Multisurface Method (MSM) [68,93] 
avoided this difficulty.  MSM separates 2 disjoint finite point sets in 
n-dimensional Euclidean space as follows:  


 Choose 2 parallel planes in n-dimensional Euclidean space
       as close together so that only the region between the two planes
       contains points from both sets (i.e. the regions NOT between the
       2 parallel planes contain only points of 1 set or no points).


   Discard the points in the regions not between the 2 parallel planes.

   Repeat the process on the points between the 2 parallel planes, until
       the region between the 2 parallel planes contains no points or very
       few points.
 



Multisurface Method Tree (MSM-T),
a variant on the Multisurface Method was developed in   
[92a], [92b], [93].
Let A and B be finite disjoint point sets in n-dimensional Euclidean
space.   
The goal of MSM-T is to
determine a sequence of planes in n-dimensional Euclidean
space that separate the  sets A and B as follows:



 Determine a plane in n-dimensional Euclidean space that
       minimizes the average ""distances"" of misclassified points.  A point from
       set A is misclassified if it lies on the side of the separating
       plane assigned to B.
       Similarly, a point from set B is misclassified if it lies
       on the side of the separating plane assigned to A.


   If the regions assigned to A and B contain only (or
       mostly) points of the set A or B, then stop.  
       Otherwise, generate another
       error-minimizing plane (in 1.) in this region.



The sequence of planes generated can be viewed as a decision tree.  For each
node in the tree, the best split of the points reaching that node is found 
by solving the LP in 1, above.  The node is split into 2 branches, and the
same procedure is applied until there are only (or mostly) points of one
set at the node.   This linear programming approach can also be viewed as
training a neural network with 1 hidden layer
(see [93]).





MSM-T has been shown to learn concepts as well or better than more traditional
learning methods such as C4.5 and CART.  It also has an advantage over 
artificial neural network (ANN) methods such as backpropagation in
that training proceeds much faster (see [92a]).



Implementations of MSM-T
     

MSM-T has been implemented in C using the MINOS numerical 
optimization package by  Nick Street and Kristin Bennett.  MSM-T has also been implemented 
for the MATLAB 
optimization package by Paul Bradley.  Following is a description of the MATLAB implementation of MSM-T.  Together with the M-files 
required to run it. 



Chronological Bibliography

  [65] O. L. Mangasarian. 
  Linear and Nonlinear Separation of Patterns by Linear Programming.
	 Operations Research,  Vol. 13, No. 3, May-June, 1965, pages
	444 - 452.

    [68] O. L. Mangasarian. 
  Multisurface Method of Pattern Separation.  IEEE 
        Transactions on 
	Information Theory,  Vol. IT-14, No. 6, November 1968, pages 
	801 - 807.


    [92a] K. P. Bennett. 
  Decision Tree Construction via Linear Programming.  Proceedings of the 4th Midwest Artificial Intelligence and Cognitive Science Society Conference,  1992, pages 97 - 101.


    [92b] K. P. Bennett and O. L. Mangasarian. 
  Robust Linear Programming Discrimination of Two Linearly Inseparable Sets.  Optimization Methods and Software, Vol. 1, 1992, pages 23 - 34.


    [93] O. L. Mangasarian. 
 Mathematical Programming in Neural Networks.   ORSA Journal on Computing,  Vol. 5, No. 4, Fall 1993, pages 349 - 360.





Last modified: Wed Jul 12 10:40:37 1995 by Paul Bradley

paulb@cs.wisc.edu



",non-course
"
Paradyn Project Home Page




 










Paradyn Parallel Performance Tools

 Release Information

This page contains describes how you can get a copy of
Release 1.1 of the Paradyn tools.

 Project Goals

The Paradyn Parallel Program Performance Tools project is exploring new
approaches to building scalable tools for parallel program performance.

 Technical Papers
 Paradyn Manuals


Status Report


A recent status report (Jan '95) on the Blizzard/Paradyn Project.



1996 ARPA CSS PI Meeting Panel Presentation


This presentation was made at the 1996 ARPA CSTO meeting in
San Antonio.



1995 ARPA CSTO ""Super Symbol Table"" Presentation


This presentation was made at the 1995 ARPA CSTO meeting in
Florida.
This project is an effort to develop common access routines to
compiler-generated information used by tools for high-level parallel
languages

 Project Staff 
 Super Computing 1994 Poster

A hypertext version of our poster from Super Computing 1994



Related Projects Elsewhere

 SPDT 96 

1st ACM/SIGMETRICS Symposium on Parallel and Distributed Tools

You can also see:


Restaurants
(this is included in the Paradyn page as a temporary placeholder).


 Contact Information


Paradyn Project
Department of Computer Sciences
University of Wisconsin
1210 West Dayton Street
Madison, WI 53706

Email: paradyn@cs.wisc.edu

FAX: (608) 262-9777





Last modified:
Tue Oct  1 17:12:32 CDT 1996
by

  bart@cs.wisc.edu


",non-course
"

Steven Parker's Home Page


 Steven T. Parker
 Graduate Student  
    Computer Sciences Department
    University of Wisconsin-Madison 
    1210 West Dayton Street 
    Madison, Wisconsin 53706  

    Office: 6372 CS&S, (608) 262-6617  
parker@cs.wisc.edu
 
 Depth Area: 
Numerical Analysis
 Employment: 
PRISM Project
Fall 1996 Schedule: 

MATH 623:  MWF 9:55 - 10:45 
CS 564: MWF 11:00 - 12:15 
CS 799: W 2:30 - 3:30 
PRISM: MWF 8:00-9:30, 1:00-3:30, TTh 10:30-3:30 

Related Links: 
UW CS Home Page 
CS Lab Home Page 
 
 Send mail now 
    Last modified: Thu Sep 12 1996



",non-course
"

PSB Home Page



 Paul Bradley

Graduate Student 
Computer Sciences Department 
University of Wisconsin-Madison 
paulb@cs.wisc.edu


Office: 6390 CS
Phone:  608 262 6619
Advisor: O. L. Mangasarian

Interests
Mathematical Programming
Machine Learning
Fly-Fishing 



Publications

All papers are stored in postscript format, abstracts are ASCII text.  If you do not have a postscript viewer, you can download the file (e.g. shift-click, if you're using Netscape) and print it.


  P. S. Bradley, O. L. Mangasarian, and W. N. Street.


 Feature selection via mathematical programming. 

Mathematical Programming Technical Report 95-21, Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, December 1995 - Revised March 1996.  Submitted to INFORMS Journal on Computing.
(abstract)



  P. S. Bradley, O. L. Mangasarian, and W. N. Street.


 Clustering via concave minimization. 

Mathematical Programming Technical Report 96-03, Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, May 1996.  Accepted for presentation Neural Information Processing Systems 1996.
(abstract)




Nick Street and I at work.







Last modified: Thu Jul  6 11:04:45 1995 by Paul Bradley

paulb@cs.wisc.edu



",non-course
"
 Pete DeVries's Home Page 


Peter J. DeVries
 Internet Tools Specialist Room 1334 Computer Sciences 1210 West
Dayton St. Madison, WI 53706 608-263-2622 pdevries@cs.wisc.edu 

I am the Internet Tools Specialist for InterNIC Net Scout. What this means is
that I read everything about Internet technology, try to make sense of it and
then write overview articles for the Net Scout Toolkit. The great thing is that I
read everything and think about it anyway, so it was rather foolish for them to
pay me to do this (But don't tell them!).
Eric Hazen and I also
provide most of the technical and Webmaster services for the Net Scout group,
although we do get a lot of excellent help from the Computer Systems Lab (CSL) and the folks
at InterNIC.

Before recently joining the Net Scout Team, I worked at the Laboratory of Molecular
Biology and the Integrated Microscopy Resource
(IMR), an NIH Biomedical Resource for nearly eight years. At Molecular
Biology I was fortunate to co-develop with Prof. Sean
Carroll and his lab a technique for creating multiple label confocal images.
Basically these are cool looking images of developing embryos that get on a lot
of journal and book covers. I also developed the Molecular Biology Web site.

At the IMR, I was fortunate to work with Prof. John
White and the rest of the IMR
staff. While at the IMR, I developed their Web site which received 4-stars in
the Magellan Internet Guide. My last major project involved the co-development of
a 4 Dimensional Microscope for studying how embryos develop. This microscope is
described in an article which appeared in the August
2nd 1996 issue of the Journal Science.

Here are some photos of guests of Net Scout Labs.

Standard Info
[ Resume ]
[ Related Experience ]
[ Publications ]
[ Presentations ]

Updated: Tuesday, December 10, 1996


",non-course
"



 Yumpee's Home Page 










Manoj Plakal
      Graduate Slave 
Dept of Computer Science 
UniversityofWisconsin-Madison







	    Some blah about me
	  

	  My home country is
	  India. Though
	  I'm originally from the state of
	  Kerala,
	  I've stayed all my life in
	  Calcutta.
	  I studied at Don Bosco School, Calcutta
	  which is run by The Salesians of Don Bosco.
	  I did my undergrad at
	  IIT Kanpur with
	  my major in Computer Science & Engineering. I'm currently a first-year
	  graduate student supported by a teaching assistantship in the
	  Department of Computer Sciences at
	  the University of Wisconsin-Madison, staring
	  down the barrel of a Ph.D. in either
	  Computer Architecture or
	  Programming
	  Languages.



	    My interests
	  



Music : rock/metal/alternative/blues
	    
	      Movies, books and all that
	    
 CS stuff 
	      ( acads/hacking/industry and other geeky/nerdy stuff )




	    Featured on this home page :
	  



An IIT Kanpur Chat Gateway

The IIT Kanpur CS & E Class
	      of '96
	      ( see also:
	      the IITK Class
	      of '96)
	    
Links to my friends


Snaps of me with my friends

A pinup gallery (every nerd needs
	       'em)
	  



      Check out my bookmarks  for links
      or my WWW-page access logs  to see who's visiting
      my pages
    









	Contact via
      












	7 North Randall Avenue #1
	Madison, WI 53715
      

	1349 Computer Sciences
	University of Wisconsin-Madison
	1210 W Dayton Street
	Madison, WI 53706
      






	(608)-250 0227
      

	(608)-262-5340
      






plakal@cs.wisc.edu

plakal@cs.wisc.edu







  Acknowledgements :



Suresh Venkat for
    the nifty table above
  
Igor Ivanisevic for the 'Graduate
    Slave' wisecrack
  
    Icons from various corners of the Web




 Last updated on



",non-course
"

Prasad's Home Page


 Page under constuction. Meanwhile ...

 
 Prasad Deshpande
 Hi !! I'm a graduate student at the  
Computer Sciences Deparment  , 
 University of Wisconsin,  Madison   
  Home Address  
 304 Princeton Ave, #2 
 Madison, WI-53705  
 Tel : (608)-236-0193 
       (608)-232-1751 
  Office Address  
 7366 Computer Sciences Building, 
 University of Wisconsin, Madison 
 1210 W. Dayton St., 
 Madison, WI-53706 
 Tel : (608)-262-6624 

 Academic Interests 
     Database Systems, Theory

 Research Area 
 Databases 
 Current Schedule 

 FIN 720 : Theory of Investments MW 11.00-12.15
 OIM 730 : Managerial Economics TR 2.30-3.45
 CS 899  : Meetings Fri 11.00 with  Prof. Jeff Naughton 
 Music 131  : Introduction to Music Theory MWF 9.55-10.45

 Publications 
  On the computation of multidimensional aggregates .  VLDB '96
  Storage estimation for multidimensional
aggregates in the presence of hierarchies . VLDB '96
 Some Interesting Course Projects 
  RPC Package for Java .
  Download .


 More about  me  ! 
  Want to spend some more time ?

 Timex  World Map 
 Find out about  India 
 Dilbert and other comix
 Explore my  bookmarks
 

 Go to a random link 





Finger me if you have to.




  Hakuna Matata !
 Info  on creating web pages



",non-course
"

 Vishy's home page 


Viswanath Poosala, Research Assistant 

          Computer Sciences Department 
          University of Wisconsin  Madison 
          1210 West Dayton Street 
          Madison, WI 53706 
          (608) 262-6629 
poosala@cs.wisc.edu



 Research Information



Reseach Summary. 




Resume in 
 html and
 Postscript.





 Information Related to Databases




 Advisor:

Prof. Yannis Ioannidis. 





Other Information



 Asha : voluntary organization to 
help improve basic education in India.





 Other interests





UW CS Home page



",non-course
"

SEQ Home Page
The SEQ Project: Querying Sequence Data
(Document under construction)






Time to put Order in the Database!

Order Time put in the Database!

Time to put the Database in Order!



Document Contents:


Project Objectives
Current Status
Motivating Example
SEQ Data Model
 Sequin  Query Language
Optimization Techniques
SEQ System Development
Publications
Related Work
Contact Information



Project Objectives

 A number of important database applications require the processing
of large amounts of ordered  sequence  data. The domains of these
applications include financial management, historical analysis,
economic and social sciences, metereology, medical sciences and
biological sciences. Existing relational databases are inadequate in 
this regard; data collections are treated as sets, not sequences. 
Consequently, expressing sequence queries is tedious, and evaluating 
them is inefficient.



Databases should 

model the data using the abstraction of  sequences ,
allow data sequences to be queried in a  declarative manner ,
utilizing the ordered semantics
take advantage of the unique opportunities available for query 
optimization and evaluation
integrate sequence data with relational data, so that users can
store and query a combination of relation and sequences

These requirements serve as the goals of the SEQ project.
Various kinds of sequences need to be supported, temporal sequences being the
most important kind. Queries should be expressible using notions like
""next"" and ""previous"" which are natural when considering sequences.
These queries should be optimized so that they can be evaluated efficiently.
These issues need to be studied in theory, and then a database system needs 
to be built that demonstrates the feasibility of the theoretical ideas.




Project Status


The current status of the project is:

We have defined the  SEQ  data model that can support 
most important kinds of sequence data. We have also defined algebraic
query operators that can be composed to form sequence queries (analogous
to the composition of relational algebra operators to form relation queries).
We have described how sequence queries can be efficiently processed,
and have identified various optimization techniques.
We use a sequence query language  Sequin  that can
declaratively express queries over sequences. A  Sequin 
query can include embedded expressions in a relational query language like
SQL, or vice-versa.
We are building a disk-based database system to demonstrate the 
feasibility of our proposals. The system implements the  SEQ  
model using a nested complex object architecture. It is built over the 
SHORE storage manager and can process several megabytes of data.
Relations and sequences are supported in an integrated and extensible 
manner.




Motivating Example of a Sequence Query



A weather monitoring system records information about various meteorological 
phenomena. There is a sequentiality in the occurrence of these phenomena; the 
various meteorological events are sequenced by the time at which they are 
recorded. A scientist asks the query: 

  ""For which volcano eruptions did
the most recent earthquake have a strength greater than 7.0 on the Richter 
scale?"". 

If this query is to be expressed in a relational query language like SQL, 
complex features like groupby clauses, correlated subqueries and aggregate
functions are required. Further, a conventional relational query optimizer 
would not find an efficient query execution plan, even given the knowledge 
that the Earthquakes and Volcano relations are sorted by time.

However a very efficient plan exists, if one models the data as sequences
ordered by time. The two sequences can be scanned in lock step 
(similar to a sort merge join). The most recent earthquake record scanned 
can be stored in a temporary buffer. Whenever a volcano record is 
processed, the value of the most recent earthquake record stored in the 
buffer is checked to see if its strength was greater than 7.0, possibly 
generating an answer. This query can therefore be processed with a single 
scan of the two sequences, and using very little memory. The key to such 
optimization is the sequentiality of the data and the query. 



Data Model


The details of the  SEQ  data model are
described in a published paper (click here 
for postscript version). Here we present the gist of it.

The basic model of a sequence is a set of records mapped to an ordered
domain of ``positions''.
This many-to-many relationship between records and
positions can be viewed in two dual but distinct ways: as a set of records
mapped to each position, or as a set of positions mapped to each record.
These two views are called ``Positional'' and ``Record-Oriented'' respectively,
and each gives rise to a set of query operators based on that view.
Queries on sequences could require operators of either or both flavors. 
The Record-Oriented operators are similar to relational
operators and include various kinds of joins (overlap, containment, etc) and
aggregates. Such operators have been extensively explored by researchers
in the temporal database community.



The Positional operators include Next, Previous, Offset, Moving
Aggregates, etc.  Further operators allow ``zooming'' operations on 
sequences by means of collapsing and expanding the ordering domains 
associated with the sequence. For instance, a daily sequence could be 
``zoomed out'' (i.e.collapsed) to a weekly sequence, or ``zoomed in'' 
(i.e. expanded) to an hourly sequence. 

The last part of the model deals with operations on groups (i.e. sets) of 
sequences. The advantage is that this makes it easy to model queries 
involving sequence collections (which is the case in many real-world
situations). All the sequence operators are extended to work with groups 
of similar sequences, instead of with single sequences. This extension
of the SEQ model indicates that a practical implementation of
SEQ would probably involve a nested complex object system.



 Sequin  Query Language


We have devised a query language called  Sequin  using
which declarative sequence queries can be specified. The language
is similar in flavor to SQL, except that the inputs to queries
as well as the results of queries are sequences. Click 
 here  for a description of the  Sequin 
language with examples.



Optimization Techniques


We have proposed new optimization techniques for sequence queries 
involving Positional operators. There are existing techniques that
have been proposed for queries with Record-Oriented operators.
Our optimizations use query transformations, meta--data, and caching of 
intermediate results to efficiently evaluate a query. An optimal query 
evaluation plan can be generated using an algorithm that relies on cost 
estimates. One of the important observations is that accessing sequence data 
in a single stream is probably very efficient, and evaluation strategies 
should take this into account.

The details of the optimization techniques are
described in a published paper (click here 
for postscript version).



System Development


The SEQ database system has a client-server
architecture, supporting multiple clients via
a multi-threaded server. The server is built on
top of the SHORE  
storage manager. Both  Sequin 
and a subset of SQL are supported as query languages
which can be embedded inside each other. The data model
is a nested complex object model that allows arbitrary
levels of nesting of relations inside sequences and vice
versa. The system is also extensible, providing support
for new data types, new ordering domains, user-defined functions, 
new storage implementations and new query languages. For more details
on the SEQ system, click here.



Publications




Sequence Query Processing 

Praveen Seshadri, Miron Livny and Raghu Ramakrishnan.

Proceedings of the  ACM SIGMOD Conference on Data Management, May 1994.




SEQ: A Framework for Sequence Data

Praveen Seshadri, Miron Livny and Raghu Ramakrishnan.

Proceedings of the  IEEE Conference on Data Engineering, March 1995.




The Design and Implementation of a Sequence Database System

Praveen Seshadri, Miron Livny and Raghu Ramakrishnan.

Submitted to VLDB 96.




What's Next? Sequence Queries

Raghu Ramakrishnan, Michael Cheng, Miron Livny, and Praveen Seshadri.

In Proceedings of the  International Conference on the Management of Data (COMAD), 
December, 1994.




Related Work


The
DEVise 
project is complementary to SEQ. It provides a visualization
environment that can be used to explore sequence data. DEVise can act as
a front-end through which queries can be posed against a SEQ database server,
and the answers can be examined graphically.

Also see:

 SHORE Project: Storage Manager used for SEQ
 People working on SEQ and related projects
 UW-Madison, Database Research Group
 UW-Madison, CS Department Server




Contact Information



For more information, contact 

Praveen Seshadri,
praveen@cs.wisc.edu

Raghu Ramakrishnan,
raghu@cs.wisc.edu

Miron Livny,
miron@cs.wisc.edu


Computer Sciences Department, 
University of Wisconsin, 
1210, W.Dayton Street, 
Madison, WI 53706.




Last modified: Fri Sep 15 1995 by Praveen Seshadri

Praveen Seshadri / praveen@cs.wisc.edu



",non-course
"

 Andrew Prock's Home Page 


Andrew Clemens Hockert Prock
Office: 1331
		Tel: 	262-6605
		Hours: 	9:45-10:45 T, 10:00-11:00 F


	My Personal History

	My School

	My Classes At UW Madison

	The Class I TA for

	My Old School

	My Bookmarks

	My Resume

        Doonesbury

        Fox Trot

	NOT Alta Vista

	Alta Vista




	prock@cs.wisc.edu



",non-course
"

 Home Page of Anne Condon 


 
 Anne Condon 

 Associate Professor 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 telephone: (608) 262-1204 
 fax: (608) 262-9777 
 email: 
 condon@cs.wisc.edu 

Ph.D., University of Washington, 1987 
Interests:
Complexity theory, interactive proof systems, randomized complexity
classes, theory of parallel computation 

 Research Summary 

I am interested in models of computation, such as interactive
proof systems, which combine nondeterminism and randomness. Such
models have recently proven surprisingly useful in solving classic
problems in complexity theory. For example, although the theory
of NP-completeness has long been used to identify hard computational
problems, there has not been much progress in understanding which
hard problems have solutions that are easy to approximate. Recent
results on interactive proof systems have resulted in novel models
of NP, which in turn can be used to prove non-approximability
results for several NP-hard problems. In our work we are developing
both positive and negative results on the approximability of hard
combinatorial problems which arise in game theory, graph theory
and automata theory. 

I am also interested in design and analysis of parallel algorithms.
I am currently working on development of parallel algorithms for
sorting and for graph problems, such as minimum spanning tree.
The goal is to develop algorithms that work well on `practical'
parallel models, where communication and synchronization costs
can be expensive. 
 Sample Recent Publications 

Interactive proof systems with polynomially bounded strategies
(with R. Ladner), Journal of Computer and System Sciences,
vol. 50, no. 3, 1995. 
 
Finite state automata with nondeterministic and probabilistic
states (with L. Hellerstein, S. Pottle, and A. Wigderson), Proceedings
of the 26th Annual ACM Symposium on the Theory of Computing,
May 1994. 
 
PSPACE is provable by two provers in one round (with J.-Y. Cai
and R. Lipton), Journal of Computer and System Sciences,
vol. 48, no. 1, February 1994. 


 This page was automatically created October 3, 1995.
 Email pubs@cs.wisc.edu
to report errors.




",non-course
"

 Home Page of Deborah A. Joseph 


 
 Deborah A. Joseph 

 Associate Professor of Computer Sciences and Mathematics 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 telephone: (608) 262-1204 
 fax: (608) 262-9777 
 email: 
 joseph@cs.wisc.edu 

Ph.D., Purdue University, 1981 
Interests:
Structural and applied complexity theory, computational biology,
computational geometry, mathematical logic 

 Research Summary 

My research concerns two areas of theoretical computer science:
1) the study of structural properties of complexity classes, and
2) the design and analysis of algorithms for biological problems.


In the last twenty years a great deal of work has gone into studying
the properties of sets that are decidable in deterministic and
nondeterministic polynomial time. Despite this effort we still
know very little about these classes. Recently in fact some computer
scientists have questioned the adequacy of known proof techniques
for resolving questions such as whether P = NP? My research investigates
the structural properties of sets in these classes and explores
in a formal way the types of proof techniques necessary to resolve
problems concerning complexity classes. 

My research interests in computational biology are primarily in
the area of computational methods for genome sequencing. These
included the development of dynamic data structures and algorithms
for fragment assembly in large scale genome sequencing projects,
and the development of specific algorithmic techniques for handling
repetitive sequences. In addition my research has utilized graph
theoretic methods for doing rapid homology detection in the analysis
of anonymous sequences. 
 Sample Recent Publications 

Collapsing degrees in subexponential time (with R. Pruim and P.
Young), Proceedings of the Ninth Structure in Complexity Theory
Conference, 1994. 
 
On sparse spanners of weighted graphs (with I. Althofer, G. Das,
D. Dobkin, and Soares), Discrete and Computational Geometry,
vol. 9, 1993. 
 
Obtaining global similarity from local similarity (with J. Meidanis
and P. Tiwari), in Proceedings of the Fourth Scandinavian
Workshop on Algorithms, Springer-Verlag Lecture Notes in
Computer Science, vol. 621, pp. 326-337, 1992. 


 This page was automatically created October 30, 1995.
 Email pubs@cs.wisc.edu
to report errors.




",non-course
"

 Home Page of Miron Livny 


 
 Miron Livny 

 Professor 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 telephone: (608) 262-1204 
 fax: (608) 262-9777 
 email: 
 miron@cs.wisc.edu 

Ph.D., Weizmann Institute of Science, Rehovot, Israel, 1984

Interests:
Resource management algorithms, performance modeling and analysis,
discrete event simulation 

 Research Summary 

The major emphasis of my research is on the design and evaluation
of resource management policies. I have been involved in the development
of new resource management policies for processing and data management
systems. For both types of systems, general-purpose as well as
real-time scheduling algorithms have been considered. My research
involves performance studies of the different policies, with special
emphasis on the interplay between the properties of the system
and the performance of the policy. Since most of my performance
studies employ simulation, I am interested in discrete event modeling
and simulation techniques. I am currently in the process of implementing
a simulation laboratory that is based on a novel simulation language.
The laboratory includes data management utilities, visualization
tools, and graphical interfaces. 
 Sample Recent Publications 

Disk-tape joins: Synchronizing disk and tape access (with J. Myllymaki),
Proceedings of the ACM SIGMETRICS Conference, 1995. 
 
Sequence query processing (with P. Sashadri and R. Ramakrishnan),
Proceedings of the ACM SIGMOD Conference, 1994. 
 
Foundations of visual metaphors for schema display (with E. Haber
and Y. Ioannidis), Journal of Intelligent Information Systems,
vol. 3, no. 3/4, July 1994. 


 This page was automatically created October 30, 1995.
 Email pubs@cs.wisc.edu
to report errors.




",non-course
"

 Home Page of Seymour V. Parter 


 
 Seymour V. Parter 

 Professor of Computer Sciences and Mathematics 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 telephone: (608) 262-1204 
 fax: (608) 262-9777 
 email: 
 parter@cs.wisc.edu 

Ph.D., New York University, 1958 
Interests:
Numerical methods for partial differential equations 

 Research Summary 

At this time the major emphasis of my work is on the solution
of indefinite, discrete elliptic systems of equations. Classical
iterative methods and most multigrid methods only work effectively
when the system is positive definite. These methods can also be
made effective when the real or symmetric part of the operator
is positive definite. On the other hand, in the indefinite case
direct methods which attempt to preserve the `sparseness' of the
system may encounter (very) small `pivots.' Thus, this is a challenging
problem which effectively mixes concepts and procedures from linear
algebra and elliptic partial differential equations. I am now
involved in several projects which attack this class of problems.
These include preconditioning studies and research on special
multigrid methods. 
 Sample Recent Publications 

Preconditioning Chebyshev collaction discretization for elliptic
partial differential equations, to appear in SIAM Journal
on Numerical Analysis. 
 
Preconditioning and boundary conditions without H(2) estimates:
L(2) condition numbers and the distribution of the singular values,
SIAM Journal on Numerical Analysis, vol. 30, pp. 343-376,
1993. 
 
Preconditioning second-order elliptic operators: Condition numbers
and the distribution of the singular values, Journal of Scientific
Computing, vol. 6, pp. 129-157, 1991. 


 This page was automatically created October 30, 1995.
 Email pubs@cs.wisc.edu
to report errors.




",non-course
"

 Home Page of Mary K. Vernon 


 
 Mary K. Vernon 

 Professor of Computer Sciences and Industrial Engineering 

 Computer Sciences Department 
 University of Wisconsin 
 1210 W. Dayton St. 
 Madison, WI 53706-1685 

 telephone: (608) 262-1204 
 fax: (608) 262-9777 
 email: 
 vernon@cs.wisc.edu 

Ph.D., University of California, Los Angeles, 1983 
Interests:
Techniques and applications of computer systems performance analysis,
performance of parallel systems, parallel architectures and operating
systems. 

 Research Summary 

I am interested in analytic modeling techniques and their application
to computer system performance issues, with an emphasis on parallel
and distributed system design issues. The modeling techniques
I have developed together with graduate students and colleagues
include the Generalized Timed Petri Net, and customized
mean value analysis. The GTPN can represent parallel system
features such as synchronization and priority service precisely.
The customized MVA technique yields a set of intuitive equations
that represent parallel system features more approximately but
can be solved more efficiently. We have also recently proposed
the use of a technique called interpolation approximations
for analysis of parallel processor allocation policies. This technique
may also have broader applicability for parallel systems performance
analysis. 

Current research projects include characterization for high-performance
parallel workloads, analysis of parallel processor scheduling
policies, scheduling issues in multimedia servers, and memory
management policies for networks of workstations. 
 Sample Recent Publications 

The fairness of DQDB networks with slot reuse (with G. Brewster),
Proceedings of the IEEE INFOCOM Conference, August 1995.

 
Accurate modeling of the hybrid hash join algorithm (with J. Patel
and M. Carey), Proceedings of the ACM SIGMETRICS Conference,
June 1994. 
 
Use of application characteristics and limited preemption for
run-to-completion parallel processor scheduling policies (with
S. Chiang and R. Mansharamani), Proceedings of the ACM SIGMETRICS
Conference, June 1994. 


 This page was automatically created October 30, 1995.
 Email pubs@cs.wisc.edu
to report errors.




",non-course
"
Qinqin Wang's Home Page


 Welcome to Qinqin Wang's Home Page



qw@cs.wisc.edu
Last modified: Oct 10, 1996 


",non-course
"

 Raghu Ramakrishnan's Home Page 



  
Raghu Ramakrishnan  




Associate Professor of Computer Science
(raghu@cs.wisc.edu)
Department of Computer Sciences
University of Wisconsin - Madison

1210 West Dayton Street,
Madison, WI 53706  USA
Phone: 608-262-9759 	(Department: 262-1204, Fax: 262-9777) 

 Education
 Teaching Activities
 Research Interests
 Research Projects
 Ph.D. Graduates


  Education: 

 Ph.D. University of Texas at Austin, 1987.
 B.Tech., Indian Institute of Technology, Madras, 1983.


 Teaching Activities: 

 Course text:  
Database Management Systems
 Software for educational use: 
Minibase
and
 Coral



The text Database Management Systems, published by McGraw-Hill, is aimed
at first and second courses in database systems at the undergraduate
and graduate levels.  The Minibase relational DBMS was developed in
conjunction with this text.  The Coral system is also used in courses
that deal with logic databases at several schools.



 Research Interests: 

 Integrating heterogeneous data sources
 Content-based querying and indexing of sequence and image data  
 Exploratory analysis of large data sets (data mining)
 Extending database query languages using constraints and deduction



As the use of databases grows and diversifies, it is increasingly
important to be able to access data from dispersed, heterogeneous,
independently developed sources easily.  In the RODIN project,
and its successor, the C.O.D. project, I am investigating several
issues: formal techniques and practical toolkits for
semantic integration, supporting multiple levels of service
and access to a database, and database access in a networked
cluster of machines.  This is joint work with Profs. Ioannidis and Livny. 

In recent work, the results on visual data exploration
from the 
 NEXT!
project, which is joint work with Prof. Livny, 
are being applied to data integration, and querying over the Web. 

My second area of interest is content-based querying of complex data such as
sequences and image sets.  The 
 SEQ
system deals with 
queries over sequence data, and focuses on DBMS design and optimization
issues related to sequence data.  It is a part of the  
 NEXT!
project, and is joint work with Prof. Livny.  
An important aspect of this work is its use for identifying
trends in the data, or in general, identifying useful patterns of
information.  

In the PIQ project, the goal is to support content-based retrieval from
large sets of images.  Our focus is on developing and implementing
an expressive data definition language that can be used to customize
a general image database system to take advantage of specialized
information about a given collection of images that is to be indexed
and queried. 

My interest in querying and analysis of data covers data exploration and
mining.  We have developed a powerful clustering algorithm called
 BIRCH
for large datasets and a visual data exploration tool called
 DEVise
as part of the 
 NEXT!
project.

A long-standing research interest is the extension of relational database
query languages with logic programming features
such as structured terms and recursion, and the use of
arithmetic constraints to specify data and queries more
compactly and efficiently.
An ongoing project involves the continued development and use of the CORAL
deductive system.  The evaluation is based upon bottom-up fixpoint
evaluation techniques,
and several optimizations are applied to make it efficient
across a broad range of programs. 

 Research Projects: 

  CORAL
 C.O.D. 
  NEXT!
 PIQ 


 Ph.D. Graduates 


S. Sudarshan,
Ph.D. August 1992,

Run-Time Optimizations in Bottom-Up Evaluation of Logic Programs,

First employment: AT&T Bell Labs, Murray Hill (sudarsha@research.att.com).


D. Srivastava,
Ph.D. August 1993,

Deductive and Object-Oriented Languages,

First employment: AT&T Bell Labs, Murray Hill (divesh@research.att.com).


S. Dar,
Ph.D. August 1993,

Design and Evaluation of Transitive Closure Algorithms,

First employment: AT&T Bell Labs, Murray Hill (dar@research.att.com).


P. Seshadri,
Ph.D. August 1996,

Sequence Data Management

First employment: Computer Sciences Department, Cornell University (praveen@cs.cornell.edu).





",non-course
"

 Rahul's Home Page 




Rahul Kapoor
Hello Internet surfer ! Welcome to my cyber home. I hope you stay here long 
enough to get to know me a little.
Officially I am in my third and final semester as a master's student in the 
Computer Sciences Department at the University of Wisconsin, Madison.
I came here in fall '95 after getting my bachelor's degree from the Indian
Institute of Technology, Kanpur. Interested employers please check out my
 resume !







Courses &Schedule




MyDepartment




MyUniversity






IITKanpur




IITKClass of 1995




India relatedlinks










Me

Now that you have gone through the official ""who I am"" you may want to 
see the personal ""who I am"". Well, I am a normal kind of guy, born and
raised in a small loving family(comprising of my parents and an elder sister)
in a not so nice town in India called Kanpur. I came to the states in fall '95
and have had the good fortune (ha !) of living in Madison, which Money
magazine rated as the most livable city in US this year (the editor
must have come from Greenland to think that the winter here is livable!) 
I guess I shouldn't complain because during fall and spring Madison is
awesome. During summer I was in San Jose, California working at the 
IBM Almaden research centre 
so I cannot say much about Madison summers but they are supposed to be great. 
Anyway I don't regret not being here because I had a great time 
in the bay area and whatever Money magazine says I think northern California is the place to be !

And now a little about my likes. I love Music(take a look at my
 cd collection 
to know what kind), Movies (almost all genres though I prefer romance and 
comedy), TV (most of the comedy shows, X-Files and Star Trek),
Reading (any new stuff from novels to philosophy), Computers and Web-Surfing !
As far as sports are concerned, I love watching 
cricket
(when India is playing and winning), tennis, figure skating and gymnastics.
This semester I am trying to learn swimming(finally !) and bridge.
I am a nature lover too and enjoy going on long walks and hikes(when 
its cloudy and slightly breezy). 
I wish I could get one of those jobs on television travel shows where you
get to see all the interesting places in the world and get paid for it!







MusicStuff




Movies &Television




InternetTravel




OtherBookmarks









To Contact Me








GuestBook




rahul@cs.wisc.edu



H: (608)264-4143O: (608)262-9275






",non-course
"


		Rajesh Raman's Home Page
	



Ye Olde Homme Page Offe Rajesh Raman






 Rajesh Raman 					 
 Computer Sciences Department	 
 1210 West Dayton Street		 
 Madison, WI 53706-1685			 
 Email: raman@cs.wisc.edu        
 Telephone: (608) 262-5386		 






	B.A.,Ohio Wesleyan University, '95 
	Majors: Computer Science, Mathematics 
	Minor: Music 

	Current first year graduate student,
	Ph.D., University of Winsonsin-Madison
	
Department of Computer Science



 Personal: 

  My Curriculum Vitae (Postscript) 
  Specifications 

Current Courses:



		 CS 552:

Computer Architecture

		Saluja



		CS 737:

System Performance Evaluation and Modeling
 Livny



		CS 739:
Distributed Systems
 Cao


Information on:


  Current work: 
  Other: 




 Team member, Condor 
			project.
		 Integral part of The Committee



My bookmarks





What a chimera, then, is man! What a novelty, what a monster, what a chaos,
what a subject of contradiction, what a prodigy! A judge of all things, feeble
worm of the earth, depositary of the truth, cloaca of uncertainty and error, the
glory and the shame of the universe! 
 --Blaise Pascal (1623-1662)



Last Modified by Rajesh Raman, Wed Oct 16 19:07:24 CDT 1996 

raman@cs.wisc.edu




",non-course
"


Karthik's Web Page




Karthikeyan Ramasamy

About
I am a Ph.D student at the Computer Sciences Department of University of Wisconsin. My  research  
interests are mostly in Database and Operating Systems. I work with Jeffrey Naughton  in the Paradise 
project. 

Projects

Hacking for David Dewitt and Jeffrey Naughton 
Web DB Connectivity
Paradise Parallel Database 
Wisconsin PTHREAD Wrappers


Publications

Storage Estimation for Multidimensional Aggregates in the Presence of Hierarchies 
Amit Shukla, Prasad M Deshpande, Jeffrey F Naughton and Karthikeyan Ramasamy 
22nd International Conference on Very Large Databases, Mumbai(Bombay), 1996. 
Available here. (255 KB) 


Presentations

Web - The Big Picture
Architecture Alternatives for Scalable Web Servers


Photo Album

Encounter with the Leaf


Personal Info

Resume 


Finance

MONEY 
Wall Street Journal 


Personal Interests

Hacking 
Photography


Contact Information
Street address
1210 W Dayton, Computer Sciences Department, Madison, WI 53706

Electronic mail address
karthik@cs.wisc.edu

Office phone
608-262-6625

FAX number
608-262-5777


Comments and Suggestions
Please tell me what you think about my home page and how I might improve it.



",non-course
"

Kelly's Home Page



 
 Kelly Ratliff

Office:  CS 3360  
Phone:  262-9275
Email: kelly@cs.wisc.edu
Last login
Office hours:  MW 3:30-4:30


Information for my    

CS 132 students


My genealogy page


Interesting places to visit...
  
This space under construction.  Stay tuned.



",non-course
"

 Viresh Ratnakar's Dom Page 


 Viresh Ratnakar 

  Research Assistant 
Computer Sciences Department 
University of Wisconsin-Madison 


 Research Area: Digital Image & Video Compression 

 Advisor: Miron Livny
 Main interests:
     
 DCT-based compression 
      Vector quantization
      Fractal compression
      Quality-control in lossy compression
      Production-mode compression
     
  Publications 
 
     RD-OPT home page 
 [
     invoke QclicAuthor if available ]
 
     Qclic images 
[
     invoke QclicBrowse if available ]



Some of the things that I revere, 
May get revealed by clicking  here. 




          Computer Sciences Department 
          University of Wisconsin  Madison 
          1210 West Dayton Street 
          Madison, WI 53706 
          (608) 262-6627 
ratnakar@cs.wisc.edu




",non-course
"

Monasterius de Ominous Doominus



 
 
 Welcome to the Monasterius de Ominous Doominus
 

Brother Richard (without the beard): 
 
   Personal Haven Address 
  after 9/2 see Office Haven Address

   Office Haven Address 
  
        University of Wisconsin at Madison 
  Computer Sciences Department 
   1210 West Dayton Street
    Madison, WI  53706
   608-262-6602
    Office Number 1308
  rcarl@cs.wisc.edu 

 
  412 office hours: Wed 2:30-3:30  Thur 3:30-4:30

 cs412 home page
   Current Course Load 
 
        cs739 Distributed Operating Systems
   Monday/Wednesday 1:00 - 2:15
    ---
  
        fp880 Underwater Fire Prevention 
   Saturday 12:00 - 1:00 am
    ---
  
        cs757 Advanced Computer Architecture II 
   Tuesday/Thursday 9:30 - 10:45
    ---
  
        math 990 Introduction to Whole Numbers (with emphasis on the number 1) 
   Sunday 8:00 - 9:00 pm
    ---
  
        eng 990 Subsurface Depository Engineering (grave digging) 
   Monday/Wednesday/Friday 12:00 - 1:00 am

 





 

The Many Shades of Brother Richard

      Professional
  ---
  
      Ominously Doomed
  ---
  
      Political
  ---
  
      Goofy
  ---
  
      Solitary
  ---
  
      Innebriated
  ---
  
      Vampiric
  ---
  
      Serious
  ---
  
      Nostalgic
  ---
  
      DJ Funky Monk
  ---
  
      Fellows of the Order
  ---


 
If you ever need a graphic artist/desktop publisher, check out the 
best->  
 
 
 


",non-course
"

 Thomas W. Reps's Home Page 


  Thomas W. Reps

Professor
Computer Sciences Department
University of Wisconsin-Madison
1210 West Dayton Street
Madison, WI 53706-1685
USA
E-mail:  reps@cs.wisc.edu  
Telephone:  (608) 262-2091
Secretary:  (608) 262-0017
Department: (608) 262-1204
Fax:        (608) 262-9777

Ph.D., Cornell University, 1982
(Curriculum Vitae)

Research Interests:

  Program slicing, differencing, and merging 
  Interprocedural dataflow analysis 
  Alias analysis, pointer analysis, and shape analysis 
  Language-based program-development environments 
  Incremental computing 
  Attribute grammars 

(See also the

home page of the Wisconsin Program Slicing Project
.)



Contents

  Research Summary 
  Categorized Index to Publications 
  List of Publications 
  Visitors, Post-Doctoral Associates, and Students 



Research Summary

My research is aimed at creating tools to support the
development of complex software systems.  The objective is to create
tools that provide powerful language-specific program-manipulation
operations.  In particular, my work has explored how program slicing
can serve as the basis for such program-manipulation operations.

The slice of a program with respect to a set of program elements
S is
a projection of the program that includes only program elements that
might affect (either directly or transitively) the values of the
variables used at members of S.  Slicing allows one to find
semantically meaningful decompositions of programs, where the
decompositions consist of elements that are not textually contiguous.

Program slicing is a fundamental operation that can aid in solving
many software-engineering problems.  For instance, it has applications
in program understanding, maintenance, debugging, testing,
differencing, specialization, reuse, and merging.

The projects that my co-workers and I are carrying out are aimed at


improving the underlying technology for program slicing (and related
operations),

implementing program slicers,

developing methods for using slicing in software-engineering tools, and

building slicing-based program-manipulation tools.

(Click
here
for the home page of the Wisconsin Program Slicing Project.)

Recently, we established some unexpected connections between
interprocedural dataflow analysis and our previous work on
interprocedural program slicing.
In particular, we showed that a large class of interprocedural
dataflow-analysis problems can be solved by transforming
them into a special kind of graph-reachability problem.
This graph-reachability problem can be solved precisely in polynomial time
by the algorithm originally developed for interprocedural slicing.

I am also interested in the subject of incremental algorithms.
By an incremental algorithm,
I mean an algorithm that makes use of the solution to one problem
instance to find the solution to a ``nearby'' problem instance.



Categorized Index to Publications


Program Slicing, Differencing, Merging, etc.

Overview


[icse92]


Slicing


[dagstuhl96]

[fse94]

[slicing_patent]

David Binkley's Thesis

[acta91]

[toplas90] (also [pldi88])


Chopping


[fse95b]


Differencing


[differencing91]

Wuu Yang's Thesis


Merging


[tosem95]

[tosem92] (also [sigsoft90])

David Binkley's Thesis

Wuu Yang's Thesis

[iwscm89]

[toplas89] (also [popl88a], [esop88], and [iwsvcc88])


Algebra of slices (and applications to program merging)


[scp91] (also [esop90])

[ccpsd91]

[amast91]

[npfo_submission]


Semantics and slicing


[tr900]

[ccipl89]

[tr890]

[popl88b]


Other applications of slicing


[dagstuhl96]

[pepm95a]


Implemented slicing system


[prog_integration_system]

[prog_integration_manual]

[tr819]

Note: the system described in these papers handles a small subset
of Pascal.
The system is distributed under license, which you may obtain by clicking
here.
We are currently retargeting the implementation to handle C programs, and
expect to distribute a system that supports slicing, chopping, and
differencing (but probably not integration) of C programs in 1996.


Miscellaneous


[tr947]


Ph.D. Theses


David Binkley's Thesis

Wuu Yang's Thesis

Phil Pfeiffer's Thesis



Interprocedural Dataflow Analysis

Demand IDFA via bottom-up logic programming and the magic-sets transformation


[ald94] (also [cc94])


Exhaustive and Demand IDFA via graph reachability


[tr1283] (also [fse95a])

[popl95]

[diku94]


IDFA using more than graph reachability


[tcs_ide_paper] (also [fase95])


PTIME completeness of IDFA


[acta_paper]



Alias Analysis, Pointer Analysis, and Shape Analysis



[rsw96]

[dagstuhl96]

[tr1323] (also [popl96] and  [tr1276])

[pepm95b]

[pfeiffer_thesis]

[sigplan89]



Language-Based Program-Development Environments


 [fse96]
 [dagstuhl92]
 Synthesizer Generator Book
 Synthesizer Generator Manual
 [computer87] (also [lape92])
 [popl86]
 T. Reps's Thesis
 [psde84]
 [toplas83] (also [popl82] and [popl81])
 [compcon83]
 [cacm81] (also [ipe84])
 [stm81] (also [sde81])



Incremental Computing


 G. Ramalingam's Thesis
 [jalg_paper]
 [tcs96]
 [ipl94]
 [dagstuhl94]
 [popl94]
 [popl93]
 [popl93_notes]
 Synthesizer Generator Book
 [acta88]
 [computer87] (also [lape92])
 [popl86]
 T. Reps's Thesis
 [toplas83] (also [popl82] and [popl81])



Attribute Grammars


 [spaa93]
 Synthesizer Generator Book
 Synthesizer Generator Manual
 [acta88]
 [toplas87]
 [popl86]
 T. Reps's Thesis
 [psde84]
 [popl84]
 [toplas83] (also [popl82] and [popl81])
 [compcon83]




List of Publications

Books



Reps, T. and Teitelbaum, T.,
The Synthesizer Generator: A System for Constructing
Language-Based Editors.
Springer-Verlag, New York, NY, 1988.



Reps, T. and Teitelbaum, T.,
The Synthesizer Generator Reference Manual: Third Edition.
Springer-Verlag, New York, NY, 1988.

Chinese reprint published by the World Publishing Corporation,
Beijing, China, 1991.



Reps, T.,
Generating Language-Based Environments.
The M.I.T. Press, Cambridge, MA, 1984.

Journal Publications



Sagiv, M., Reps, T., and Horwitz, S.,
Precise interprocedural dataflow analysis with applications to
constant propagation.
To appear in Theoretical Computer Science.
 tcs-ide.ps 



Reps, T.,
On the sequential nature of interprocedural program-analysis problems.
To appear in Acta Informatica.
 acta95.ps 



Ramalingam, G. and Reps, T.,
An incremental algorithm for a generalization of the shortest-path problem.
To appear in Journal of Algorithms.
 j_alg95.ps 



Ramalingam, G. and Reps, T.,
On the computational complexity of dynamic graph problems.
In Theoretical Computer Science A 158 (May 1996), 233-277.
 tcs96.ps 



Binkley, D., Horwitz, S., and Reps, T.,
Program integration for languages with procedure calls.
ACM Transactions on Software Engineering and Methodology 4, 1
(January 1995), pp. 3-35.
 tosem95.ps 



Ramalingam, G. and Reps, T.,
On competitive on-line algorithms for the dynamic priority-ordering problem.
Information Processing Letters 51 (1994), 155-161.
 ipl94.ps 



Yang, W., Horwitz, S., and Reps, T.,
A program integration algorithm that accommodates semantics-preserving
transformations.
ACM Transactions on Software Engineering and Methodology 1, 3
(July 1992), 310-354.



Reps, T.,
Algebraic properties of program integration.
Science of Computer Programming 17 (1991), 139-215.
 scp91.ps 



Horwitz, S. and Reps, T.,
Efficient comparison of program slices.
Acta Informatica 28 (1991), 713-732.



Horwitz, S., Reps, T., and Binkley, D.,
Interprocedural slicing using dependence graphs.
ACM Transactions on Programming Languages and Systems 12, 1
(January 1990), 26-60.
 toplas90.ps 



Horwitz, S., Prins, J., and Reps, T.,
Integrating non-interfering versions of programs.
ACM Transactions on Programming Languages and Systems 11, 3 (July 1989),
345-387.
 toplas89.ps 



Reps, T.
Incremental evaluation for attribute grammars
with unrestricted movement between tree modifications.
Acta Informatica 25 (1988), 155-178.



Reps, T. and Teitelbaum, T.,
Language processing in program editors.
IEEE Computer 20, 11 (November 1987), 29-40.



Reps, T. and Demers, A.,
Sublinear-space evaluation algorithms for attribute grammars.
ACM Transactions on Programming Languages and Systems 9, 3 (July 1987),
408-440.



Reps, T., Teitelbaum, T., and Demers, A.,
Incremental context-dependent analysis for language-based editors.
ACM Transactions on Programming Languages and Systems 5, 3 (July 1983),
449-477.



Teitelbaum, T. and Reps, T.,
The Cornell Program Synthesizer: A syntax-directed programming environment.
Communications of the ACM 24, 9 (September 1981), 563-573.

Invited Papers



Horwitz, S. and Reps, T.,
The use of program dependence graphs in software engineering.
In Proceedings of the Fourteenth International Conference
on Software Engineering, (May 11-15, 1992, Melbourne, Australia),
ACM, New York, NY, 1992, pp. 392-411.
 icse92.ps 



Reps, T. and Horwitz, S.,
Semantics-based program integration.
In Proceedings of the Second European Symposium on Programming,
(Nancy, France, March 21-25, 1988), Lecture Notes in Computer Science,
Vol. 300, H. Ganzinger (ed.), Springer-Verlag, New York, NY, 1988, pp. 1-20.

Book Chapters



Reps, T.,
Demand interprocedural program analysis using logic databases,
In Applications of Logic Databases,
R. Ramakrishnan (ed.), Kluwer Academic Publishers, Boston, MA, 1994,
pp. 163-196.
 ald94.ps 



Horwitz, S., Reps, T., and Binkley, D.,
Interprocedural slicing using dependence graphs.
In Software Change Impact Analysis,
S.A. Bohner and R.S. Arnold (eds.), IEEE Computer Society,
Los Alamitos, CA.
(To appear.)

Reprinted from
ACM Transactions on Programming Languages and Systems 12, 1
(January 1990), 26-60.
 toplas90.ps 



Horwitz, S., Reps, T., and Binkley, D.,
Interprocedural slicing using dependence graphs.
In Software Merging and Slicing,
V. Berzins (ed.), IEEE Computer Society, Los Alamitos, CA, pp. 10-44.

Reprinted from
ACM Transactions on Programming Languages and Systems 12, 1
(January 1990), 26-60.
 toplas90.ps 



Horwitz, S., Prins, J., and Reps, T.,
Integrating non-interfering versions of programs.
In Software Merging and Slicing,
V. Berzins (ed.), IEEE Computer Society, Los Alamitos, CA, pp. 137-179.

Reprinted from
ACM Transactions on Programming Languages and Systems 11, 3 (July 1989),
345-387.
 toplas89.ps 



Ramalingam, G. and Reps, T.,
A theory of program modifications.
In Software Merging and Slicing,
V. Berzins (ed.), IEEE Computer Society, Los Alamitos, CA, 90-105.

Reprinted from
Proceedings of the Colloquium on Combining Paradigms
for Software Development, (Brighton, UK, April 8-12, 1991),
Lecture Notes in Computer Science, Vol. 494,
S. Abramsky and T.S.E. Maibaum (eds.),
Springer-Verlag, New York, NY, 1991, pp. 137-152.



Reps, T. and Teitelbaum, T.,
Language processing in program editors.
In Language Architectures and Programming Environments,
T. Ichikawa and H. Tsubotani (eds.),
The World Scientific Publishing Company, Singapore, 1992, pp. 146-169.

Reprinted from IEEE Computer 20, 11 (November 1987), 29-40.



Teitelbaum, T. and Reps, T.,
The Cornell Program Synthesizer: A syntax-directed programming environment.
In Interactive Programming Environments,
D. Barstow, E. Sandewall, and H. Shrobe (eds.), McGraw-Hill, 1984, pp. 97-116.

Reprinted from Communications of the ACM 24, 9 (September 1981), 563-573.



Teitelbaum, T., Reps, T., and Horwitz, S.,
The why and wherefore of the Cornell Program Synthesizer.
In Software Development Environments, A.I. Wasserman (ed.),
IEEE Computer Society, Washington, DC, 1981, 64-72.

Reprinted from Proceedings of the ACM SIGPLAN/SIGOA Symposium
on Text Manipulation, (Portland, OR, June 8-10, 1981),
ACM SIGPLAN Notices 16, 6 (June 1981), pp. 8-16.

Conference Publications



Siff, M. and Reps, T.,
Program generalization for software reuse: From C to C++,
To appear in SIGSOFT 96: Proceedings of the Fourth ACM SIGSOFT
Symposium on the Foundations of Software Engineering,
(San Francisco, CA, October 16-18, 1996),
ACM SIGSOFT Software Engineering Notes, 1996.
 fse96.ps 



Reps, T. and Turnidge, T.,
Program specialization via program slicing,
In Proceedings of the Dagstuhl Seminar on Partial Evaluation,
(Schloss Dagstuhl, Wadern, Germany, Feb. 12-16, 1996),
Lecture Notes in Computer Science, Vol. 1110,
O. Danvy, R. Glueck, and P. Thiemann (eds.),
Springer-Verlag, New York, NY, 1996, pp. 409-429.
 dagstuhl96.ps 



Sagiv, M., Reps, T., and Wilhelm, R.,
Solving shape-analysis problems in languages with destructive updating.
In Conference Record of the Twenty-Third ACM Symposium
on Principles of Programming Languages,
(St. Petersburg, FL, Jan. 22-24, 1996), ACM, New York, NY, 1996, pp. 16-31.
 popl96.ps 



Horwitz, S., Reps, T., and Sagiv, M.,
Demand interprocedural dataflow analysis.
In SIGSOFT '95: Proceedings of the Third ACM SIGSOFT
Symposium on the Foundations of Software Engineering,
(Washington, DC, October 10-13, 1995),
ACM SIGSOFT Software Engineering Notes 20, 4 (1995), pp. 104-115.
 fse95a.ps 



Reps, T. and Rosay, G.,
Precise interprocedural chopping.
In SIGSOFT '95: Proceedings of the Third ACM SIGSOFT
Symposium on the Foundations of Software Engineering,
(Washington, DC, October 10-13, 1995),
ACM SIGSOFT Software Engineering Notes 20, 4 (1995), pp. 41-52.
 fse95b.ps 



Das, M., Reps, T., and Van Hentenryck, P.
Semantic foundations of binding-time analysis for imperative programs.
In PEPM '95: Proceedings of the ACM SIGPLAN Symposium on
Partial Evaluation and Semantics-Based Program Manipulation,
(La Jolla, California, June 21-23, 1995),
ACM, New York, NY, 1995, pp. 100-110.
 pepm95a.ps 



Reps, T.,
Shape analysis as a generalized path problem.
In PEPM '95: Proceedings of the ACM SIGPLAN Symposium on
Partial Evaluation and Semantics-Based Program Manipulation,
(La Jolla, California, June 21-23, 1995),
ACM, New York, NY, 1995, pp. 1-11.
 pepm95b.ps 



Sagiv, M., Reps, T., and Horwitz, S.,
Precise interprocedural dataflow analysis with applications to
constant propagation.
In Proceedings of FASE '95: Colloquium on Formal
Approaches in Software Engineering, (Aarhus, Denmark, May 22-26, 1995),
Lecture Notes in Computer Science, Vol. 915,
P.D. Mosses, M. Nielsen, and M.I. Schwartzbach (eds.), Springer-Verlag,
New York, NY, 1995, pp. 651-665.
 tapsoft95.ps 



Reps, T., Horwitz, S., and Sagiv, M.,
Precise interprocedural dataflow analysis via graph reachability.
In Conference Record of the Twenty-Second ACM Symposium
on Principles of Programming Languages,
(San Francisco, CA, Jan. 23-25, 1995), pp. 49-61.
 popl95.ps 



Reps, T., Horwitz, S., Sagiv, M., and Rosay, G.,
Speeding up slicing.
In SIGSOFT '94: Proceedings of the Second ACM SIGSOFT Symposium on
the Foundations of Software Engineering,
(New Orleans, LA, December 7-9, 1994),
ACM SIGSOFT Software Engineering Notes 19, 5 (December 1994), pp. 11-20.
 fse94.ps 



Reps, T.,
Solving demand versions of interprocedural analysis problems.
In Proceedings of the Fifth International Conference on Compiler
Construction, (Edinburgh, Scotland, April 7-9, 1994),
Lecture Notes in Computer Science, Vol. 786, P. Fritzson (ed.),
Springer-Verlag, New York, NY, 1994, pp. 389-403.
 cc94.ps 



Ramalingam, G. and Reps, T.,
An incremental algorithm for maintaining the dominator tree of a reducible
flowgraph.
In Conference Record of the Twenty-First ACM Symposium
on Principles of Programming Languages, (Portland, OR, Jan. 16-19, 1994),
pp. 287-296.
 popl94.ps 



Reps, T.,
Scan grammars: Parallel attribute evaluation via data-parallelism.
In Proceedings of the Fifth ACM Symposium on Parallel Algorithms and
Architectures, (Velen, Germany, June 30 - July 2, 1993).
 spaa93.ps 



Ramalingam, G. and Reps, T.,
Modification algebras.
In Proceedings of the Second International Conference on
Algebraic Methodology and Software Technology (AMAST),
(Iowa City, Iowa, May 22-24, 1991).



Ramalingam, G. and Reps, T.,
A theory of program modifications.
In Proceedings of the Colloquium on Combining Paradigms
for Software Development, (Brighton, UK, April 8-12, 1991),
Lecture Notes in Computer Science, Vol. 494,
S. Abramsky and T.S.E. Maibaum (eds.),
Springer-Verlag, New York, NY, 1991, pp. 137-152.



Yang, W., Horwitz, S., and Reps, T.,
A program integration algorithm that accommodates semantics-preserving transformations.
In SIGSOFT '90: Proceedings of the Fourth ACM SIGSOFT Symposium
on Software Development Environments, (Irvine, CA, December 3-5, 1990),
ACM Software Engineering Notes 15, 6 (December 1990), pp. 133-143.



Reps, T.,
Algebraic properties of program integration.
In Proceedings of the 3nd European Symposium on Programming
(Copenhagen, Denmark, May 15-18, 1990),
Lecture Notes in Computer Science, Vol. 432, N. Jones (ed.),
Springer-Verlag, New York, NY, 1990, pp. 326-340.



Reps, T. and Bricker, T.,
Illustrating interference in interfering versions of programs.
In Proceedings of the Second International Workshop on Software
Configuration Management, (Princeton, NJ, October 24-27, 1989),
ACM Software Engineering Notes 17, 7 (November 1989), pp. 46-55.



Horwitz, S., Pfeiffer, P., and Reps, T.,
Dependence analysis for pointer variables.
In Proceedings of the ACM SIGPLAN 89 Conference on Programming Language
Design and Implementation, (Portland, OR, June 21-23, 1989),
ACM SIGPLAN Notices 24, 7 (July 1989), pp. 28-40.



Reps, T. and Yang, W.,
The semantics of program slicing and program integration.
In Proceedings of the Colloquium on Current Issues
in Programming Languages, (Barcelona, Spain, March 13-17, 1989),
Lecture Notes in Computer Science, Vol. 352,
J. Diaz and F. Orejas (eds.), Springer-Verlag, New York, NY, 1989,
pp. 360-374.



Horwitz, S., Reps, T., and Binkley, D.,
Interprocedural slicing using dependence graphs.
In Proceedings of the ACM SIGPLAN 88 Conference on Programming
Language Design and Implementation, (Atlanta, GA, June 22-24, 1988),
ACM SIGPLAN Notices 23, 7 (July 1988),  pp. 35-46.



Reps, T., Horwitz, S., and Prins, J.,
Support for integrating program variants in an environment for
programming in the large.
In Proceedings of the International Workshop on Software Version
and Configuration Control, (Grassau, W. Germany, Jan. 27-29, 1988),
Berichte des German Chapter of the ACM, Vol. 30, J.F.H. Winkler (ed.),
B.G. Teubner, Stuttgart, W. Germany, 1988, pp. 197-216.



Horwitz, S., Prins, J., and Reps, T.,
Integrating non-interfering versions of programs.
In Conference Record of the Fifteenth ACM Symposium on Principles of
Programming Languages, (San Diego, CA, January 13-15, 1988),
ACM, New York, NY, 1988, pp. 133-145.



Horwitz, S., Prins, J., and Reps, T.,
On the adequacy of program dependence graphs for representing programs.
In Conference Record of the Fifteenth ACM Symposium on Principles of
Programming Languages, (San Diego, CA, January 13-15, 1988),
ACM, New York, NY, 1988, pp. 146-157.
 popl88b.ps 



Reps, T., Marceau, C., and Teitelbaum, T.,
Remote attribute updating for language-based editors.
In Conference Record of the Thirteenth ACM Symposium on Principles of
Programming Languages, (St. Petersburg, FL, January 13-15, 1986),
ACM, New York, NY, 1986, pp. 1-13.



Reps, T. and Teitelbaum, T.,
The Synthesizer Generator.
In Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering
Symposium on Practical Software Development Environments,
(Pittsburgh, PA, April 23-25, 1984),
ACM SIGPLAN Notices 19, 5 (May 1984),  pp. 42-48.



Reps, T. and Alpern, B.,
Interactive proof checking.
In Conference Record of the Eleventh ACM Symposium on
Principles of Programming Languages,
(Salt Lake City, Utah, January 15-18, 1984),
ACM, New York, NY, 1984, pp. 36-45.



Reps, T.,
Static-semantic analysis in language-based editors.
In Digest of Papers of the IEEE Spring CompCon 83,
(San Francisco, CA, March 1-3, 1983),
IEEE Computer Society, Washington, DC, 1983, pp. 411-414.



Reps, T.,
Optimal-time incremental semantic analysis for syntax-directed editors.
In Conference Record of the Ninth ACM Symposium on Principles
of Programming Languages, (Albuquerque, NM, January 25-27, 1982),
ACM, New York, NY, 1982, pp. 169-176.



Teitelbaum, T., Reps, T., and Horwitz, S.,
The why and wherefore of the Cornell Program Synthesizer.
In Proceedings of the ACM SIGPLAN/SIGOA Symposium on Text Manipulation,
(Portland, OR, June 8-10, 1981),
ACM SIGPLAN Notices 16, 6 (June 1981),  pp. 8-16.



Demers, A., Reps, T., and Teitelbaum, T.,
Incremental evaluation for attribute grammars with application to
syntax-directed editors.
In Conference Record of the Eighth ACM Symposium on Principles
of Programming Languages, (Williamsburg, VA, January 26-28, 1981),
ACM, New York, NY, 1981, pp. 105-116.

Software



Reps, T., Bricker, T., Rosay, G., et al.,
The Wisconsin Program-Integration System.
Release 0.5, April 1990;
Release 1.0, April 1992.
Release 2.0, July 1993.
Licensed to 9 sites.
(Click here
for license information.)

Patents



Reps, T., Horwitz, S., and Binkley, D.,
Interprocedural slicing of computer programs using dependence graphs.
U.S. Patent Number 5,161,216, November 3, 1992.

Pending Submissions



Reps, T., Sagiv, M., and Wilhelm, R.,
Solving shape-analysis problems in languages with destructive updating.
TR-1323, Computer Sciences Department,
University of Wisconsin, Madison, WI, August 1996.
 tr1323.ps 

Submitted for journal publication.



Horwitz, S., Reps, T., and Sagiv, M.,
Demand interprocedural dataflow analysis.
TR-1283, Computer Sciences Department, University of Wisconsin,
Madison, WI, August 1995.
(Click here to access paper.
Click  here 
to access the latest version.)

Submitted for journal publication.



Ramalingam, G. and Reps, T.,
New programs from old.
TR-1057,
Computer Sciences Department, University of Wisconsin-Madison, November 1991.
(Click  here 
to access the latest version.)

Submitted for journal publication.

Other Publications and Reports



Reps, T., Sagiv, M., and Wilhelm, R.,
On shape abstractions and shape analyses.
Computer Sciences Department, University of Wisconsin,
Madison, WI, July 1996.



Reps, T., Sagiv, M., and Wilhelm, R.,
Solving shape-analysis problems in languages with destructive updating.
TR-1276, Computer Sciences Department,
University of Wisconsin, Madison, WI, July 1995.
 tr1276.ps 



van Leeuwen, J., Mehlhorn, K., and Reps, T. (eds.),
Incremental computation and dynamic algorithms.
Dagstuhl Seminar Report 88,
International Conference and Research Center for Computer Science (IBFI),
Schloss Dagstuhl, Wadern, Germany, 1994.



Reps, T., Sagiv, M., and Horwitz S.,
Interprocedural dataflow analysis via graph reachability.
TR 94-14, Datalogisk Institut, University of Copenhagen,
Copenhagen, Denmark, April 1994.
 diku-tr94-14.ps 



Reps, T.,
The Wisconsin Program-Integration System Reference Manual: Release 2.0.
Computer Sciences Department, University of Wisconsin-Madison,
July 1993.
manual.2.0.ps



Ramalingam, G. and Reps, T.,
A categorized bibliography on incremental computation.
In Conference Record of the Twentieth ACM Symposium
on Principles of Programming Languages, (Charleston, SC, Jan. 11-13, 1993),
ACM, New York, NY, 1993, pp. 502-510.
(Tutorial paper.)



Reps, T.,
Incremental computation.
Unpublished tutorial notes, 1993.
(Presented at the Twentieth ACM Symposium on Principles of Programming Languages, (Charleston, SC, Jan. 11-13, 1993).)



Klint, P., Reps, T., and Snelting, G. (eds.),
Programming environments.
Dagstuhl Seminar Report 34, 
International Conference and Research Center for Computer Science (IBFI),
Schloss Dagstuhl, Wadern, Germany, 1992.



Binkley, D., Horwitz, S., and Reps, T.,
Identifying semantic differences in programs with procedures (Extended
abstract).
Computer Sciences Department, University of Wisconsin-Madison,
September 1991.



Ball, T., Horwitz, S., and Reps, T.,
Correctness of an algorithm for reconstituting a program from a dependence graph.
TR-947, Computer Sciences Department, University of Wisconsin-Madison,
July 1990.
(Click here to access paper.)



Ramalingam, G. and Reps, T.,
Semantics of program representation graphs.
TR-900, Computer Sciences Department, University of Wisconsin-Madison,
December 1989.
(Click here to access paper.)



Binkley, D., Horwitz, S., and Reps, T.,
The multi-procedure equivalence theorem.
TR-890, Computer Sciences Department, University of Wisconsin-Madison,
November 1989.
(Click here to access paper.)



Reps, T.
Demonstration of a prototype tool for program integration.
TR-819, Computer Sciences Department, University of Wisconsin-Madison,
January 1989.
(Click here to access paper.)


Visitors, Post-Docs, and Students

Visitors

 Mooly Sagiv,
IBM Israel Scientific Center, 1994-95.

 Jiazhen Cai, NYU, 1990-91.

 Robert Paige,
NYU, 1990-91.

Post-Doctoral Associates

  Wuu Yang 
(Ph.D., Univ. of Wisconsin), 1990-91.
(Currently Associate Professor, Department of Computer and Information Science,
National Chiao-Tung University, Taiwan.)

  Jan Prins 
(Ph.D., Cornell Univ.), 1986-87.
(Currently Associate Professor, Department of Computer Science,
University of North Carolina, Chapel Hill.)

Students



Ramalingam, G.,
Bounded Incremental Computation,
Lecture Notes in Computer Science, Vol. 1089,
Springer-Verlag, New York, NY, 1996.


Binkley, D.,
Multi-procedure program integration.
Ph.D. dissertation and Tech. Rep. TR-1038,
Computer Sciences Department, University of Wisconsin,
Madison, WI, August 1991.
(Click here to access paper.)



Pfeiffer, P.,
Dependence-based representations for programs with reference variables.
Ph.D. dissertation and Tech. Rep. TR-1037,
Computer Sciences Department, University of Wisconsin,
Madison, WI, August 1991.
(Click here to access paper.)


Yang, W.,
A new algorithm for semantics-based program
integration.
Ph.D. dissertation and Tech. Rep. TR-962, Computer Sciences Department,
University of Wisconsin, Madison, WI, August 1990.
(Click here to access paper.)



",non-course
"

Saeed's Home Page




  














  
 
     Hi! I am Saeed Mirza. I did my B.Tech. from the  Department of Computer Science and Engineering  
at  Indian Institute of Technology, Kanpur . 
Now I am a graduate student at  Univ. Of Wisconsin Madison  in  Computer Science Department 


   


My home is in Lucknow, India. 


 I like to spend my time: 


 
Listning to Indian Film Songs 

  
Netsurfing 

  
Reading Comics  (My Hero Calvin) 

  


  
  We do not love people because they are beautiful but they seem beautiful to us because we love them. 






 Contact me 
   Home    Office

 
 
7 N. Randall Av.,

Apartment #1,

Madison,

WI-53715 



3310, Comp. Sc. Department,

Univ. Of Wisconsin Madison,

1210 W.Dayton Street,

Madison, WI-53706 


 
  (608) 250-0227  
  (608) 262-1721  

 

  OR 
Contact me best via email 

 at 
saeed@cs.wisc.edu 




 Some of my friends  contact  who are the right 

   of IIT 
  
 Some  pictures  of Wismad  
 For suggestions send    to me.   


    
  Check out my  guestbook    
 
 
This page has been accessed 
  
times since Oct. 1 1996. 

Last updated 
 
  1996 Saeed© All rights reserved 


",non-course
"

 Sally Peterson's Home Page 

  Sally Goodwin Peterson  

Lecturer
Computer Sciences 
University of Wisconsin
1210 W. Dayton St.
Madison, WI  53706-1685

E-mail: sally@cs.wisc.edu
Telephone: (608) 263-7763


Interests: desktop computing, real-time operating systems, programming languages


 Courses Taught 
 

For fall, 1994:



 
        Comp. Sci. 132, Lectures 3 & 4, Using Computers.





 Last Changed: September 26, 1994 by sally@cs.wisc.edu 



",non-course
"


 Amit's home page 



 WARNING


Reaching Me



 Protocol 
 Office   
 Home     


 Email 
 amit@cs.wisc.edu 


 Snail Mail 

 Computer Sciences Dept.
 University of Wisconsin
Madison,
	    WI 53706

	    304 Princeton Ave., #2
Madison,
	    WI 53705
	


 Phone 
(608) 262-6624 
(608) 236-0193 





Education

 Working towards a PhD under the guidance of:
    Jeff Naughton.
   Master of Science, Computer Sciences, Dec. 1995,
     University of Wisconsin -
    Madison
 Bachelor of Technology, Computer Sciences and Engineering, May 1994,
    Indian Institute of Technology,
    Madras


 Research Interests

 Online Analytical Processing 
 Query Processing
     Performance Evaluation


 Publications 

 Storage Estimation for Multidimensional Aggregates in the Presence of
    Hierarchies 
    Amit Shukla, 
    Prasad M. Deshpande,
    
    Jeffrey F. Naughton, and
    
    Karthikeyan Ramasamy
22nd International Conference on Very Large Databases, Mumbai (Bombay), 1996.
    The paper in  postscript.
    Slides from the presentation at VLDB96 ( ppt
    or  ps).


 Interesting Links 

  Madison  
 Running   

 Boston Marathon (MA)
	 Chicago Marathon (IL)
	 Madison Marathon (WI)
	 New York Marathon (NY)
	 Seattle Marathon (WA)
	 St. George Marathon (Utah)
    


 Database Related Pointers 

ACT-NET:
      Research Network on Active Databases
Bibliography Server
      on Databases and Logic Programming
Competitive Profiles - TPC, SPEC, ... (IDEAS International)
  Database
      Conferences Sorted by Name (University of Trier)
  Database Conferences Sorted by
      Date (SIGMOD Server)
  Very Large Data Bases (VLDB)
      Endowment
Database Article Archive
Massive Digital Data Systems (MDDS) Initiative
Multimedia Information Sources
National Industrial Information Infrastructure Protocols
      (NIIIP) Consortium
Transaction Processing Council (TPC)
TransCoop - Transaction
      Management Support for Cooperative Applications
An OLAP Page
OLAP: An Introduction (Pilot Software)



Interested in helping educate needy children? Look at the
  ASHA   home page.



My 
personal page
and 
bookmarks
are also online.


 Garfield


",non-course
"

Ashwin's Home Page



 




  This page is under construction


 My name is  S. Ashwin . I'm a graduate student in the 
Department of Computer Science at the 
University of Wisconsin, Madison. I come from
 India, and had
my undergraduate education at the  Indian
Institute of Technology, Bombay. The 
Department of CS at IITB is a fantastic place and worth visiting.

 If you'd like to contact me, you can
finger me
to find my whereabouts.
Alternatively, you can send email to me at  sashwin@cs.wisc.edu . 

  My bookmarks.


",non-course
"


S.Subramanya Sastry's Home Page





I am ...

S Subramanya Sastry( Here  is a mugshot of mine). 
I come from Hospet, a town in 
Karnataka ,  India . 
Did 12 years of my schooling there.  Near Hospet(10 kms away) is 

Hampi , the ruins of the Vijayanagara Empire.  Also, 5 kms away, is 
the Tungabhadra Dam, built across the Tungabhadra river.  These places are 
beautiful, but unfortunately I dont have photographs of these places or I 
would have scanned and put them in my  photo album.  

Not so long ago,


I was an undergraduate at the  

Indian Institute of Technology, Kanpur ,
in the 

Department of Computer Science and Engineering.  Those 4 years 
were wonderful.  My  photo album  has a few
photographs from that time.  
Gokul  is also maintaining a 

photo album  which contains many photos of IITK.  The 

IITK Class of '95 homepage has information about my classmates
at IITK.

The present


Currently, I am a graduate student in the 
Computer Sciences Department  at the 
University of Wisconsin, Madison.   I plan to do a Ph.D. here.
Here are the  courses  that I have registered
for in Spring '96.


Interests


My academic interests lie in the fields of 
 Architecture,

Programming Languages and Compilers.
Hope to graduate some day with a Ph.D. in one of these fields.

Cricket is one of my favourite sports.  Used to play
phatta at IITK which is a tennis-ball version of cricket.  Not that
I was a champ or anything, but it provided a lot of entertainment
in the company of my friends.  

My bookmarks have a few links to some cricket sites.

I enjoy listening to music, anything that is pleasant to the ear.  I must 
say I dont consider hard rock or metal something really pleasant.  I do
not watch much TV, but of whatever I have watched, I liked Seinfeld's
show very much.

As far as reading goes, I am not a voracious reader.  Rather than say what
I like, I can better say what I do not like.  I do not like horror, fantasy,
neither do I like Science Fiction.  I have unsuccesfully tried to 
come to grips with these.  I like something which is down-to-earth,
if you know what I mean.  Something which has a hint of romance in it, if
possible.  Jeffrey Archer has been my favourite author to date.  I also 
liked Jane Austen's Pride and Prejudice very much.  Talking of reading,
 Ramesh Mahadeven's
articles  make for some interesting reading.

I also like playing bridge.  Back at IIT, Kanpur, I picked up this wonderful
game in the company of my friends.  After a long time, I am back at it
again here.  I also like solving crosswords, the cryptic kind.  But, in
the past year, I have not devoted much time to this hobby of mine.




Last Updated : January 20th, 1996
Send in your comments/suggestions to :


sastry@cs.wisc.edu






University of Wisconsin, Madison home page


",non-course
" 


Susan Calcari's Home Page


 Susan Calcari
Manager, Net Scout Services
Computer Sciences Department
University of Wisconsin - Madison
scal@cs.wisc.edu
My title is Internet Scout, and I manage  Net Scout Services from the  Computer Sciences Department at the  University of Wisconsin-Madison. Scout
Services is a project of the InterNIC
and is supported by the National Science
Foundation. Net Scout Services supports Internet users in the
higher-education community by providing timely information about the best
resources and tools on the Internet. Our goal is to help researchers and
educators use the Internet effectively in their work. Each week we filter 
hundreds of items about the Internet, edit and organize the most 
important, and present the information in multiple usable formats.
 Services include the Scout Report, the Scout Toolkit, Net-happenings, and coming soon
the Scout Sprouts Report, a newsletter written by kids for kids. 

Over 35,000 people receive the Scout Report each week via email, and
thousands more read it on the Web. The Scout Report is an annotated
listing of the best new and newly discovered Internet resources and tools,
and it is the only publication of its kind devoted to the research and
education community.  The Scout Report is very selective in the items
included in each issue.  Over 10,000 people receive Net-happenings
postings every weekday, and again, thousands more read it via the Web or
the newsgroup each day.  See the Net Scout Services page for more
information on these and other services. 

 Professional Background 
 I have been involved in nation-wide Internet projects since 1989 when
I joined Merit, Inc., in Ann Arbor, the organization that managed the
NSFNET backbone project from 1987-1995. I worked in the Information
Services division of the project, and spent three years speaking to
national and international higher-education audiences about the Internet
and its resources. I also developed and produced the Merit Network Seminar
Series, the first national seminar series focused on the needs of Internet
end-users. 

 Later I became the Director of Network Information Services for
CERFnet, a respected Internet provider based in San Diego. While there I
co-wrote the proposal which resulted in the award of part of the InterNIC
project under a 5 year cooperative agreement with the National Science
Foundation (NSF). In the third year of the agreement, NSF terminated the
portion of the InterNIC based in San Diego, but chose to continue the work
of the Internet Scout. At that time I elected to relocate to Wisconsin and
requested that NSF approve the relocation of the Scout project to the
Computer Sciences department at UW - Madison, to which they heartily
agreed. 

 Future Plans for Scout Services
At this time the Scout Services staff includes Jack Solock, Special
Librarian, and myself. During May the project will expand with the
addition of 2 FTE, including an open  System
Administrator position and an open  Special
Librarian position. On June 6 Matthew Livesey will join the staff as a
Project Assistant. Goals for the new staff will include expansion of the
Scout Toolkit and the addition of discipline-specific services, such as
Scout Reports and Web pages devoted to specific areas of study. 

During 1996 Scout Services will also branch into one or more research
areas in collaboration with InterNIC Support Services and with groups at 
UW-Madison and other U.S. campuses. Potential research topics include
network information discovery and retrieval (NIDR), and
discipline-oriented information gathering and publication. Depending on
the nature of the research, additional staff will be hired and will
include
computer science researchers at the graduate and undergraduate levels.

 For More Information
 Visit our Web site to find out more about Scout Services or to join any of
our mailing lists.  If
you are interested in applying for any of our open positions, see the
online job descriptions for the  System
Administrator or  Special Librarian and send a
resume and a writing sample to the address below.  Or feel free to contact
me via telephone or email.

Susan Calcari
Internet Scout 
Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton Street  Rm. 3379
Madison, WI  53706
scal@cs.wisc.edu
 608.265.8042




",non-course
"


Chandrasekar's Home Page




 Welcome to  S. Chandrasekar's  Homepage




 ""Don't worry. Be Happy !""


   

 Present 
 I'm a graduate student in the 
 Department of Computer Science 
  
 Past 

 I was born on 2nd June, 1975 in Coimbatore in the southern state of 
TamilNadu  in
India.
 I had my high school education at G.R.G. Higher Secondary school in Coimbatore.
 My undergraduate education was at the
Indian Institute of Technology, 
Kharagpur majoring from the 
Dept. of Computer Science & Engineering.

 Personal Stuff... 




Residence

2016, Kendall Avenue, Apt #2 
Madison, WI 53705, USA  
 
(608)232-1894

Office

Dept. of Computer Science 
1210, W. Dayton St, #6351 
Madison, WI 53706, USA  
(608)263-0475


Sivasankaran Chandrasekar /
schandra@cs.wisc.edu  
Last updated: Oct 5, 1996 4:30pm CDT
 You can 
finger me to find my whereabouts.

This page has been accessed 
 times since Oct 5, 1996


",non-course
"

Eric Schnarr's Home Page







Eric Schnarr
(schnarr@cs.wisc.edu)

Research Assistant
Department of Computer Sciences

University of Wisconsin-Madison
1210 West Dayton Street
Madison, WI 53706 USA
Phone: (608) 262-2542
Advisor: Jim Larus

Research Interests:

Architecture Description Languages
Functional Language Design


Interesting Links:

 Wisconsin Wind Tunnel
 SACM Hockey Club
 Dragon Bytes



schnarr@cs.wisc.edu



",non-course
"

 Yannis Schoinas' Home Page 



 Yannis Schoinas (schoinas@cs.wisc.edu) 


 

Research Assistant
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA

 Note: this page is under construction.

Advisor:  Mark Hill 

Research Interests:

 Parallel Systems


Publications:

 

Fine-grain Access Control for Distributed Shared Memory,


Ioannis Schoinas, Babak Falsafi, Alvin R. Lebeck,
Steven K. Reinhardt, James R. Larus, David A. Wood
(The Sixth International Conference on Architectural Support for Programming
Languages and Operating Systems (ASPLOS VI), Oct. 1994).

 

Application-Specific Protocols for User-Level Shared Memory,


Babak Falsafi, Alvin R. Lebeck, Steven K. Reinhardt, Ioannis Schoinas,
Mark D. Hill James R. Larus, Anne Rogers, David A. Wood
(Supercomputing '94, Nov. 1994).


Education:

 M.S. University of Crete, Iraklio, 1991
 B.S. University of Crete, Iraklio, 1989



 Last Updated: July 13, 1994 


  cretan cooking


",non-course
"

Beverly Seavey's Home Page


 
 Beverly Seavey
 I'm currently registered as a grad student in computer science,
but will switch to a special degree in computational biology. 



 Non-computational interests of mine include:

 Asian classical dance 
 The different versions of Ramayana in India and Southeast Asia 
 The dance dramas Ramayana, Ramakien... of India and Southeast Asia 

 I wish you could finger me, but the Lab won't give me an account 
(hairballs and keyboards don't mix).  You can finger 
keeper instead.




",non-course
"

Scott Colville's Home Page
Scott Colville's Home Page



E-Mail:
sec@cs.wisc.edu

Office Address:
Computer Science, Office# 6366
1210 W Dayton St.
Madison, WI 53703
(608)265-2702

Home
305 N Frances St., Apt 403
Madison, WI 53703
(608)250-0397


Welcome one, welcome all, to my home page.

Well, I go to school back here at the University Wisconsin-Madison.
But NO, I have not seen the largest ball of cheese, and I do not want to!
Some school links:

 UWisc CS Home Page
 UWisc Home Page


In addition, here is a list of some pages I find an interest in...
Hopefully, you will also enjoy them.

 Beer World
 Drinking Games
 Absolut Adds
 Caffeine Ratings for Soda

 The MIT Guide To Lock Picking


And, some more educational or artsy pages.

 CIA World Fact Book
 US Law / Constitution

 US English Dictionary
 Roget's Thesaurus

 Poetry Database


 sec@cs.wisc.edu, last updated 1 September 1996.



",non-course
"

Steve Seitz's Animation Writeup



 
Image Motion Analysis for Character Animation Control

Steve Seitz,
 Chuck Dyer



Our research is motivated by the problem of teaching
a graphical model to perform a realistic motion.  This problem has
its roots in the art of cartoon animation and has modern applications to
computer animation, virtual reality, teleconferencing, and robotics.
The task is to endow a graphical model with the knowledge of how to perform
a repertoire of interesting motions.  Once learned, these motions can be
invoked directly via high-level cues (e.g. ""smile"", ""walk""), inferred via an
abstract goal (e.g. ""go to the store""), or cued off of low-level
events from a virtual input device or an image sequence.  

Other projects include the analysis of 
 periodic motion 
and tracking of rigid and nonrigid objects.



",non-course
"

Steve Seitz's View Interpolations


 View Synthesis by Image Interpolation 

Investigators:
Steve Seitz,
 Chuck Dyer



We have devised a provably-correct automated technique for creating new 
views of a scene from two basis views of the same scene.  The technique 
relies on geometric image interpolation, known as ""morphing"" in the graphics
community, to produce intermediate images.  Although morphing techniques
currently enjoy widespread use, their theoretical validity
has not been established.  In particular, does 2D interpolation of two views
of the same scene produce a sequence of physically valid in-between views of
that scene?
Surprisingly, the answer is yes, providing the images first undergo a simple
rectification procedure and certain assumptions about visibility and the
projection process are satisfied.
The view synthesis work described here uses automated stereo techniques to
determine image correspondences.  Our more recent work on 
 View Morphing 
considers how user-interaction may be used to guide the interpolation.


Below are computed interpolations for three different image pairs.  The
rectified original images are shown at left and right.  Click on the
interpolated images (center) to see mpeg movies (~50K) showing the computed
interpolations.


 View Interpolations

  Original (1)  
  Interpolated (1.5) 
  Original (2) 



  
 
 
  



  
 
 
  


  
 
 
  





This work is described in: 
 
Physically-Valid View Synthesis by Image Interpolation,

 
S. M. Seitz and C. R. Dyer, 
Proc. Workshop on Representation of Visual Scenes, 
1995.


 
Last Changed: June 30, 1995 



",non-course
"

View Morphing (by Steve Seitz)


 View Morphing 

Investigators:
Steve Seitz,
 Chuck Dyer

 Related Publications: 



View Morphing 

 --- to appear in
 SIGGRAPH 96 



Toward Image-Based Scene Representation Using View Morphing 

 --- to appear in
 ICPR 96 




Image morphing techniques can generate compelling 2D transitions between
images.  However, differences in object pose or viewpoint often cause
unnatural distortions in image morphs that are difficult to correct manually.
Using basic principles of projective
geometry, this paper introduces a simple extension to image morphing
that correctly handles 3D projective camera and scene transformations.
The technique, called {\em view morphing}, works by prewarping two images
prior to computing a morph and then postwarping the interpolated images.
Because no knowledge of 3D shape is required, the technique may be applied
to photographs and drawings, as well as rendered scenes.
The ability to synthesize changes both in viewpoint and image structure
affords a wide variety of interesting 3D effects via simple image
transformations.






 ,
	


 View morphing between two images of an object taken from 
	two different viewpoints produces the illusion of physically moving a 
	virtual camera.  
	
	Click for an 
	
	MPEG movie  (184K) of this interpolation. 








 



  Morph between views of different faces produces simultaneous
	interpolation of facial shape, color, and pose.
	
	Click for an
	
	MPEG movie  (143K) of this interpolation. 





 More MPEG Movies of View Morphs 



 
 

 Two resolutions of Mona Lisa <--> Mona Lisa reflection: 
		
  
			High resolution MPEG movie  (198K, 10 frames)
		  
			Low resolution MPEG movie  (64K, 20 frames)
		



 
 

 Click for  
		MPEG movie  (84K) of Jude Shavlik <--> Chuck Dyer
	



 
Last Changed: September 8, 1996 



",non-course
"

Periodic Motion Information



 
Periodic and Cyclic Motion Analysis 

Steve Seitz,
 Chuck Dyer



Many real-life motions are periodic in some frame of reference.  
For instance, most human locomotory motions (e.g., walking running, 
skipping, shuffling) are
periodic in a frame of reference that moves with the person.  We have
developed an approach for determining if an image sequence could have been
produced by an object whose motion is periodic in some reference frame.
Unlike all previous attempts to determine periodicity information, our
approach allows the camera to move during filming.  For more information 
(1.3M poscript paper), click 

here.


 
Period Trace

This image shows the period trace (red lines) recovered from an image
sequence of a phonograph turntable.  Ramps correspond to moments in time
where the turntable was momentarily slowed.  The period trace is shown
superimposed on the error surface from which it was recovered.



Real repeating motions tend not to be perfectly even, i.e., the period varies
slightly from one cycle to the next, because of physically important changes
in the scene.  A generalization of period is defined for cyclic motions
that makes periodic variation explicit.  This representation, called the
 period trace, is compact and purely temporal, describing the evolution
of an object or scene without reference to spatial quantities such as
position or velocity.  By delimiting cycles and identifying correspondences
across cycles, the period trace provides a means of temporally parsing
a cyclic motion.  In addition, several purely temporal motion features can
be derived, relating to the nature and location of irregularities.
The period trace
can also be used for medical image enhancement by compositing images from
different cycles.  Furthermore, the period trace can be reliably recovered
from image sequences in a view-invariant fashion using a theory of 
affine invariance.  For more information (1.3M poscript paper) click

here.

  Heart X-ray Image Enhancement  






Top:  two corresponding angiographic images determined from period 
trace.  Bottom: composite of 5 such corresponding images.  Note additional
structure visible in composite but not apparent in single raw images.




",non-course
"

Steve Seitz's Home Page




  

	Steve Seitz 
  (seitz@cs.wisc.edu) 
 



 
		Graduate Student & Research Assistant

Computer Sciences Department, 
		 UW-Madison 
		1210 W. Dayton St.
Madison, 
		 
		WI,
 
		USA 53706-1685 Telephone: (608) 262-6619
		




Advisor:
 Chuck Dyer

Education:
  UW-Madison MS C.S., 1993;
  UC-Berkeley 
BA Math, C.S., 1991.

Areas of Interest:  
Image motion analysis, image-based rendering, machine vision, 
computer graphics.  

 Research Projects

   
  View Morphing  


 

  
   View Synthesis  -- here is an
		 MPEG  movie showing  the computed
		interpolation of the two images at left. 
		Click  here  for more examples and
		MPEG movies

		


   
  Analysis of Cyclic Motion  


 

 Recent Publications 

 
 Other Stuff 
  
Frequented Links 


 
Wisconsin Computer Vision Group 


  Surreal Caching 

 Click 
  here  for a closer look.

 
Other 
  
Seitz  on the Web 




 
Last Changed: July 16, 1996 



",non-course
"

 Home Page of the UW-Madison Machine Learning Research Group 





This WWW home page contains relevant information about, and for, the
members of the Machine Learning Research Group (MLRG) 
at the University of Wisconsin - Madison.



 Table of Contents 

 
        Group Members
 
        MLRG's Archive of Recent Papers
 
        MLRG's Archive of Datasets and Domain Theories
 
        MLRG's Paper-Reading Schedule
 
        The AI Seminar
 
        CS 760 - Machine Learning (graduate course)
   
        Relevant Local Links
 
        Some Useful External Links





 Group Members 


  
        Carolyn Allex
 
        Jonathon Bodner
 
        Kevin Cherkauer
 
        Mark Craven
 
        Tina Eliassi
 
        Richard Maclin (graduated August 1995)
      
        David Opitz (graduated August 1995)
   
        Jude Shavlik


 MLRG's Archive of Recent Papers


Visit the page describing our 
recent publications.
(An ASCII file containing a list of our recent
abstracts
is also available.)


 MLRG's Archive of Datasets and Domain Theories

You can access our ftp directory that contains several

ML testbeds.  (You can also access via ftp the 

Wisconsin Breast Cancer Database, 
which is from Prof.  Olvi Mangasarian's
group).


 MLRG's Paper-Reading Schedule 

See the 

MLRG's current schedule of papers to read.
(Our 
old schedules are also on line.)


 The AI Seminar 

See the current schedule of the local 

AI seminar.


 Relevant Local Links 


 
        CS 760 - Machine Learning (graduate course)
   
        UW-Madison Machine-Learning/Math-Programming Group
  
        Computational Biology in the UW-Madison CS Dept
  
        UW-Madison Computational Neuroscience
  
        UW-Madison AI Group
  
        UW-Madison Computer Vision Group
  
        UW-Madison Robotics Group
  
        UW-Madison CS Dept Home Page
  
        UW-Madison Home Page (DoIT)
  
        UW-Madison Center for Mathematical Sciences Gopher
  
        UW-Madison Graduate School
 
        UW-Madison Library
  
        Recent Table of Contents and Abstracts of Selected ML Journals 
        (mostly from Wendt Library; readable only if @cs.wisc.edu)
   
        Procs: Workshop on Agents that Learn from Other Agents,
	held at the 1995 International Machine Learning Conference.
   
        More local links



Last modified: Fri Mar  1 11:00:45 1996 by Jude Shavlik


shavlik@cs.wisc.edu




",non-course
"

 Shubu Mukherjee's Home Page 






 
Shubu Mukherjee 
(shubu@cs.wisc.edu)






Above: With my fiancee Mimi.  Below: my nephew Avirup when he was 7 months old.




Graduate Research Assistant 

Computer Sciences Department

University of Wisconsin - Madison.
1210 West Dayton Street 
Madison, WI 53706-1685  USA
Phone: 608 262 5083 
Fax: 608 262 9777 

[aka Shubhendu S. Mukherjee]




 [Click on button to jump to corresponding home page/article.]  





 
Advisor:  Mark D. Hill 


 
Research Project:  Wisconsin Wind Tunnel 


 
Publications


 
Wisconsin Computer Architects 


 
World-Wide Computer Architects 


 
Badger Ballroom Dance Team


 
Other Personal Interests/Hobbies


 
Morph between Dionisios and myself 
(Courtesy: Steve Seitz)


 
Some random (but interesting) links

Education

Ph.D 

University of Wisconsin-Madison
,
Jan 1994 - Spring 1998 (expected)


M.S. 

University of Wisconsin-Madison
, Sep 1992 - Dec 1993


B.Tech. 

Indian Institute of Technology, Kanpur, 
 
India, Aug 1987 - May 1991

 Research Summary  

Coherent Network Interfaces (PhD Dissertation)

 Cachable Queues & Design Space
(ISCA96) 
 More (In Progress)

Distributed Shared Memory 

 Mechanisms for Cooperative Shared Memory
(ISCA93)
 On Commodity Workstations (Submitted for Publication) 
Cache Coherence Protocols

 Custom Protocols for Irregular Applications
(PPoPP95)
 Gray-software
(ICS94)
 Dir1SW+ 
(ISCA93)



Parallel Simulation 
(Wind Tunnel Tutorial)
Cache Simulation 
(JSS94)


Copyright © 1996 by Shubu Mukherjee.  All rights reserved.





",non-course
"
Michael Siff's Home Page





     Michael Siff



 Philosophy of the Web 

 Research and Academic Interests 

 The UW Running Club 

 Fall 1996 Midwest PL Seminar 

 WWW (Wonderful Ways to Waste time) :


  News & Information Resources 
  Books 
  Movies & Television 
  Sports 
  Humor 



",non-course
"

 Jim Skrentny's Home Page 


 Jim Skrentny 

CS367 Lecturer
CS302 Coordinator
Graduate Student


Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI  53706

Office:    1303 Computer Sciences
Email:  skrentny@cs.wisc.edu
Telephone: (608) 262-0191
Fax:       (608) 262-9777


 Related Links 


     CS367

     University of Wisconsin CS Department

     University of Wisconsin AI Group


skrentny@cs.wisc.edu, Last Updated: February 3, 1995 



",non-course
"

Avinash Sodani's Home Page


 Avinash Sodani (sodani@cs.wisc.edu) 
 
 Graduate Student
 Department of Computer Sciences
University of Wisconsin-Madison 
    1210 West Dayton Street
    Madison, WI 53706 USA
  Education 

 M.S. Computer Science, University of Wisconsin-Madison, May 1996.
 B.Tech (Hons) Computer Science,  
     Indian Institute of Technology, Kharagpur, 
     India , July 1994.

  Academic Interests 

 Computer Architecture 

  Multiscalar (Kestrel) Project

 Programming Languages and Compilers 

  Some Interesting Course Projects 

  RPC Package for Java .  (Download the package).

  Meet 

 My batch-mates.  (CS '94)

  CS Related Links 

  CPU Info Center 
  CS departments on the Web 
  Ranks of CS departments 

  India Related Links 

 India News 
  The Hindu : Online Edition 

  Random Links 

 Looking for a KGPite ? Follow  this .
 AT&T Toll Free 800 Directory 
  Wills World Cup Cricket '96 



This page has been accessed  times since Feb 21, 1996



",non-course
"

 Guri Sohi's Home Page 




 Gurindar S. Sohi  (sohi@cs.wisc.edu) 



Associate Professor of 
Computer Sciences  and

Electrical and Computer Engineering

 Addresses
 Education
 Research Interests and Summary
 Current Graduate Students
 Recent Talks
  Recent Publications
  Recent Ph.D Graduates


Addresses:
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA
sohi@cs.wisc.edu
Phone: 608-262-7985
Departmental Office: 608-262-1204
Fax:  608-262-9777

Education:

 Ph.D. (Computer Science) University of Illinois - Urbana, 1985
 M.S. (Electical Engineering) University of Illinois - Urbana, 1983
 B.E. (Electrical and Electronics Engineering) Birla Institute of Technology and Science - Pilani, India, 1981

Research Interests:

 Instruction-level parallel (ILP) processing
 Compiling for ILP architectures
 Shared memory multiprocessors
 Memory Systems



 Research Summary 


My current research focuses on the design of the
highest performance uniprocessors of a current generation.
Currently we are investigating the architecture of
a circa 2000 processor.  With plenty of transistors available
on a chip, the challenge is to use these resources to get
the highest possible performance when executing a sequential program.
A target that we have set for ourselves is to sustain the execution of
over 10 instructions per cycle,
for ordinary non-numeric application programs.

My research group is investigating several issues that need
to be resolved before our goals can be achieved.
We are studying and characterizing the
nature of instruction-level parallelism in non-numeric
application programs in order to understand the available parallelism and
how it could be exploited.
The bulk of my group's research effort is expended in continuing the
development of the
 Multiscalar  processing model,
a novel paradigm for exploiting ILP.
Currently we are developing the Multiscalar compiler, and
carrying out detailed simulation studies to assess
the potential of the Multiscalar concept.



Current Graduate Students

 Todd Austin
 Scott Breach
 Andreas Moshovos
 T.N. Vijaykumar


Recent Talks



Will Instruction Sets be Important in Future Processors?

given at the RISC in 1995 Symposium held at IBM T. J. Watson Research
Center, Yorktown Heights, NY, November 7-8, 1995.
File is compressed postscript, generated by Framemaker.



Multiscalar Processors.

The generic Multiscalar talk, given at several places.
File is compressed postscript, generated by Framemaker.



Recent Publications



High-Bandwidth Address Translation for Multiple-Issue Processors,

T. M. Austin and G. S. Sohi, to appear in
23rd Annual International Symposium on Computer Architecture, May 1996.
An appendix of
detailed results
is also available.)



Zero-Cycle Loads: Microarchitecture Support for Reducing Load Latency

T. M. Austin and G. S. Sohi,
28th Annual International Symposium on Microarchitecture (MICRO-28), 1995.



The Microarchitecture of Superscalar Processors

J. E. Smith and G. S. Sohi,
in Proceedings of the IEEE, December 1995.



A Hardware Mechanism for Dynamic Reordering of Memory References


M. Franklin and G. S. Sohi,
to appear in IEEE Transactions on Computers.



Multiscalar Processors,


G. S. Sohi, S. Breach,  and T. N. Vijaykumar,
22th International Symposium on Computer Architecture, 1995.




Streamlining Data Cache Access with Fast Address Calculation,


T. M. Austin, D. N. Pnevmatikatos, and G. S. Sohi,
22th International Symposium on Computer Architecture, 1995.




The Anatomy of the Register File in a Multiscalar Processor,


S. Breach, T. N. Vijaykumar, and G. S. Sohi,
27th Annual International Symposium on Microarchitecture (MICRO-27), 1994.




Request Combining in Multiprocessors with Arbitrary Interconnection Networks, 


A. Lebeck and G. S. Sohi, 
in IEEE Transactions on Parallel and Distributed Systems, 1994.




Efficient Detection of All Pointer and Array Access Errors, 


T. M. Austin, S. E. Breach and G. S. Sohi,
SIGPLAN '94 Conference on Programming Language Design and Implementation, 1994.




Guarded Execution and Branch Prediction in Dynamic ILP Processors, 


D. Pnevmatikatos and G. S. Sohi, 21th International Symposium on Computer Architecture, 1994.



Memory Systems,

J. R. Goodman and G. S. Sohi, The Handbook of Electrical Engineering, CRC Press, 1993.




Control Flow Prediction for Dynamic ILP Processors, 


D. Pnevmatikatos, M. Franklin and G. S. Sohi,
26th Annual International Symposium on Microarchitecture (MICRO-26), 1993.




Register Traffic Analysis for Streamlining Inter-operation Communication
in Fine-Grain Parallel Processors,


M. Franklin and G. S. Sohi, 25th Annual International Symposium on Microarchitecture
(MICRO-25), 1992.




The Expandable Split Window Paradigm for Exploiting Fine-Grain Parallelism,


M. Franklin and G. S. Sohi, 19th International Symposium on Computer Architecture, 1992.




Dynamic Dependency Analysis of Ordinary Programs,


T.M. Austin and G. S. Sohi, 19th International Symposium on Computer Architecture, 1992.




Efficient Detection of All Pointer and Array Access Errors


T.M. Austin, S. E. Breach and G. S. Sohi,
Technical Report #1197, Computer Sciences Department, University of Wisconsin-Madison, December 1993.




Guarded Execution and Branch Prediction in Dynamic ILP Processors


D. N. Pnevmatikatos and G. S. Sohi,
Technical Report #1193, Computer Sciences Department, University of Wisconsin-Madison, November 1993.




Knapsack: A Zero-Cycle Memory Hierarchy Component


T. M. Austin, T. N. Vijaykumar, and G. S. Sohi,
Technical Report #1189, Computer Sciences Department, University of Wisconsin-Madison, November 1993.




Tetra: Evaluation of Serial Program Performance on Fine-Grain Parallel Processors


T. M. Austin and G. S. Sohi,
Technical Report #1162, Computer Sciences Department, University of Wisconsin-Madison, July 1993.




Recent Ph.D Grads


Todd Austin,

Ph.D.,  April 1996,


Hardware and Software Mechanisms for Reducing Load Latency



Dionisios Pnevmatikatos,

Ph.D.,  December 1995,


Incorporating Guarded Execution into Existing Instruction Sets



Manoj Franklin,

Ph.D.,  December 1993,


The Multiscalar Architecture



Mark Friedman,
Ph.D.,  January 1992,


An Architectural Characterization of Prolog Execution



Sriram Vajapeyam,
Ph.D.,  December 1991,


Instruction Level Characterization of the Cray Y-MP Processor



Men-Chow Chiang,
Ph.D.,  September 1991,


Memory System Design for Bus Based Multiprocessors




 Last Updated: 5 April 1996 



",non-course
"

 Solomon's Home Page 


 Marvin Solomon 


		  Professor and Former Chair (New chair is 
		  Jim Goodman)
		  
          Computer Sciences Department 
          University of Wisconsin -- Madison 
          1210 West Dayton Street 
          Madison, WI 53706-1685 
		  USA 
          Phone: (608) 262-1204 
          Fax: (608) 262-9777 
solomon@cs.wisc.edu 
Research Interests: 


Object-oriented database systems,
Software development support environments,
Distributed operating systems,
Computer networks,
Design and implementation of programming languages,
Programming language theory.

Recent Publications


Towards Effective and Efficient Free Space Management.

Proc. 1996 ACM SIGMOD Conf. on Management of Data, June, 1996.

Mark L. McAuliffe, 
Michael J. Carey, and
Marvin Solomon.



Abstract

PostScript


The GMAP: A Versatile Tool for Physical Data Independence.

Proc. Conf. on Very Large Databases, September, 1994.

Odysseas Tsatalos,
Marvin Solomon, and
Yannis Ioannidis.



Abstract

PostScript


Expanded version appears in
The VLDB Journal

v. 5, n. 2 (April 1996)




Abstract

PostScript


Shoring Up Persistent Applications.

Proc. 1994 ACM SIGMOD Conf. on Management of Data, June, 1994.

Michael J. Carey,
David J. DeWitt,
Michael J. Franklin,
Nancy E. Hall,
Mark L. McAuliffe, 
Jeffrey F. Naughton,
Daniel T. Schuh,
Marvin H. Solomon,
C. K. Tan, 
Odysseas G. Tsatalos,
Seth J. White, and
Michael J. Zwilling

Available as

Tech Report 1222.


 An Overview of the CAPITL Software Development Environment 

 Fourth International Workshop on Software Configuration Management 

Paul Adams and
Marvin H. Solomon,

Available as

Tech Report 1143.


An  updated version 
is to appear in
 Lecture Notes in Computer Science .


 POL: Persistent Objects with Logic 

Paul Adams and
Marvin H. Solomon,

Available as

Tech Report 1158.


Other points of interest

 A 
graphical interface to the 
 rooms 
program, built using
 Java .
  CS 736 home page from Spring 1995 
  Univ. of Wisconsin Computer Sciences Department 
  SHORE project home page 
  SHORE project photo
album
 
Today's Dilbert





",non-course
"

Sowmya's Home Page


   Welcome to my Home Page  
# 
 Sowmya Subramanian ( sowmya@cs.wisc.edu ) 
",non-course
"

 Bryan So's Home Page 







 Bryan So 

Graduate Student
Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI  53706

Office: CS 5364
E-mail: so@cs.wisc.edu
Telephone: (608) 262-5105
Fax: (608) 262-9777


  



MS Computer Sciences, University of Wisconsin-Madison 1989

BS Computer Science, Purdue University, 1988

Interests: 
intelligent help systems, human-computer interaction, knowledge 
representation of operating system activities


 Selected Recent Publications 

 So, B. & Travis, L., ""A Step Toward an Intelligent UNIX Help
       System: Knowledge Representation of UNIX Utilities"", Technical
       Report #1230, University of Wisconsin-Madison, April 1994.

   Miller, B.P., Fredriksen, L. & So, B., ""An Empirical Study of
       the Reliability of UNIX Utilities"", Communications of the
       ACM, 33:12, Dec. 1990.



 Related Links 

 
       University of Wisconsin CS Department
 
      University of Wisconsin AI Group
 
      Professor Larry Travis, Advisor


 Last Updated: Jan 20, 1996 



",non-course
"

 Larry E. Travis' Home Page 



  Larry E. Travis

Professor
Computer Sciences Department
University of Wisconsin
1210 W. Dayton St.
Madison, WI  53706-1685
E-mail: travis@cs.wisc.edu
Telephone: (608) 262-6587
Fax: (608) 262-9777

Ph.D., University of Californa, Los Angeles, 1966

Interests: Expert systems, non-procedural control of automatic deduction, 
computer support for understanding complex data, philosophical foundations of
artificial intelligence, computing management, social implications of computing.


 Research Summary  
My research centers around using logic as a basis for knowledge 
formalization in expert systems and for deductive augmentation of database
systems.  Recent work has focused on non-procedural control of automatic
deduction and on design of systems that support the contruction, display,
and testing of high-level abstractions from patterns formed by information
contained in large, heterogeneous databases.  Special attention is being
devoted to the representation and use of geographic information in ways
that enhance data integration and data visualizability (as with maps).  I 
am actively involved with several expert system development projects and
with a large ""intelligent"" database project that incorporates databases,
""what if"" modeling, and visualization aids into a single integrated system;
with organizational and social issues associated with the introduction and 
use of information technology; and with analysis of the pre-suppositions
underlying alternative approaches to artificial intelligence.

 Current PhD Students 

      
	Chuck Ohare
 
        Bryan So
 
	Scott Swanson
 
	Andy Whitsitt
 
	Derek Zahn

 Recent Publications 


 If we could do it again: ""Failures"" in expert system development
       and implementation (with J. Oravec) to appear in Journal of
       Systems and Software, 1992.

   The computational metaphor and artificial intelligence: A reflexive
       examination of AI's falsework (with D. West) Artificial 
       Intelligence Magazine, 1991.

   From society to landscape: Alternative metaphors for artificial
       intelligence (with D. West) Artificial Intelligence 
       Magazine, 1991.

 
 Some Interesting Links 

  
        U-Wisc CS Dept
  
        U-Wisc AI Group


 Last Changed: June 4, 1994 by so@cs.wisc.edu 



",non-course
"
Shilpa Lawande's Home Page



 Welcome to Shilpa Lawande's Home Page


I am a Graduate Student in the Department of Computer Science at University of Wisconsin-Madison. 

Personal Stuff
A link to my past
For more info on what I do at school
Here's my resume in HTML and ascii.

Computer Science, my second love ;-)
Useful CS resourses : all the stuff you wanted in one place! 
Systers : Women in Computer Science

 Stuff related to Madison
Surf Madison
State of Wisconsin, Information Server
The Hoofer Sailing Club

Owls, music, books, movies, java etc :-)
Shilpa's signatures 
Meet my first love
Snowy's HomePage 
Cool Links


Here is
where I can be fingered.






 Three judge panel in Philadelphia votes 3-0 that the CDA is not Constitutional.
 Follow the link to read the decision.




This page has been accessed  times since June 20 1996.



Send comments and suggestions by email to
ssl@cs.wisc.edu or shilpal@cs.wisc.edu 
or thru' the guest form


Last Modified : July 29,1996.


",non-course
"Jeremy Stenglein's Home Page 


Jeremy C. Stenglein 


 Graduate Student, Computer Sciences Department 
 University of Wisconsin, Madison 
 1210 West Dayton Street
 Madison, WI 53705
 Office : 1302 Computer Science

 Phone: (608)  262-6600

e-mail: stenglei@cs.wisc.edu
 I am teaching: Computer Science 302, section 3
 
General CS 302 Home Page
  My section's CS 302 Home Page
 I am taking:  CS701 - Construction of compilers <

 Other Links:

The Computer Science Department Home Page

The Simpson's Home Page
ESPN Sports Net
 Hotwired 
",non-course
"

 Steve Reinhardt's Home Page 



 Steven K. Reinhardt 



I'm a graduate student in computer
architecture, working in the Wisconsin Wind Tunnel
group.  My advisor is David Wood,
although the other PIs of the WWT project,
Mark Hill and
Jim Larus, often feel free to tell me
what to do as well.




I'm planning on finishing this fall.  I will be joining the faculty of
the University of Michigan EECS department in January 1997.




If you're interested, you can find out more on these pages:


Publications
Research Summary



 
email: stever@cs.wisc.edu (click here to finger)
phone: (608) 262-0664

Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706-1685  USA



Last Updated: June 6, 1996




",non-course
"

John Strikwerda's Home Page


 John Strikwerda, Professor, Computer Sciences
  John C. Strikwerda

Department of Computer Sciences
University of Wisconsin-Madison
1210 West Dayton Street

Madison, Wisconsin  53706-1685  USA
c.v.
email:  
strik@cs.wisc.edu 
telephone: (608) 262-0822
fax: (608) 262-9777

 This Fall I will be teaching  CS310,
 Problem Solving Using Computers.

 Beginning in January 1997 I will be on assignment with the 
National Science Foundation for two years.

 Click here for information about
 
Numerical Analysis Qualifying exams.


Research Interests:

 Numerical Analysis
 Computational Fluid Dynamics



My

Official  CS Department Home Page





Other Stuff:

 The Field Museum
 Point: It's What You're Searching For
   A rating of web home pages and other information. 
 Chicago Best of the Web

 The Chicago Tribune

 Car Talk  (the radio show about cars)


 Big 10 Football

My kids:
 Nathan at NU  
 Nathan  
 Drew 


",non-course
"

Subba's Home Page


 Things I enjoy 

 Calvin and Hobbes 
  Late Show with David Letterman
  Seinfeld
  NBA 

 Other interests 

  Prooocessors

 Historical interest 

 The 8717*s

 Papers 

 Evaluating Stream Buffers as a Secondary Cache Replacement
 Decoupling Integer Execution in Superscalar Processors


          subbarao@cambridge.cs.wisc.edu



",non-course
"

 Su-Hui CHiang's Home Page 


 Su-Hui Chiang

  CS Department,  University of Wisconsin - Madison
Office: 6384 CS&S
Telephone: (608) 262-6619
Fax:       (608) 262-9777
E-mail:  suhui@cs.wisc.edu
Click here to send me an email
Office hours: 4-5pm Thurs

 This page still under construction...... 

 I'm TAing  CS132 this fall

 Publications

  
	Use of Application Characteristics and Limited Preemption for 
	Run-To-Completion Parallel Processor Scheduling Policies, 
	with Rajesh Mansharamani and Mary Vernon.
	Proc. 1994 ACM SIGMETRICS Conf. on Measurement and Modeling of
	Computer Systems, Nashville, TN. May 1994, pp. 33-44.
  
	Dynamic vs. Static Quantum-Based Parallel Processor Allocation,
	with Mary Vernon.
	The 2nd Workshop on Job Scheduling Strategies for Parallel 
	Processing (in conjunction with IPPS'96), April 1996.


 Search Engines

  Yahoo!
  Sources of TR on the net
  Resources: Bibliographies
  The World-Wide Web Virtual Library: Subject Catalogue


 Links Related to Taiwan

  Taiwan Network Service
  SinaNet (shopping, magzines, news, jobs, calendar, etc)
  SeedNet
  Vistors' Guide to Taiwan
  Academia Sinica


 Last Updated: Aug. 30, 1996 



",non-course
"

David Sundaram-Stukel's Homepage


 David Sundaram-Stukel's Web Page
 
 (This is not me.) 
...where-upon he had the effrontery to push my hand severing the 
        patient's femoral artery. Blood spurted up and blinded the 
        anesthetist, who ran out through the halls screaming. Browbeck
        tried to knee me in the groin, and I managed to hamstring him with 
        my scalpel. He crawled about the floor stabbing at my feet and
        legs. Voilet, that's my baboon assistant --only woman I 
        ever cared a damn about-- really wigged. I climbed up on the table
        and poise myself to jump on Browbeck with both feet and stomp him 
        when the cops rushed in.
William Burroughs from Naked Lunch
 I constructed this page to catapult readers off to other pages of my 
    choosing.



 Page Index


  A brief bio of myself. 
  Classes  I am taking.
         
  CS 577. 
  CS 640. 

 The class I TA.
         
  CS 520. 

 Links relating to Computer Science..
         
 This is a site dedicated to 
              
                   smart clothing. Also, 
                   Steve Mann's  page has links to view what he is 
                   currently seeing through his wearable camera.
             This site has links and information on 
                  Artificial Life 
                  at the Santa Fe Institute. More specifically you can link to
                  an AL project called 
                  
                  Tierra , by Thomas Ray.
             Recent 
                 
                 Dilbert Strips.
             While technically not Computer Science, these
          
                  math jokes  had to be put somewhere.
         
 Links of a more philosophic/scientific/artistic nature..
         
  
                 Physics/Consciousness
                 . Say no more.
              Survival Research Laboratories
                  has a site with info about the various destructive shows
                 put on by this organization.
             
                 Arcosanti  is an arcological site just outside of Phoenix.
             The  
                 Krishnamurti Foundation site tells a bit about this 
                 20th century philosopher.
             This is a link to a various 
                  
                 Beat Writers  including the one pictured above.
             This is a site filled with info about 
                  Tom Waits .
         
 Links to various news sources..
         
  Packer  news.
             
                 New Scientist online. You have to register so they can
                 harass you through the mail, but you will be rewarded with
                 dozens of interesting factoids with which you may astound your
                 friends. 
              Scientific 
                 American online takes advantage of hypertext in addition
                 to providing a selection of current articles from the print
                 edition.
              Science News,
                 published weekly, contains smaller but more current articles.
              The Hindu
                  is a national newspaper of India.
              The Onion  

 Links of local interests..
         
  UW-Madison's 
                   Astronomy Department Page  and more specifically, the
                    Washburn Observatory.  where the 
                   public can view the universe from the lens of a 
                   non-insignificant piece of the history of Astronomy 
                   and Madison.
              Madison Weather info can be obtained at the following sites:
                  
  WebWeather. 
 
                            National Weather Service-Madison. 
 
                            Channel 15 News Weather. 
 
                            Channel 3 News Weather. 


 Other links of interest.
         
 This is the home page of the late
                 
                 Timothy Leary.
             This has links to numerous articles written by the noted
                 optimist
                 
                 Noam Chomsky.
              Disinformation  
                  has a great listing of conspiracy theories buried within 
                  their ultra-trendy web art.
              Bad Movie
                 reviews.
         

 Back to UW-Madison CS Page. 
 
 


",non-course
"

Brian Swander's Home Page


Brian Swander

 If you think this is me . . . 
Office:1345
	        Tel: 262-1012
		Office Hours: 9:15-10:15 M, 1-2 R  
 My Bookmarks
 Marks



",non-course
"Ariel Tamches
Ari Tamches, Research Assistant
email: tamches@cs.wisc.edu

  Ariel Tamches
  Computer Sciences Department
  1210 West Dayton Street
  Madison, WI 53706

typical pose (""huh?"")
angry pose
I'm organizing the Fall 1996 Operating Systems & Networking Seminar here at UW-Madison.
Education:

M.S. Computer Sciences, UW-Madison; May, 1995. 
B.S. Computer Science, UM College Park; May, 1993. 

Office: 6366 CS&S

Research:
Paradyn Parallel Performance Tools
Status:
Searching for thesis topic (what else?)
Interests:
Parallel performance tools
Parallel and distributed operating systems
Blues
The Simpsons
Seinfeld
Skiing
Skinet
Keystone (my favorite ski area)
Snowboarder Jokes:
What is the difference between a snowboarder and a vacum cleaner? The way the dirt bag's attached!
How do snowboarders greet people? Whoa, sorry dude!
The difference between municipal bonds and snowboarders?  Municipal bonds eventually mature and generate income.
Hates:
Country music 
Fortran 
Cool Links:
yahoo
espn
cpu info
skinet
Other Stuff:
Talk: Exokernel: An Operating System Architecture for 
Application-Level Resource Management [October 9, 1995]

CS 757 paper: Techniques and Tools for Distributed Shared Memory Performance Improvement[Spring, 1995] (with M. Callaghan)

Talk: Supercomputer Interconnection Networks[April 19, 1995] 

Talk: The Zebra Striped Network File System
(or, Why You Need a Log-Structured File System if You Use RAID)[Oct 11, 1994] 

CS 736 paper: The Performance of Non-Blocking and Wait-free Highly Concurrent Objects in Asynchronous Shared-Memory Multiprocessors(dvi version, postscript version) [Spring, 1994]

CS 752 paper: Analysis of RISC Instruction Set Enhancement [Fall, 1993]
",non-course
"

Jeff Lampert's Home Page




Jeff Lampert's Home Page




(in Ricardo Montalban voice): Welcome to my home page. Yes, I know that's not
a picture of me (at least, not on a good day), but I'm still looking for
one that's not too incriminating and one that doesn't make me look like a
convict. I do have my baby picture from my high school yearbook, but the last
time I showed that to someone I never heard the end of ""What a cute baby!""
Can't have someone thinking that, now can we? :)

Well, I found a couple of pictures, but the Tick threatened to turn me into
a human Pez dispenser if I took his picture off, hence the pictures can be
found on a separate page by clicking here. For an
autographed copy, sign my name on the monitor on top of where the picture
appears ;););) 



Choose your link, Web-weasel!





I seek...PEZ!
(take 10 paces, turn, and click)




Some Basic Facts

Who am i? Where am I? And who was that person I saw you with last night?

Academic and Work Related

What classes am I taking? What work am I doing in the Dept?
What's in my resume?

Entertainment

Books, Movies, Music, TV Programs, Newsgroups, and other important subjects

Friends

No, not the TV show (not a bad show, but I'm sick of the theme song)

Hobbies, Clubs, and Organizations

Groups I was or am in, plus those I wish I were in

My Favorite Links

Ugh. Sounds like a song from The Sound of Music.
Tom Servo: Look, It's Julie Andrews! And she's on fire!
Crow: Good
(from MST3K)

Eclectic Paraphenalia

I would say Miscellaneous, but that'd be too straight-forward


 tick@cs.wisc.edu 


",non-course
"



Todd's Homepage



Todd's Homepage


In the fall of 1996, I will be teaching two sections of 

CS302.
Since my area is mathematical programming, I will plug the 
UW Mathematical
Programming pages which contain a wealth of information about mathematical
programming.



tmunson@cs.wisc.edu


",non-course
"

Brian's Home Page


Brian R. Toonen
    Computer Sciences Department
University of Wisconsin
1210 W. Dayton Street
Madison, WI 53706




Office: 
CS&ST 6613


Email: 
toonen@cs.wisc.edu


Office Phone: 
(608) 262-6613


Home Phone: 
(608) 276-7871







Advisor: 

      David Wood




 Table of Contents 

 Interests
 Schedule for Summer 96
 Publications
 Something to think about


 Interests 

 Professional: Computer architecture, operating systems,
compilers, high speed networks, distributed and parallel systems,
security and accountability, and high performance I/O

 Personal: Bicycling, walking, hiking, camping, traveling,
billiards, darts, home brewing, cooking, computing, electronics, and
reading



 Schedule 

Monday:

 15:30-16:30  WWT meeting


Wednesday:

 13:30-14:30  Meeting with David
 15:30-16:30  BLZ/COW meeting


When, Where and Why

 08/09 - 08/10  Milwaukee - Brian and Heidi's wedding
 08/22 - 08/23  Madison - Computer Architecture Affiliates Meeting
 08/25          Chicago - Michalakes' Grill Based Viener Roast


 Publications 
 Journal Articles 

 I. T. Foster, B. Toonen, and P. H. Worley, 
Performance of Massively Parallel Computers for Spectral
Atmospheric Models, Jornal of Atmospheric and Oceanic
Technology, 13(5):1031-45, 1996.  (228517 bytes)

 J. B. Drake, I. T. Foster, J. G. Michalakes, B. Toonen, and
P. H. Worley, 
Design and Performance of a Scalable Parallel Community Climate
Model,  Parallel Computing, December, 1995.  (255024 bytes)


 Proceedings Papers 

 P. H. Worley, I. T. Foster, and B. Toonen,  Algorithm
comparison and benchmarking using a parallel spectral transform
shallow water model, in Proccedings of the Sixth Workshop on
Parallel Processing in Meteorology, eds. G.-R. Hoffmann and N. Kreitz,
World Scientific, Singapore, 1995, pp. 277-289. (124793 bytes)

 J. B. Drake, I. T. Foster, J. J. Hack,
     J. G. Michalakes, B. D. Semeraro, B. Toonen,
     D. L. Williamson, and P. H. Worley, 

PCCM2: A GCM adapted for scalable parallel computers,
in Proceedings of the Fifth Global Change Symposium,
American Meteorological Society, 1994, pp. 91-98.
(258657 bytes)

 I. T. Foster and B. Toonen,  Load
balancing algorithms for climate models, in Proceedings of the
Scalable High Performance Computing Conference, eds. J. J. Dongarra
and D. W. Walker, IEEE Computer Society Press, 1994,
pp. 674-681. (607260 bytes)


 Technical Reports 

 P. H. Worley and B. Toonen,   A
users' guide to PSTSWM,  ORNL Technical Report ORNL/TM-12779,
July 1995.  (232512 bytes)

 I. T. Foster and B. R. Toonen,  
Load-Balancing Algorithms for the Parallel Community Climate
Model, ANL Technical Report ANL/MCS-TM-190, January 1995.
(180420 bytes)


 Poster Presentations 

 K. Dritz, I. Foster, M. Minkoff, P. Sutton, B. Toonen, Z. Wu,
R. Shepard, J. Tilson, A. Wagner, R. Harrison, R. Kendall, and
J. Nieplocha,  Semidirect Hartree-Fock Calculations Using the
CHEMIO Library,  1995 Gordon Research Conference High-Performance
Computing and National Information Infrastructure, Plymouth, NH, July
16-21, 1995.

 K. Dritz, I. Foster, M. Minkoff, R. Shepard, P. Sutton,
J. L. Tilson, B. Toonen, A. Wagner, and Z. Wu,  Nondirect SCF
Calculations Using the CHEMIO Library, High Performance
Computational Chemistry Workshop, Pleasanton Hilton, Pleasanton,
California, August 13-16, 1995.



Something to think about...

The Earth does not belong to man, man belongs to the Earth.
All things are connected, like the blood that unites us all.
Man did not weave the web of life, he is but a strand in it;
whatever he does to the web, he does to himself.

                                   -Chief Seattle


The man who sat on the ground in his tipi meditating on life and its
meaning, accepting the kinship of all creatures and acknowledging
unity with the universe of things, was infusing into his being the
true essence of civilization.

                                   -Luther Standing Bear,
                                    Oglala Sioux


Last Modified: Mon Aug  5 18:40:23 CDT 1996


",non-course
"

Thanos Tsiolis' Home Page










This site is Netscape 2 enhanced.  If you can read this you should
consider upgrading your browser to the latest version of Netscape.  If
that is not an option for you try this page. 
Old Home Page



",non-course
"

Todd Turnidge




Todd Douglas Turnidge

School

Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton St.
Madison, WI  53706
(608) 262-6612

Home


1124 Milton St.
Madison, WI  53715
(608) 250-0699



I am a graduate student in the 
Department of Computer Sciences
at the University of Wisconsin,
Madison.  I have been here for two years.  I am working with professor
Thomas Reps studying
programming languages.
I teach a section of cs302.
I hold a BS in Mathematics
and an MS in Computer
Science from Case Western Reserve
University, which is located in  Cleveland,
Ohio.
I am originally from Kent, Ohio.  My
family lives there.

They say you can judge a man by the company he keeps.  Click here for enough evidence to put me away for a long time.
Some amusements for you.
Some shortcuts for me.

Last modified: Fri Oct 11 13:05:48 1996 by Todd Turnidge

turnidge@cs.wisc.edu



",non-course
" 

Taxiao Wang's Home Page



Welcome to Taxiao Wang's Home Page



 This page is under heavy construction.  

 
Click  here  to finger me.

Contact Information:

  Taxiao Wang  
  Graduate Student/Teaching Assistant 
Computer Science Department 
University of Wisconsin-Madison   
  Office CS 3310 CS&S Bldg., 1210 W. Dayton Street 
Madison, WI 53706-1685 

 Office Phone: (608)262-1721
 Home Phone: (608)250-9867
 E-mail: twang@cs.wisc.edu





Last Updated on June 26, 1996.

",non-course
"

Uri Shaft's Home Page


Uri Shaft's Home Page
email : uri@cs.wisc.edu


Interesting Diversions

Start Trek TNG meets Microsoft.
Start Trek meets Windows 95.




",non-course
"


Venkatesh Ganti's Home Page





Venkatesh Ganti ( vganti@cs.wisc.edu)

Graduate Student
Office #1334,
 
Computer Sciences Department,
1210, W. Dayton St.
MADISON, WI 53706, USA

Phone : (608)-262-6606.



Note: This page is under construction




 Past and Present
 
 I am a graduate student in CS at the University of Wisconsin,Madison
 from Fall 95. Earlier I had been an undergraduate student at 

 IIT Madras,India.
 Native of Kakinada, Andhra Pradesh.


Info

 ASHA(ASHA for basic education) 
 ASHA-Madison
 
	India (click here to know more about India)

	Godav 95 homepage (my hostel at IIT Madras)
 Godav 95 yearbook (hope to get this online sometime)

 Research 
I am interested in Databases.Most of my work till now(my BTech project) has 
been in Real-time databases. Want to have a look at it ? 
Real-time genesis .  
UW-Madison DB Group homepage 
That is all for now. 


Last Updated : January 1st, 1996



",non-course
"

 Vijay's Home Page 




 T.N. Vijaykumar (vijay@cs.wisc.edu) 

 



Professional:
 Affiliation:  Computer Sciences Department,  University of Wisconsin-Madison
 Contact:
Address: Computer Sciences Department, 1210 W. Dayton Street, Madison, WI 53706  
Phone: 608-262-6587, Fax:  608-262-9777, Email: vijay@cs.wisc.edu
 Advisor: Guri Sohi 
 Project: The Multiscalar Project 
Education: 
Doctorate:  University of Wisconsin-Madison , August 1997 

Undergraduate: 
Birla Institute of Technology and Science, Pilani, India, 1990 
Research:
Compiling for the Multiscalar Architecture (Ph.D. Dissertation)
 Distributed Register File Design 


The Anatomy of the Register File in a Multiscalar Processor,


S. Breach, T. N. Vijaykumar, and G. S. Sohi,
27th Annual International Symposium on Microarchitecture (MICRO-27), 1994.

 Compiling Register Communication 


Register Communication Strategies for the Multiscalar Architecture


S. Breach, T. N. Vijaykumar, and G. S. Sohi,
Submitted to 29th Annual International Symposium on Microarchitecture (MICRO-29), 1996.

 Multiscalar Processors 


Multiscalar Processors,


G. S. Sohi, S. Breach,  and T. N. Vijaykumar,
22th International Symposium on Computer Architecture, 1995.

 Scheduling Register Communication 


Compiling Register Communication for the Multiscalar Architecture


T. N. Vijaykumar, and G. S. Sohi,
On going work.
 Memory Data Dependence Prediction 


Personal:
 My other side ! 


 


",non-course
"

John Watrous' Home Page





John Watrous
(watrous@cs.wisc.edu )


Computer Sciences Department
University of Wisconsin - Madison
1210 W. Dayton Street
Madison, WI 53706 
Telephone: (608) 262-6628




 Publications 

 John Watrous,

On One-Dimensional Quantum Cellular Automata,
Proc. 36th Ann. Symp. Foundations of Computer Science
(1995), 528-537. 
 John Watrous,
A Polynomial-Time Algorithm for the Artin-Whaples Approximation Theorem, 
Number Theory: Fourth Conference of the Canadian
Number Theory Association (1995), 397-407.


 Assorted Links 
 Quantum Computation Links 


Quantum Computation Archive (Stanford)

Quantum Information Home Page (Oxford)

Particle Beam Physics Laboratory Quantum Information Page (UCLA)

Laboratory for Theoretical & Quantum Computing (Montreal)

LANL Preprints

 Bibliographies 


Computer Science Bibliographies 

Hypertext Bibliography Project 

Hypatia 

 General Reference 


Elements of Style

Hypertext Webster Interface

Roget's Thesaurus

 Random Links 


Parasol Records

PlayStation Links

Weather Forecast for Madison

The Isthmus Daily Page

Mathematical Quotation Server

Mathematician Biographies

Geek Site of the Day



",non-course
"
  Weiru's  Home Page 

   W  eiru's home page  




Send me an 
email, pppplease!




Find  out if I am around

   

"" Sometimes I think all the English speakers should be committed to 
an asylum for the verbally insane.  In what language do people recite at
a play and play at a recital?  Ship by truck and send cargo by ship?  Have
noses that run and feet that smell?""
 -- Richard Lederer 

 "" There are three possible parts to a date, of which at least two must be
offered: entertainment, food, and affection.  It is customary to begin
a series of dates with a great deal of entertainment, a moderate amount
of food, and the merest suggestion of affection.  As the amount of
affection increases, the entertainment can be reduced proportionately.
When the affection IS the entertainment, we no longer call it dating.
Under no circumstances can the food be omitted.""

 -- Miss Manners' Guide to Excruciatingly Correct Behaviour

  
 The universities I've been to 

   Peking University  
 my friends from  Physics Department 88  and  Alumni Association at
Madison 
    This is the university I am at now. 

  
 World of little grey cells  

  cs739 
  cs737 
  picture from
	 the universe 
  The Game of Go 


  
  Entertainment and Art 

 Late Show With
 David Letterman 
 and other
 CBS  shows
 
  Universal Studios 
 Wish to send a 
postcard  to someone?

  Movie World  and
 Movie Reviews 

 My favorite hockey player
 Steve 


  
 Francais 

 Dictionnaire
Francais-Anglais  
 Dictionnaire 
 Softwares Relatifs a la
Francophonie 
 Test de
grammaire Francaise 
 Web French lessons
 

  
  Weather forecast 
  for 
 Madison  
  
 Last Updated On:   Tue Feb 20 10:44:28 CST 1996 



",non-course
"

Welcome to Wei Zhang's Home Page





 I'm a first year graduate student of CS Department. My hometown is Shanghai, People's Republic of China.


Education:

1996-????(?)  MS/Ph.D. student in Department of Computer Science, University of Wisconsin,Madison.
1990-1994     BS (NOT the other BS) of Computer Science, San Jose State University, San Jose, California
1988-1989     Department of Computer Science and Technology, Tsinghua University, Beijing, People's Republic of China


Email: weiz@cs.wisc.edu

Working Experience

Contractor				01/1996 - 08/1996 
Developing various information management system on different platforms. 
The platforms included WindowsNT, Solaris and HP-UX. 
Technologies used included OLE, Tuxedo and Pathway RSC.  
Software Designer,	Tandem Computers Corporation		06/95 - 12/95 
Software Engineer,	Sherpa Corporation			07/93 - 05/95 
System Operator,	NASA AMES Research Center		01/93 - 12/93 

Hobbies

Ma Jiang
Bridge, the card game 
Table Tennis (Not Pingpong)
Jogging

The Ultimate Challenge

Solve the Mine-Sweeper expert level puzzle within 60 seconds, WITHOUT cheating.

Quote of the Day

The best memory management is no memory management.

Ackowledgement

This home page is written using the framework provided by Qi Jin.



",non-course
"

Kent Wenger's Home Page


 Welcome to Kent Wenger's home page!
Note: this page is definitely still under construction, so be prepared
for some potholes!


(I need to get a picture of myself scanned in to put here...)

R. Kent Wenger

Associate Researcher

Computer Sciences Department
University of Wisconsin
1210 West Dayton Street
Madison, WI 53706-1685

telephone: 608/262-6623
fax: 608/262-9777
email: wenger@cs.wisc.edu
Finger me.


Work
The main projects I'm working on are
COD (Clusters of Data providers) and
DEVise (Data Exploration and
Visualization).  Coming up with a good acronym is one of the most important
parts of a project, wouldn't you agree?

Here's a visualization
produced by the DEVise software.

The people I work for:

Yannis Ioannidis

    Miron Livny
Raghu Ramakrishnan

More information about the University of Wisconsin:

UW-Madison DBMS Research Group
UW-Madison Computer Sciences home page
WiscINFO (UW-Madison home page)


Personal
Links
Images


Last updated Nov. 15, 1996.


",non-course
"

  Wisconsin Wind Tunnel Project Home Page 






Wisconsin Wind Tunnel Project




Most future massively-parallel computers will be built from
workstation-like nodes and programmed in high-level parallel
languages--like HPF--that support a shared address space in which
processes uniformly reference data.

The Wisconsin Wind Tunnel (WWT) Project seeks to develop a consensus about
the middle-level interface--below languages and compilers and above
system software and hardware.  Our first proposed interface was

Cooperative Shared Memory, which is an evolutionary extension to
conventional shared-memory software and hardware.  Recently, we have
been working on a more revolutionary interface called 
Tempest.
Tempest provides the mechanisms that allow programmers, compilers, and
program libraries to implement and use message passing, transparent
shared memory, and hybrid combinations of the two.  We are developing
implementations of Tempest on a Thinking Machines CM-5, a cluster of
workstations (Wisconsin
COW), and a hypothetical hardware platform.  One approach on COW
uses bus snooping logic, implemented with 
FPGAs and SRAM.
We are collaborating
with the 
Wisconsin Paradyn Project to adapt their performance tools to Tempest.

 Overview
and  Annotated Bibliography

 Slides from an Overview Talk (November 1995)
with one slide per page
or four slides per page

 Complete Technical Papers

 Contributors

 Funding Sources

 Origin of Project Name

 Wisconsin Week Article on WWT & Paradyn

 Related Projects

 
Wisconsin CS's Computer Architecture Group

 Computer Sciences Department
at the University of Wisconsin

 
World-Wide Computer Architecture Information





 Last Updated: 6 July 1995 by Mark D. Hill (markhill@cs.wisc.edu) 



",non-course
"

Xuelin Lu's Home Page


 
 Felix the cat!
 I'm a  character who was created in 1919 by Otto 
Messmer.  I was the very first based on an animal but with a human 
personality.  My first feature was Felix Saves the Day, which
was shown in 1922.  

 I was one of the most famous stars of the 1920, rivaling Chaplin 
and Keaton.  The Prince of Wales picked me has his Polo team 
mascot, a picture of me accompanied Charles Lindbergh across the
Atlantic, and a statue of me was the first image successfully transmitted 
during the development of Television.

 In the '60s I was the star of my own television series, in which I 
somehow obtained a Magic Bag of Tricks (didn't we all...).  No one
ever seems to agree whether or not I have teeth or whiskers.

 I like to spend my time:

 Making films and television programs
 Appearing in newspaper comic strips
 Advertising hundreds of products
 Making things out of my Bag of Tricks
 Removing my tail and ears, and then putting them back

 I wish you could finger me, but the Lab won't give me an account 
(hairballs and keyboards don't mix).  You can finger 
keeper instead.

 Je suis un véritable chat passe-partout!



",non-course
"
Yannis Ioannidis

Yannis E. Ioannidis 
yannis@cs.wisc.edu


Research Interests
Database management systems, scientific databases, user interfaces and
information visualization, complex query optimization,
heterogeneous databases.

My research primarily focuses on two areas of database systems:
optimization of complex queries and database support for scientific
data.


Future database applications pose several new challenges to
query optimization.
The complexity of queries asked will be significantly higher than
in traditional systems.
The number of alternative evaluation algorithms will be much higher
as well, especially with the use of parallelism or with attempts to
optimize for several values of run-time parameters (parametric query
optimization).
Thus, the number of alternative access plan for processing a query
will be extremely large, so that the currently used algorithms
for finding the optimum among them will be inadequate.
My research investigates the use of randomized optimization algorithms
as a viable solution to this problem.
I am primarily interested in simulated annealing and genetic algorithms,
as well as other alternatives that take advantage of special properties
of query optimization.
I am also looking into complex query scheduling problems, especially
those that arise in parallel and multimedia environments.
Error propagation of size and cost estimates in complex queries are also
part of my studies, where I am trying to identify the appropriate
information that must be maintained by a database system to limit the
propagation of error.
To that end, I'm primarily focusing on identifying the properties of
optimal histograms that approximate the distribution of values in
relation attributes.


The computational mode of investigation is expected to be part of many
experiments in various scientific disciplines in the future.
The databases to be generated need specialized support on many aspects
that current technology is not ready to provide.
I am involved in the development of the {\it ZOO Desktop Experiment Management
Environment} that will help scientists throughout the life cycle of their
experimental studies.
A primary component of that system will be a database system.
Two major issues that my work addresses are visual user interfaces and
semantic heterogeneity.
In the former, I'm concentrating on identifying what the right metaphors are
for representing complex database schemas, queries, and objects to scientists
so that they are natural to them, and also on investigating the power of
{\it dynamic visual queries}
In the latter, I'm concentrating on developing visual tools that will facilitate
translation and integration of different data formats or schemas.
Although these issues are generic and arise in all experimental
scientific disciplines, my efforts are guided by the needs of specific
projects with which I am associated, in particular, simulation-based
performance studies of computer systems, simulation-based modeling of plant
growth, NMR spectroscopy, DNA sequencing, and microscopic imaging.


Recent Publications


Y. Ioannidis, ""Query Optimization"", ACM Computing Surveys, symposium issue
on the 50th Anniversary of ACM, Vol. 28, No. 1, March 1996, pp. 121-123.

M. Garofalakis and Y. Ioannidis, ""Scheduling Issues in Multimedia Query
Optimization"", ACM Computing Surveys, symposium issue on Multimedia
Systems, Vol. 27, No. 4, December 1995, pp. 590-592.

Y. Ioannidis and R. Ramakrishnan, ""Containment of Conjunctive Queries: Beyond
Relations As Sets"", ACM Transactions on Database Systems (TODS), Vol. 20,
No. 3, September 1995, pp. 288-324.
E. Haber, Y. Ioannidis, and M. Livny, ""Foundations of Visual Metaphors for
Schema Display"", Journal of Intelligent Information Systems, Vol. 3,
No. 3/4, July 1994, pp. 263-298. (Special issue on Visual Information Systems.)
Y. Ioannidis and M. Tsangaris, ""The Design, Implementation, and Performance
Evaluation of BERMUDA"", IEEE Transactions on Knowledge and Data Engineering
(TKDE), Vol. 6, No. 1, February 1994, pp. 38-56.
R. Miller, Y. Ioannidis, and R. Ramakrishnan, ""Translation and Integration of
Heterogeneous Schemas: Bridging the Gap between Theory and Practice"",
Information Systems, Vol. 19, No. 1, January 1994, pp. 3-31.
Y. Ioannidis and S. Christodoulakis, ""Optimal Histograms for Limiting
Worst-Case Error Propagation in the Size of Join Results"",
ACM Transactions on Database Systems (TODS), Vol. 18, No. 4,
December 1993, pp. 709-748.
Y. Ioannidis, R. Ramakrishnan, and L. Winger, ""Transitive Closure Algorithms
Based on Graph Traversal"", ACM Transactions on
Database Systems (TODS), Vol. 18, No. 3, September 1993, pp. 512-576.

Y. Ioannidis, ""Dynamic Information Visualization"",
ACM Sigmod Record, Vol. 24, No. 4, December 1996.

Y. Ioannidis and V. Poosala, ""Histogram-Based Solutions to Diverse Database
Estimation Problems"", IEEE Data Engineering, Vol. 18, No. 3, September
1995, pp. 10-18.

Y. Ioannidis, M. Livny, S. Gupta, and N. Ponnekanti, ""ZOO:  A Desktop Experiment
Management Environment"", Proc. 22nd International VLDB Conference, Bombay,
India, September 1996, pp. 274-285.

V. Poosala and Y. Ioannidis, ""Estimation of Query-Result Distribution and its
Application in Parallel-Join Load Balancing"", Proc. 22nd International VLDB
Conference, Bombay, India, September 1996, pp. 448-459.

V. Anjur, Y. Ioannidis, and M. Livny, ""Frog and Turtle:  Visual Bridges
Between Files and Object-Oriented Data"", Proc. 8th International Conference
on Scientific and Statistical Database Management, Stockholm, Sweden, June
1996, pp. 76-85.

M. Garofalakis and Y. Ioannidis, ""Multi-Dimensional Resource Scheduling for
Parallel Queries"", Proc. 1996 International ACM SIGMOD Conference,
Montreal, Canada, May 1996, pp. 365-376.

V. Poosala, Y. Ioannidis, P. Haas, and E. Shekita, ""Improved Histograms for
Selectivity Estimation of Range Predicates"", Proc. 1996 International
ACM SIGMOD Conference, Montreal, Canada, May 1996, pp. 294-305.

Y. Ioannidis, M. Livny, J. Bao, and E. Haber, ""User-Oriented Visual Layout
at Multiple Granularities"", Proc. 3nd International Workshop on Advanced
Visual Interfaces, Gubbio, Italy, May 1996, pp. 184-193.

E. Haber, Y. Ioannidis, and M. Livny, ""OPOSSUM: Desk-Top Schema Management
through Customizable Visualization"", Proc. 21st International VLDB
Conference, Zurich, Switzerland, September 1995, pp. 527-538.

Y. Ioannidis and V. Poosala, ""Balancing Histogram Optimality and Practicality
for Query Result Size Estimation"", Proc. 1995 International ACM SIGMOD
Conference\fP, San Jose, CA, May 1995, pp. 233-244.
O. Tsatalos, M. Solomon, and Y. Ioannidis, ""The GMAP: A Versatile Tool for
Physical Data Independence"", Proc. 20th International VLDB
Conference, Santiago, Chile, September 1994.
O. Tsatalos and Y. Ioannidis, ""A Unified Framework for Indexing in Database
Systems"", Proc. 4th International DEXA Conference, Athens, Greece, September
1994.
Y. Ioannidis and M. Lashkari, ""Incomplete Path Expressions and their
Disambiguation"", Proc. 1994 International ACM SIGMOD Conference,
Minneapolis, MN, May 1994, pp. 138-149.
E. Haber, Y. Ioannidis, and M. Livny, ""OPOSSUM: A Flexible Schema
Visualization and Editing Tool"", Proc. 1994 ACM CHI Conference, Boston, MA, April
1994.
R. Miller, Y. Ioannidis, and R. Ramakrishnan, ""Translation and Integration of
Heterogeneous Schemas: Bridging the Gap between Theory and Practice"",
Proc. 4th International EDBT Conference, Cambridge, England, March 1994,
pp. 73-80.
Y. Ioannidis, ""Universality of Serial Histograms"", Proc. 19th International
VLDB Conference, Dublin, Ireland, August 1993, pp. 256-267.
R. Miller, Y. Ioannidis, and R. Ramakrishnan, ""The Use of Information Capacity
in Schema Integration and Translation"", Proc. 19th International VLDB
Conference, Dublin, Ireland, August 1993, pp. 120-133.
J. Wiener and Y. Ioannidis, ""A Moose and a Fox Can Aid Scientists with
Data Management Problems"", Proc. 4th International Workshop on
Database Programming Languages, New York, NY, August 1993.

",non-course
"

Wei Yinng's Home Page






INDEX
OF
Yinong
Wei'S
PAGE






Hi, welcome to my homepage. Please have a good look at my personal info, especially if you are an employer, give me the job at once:-). There also
links to my classmate and courses I am taking. Have a good time!



Telephone:
Work: (608)262-
Home: (608)231-0246
Address:
Office: 1346 Comp Sci & Stat Bldg, Madison, WI 53706
Home: 2302 Univ. Ave. Apt.217, 53705


Personal Info


Resume



Hobbies


Travel in USAThis is a collection of pictures I took when I travel in USA
 Here are articles I wrote about my trip to Chicago and Seattle.


Course pointers


Real time computing

Macine learning

Pattern recognition

Computatinal geometry

Database



Vision


Academic Diary
This is a diary of what I did every month. Sometime, I amaze by how many(or 
how little) I read.:-)


September

October

November

December

January

February

March

April


Related links


My Beida 88 classmates



Peking University Alumni Home Page (Overseas)



Chinese Organization in Madison-CIU


My bookmark

Comments?
Press here
(Some clients do not support this) to send comments.



You are visitor number
  .

  
   (Last 20 access)


Last modified by Yinong Wei.


",non-course
"

Kevin (Zhongbin) Yin's HomePage










",non-course
"

Matt's Home Page


Until I get around to updating this, here's my basic information.


Office:
Matthew Zeidenberg
Center on Wisconsin Strategy
1180 Observatory Drive, Room 8120
Madison WI 53706
(608) 265-6155 (voice)
(608) 262-9046 (fax)

Home:
1217 Gilson St. #4
Madison WI 53715-2513
(608) 257-3933

Email:
zeiden@cs.wisc.edu
zeidenbe@ssc.wisc.edu

when in California (at my parents' house): 

7402 Coho Dr. #101 
Huntington Beach CA 92648
(714) 960-6115

Beauty will be convulsive or not at all. (A. Breton, Nadja)
La beaute sera convulsive ou ne sera pas.

""When I give food to the poor, they call me a saint. When I ask why
the poor have no food, they call me a communist.""-- Dom Helder Camara
",non-course
"

 Tian Zhang's Home Page 


  
Tian Zhang 

 General Information 


Ph.D. Student and Research Assistant
Advisor: Prof.  Raghu Ramakrishnan and Prof.  Miron Livny (joint)
Major Concentrations: Database, Artificial Intelligence, Compiler
Minor: Financial Investment and Banking

Office: Room 7358
 Computer Sciences Dept.
 Univ. of Wisconsin - Madison
 Madison ,  Wisconsin  53706-1685


E-mail:  zhang@cs.wisc.edu
Office Telephone:        (608) 262-6623
Home Telephone+Fax+Ans : (608) 238-7168
Department Fax:          (608) 262-9777

 Research Interests

There is a growing need for exploratory analysis of very large datasets 
to discover useful patterns, and data mining is the new territory 
developed for this purpose. 
I am very interested in designing new efficient data mining algorithms or
tools for very large databases by integrating the techniques of 
databases, artificial intelligence and statistics. 


My Ph.D thesis topic is on clustering and density
analysis of very large datasets. That is, given a very large 
multi-dimensional dataset, and a limited amount of resources 
(e.g., running time and memory), design and implement algorithms 
to efficiently and accurately (1) identify the sparse and crowded regions 
(clustering analysis), (2) estimate the density function of the overall 
data distribution (density analysis). They are very important and practical 
branches of data mining, and can be applied to many domains such as, data
classification, image compression and pattern recognition.  

 Recent Research Project 

 BIRCH: An Efficient Data Clustering and Density Analysis System for Very Large Databases.

 Selected Publications 


 Data Clustering System BIRCH and Its Applications (Tian Zhang, Raghu Ramakrishnan, Miron Livny),
submitted to Data Mining and Knowledge Discovery Journal, June, 1996, U.S.A.



 BIRCH: An Efficient Data Clustering Method for Very Large Databases (Tian Zhang, Raghu Ramakrishnan, Miron Livny),
in Proc. of ACM SIGMOD Int'l Conf. on Data Management,
June 1996, Canada.



 Interactive Classification of Very Large Datasets with BIRCH (Tian Zhang, Raghu Ramakrishnan, Miron Livny),
in Proc. of Workshop on Research Issues on Data Mining and Knowledge
Discovery (in cooperation with ACM-SIGMOD'96), June 1996, Canada.



 Fast Density and Probability Estimations Using CF-Kernel Method for Very Large Databases
(Miron Livny, Raghu Ramakrishnan, Tian Zhang),
Technical Report, July, 1996.



Motion Planning of Multi-joint Robotic Arm with Topological Dimension
Reduction Method
(Bo Zhang, Ling Zhang, Tian Zhang),
in Proc. of 11th. Int'l Joint Conference on Artificial Intelligence
(IJCAI'89), Aug. 1989, U.S.A.



A Findpath Algorithm for a Manipulator by Finite Division of Configuration Space
(Bo Zhang, Jianwei Zhang, Ling Zhang, and Tian Zhang),
in Robotics and manufacturing: recent trends in research, education,
and applications: Proc's of Int'l Symposium on Robotics and
Manufacturing: Research, Education, and Applications, v.2, 1988, U.S.A.



Motion Planning for Robots with Topological Dimension Reduction Method
(Bo Zhang, Tian Zhang, Jianwei Zhang, and Ling Zhang),
in Journal of Computer Science and Technology, v.5, no.1, Jan. 1990, P.R.C.



Finding Collision-Free Paths for Mobile Robots
(Tian Zhang, and Bo Zhang),
in Proc. of 1st. Int'l Symposium for Young Computer Professionals,
Aug. 1989, Beijing, P.R.C.

 Relevant Links 

  Technical Documents
  Journals, Conferences, Organizations
  Beijing, China
  Other Interests


 Last Updated: Sep. 26, 1996 



",non-course
"

Yihong's Home Page




   ZHAO YIHONG (zhao@cs.wisc.edu)




Research Assistant 
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706  USA


 Adviser  Prof.  Jeff Naughton  
Research Interests
  Parallel Object-relational DBMS  
  On-line Analytical Processing (OLAP)  
  Data Mining on Financial data   
  DBMS Benchmark 

Education

B.S. University of North Carolina at Chapel Hill
M.S.  UW-Madison Fall 1994 

Research Related Sites

  
Wiscosin DB Group  
  ACM SIGMOD 
  IBM Data Mining  
  U of Maryland Data
Mining 
  MicroStrategy's ROLAP  
  Arbor's MOLAP  

Stocks and Financial Sites

  Lombard Graph Server 
  PathFinder Server 
  Kiwi Club Server 
  CNN FN 

Daily News Sites 

  PATHFINDER 
  USA Today 
  CNN FN
  Money Daily 
  Chinese 
  Taiwan News 

Web Search Engines 

  The Lycos 250  
  Excite.com
  Yahoo 
  DEC  

 Surfing the Web 





.1
.3
.5
.7
.9
 -|-


 terse
 std
 detail


 Comments?

 PGMOS



",non-course
"

ZHE's Home Page Still Under construction. 




 Here is Zhe Wang's homepage!

 
By now I can only offer a bit information about myself.


 Home Address   : 548 W.Johnson St. #301C, Madison, WI 53703, USA  
 Home Phone     : (608)286-8010 
 Office Address : 1210 W. Dayton Street #1347, Madison, WI 53706, USA   
 Office Phone   : (608)262-5786                               
 Email Address  : zhe@cs.wisc                         
.edu, zhewang@students.wisc.edu

",non-course
"

Zhichen Xu's Home Page


 ZHICHEN XU 



Department of Computer Sciences
1210 W. Dayton St.  #5388
Madison, WI 53706
Office phone: (608) 262-2542 



Research Assistant
Advisors: 
Professor James R. Larus
Professor Barton P. Miller

Award

Best Paper Award 9th ACM International Conference on Supercomputing, 
ACM Press, July, 1995. 


My research interest is in the area of 
programming languages and performance issues in parallel and
distributed systems.  
Recently, I have been studying techniques to detect and eliminate
performance bottlenecks in Distributed Shared-Memory Systems.
I have combined the 
 Paradyn Performance Tool
with Blizzard of the  Wisconsin
Wind Tunnel on both the Thinking Machine CM-5 and
the Cluster of Workstations (COW). 

 Recent Publications 
Fields of Interest

Programming languages.


Environments and Tools for Parallel 
and Distributed Computing.


Network Computing .


Parallel and Distributed Operating System .


Computer Architecture 

Performance Evaluation and Benchmarks 


Places where I have studied and worked:
 
High Performance Computing and Software Laboratory at 
the University of Texas at San Antonio,
where I have studied and published in the area of
parallel performance predictions, modeling and simulations. 
 Computer Sciences Department
at  Fudan University,
where I have participated in several National key projects of P.R. China,
in the area of software development environment, very high-level
programming languages, and object-oriented technologies, and
imcremental compilation techniques.

Click here for a postscript version of my cv, 
and  here is a HTML version.

 Interesting links
 Asplos7 program
Journals 
Conferences 
Compilers 

\ Programming Language Research

Chinese Novels
 
Friends from Fudan
 
Java API
",non-course
"

Jin Zhang's Home Page


  Hello! My name is Zhang, Jin (ÕÅ½ò) 

 This picture was taken when I was invited to have supper in the
11th restaurant of Tsinghua University by
 Chen Weihai 
and  Wang Tong 



 University of Wisconsin-Madison
 Department of Computer Sciences
 1210 West Dayton Street, #1345
 Madison, Wisconsin 53706


",non-course
"


Krzysztof C. Zmudzinski



Krzysztof C. Zmudzinski




Information for my students in

CS132 (Lab 309 and Lab 318)

Pictures: me and 
my son.

Some information on Poland and Poles.


Thanks for stopping by. You are visitor number 

.



",non-course
"

Saluja, Kewal K.




College of EngineeringUniversity of Wisconsin - Madison



Kewal K. Saluja







Professor
4611 Engineering Hall
1415 Engineering Drive
Madison, WI 53706
Tel: 608-262-6490

Fax: 

E-mail: saluja@engr.wisc.edu

Portrait:    9K JPG




Departments
Electrical and Computer Engineering
Computer Science

Education
PhD 1973, University of Iowa
 
Research Interests
design for testability, computer architecture, data compression, integrated circuits (VLSI), fault-tolerant computing
 



My general area of research interest is test generation and testable
and reliable design of digital systems. To carry out research in this
area we make extensive use of VLSI CAD and analysis tools. The
research involves modeling of faults, designing digital circuits, test
generation, design modification for enhancing testability, built-in
self-testing designs, fabrication of circuits and test application.
 

We are investigating techniques to make the test generation and
fault simulation process efficient for both combinational and
sequential circuits. Data compression and compaction methods
applicable in design for testability and built-in self-test
environment are being investigated.
 

In the area of built-in self-test we are concentrating on regular
structures such as programmable logic arrays and RAMs. We are
investigating self-test algorithms which can be implemented in
hardware with little performance and area penalty. In another project
we are investigating ways to use built-in self-test hardware to test a
system while it is performing its normal operation. The goal is that
the system is tested continuously as it operates with little or no
impact on system performance.
 

Much of our work is performed using facilities of the VLSI digital
system laboratory. The laboratory houses a number of SUN stations with
color monitors and terminals for programming and design.







[ UW | COE | Depts | Centers | Consortia | Services | Fountain ]


[ Index | Search | Mail | What's New | Credits | Help ]







Last Modified: Friday, 03-May-96 16:26:43 CDT

This page is best viewed by browsers that support TABLES.
All photographs © 1996 College of Engineering.
Address comments to webmaster@engr.wisc.edu




Update Profile



",non-course
"


Duffie, Neil A.




College of EngineeringUniversity of Wisconsin - Madison


Neil A. Duffie







Professor
407 Engineering Research Building
1500 Engineering Drive
Madison, WI 53706
Tel: 608-262-9457
Fax: 608-262-9458

E-mail: duffie@engr.wisc.edu
Portrait:   45K JPG




Departments
Mechanical Engineering

Education
BS, 1972, University of Wisconsin-Madison
MS, 1974, University of Wisconsin-Madison
PhD, 1980, University of Wisconsin-Madison

Research Interests
robotics, computer control, manufacturing systems, precision engr., computer-integrated manufacturing,  micromechanisms

Centers and Consortia
Manufacturing Systems Engineering Program
Wisconsin Center for Space Automation and Robotics




Professor Duffie's research in manufacturing systems involves integrating 
sensors, actuators, computers and data bases into advanced automated 
production systems. He has developed controls for self-guided inspection 
machines and welding robots, high-performance material handling systems, 
and automated finishing systems for mold and die production and rework. He 
is studying highly distributed, non-hierarchical system control architectures 
in hope of reducing cost and complexity in large-scale, computer-controlled 
manufacturing systems while increasing flexibility and fault tolerance. 

Duffie has constructed several experimental manufacturing systems 
that incorporate real-time, fully distributed scheduling and optimization 
into their control systems. He is developing theories explaining the properties 
and performance of these systems.

Duffie is associate director of the 
Wisconsin Center for Space Automation and Robotics. Research at the NASA-funded 
center emphasizes automated agriculture systems, sensors for tactile feedback
 to human operators in telerobotic systems, and methods for performance 
evaluation, as well as human factors research in sensory feedback and fatigue. 
He has developed a telerobotics test bed in which experimental work is 
carried out.

Duffie works closely with manufacturing and aerospace industries and teaches 
courses on manufacturing systems, automatic controls and computer controls. 
He co-authored Computer Control of Machines and Processes.






[ UW | COE | Depts | Centers | Consortia | Services | Fountain ]


[ Index | Search | Mail | What's New | Credits | Help ]







Last Modified: Tuesday, 08-Oct-96 09:53:37 CDT

This page is best viewed by browsers that support TABLES.
All photographs © 1996 College of Engineering.
Address comments to webmaster@engr.wisc.edu




Update Profile



",non-course
"


Shapiro, Vadim




College of EngineeringUniversity of Wisconsin - Madison


Vadim Shapiro







Assistant Professor
355 Mechanical Engineering
1513 University Avenue
Madison, WI 53706
Tel: 608-262-3591
Fax: 608-265-2316

E-mail: vshapiro@engr.wisc.edu
Portrait:   46K JPG

URL: http://sal-cnc.me.wisc.edu




Departments
Computer Science
Mechanical Engineering

Education
BA 1981, New York University
MS 1983, University of California, Los Angeles
MS 1989, Cornell University
PhD 1991, Cornell Univeristy

Research Interests
computer-aided design and manufacturing, applied computational geometry, geometric and solid modeling, physical modeling, analysis and simulation, design and production automation

Centers and Consortia
Mathematics and Computation in Engineering Graduate Program
Manufacturing Systems Engineering Program
Spatial Automation Laboratory

Selected Awards and Honors
National Science Foundation CAREER Award,  1995
General Motors Fellow,  1986-1990

Selected Publications
""Maintenance of geometric representations through space decompositions,"" International Journal on Computational Geometry and Applications, 1995.
""Chain models of physical behavior for engineering analysis and design,"" Research in Engineering Design, Vol.5, No. 3, April 1994 (with R. S. Palmer).
""Real functions for representation of rigid solids,""Computer-Aided Geometric Design, Vol. 11, No. 2, April 1994. ""Separation for boundary to CSG conversion,"" ACM Transactions on Graphics, January 1993 (with D. L. Vossler).




Professor Shapiro's research interests center on  relationships between
geometry and physical phenomena, so that mechanical artifacts can be
modeled, represented, analyzed, manipulated, designed, and manufactured
based on computer representations and algorithms.

Some specific ongoing projects include:

Geometric Modeling:
Ability to create,  convert between, and to maintain consistency of
distinct  representations  of  mechanical parts is  a major technological
barrier  that undermines  the usefulness  and reliability of commercial
geometric modeling systems.  Current research efforts focus on eliminating
ambiguity in communicating engineering specifications, formal modeling of
parametric families of mechanical parts, and investigating novel methods
and computational techniques in support of design and manufacturing.

Mechanical Design:
Today mechanical forms, functions, and fabrication processes cannot be
described combinatorially, in terms of discrete, simple, and  interacting
primitives;  this apparent lack of  combinatorial structure is a
major roadblock for competitive design and manufacturing of mechanical systems.
In collaboration with industry, the present research deals with
theoretical, practical, and computational aspects of  mechanical design
and seeks to establish a formal basis for making mechanical design and
manufacturing of parts more systematic and competitive,  and for smooth
integration of mechanical form modeling with other engineering activities.

Physical Modeling:
Geometric models contain only part of the information needed to capture the
desired physical behavior of an artifact, and the processes used to
manufacture it. Recent  study of algebraic topological models (so called
""chain models"") of physical behavior suggests that it may be possible to
unify physical and geometric modeling  and thus facilitate development of
new  computer-aided engineering tools.   Current investigations use these
and other models of physical behavior to develop new  engineering languages
and computer algorithms for systematic  specification,  modeling,
simulation, and analysis of physical
objects and systems.







[ UW | COE | Depts | Centers | Consortia | Services | Fountain ]


[ Index | Search | Mail | What's New | Credits | Help ]







Last Modified: Thursday, 18-Jul-96 10:39:07 CDT

This page is best viewed by browsers that support TABLES.
All photographs © 1996 College of Engineering.
Address comments to webmaster@engr.wisc.edu




Update Profile



",non-course
"
Automated Theorem Proving Group

Automated Theorem Proving Group

The Automated Theorem Proving group is part of the Computer Science and Mathematics departments at The University of Texas at
Austin.

We produce methods and systems intended to prove theorems in first-
and higher-order logic with the intention of applying these systems
and methods to problems primarily in mathematics, but also in computer
science and technology.
Here
is an index of electronically-available tech-reports from our FTP site.

The ATP tech report series is not being continued currently.  New tech
reports are being added to the AI Lab tech report
series.
Who are we?
Present group

Larry Hines

Marty Mayberry
Benjamin Shults

Alumni


Previous Students of Woody Bledsoe.

Previous Students of Robert Boyer.
This is an incomplete list.

Others related to the group

The late Woody Bledsoe
(His computer science faculty profile.)
Robert
Boyer
J Strother Moore
This is an incomplete list.

Past visitors and collaborators
What have we done? 

IMPLYThe UT natural deduction prover
STRIVELarry Hines' First-order logic inequality prover.
STRUVELarry Hines' set theory prover.
Chou's Geometry proverand various improvements thereto
including McPhee's.

SET-VAR

Feng's prover for set theory
Implementation description

Proof of Heine-Borel theorem

Precondition ProverBledsoe's prover for analogy
  
Proof of the Heine-Borel theorem
NQTHMBoyer and
Moore's prover developed at CLInc.
This is an incomplete list.

What are we doing now?


IPRShults' 
knowledge-using prover for mathematics.
This is an incomplete list.

Related
Links

Do you have feedback or want more information?  Contact Benjamin Shults.


",non-course
"Document moved
Document moved
This document has permanently moved here.

",non-course
"Document moved
Document moved
This document has permanently moved here.

",non-course
